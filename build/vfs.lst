ARM GAS  /tmp/ccC84BPF.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"vfs.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./fs/vfs.c"
  20              		.section	.text.__spin_unlock,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__spin_unlock:
  27              	.LVL0:
  28              	.LFB230:
  29              		.file 2 "./arch/arm_m/include/asm/spinlock.h"
   1:./arch/arm_m/include/asm/spinlock.h **** #ifndef __SPIN_LOCK_H_
   2:./arch/arm_m/include/asm/spinlock.h **** #define __SPIN_LOCK_H_
   3:./arch/arm_m/include/asm/spinlock.h **** 
   4:./arch/arm_m/include/asm/spinlock.h **** #include <linux/sched.h>
   5:./arch/arm_m/include/asm/spinlock.h **** 
   6:./arch/arm_m/include/asm/spinlock.h **** typedef struct { 
   7:./arch/arm_m/include/asm/spinlock.h ****      int flag; 
   8:./arch/arm_m/include/asm/spinlock.h **** } arch_spinlock_t;
   9:./arch/arm_m/include/asm/spinlock.h **** 
  10:./arch/arm_m/include/asm/spinlock.h **** static int __spin_init(arch_spinlock_t *lock) 
  11:./arch/arm_m/include/asm/spinlock.h **** {
  12:./arch/arm_m/include/asm/spinlock.h ****     lock->flag = 0;
  13:./arch/arm_m/include/asm/spinlock.h **** }
  14:./arch/arm_m/include/asm/spinlock.h **** 
  15:./arch/arm_m/include/asm/spinlock.h **** static int __spin_lock(arch_spinlock_t *lock) {
  16:./arch/arm_m/include/asm/spinlock.h **** 
  17:./arch/arm_m/include/asm/spinlock.h ****     stop_all_scheduler();
  18:./arch/arm_m/include/asm/spinlock.h ****     if(lock->flag == 0){
  19:./arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
  20:./arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
  21:./arch/arm_m/include/asm/spinlock.h ****         return 1;
  22:./arch/arm_m/include/asm/spinlock.h ****     }
  23:./arch/arm_m/include/asm/spinlock.h ****     else
  24:./arch/arm_m/include/asm/spinlock.h ****     {
  25:./arch/arm_m/include/asm/spinlock.h ****         start_all_scheduler();
  26:./arch/arm_m/include/asm/spinlock.h ****         return 0;
  27:./arch/arm_m/include/asm/spinlock.h ****     }
  28:./arch/arm_m/include/asm/spinlock.h **** }
  29:./arch/arm_m/include/asm/spinlock.h **** 
ARM GAS  /tmp/ccC84BPF.s 			page 2


  30:./arch/arm_m/include/asm/spinlock.h **** static void  __spin_unlock( arch_spinlock_t *lock ){
  30              		.loc 2 30 52 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  31:./arch/arm_m/include/asm/spinlock.h ****     lock->flag = 0;
  35              		.loc 2 31 5 view .LVU1
  36              		.loc 2 31 16 is_stmt 0 view .LVU2
  37 0000 0023     		movs	r3, #0
  38 0002 0360     		str	r3, [r0]
  32:./arch/arm_m/include/asm/spinlock.h **** }
  39              		.loc 2 32 1 view .LVU3
  40 0004 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE230:
  44              		.section	.text.spin_unlock,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	spin_unlock:
  51              	.LVL1:
  52              	.LFB233:
  53              		.file 3 "./include/linux/spinlock.h"
   1:./include/linux/spinlock.h **** #ifndef __SPINLOCK_H__
   2:./include/linux/spinlock.h **** #define __SPINLOCK_H__
   3:./include/linux/spinlock.h **** 
   4:./include/linux/spinlock.h **** #include <linux/types.h>
   5:./include/linux/spinlock.h **** #include <linux/spinlock_types.h>
   6:./include/linux/spinlock.h **** #include <linux/sched.h>
   7:./include/linux/spinlock.h **** 
   8:./include/linux/spinlock.h **** 
   9:./include/linux/spinlock.h **** 
  10:./include/linux/spinlock.h **** static void spin_lock_init(spinlock_t* lock){
  11:./include/linux/spinlock.h ****     __spin_init(&lock->rlock.raw_lock);
  12:./include/linux/spinlock.h **** }
  13:./include/linux/spinlock.h **** 
  14:./include/linux/spinlock.h **** static void spin_lock(spinlock_t* lock)
  15:./include/linux/spinlock.h **** {  
  16:./include/linux/spinlock.h ****     while (1)
  17:./include/linux/spinlock.h ****     {
  18:./include/linux/spinlock.h ****         if(__spin_lock(&lock->rlock.raw_lock) == 1){
  19:./include/linux/spinlock.h ****             lock->owner = get_current_task();
  20:./include/linux/spinlock.h ****             break;
  21:./include/linux/spinlock.h ****         }
  22:./include/linux/spinlock.h ****         else  if(lock->owner == get_current_task()){  //Â¶ÇÊûúÂ∑≤ÁªèË¢´ÈîÅ‰Ωè‰ΩÜÊòØÈîÅÊòØËá™Â∑±ÁöÑÔ
  23:./include/linux/spinlock.h ****             return;   
  24:./include/linux/spinlock.h ****         }
  25:./include/linux/spinlock.h ****         else{
  26:./include/linux/spinlock.h ****             __delay(5); //‰∏ªÂä®ËÆ©Âá∫Êó∂Èó¥Áâá
  27:./include/linux/spinlock.h ****         }
  28:./include/linux/spinlock.h ****     }
  29:./include/linux/spinlock.h **** }
  30:./include/linux/spinlock.h **** 
  31:./include/linux/spinlock.h **** static void spin_unlock(spinlock_t* lock)
  32:./include/linux/spinlock.h **** {
ARM GAS  /tmp/ccC84BPF.s 			page 3


  54              		.loc 3 32 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		.loc 3 32 1 is_stmt 0 view .LVU5
  59 0000 08B5     		push	{r3, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 3, -8
  63              		.cfi_offset 14, -4
  33:./include/linux/spinlock.h ****     __spin_unlock(&lock->rlock.raw_lock);
  64              		.loc 3 33 5 is_stmt 1 view .LVU6
  65 0002 FFF7FEFF 		bl	__spin_unlock
  66              	.LVL2:
  34:./include/linux/spinlock.h **** }
  67              		.loc 3 34 1 is_stmt 0 view .LVU7
  68 0006 08BD     		pop	{r3, pc}
  69              		.cfi_endproc
  70              	.LFE233:
  72              		.section	.text.get_dir_name,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  78              	get_dir_name:
  79              	.LVL3:
  80              	.LFB1035:
  81              		.file 4 "./fs/fs.h"
   1:./fs/fs.h     **** #ifndef _FS_H_
   2:./fs/fs.h     **** #define _FS_H_
   3:./fs/fs.h     **** 
   4:./fs/fs.h     **** #include <linux/fs.h>    
   5:./fs/fs.h     **** 
   6:./fs/fs.h     **** static int get_dir_name(const char *path, char *dir_name,int nummber) //Ëé∑ÂèñÊåáÂÆöÁõÆÂΩï‰∏≠ÊåáÂÆö
   7:./fs/fs.h     **** {
  82              		.loc 4 7 1 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              		.loc 4 7 1 is_stmt 0 view .LVU9
  88 0000 10B4     		push	{r4}
  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 4
  91              		.cfi_offset 4, -4
   8:./fs/fs.h     ****     int i = 0,j = 0;
  92              		.loc 4 8 5 is_stmt 1 view .LVU10
  93              	.LVL4:
   9:./fs/fs.h     ****     while (path[i]!= '\0'){
  94              		.loc 4 9 5 view .LVU11
   8:./fs/fs.h     ****     int i = 0,j = 0;
  95              		.loc 4 8 15 is_stmt 0 view .LVU12
  96 0002 4FF0000C 		mov	ip, #0
   8:./fs/fs.h     ****     int i = 0,j = 0;
  97              		.loc 4 8 9 view .LVU13
  98 0006 6346     		mov	r3, ip
  99              		.loc 4 9 11 view .LVU14
ARM GAS  /tmp/ccC84BPF.s 			page 4


 100 0008 02E0     		b	.L5
 101              	.LVL5:
 102              	.L6:
  10:./fs/fs.h     ****         if(path[i] == '/')
  11:./fs/fs.h     ****         j++;
  12:./fs/fs.h     ****         if(j == nummber)
 103              		.loc 4 12 9 is_stmt 1 view .LVU15
 104              		.loc 4 12 11 is_stmt 0 view .LVU16
 105 000a 9445     		cmp	ip, r2
 106 000c 07D0     		beq	.L14
  13:./fs/fs.h     ****         goto a;
  14:./fs/fs.h     ****         i++;
 107              		.loc 4 14 9 is_stmt 1 view .LVU17
 108              		.loc 4 14 10 is_stmt 0 view .LVU18
 109 000e 0133     		adds	r3, r3, #1
 110              	.LVL6:
 111              	.L5:
   9:./fs/fs.h     ****         if(path[i] == '/')
 112              		.loc 4 9 19 is_stmt 1 view .LVU19
   9:./fs/fs.h     ****         if(path[i] == '/')
 113              		.loc 4 9 16 is_stmt 0 view .LVU20
 114 0010 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
   9:./fs/fs.h     ****         if(path[i] == '/')
 115              		.loc 4 9 19 view .LVU21
 116 0012 74B1     		cbz	r4, .L15
  10:./fs/fs.h     ****         if(path[i] == '/')
 117              		.loc 4 10 9 is_stmt 1 view .LVU22
  10:./fs/fs.h     ****         if(path[i] == '/')
 118              		.loc 4 10 11 is_stmt 0 view .LVU23
 119 0014 2F2C     		cmp	r4, #47
 120 0016 F8D1     		bne	.L6
  11:./fs/fs.h     ****         if(j == nummber)
 121              		.loc 4 11 9 is_stmt 1 view .LVU24
  11:./fs/fs.h     ****         if(j == nummber)
 122              		.loc 4 11 10 is_stmt 0 view .LVU25
 123 0018 0CF1010C 		add	ip, ip, #1
 124              	.LVL7:
  11:./fs/fs.h     ****         if(j == nummber)
 125              		.loc 4 11 10 view .LVU26
 126 001c F5E7     		b	.L6
 127              	.L14:
  13:./fs/fs.h     ****         goto a;
 128              		.loc 4 13 9 is_stmt 1 view .LVU27
 129              	.LDL1:
  15:./fs/fs.h     ****     }
  16:./fs/fs.h     ****     return -1;
  17:./fs/fs.h     ****     a:
  18:./fs/fs.h     ****     i++;
 130              		.loc 4 18 5 view .LVU28
 131              		.loc 4 18 6 is_stmt 0 view .LVU29
 132 001e 0133     		adds	r3, r3, #1
 133              	.LVL8:
  19:./fs/fs.h     ****     j = 0;
 134              		.loc 4 19 5 is_stmt 1 view .LVU30
  20:./fs/fs.h     ****     while (path[i+j]!= '\0'){
 135              		.loc 4 20 5 view .LVU31
  19:./fs/fs.h     ****     j = 0;
ARM GAS  /tmp/ccC84BPF.s 			page 5


 136              		.loc 4 19 7 is_stmt 0 view .LVU32
 137 0020 0022     		movs	r2, #0
 138              	.LVL9:
 139              	.L8:
 140              		.loc 4 20 21 is_stmt 1 view .LVU33
 141              		.loc 4 20 18 is_stmt 0 view .LVU34
 142 0022 D418     		adds	r4, r2, r3
 143              		.loc 4 20 16 view .LVU35
 144 0024 045D     		ldrb	r4, [r0, r4]	@ zero_extendqisi2
 145              		.loc 4 20 21 view .LVU36
 146 0026 4CB1     		cbz	r4, .L11
  21:./fs/fs.h     ****        dir_name[j] = path[i+j];
 147              		.loc 4 21 8 is_stmt 1 view .LVU37
 148              		.loc 4 21 20 is_stmt 0 view .LVU38
 149 0028 8C54     		strb	r4, [r1, r2]
  22:./fs/fs.h     ****        if(path[i+j] == '/')
 150              		.loc 4 22 8 is_stmt 1 view .LVU39
 151              		.loc 4 22 10 is_stmt 0 view .LVU40
 152 002a 2F2C     		cmp	r4, #47
 153 002c 06D0     		beq	.L11
  23:./fs/fs.h     ****        break;
  24:./fs/fs.h     ****        j++;
 154              		.loc 4 24 8 is_stmt 1 view .LVU41
 155              		.loc 4 24 9 is_stmt 0 view .LVU42
 156 002e 0132     		adds	r2, r2, #1
 157              	.LVL10:
 158              		.loc 4 24 9 view .LVU43
 159 0030 F7E7     		b	.L8
 160              	.LVL11:
 161              	.L15:
  16:./fs/fs.h     ****     a:
 162              		.loc 4 16 12 view .LVU44
 163 0032 4FF0FF30 		mov	r0, #-1
 164              	.LVL12:
 165              	.L4:
  25:./fs/fs.h     ****     }
  26:./fs/fs.h     ****     dir_name[j] = '\0';
  27:./fs/fs.h     ****     return 0;
  28:./fs/fs.h     **** }
 166              		.loc 4 28 1 view .LVU45
 167 0036 5DF8044B 		ldr	r4, [sp], #4
 168              	.LCFI2:
 169              		.cfi_remember_state
 170              		.cfi_restore 4
 171              		.cfi_def_cfa_offset 0
 172 003a 7047     		bx	lr
 173              	.LVL13:
 174              	.L11:
 175              	.LCFI3:
 176              		.cfi_restore_state
  26:./fs/fs.h     ****     return 0;
 177              		.loc 4 26 5 is_stmt 1 view .LVU46
  26:./fs/fs.h     ****     return 0;
 178              		.loc 4 26 17 is_stmt 0 view .LVU47
 179 003c 0020     		movs	r0, #0
 180              	.LVL14:
  26:./fs/fs.h     ****     return 0;
ARM GAS  /tmp/ccC84BPF.s 			page 6


 181              		.loc 4 26 17 view .LVU48
 182 003e 8854     		strb	r0, [r1, r2]
  27:./fs/fs.h     **** }
 183              		.loc 4 27 5 is_stmt 1 view .LVU49
  27:./fs/fs.h     **** }
 184              		.loc 4 27 12 is_stmt 0 view .LVU50
 185 0040 F9E7     		b	.L4
 186              		.cfi_endproc
 187              	.LFE1035:
 189              		.section	.text.get_dir_number,"ax",%progbits
 190              		.align	1
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	get_dir_number:
 196              	.LVL15:
 197              	.LFB1036:
  29:./fs/fs.h     **** 
  30:./fs/fs.h     **** static int get_dir_number(char *path){                       //Ëé∑ÂèñÊåáÂÆöÁõÆÂΩïÁöÑÂ±ÇÁ∫ßÊï∞
 198              		.loc 4 30 38 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203              		.loc 4 30 38 is_stmt 0 view .LVU52
 204 0000 8446     		mov	ip, r0
  31:./fs/fs.h     ****     int j = 0,i = 0;
 205              		.loc 4 31 5 is_stmt 1 view .LVU53
 206              	.LVL16:
  32:./fs/fs.h     ****     while (path[j]!= '\0'){
 207              		.loc 4 32 5 view .LVU54
  31:./fs/fs.h     ****     int j = 0,i = 0;
 208              		.loc 4 31 15 is_stmt 0 view .LVU55
 209 0002 0020     		movs	r0, #0
 210              	.LVL17:
  31:./fs/fs.h     ****     int j = 0,i = 0;
 211              		.loc 4 31 9 view .LVU56
 212 0004 0346     		mov	r3, r0
 213              		.loc 4 32 11 view .LVU57
 214 0006 00E0     		b	.L17
 215              	.LVL18:
 216              	.L18:
  33:./fs/fs.h     ****         if(path[j] == '/' && path[j+1] != '\0')
  34:./fs/fs.h     ****         i++;
  35:./fs/fs.h     ****         j++;
 217              		.loc 4 35 9 is_stmt 1 view .LVU58
 218              		.loc 4 35 10 is_stmt 0 view .LVU59
 219 0008 0133     		adds	r3, r3, #1
 220              	.LVL19:
 221              	.L17:
  32:./fs/fs.h     ****     while (path[j]!= '\0'){
 222              		.loc 4 32 19 is_stmt 1 view .LVU60
  32:./fs/fs.h     ****     while (path[j]!= '\0'){
 223              		.loc 4 32 16 is_stmt 0 view .LVU61
 224 000a 1946     		mov	r1, r3
 225 000c 1CF80320 		ldrb	r2, [ip, r3]	@ zero_extendqisi2
  32:./fs/fs.h     ****     while (path[j]!= '\0'){
ARM GAS  /tmp/ccC84BPF.s 			page 7


 226              		.loc 4 32 19 view .LVU62
 227 0010 3AB1     		cbz	r2, .L20
  33:./fs/fs.h     ****         if(path[j] == '/' && path[j+1] != '\0')
 228              		.loc 4 33 9 is_stmt 1 view .LVU63
  33:./fs/fs.h     ****         if(path[j] == '/' && path[j+1] != '\0')
 229              		.loc 4 33 11 is_stmt 0 view .LVU64
 230 0012 2F2A     		cmp	r2, #47
 231 0014 F8D1     		bne	.L18
  33:./fs/fs.h     ****         if(path[j] == '/' && path[j+1] != '\0')
 232              		.loc 4 33 34 discriminator 1 view .LVU65
 233 0016 6144     		add	r1, r1, ip
 234 0018 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  33:./fs/fs.h     ****         if(path[j] == '/' && path[j+1] != '\0')
 235              		.loc 4 33 27 discriminator 1 view .LVU66
 236 001a 002A     		cmp	r2, #0
 237 001c F4D0     		beq	.L18
  34:./fs/fs.h     ****         j++;
 238              		.loc 4 34 9 is_stmt 1 view .LVU67
  34:./fs/fs.h     ****         j++;
 239              		.loc 4 34 10 is_stmt 0 view .LVU68
 240 001e 0130     		adds	r0, r0, #1
 241              	.LVL20:
  34:./fs/fs.h     ****         j++;
 242              		.loc 4 34 10 view .LVU69
 243 0020 F2E7     		b	.L18
 244              	.LVL21:
 245              	.L20:
  36:./fs/fs.h     ****     }
  37:./fs/fs.h     ****     return i;
 246              		.loc 4 37 5 is_stmt 1 view .LVU70
  38:./fs/fs.h     **** }
 247              		.loc 4 38 1 is_stmt 0 view .LVU71
 248 0022 7047     		bx	lr
 249              		.cfi_endproc
 250              	.LFE1036:
 252              		.section	.text.find_dentry,"ax",%progbits
 253              		.align	1
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	find_dentry:
 259              	.LVL22:
 260              	.LFB1038:
   1:./fs/vfs.c    **** #include <linux/kernel.h>
   2:./fs/vfs.c    **** #include <linux/fs.h>
   3:./fs/vfs.c    **** #include <linux/slab.h>
   4:./fs/vfs.c    **** #include <linux/stat.h>
   5:./fs/vfs.c    **** #include <linux/cache.h>
   6:./fs/vfs.c    **** #include <linux/list.h> 
   7:./fs/vfs.c    **** #include <generated/autoconf.h>
   8:./fs/vfs.c    **** #include "fs.h"
   9:./fs/vfs.c    **** 
  10:./fs/vfs.c    **** struct dentry *root_dentry = NULL;
  11:./fs/vfs.c    **** 
  12:./fs/vfs.c    **** 
  13:./fs/vfs.c    **** extern struct super_block * sget(struct file_system_type *type,
  14:./fs/vfs.c    ****     int (*test)(struct super_block *,void *),
ARM GAS  /tmp/ccC84BPF.s 			page 8


  15:./fs/vfs.c    ****     int (*set)(struct super_block *,void *),
  16:./fs/vfs.c    ****     int flags, void *data);
  17:./fs/vfs.c    **** 
  18:./fs/vfs.c    **** extern int mount_root_fs(char *file_system_type);
  19:./fs/vfs.c    **** extern int sys_mount(const char __user *dev_name, const char __user *dir_name,
  20:./fs/vfs.c    ****     const char __user *type, unsigned long flags,
  21:./fs/vfs.c    ****     const void __user *data);
  22:./fs/vfs.c    **** 
  23:./fs/vfs.c    **** 
  24:./fs/vfs.c    **** 
  25:./fs/vfs.c    **** static struct inode* get_dentry_inode(struct  dentry * dir){
  26:./fs/vfs.c    ****     if(dir == NULL) return NULL;
  27:./fs/vfs.c    ****     if(dir->d_inode != NULL) return dir->d_inode;
  28:./fs/vfs.c    ****     return NULL;
  29:./fs/vfs.c    **** }
  30:./fs/vfs.c    **** 
  31:./fs/vfs.c    **** 
  32:./fs/vfs.c    **** static struct dentry* find_dentry(struct dentry* dir,char *dentry_name, unsigned int flags)
  33:./fs/vfs.c    **** {
 261              		.loc 1 33 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		.loc 1 33 1 is_stmt 0 view .LVU73
 266 0000 38B5     		push	{r3, r4, r5, lr}
 267              	.LCFI4:
 268              		.cfi_def_cfa_offset 16
 269              		.cfi_offset 3, -16
 270              		.cfi_offset 4, -12
 271              		.cfi_offset 5, -8
 272              		.cfi_offset 14, -4
 273 0002 0446     		mov	r4, r0
 274 0004 0D46     		mov	r5, r1
  34:./fs/vfs.c    ****     struct dentry* son_dentry = d_lookup_dentry(dir,dentry_name); //Áé∞Âú®ÁºìÂ≠ò‰∏≠Êü•ËØ¢dentry
 275              		.loc 1 34 5 is_stmt 1 view .LVU74
 276              		.loc 1 34 33 is_stmt 0 view .LVU75
 277 0006 FFF7FEFF 		bl	d_lookup_dentry
 278              	.LVL23:
  35:./fs/vfs.c    ****     if(son_dentry != NULL) {
 279              		.loc 1 35 5 is_stmt 1 view .LVU76
 280              		.loc 1 35 7 is_stmt 0 view .LVU77
 281 000a 00B1     		cbz	r0, .L25
 282              	.LVL24:
 283              	.L21:
  36:./fs/vfs.c    ****         return son_dentry;
  37:./fs/vfs.c    ****     }
  38:./fs/vfs.c    ****     son_dentry = d_alloc(dir,dentry_name); 
  39:./fs/vfs.c    ****     if(son_dentry == NULL)
  40:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
  41:./fs/vfs.c    ****     struct dentry* son_dentry_ = NULL;
  42:./fs/vfs.c    ****     son_dentry_ =  dir->d_inode->i_op->lookup(dir->d_inode,son_dentry,0); //Âõ†‰∏∫lookupÊòØ‰∏ÄÂÆöÂ≠
  43:./fs/vfs.c    **** 
  44:./fs/vfs.c    ****     if(son_dentry_ == NULL){
  45:./fs/vfs.c    ****         __d_drop(son_dentry); 
  46:./fs/vfs.c    ****         return -ENOENT; 
  47:./fs/vfs.c    ****     }
  48:./fs/vfs.c    ****     return son_dentry_; 
ARM GAS  /tmp/ccC84BPF.s 			page 9


  49:./fs/vfs.c    **** }
 284              		.loc 1 49 1 view .LVU78
 285 000c 38BD     		pop	{r3, r4, r5, pc}
 286              	.LVL25:
 287              	.L25:
  38:./fs/vfs.c    ****     if(son_dentry == NULL)
 288              		.loc 1 38 5 is_stmt 1 view .LVU79
  38:./fs/vfs.c    ****     if(son_dentry == NULL)
 289              		.loc 1 38 18 is_stmt 0 view .LVU80
 290 000e 2946     		mov	r1, r5
 291 0010 2046     		mov	r0, r4
 292 0012 FFF7FEFF 		bl	d_alloc
 293              	.LVL26:
  39:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
 294              		.loc 1 39 5 is_stmt 1 view .LVU81
  39:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
 295              		.loc 1 39 7 is_stmt 0 view .LVU82
 296 0016 0546     		mov	r5, r0
 297              	.LVL27:
  39:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
 298              		.loc 1 39 7 view .LVU83
 299 0018 68B1     		cbz	r0, .L23
  41:./fs/vfs.c    ****     son_dentry_ =  dir->d_inode->i_op->lookup(dir->d_inode,son_dentry,0); //Âõ†‰∏∫lookupÊòØ‰∏ÄÂÆöÂ≠
 300              		.loc 1 41 5 is_stmt 1 view .LVU84
 301              	.LVL28:
  42:./fs/vfs.c    **** 
 302              		.loc 1 42 5 view .LVU85
  42:./fs/vfs.c    **** 
 303              		.loc 1 42 23 is_stmt 0 view .LVU86
 304 001a A06C     		ldr	r0, [r4, #72]
 305              	.LVL29:
  42:./fs/vfs.c    **** 
 306              		.loc 1 42 32 view .LVU87
 307 001c 8368     		ldr	r3, [r0, #8]
  42:./fs/vfs.c    **** 
 308              		.loc 1 42 38 view .LVU88
 309 001e 1B68     		ldr	r3, [r3]
  42:./fs/vfs.c    **** 
 310              		.loc 1 42 20 view .LVU89
 311 0020 0022     		movs	r2, #0
 312 0022 2946     		mov	r1, r5
 313 0024 9847     		blx	r3
 314              	.LVL30:
  44:./fs/vfs.c    ****         __d_drop(son_dentry); 
 315              		.loc 1 44 5 is_stmt 1 view .LVU90
  44:./fs/vfs.c    ****         __d_drop(son_dentry); 
 316              		.loc 1 44 7 is_stmt 0 view .LVU91
 317 0026 0028     		cmp	r0, #0
 318 0028 F0D1     		bne	.L21
  45:./fs/vfs.c    ****         return -ENOENT; 
 319              		.loc 1 45 9 is_stmt 1 view .LVU92
 320 002a 2846     		mov	r0, r5
 321              	.LVL31:
  45:./fs/vfs.c    ****         return -ENOENT; 
 322              		.loc 1 45 9 is_stmt 0 view .LVU93
 323 002c FFF7FEFF 		bl	__d_drop
 324              	.LVL32:
ARM GAS  /tmp/ccC84BPF.s 			page 10


  46:./fs/vfs.c    ****     }
 325              		.loc 1 46 9 is_stmt 1 view .LVU94
  46:./fs/vfs.c    ****     }
 326              		.loc 1 46 16 is_stmt 0 view .LVU95
 327 0030 6FF00100 		mvn	r0, #1
 328 0034 EAE7     		b	.L21
 329              	.LVL33:
 330              	.L23:
  40:./fs/vfs.c    ****     struct dentry* son_dentry_ = NULL;
 331              		.loc 1 40 12 view .LVU96
 332 0036 6FF00B00 		mvn	r0, #11
 333              	.LVL34:
  40:./fs/vfs.c    ****     struct dentry* son_dentry_ = NULL;
 334              		.loc 1 40 12 view .LVU97
 335 003a E7E7     		b	.L21
 336              		.cfi_endproc
 337              	.LFE1038:
 339              		.section	.rodata.create_dentry.str1.4,"aMS",%progbits,1
 340              		.align	2
 341              	.LC0:
 342 0000 66696C65 		.ascii	"file already exists: %s\012\000"
 342      20616C72 
 342      65616479 
 342      20657869 
 342      7374733A 
 343              		.section	.text.create_dentry,"ax",%progbits
 344              		.align	1
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 349              	create_dentry:
 350              	.LVL35:
 351              	.LFB1039:
  50:./fs/vfs.c    **** 
  51:./fs/vfs.c    **** static struct dentry* create_dentry(struct dentry* dir,char *name,umode_t i_mode)
  52:./fs/vfs.c    **** {
 352              		.loc 1 52 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		.loc 1 52 1 is_stmt 0 view .LVU99
 357 0000 70B5     		push	{r4, r5, r6, lr}
 358              	.LCFI5:
 359              		.cfi_def_cfa_offset 16
 360              		.cfi_offset 4, -16
 361              		.cfi_offset 5, -12
 362              		.cfi_offset 6, -8
 363              		.cfi_offset 14, -4
 364 0002 82B0     		sub	sp, sp, #8
 365              	.LCFI6:
 366              		.cfi_def_cfa_offset 24
 367 0004 0546     		mov	r5, r0
 368 0006 0C46     		mov	r4, r1
 369 0008 1646     		mov	r6, r2
  53:./fs/vfs.c    ****     struct dentry* next_dentry = find_dentry(dir,name,0);     //Â¶ÇÊûúÂ∑≤ÊúâËØ•Êñá‰ª∂ÂàôÁõ¥Êé•ËøîÂõ
 370              		.loc 1 53 5 is_stmt 1 view .LVU100
 371              		.loc 1 53 34 is_stmt 0 view .LVU101
ARM GAS  /tmp/ccC84BPF.s 			page 11


 372 000a 0022     		movs	r2, #0
 373              	.LVL36:
 374              		.loc 1 53 34 view .LVU102
 375 000c FFF7FEFF 		bl	find_dentry
 376              	.LVL37:
  54:./fs/vfs.c    ****     if(!IS_ERR(next_dentry)){
 377              		.loc 1 54 5 is_stmt 1 view .LVU103
 378              	.LBB33:
 379              	.LBI33:
 380              		.file 5 "./include/linux/err.h"
   1:./include/linux/err.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:./include/linux/err.h **** #ifndef _LINUX_ERR_H
   3:./include/linux/err.h **** #define _LINUX_ERR_H
   4:./include/linux/err.h **** 
   5:./include/linux/err.h **** #include <linux/compiler_attributes.h>
   6:./include/linux/err.h **** #include <linux/compiler.h>
   7:./include/linux/err.h **** #include <linux/types.h>
   8:./include/linux/err.h **** 
   9:./include/linux/err.h **** #include <asm/errno.h>
  10:./include/linux/err.h **** 
  11:./include/linux/err.h **** /*
  12:./include/linux/err.h ****  * Kernel pointers have redundant information, so we can use a
  13:./include/linux/err.h ****  * scheme where we can return either an error code or a normal
  14:./include/linux/err.h ****  * pointer with the same return value.
  15:./include/linux/err.h ****  *
  16:./include/linux/err.h ****  * This should be a per-architecture thing, to allow different
  17:./include/linux/err.h ****  * error and pointer decisions.
  18:./include/linux/err.h ****  */
  19:./include/linux/err.h **** #define MAX_ERRNO	4095
  20:./include/linux/err.h **** 
  21:./include/linux/err.h **** #ifndef __ASSEMBLY__
  22:./include/linux/err.h **** 
  23:./include/linux/err.h **** /**
  24:./include/linux/err.h ****  * IS_ERR_VALUE - Detect an error pointer.
  25:./include/linux/err.h ****  * @x: The pointer to check.
  26:./include/linux/err.h ****  *
  27:./include/linux/err.h ****  * Like IS_ERR(), but does not generate a compiler warning if result is unused.
  28:./include/linux/err.h ****  */
  29:./include/linux/err.h **** 
  30:./include/linux/err.h **** #ifndef unlikely
  31:./include/linux/err.h **** #  define unlikely(x) __builtin_expect(!!(x), 0)
  32:./include/linux/err.h **** #endif
  33:./include/linux/err.h **** 
  34:./include/linux/err.h **** #ifndef likely
  35:./include/linux/err.h **** #  define likely(x) __builtin_expect(!!(x), 1)
  36:./include/linux/err.h **** #endif
  37:./include/linux/err.h **** 
  38:./include/linux/err.h **** #define IS_ERR_VALUE(x) unlikely((unsigned long)(void *)(x) >= (unsigned long)-MAX_ERRNO)
  39:./include/linux/err.h **** 
  40:./include/linux/err.h **** /**
  41:./include/linux/err.h ****  * ERR_PTR - Create an error pointer.
  42:./include/linux/err.h ****  * @error: A negative error code.
  43:./include/linux/err.h ****  *
  44:./include/linux/err.h ****  * Encodes @error into a pointer value. Users should consider the result
  45:./include/linux/err.h ****  * opaque and not assume anything about how the error is encoded.
  46:./include/linux/err.h ****  *
  47:./include/linux/err.h ****  * Return: A pointer with @error encoded within its value.
ARM GAS  /tmp/ccC84BPF.s 			page 12


  48:./include/linux/err.h ****  */
  49:./include/linux/err.h **** static inline void * __must_check ERR_PTR(long error)
  50:./include/linux/err.h **** {
  51:./include/linux/err.h **** 	return (void *) error;
  52:./include/linux/err.h **** }
  53:./include/linux/err.h **** 
  54:./include/linux/err.h **** /* Return the pointer in the percpu address space. */
  55:./include/linux/err.h **** #define ERR_PTR_PCPU(error) ((void __percpu *)(unsigned long)ERR_PTR(error))
  56:./include/linux/err.h **** 
  57:./include/linux/err.h **** /**
  58:./include/linux/err.h ****  * PTR_ERR - Extract the error code from an error pointer.
  59:./include/linux/err.h ****  * @ptr: An error pointer.
  60:./include/linux/err.h ****  * Return: The error code within @ptr.
  61:./include/linux/err.h ****  */
  62:./include/linux/err.h **** static inline long __must_check PTR_ERR(__force const void *ptr)
  63:./include/linux/err.h **** {
  64:./include/linux/err.h **** 	return (long) ptr;
  65:./include/linux/err.h **** }
  66:./include/linux/err.h **** 
  67:./include/linux/err.h **** /* Read an error pointer from the percpu address space. */
  68:./include/linux/err.h **** #define PTR_ERR_PCPU(ptr) (PTR_ERR((const void *)(__force const unsigned long)(ptr)))
  69:./include/linux/err.h **** 
  70:./include/linux/err.h **** /**
  71:./include/linux/err.h ****  * IS_ERR - Detect an error pointer.
  72:./include/linux/err.h ****  * @ptr: The pointer to check.
  73:./include/linux/err.h ****  * Return: true if @ptr is an error pointer, false otherwise.
  74:./include/linux/err.h ****  */
  75:./include/linux/err.h **** static inline bool __must_check IS_ERR(__force const void *ptr)
 381              		.loc 5 75 33 view .LVU104
 382              	.LBB34:
  76:./include/linux/err.h **** {
  77:./include/linux/err.h **** 	return IS_ERR_VALUE((unsigned long)ptr);
 383              		.loc 5 77 2 view .LVU105
 384              		.loc 5 77 2 is_stmt 0 view .LVU106
 385              	.LBE34:
 386              	.LBE33:
 387              		.loc 1 54 7 discriminator 1 view .LVU107
 388 0010 10F5805F 		cmn	r0, #4096
 389 0014 08D8     		bhi	.L27
  55:./fs/vfs.c    ****      pr_info("file already exists: %s\n", name);
 390              		.loc 1 55 6 is_stmt 1 view .LVU108
 391 0016 2146     		mov	r1, r4
 392 0018 1A48     		ldr	r0, .L37
 393              	.LVL38:
 394              		.loc 1 55 6 is_stmt 0 view .LVU109
 395 001a FFF7FEFF 		bl	printk
 396              	.LVL39:
  56:./fs/vfs.c    ****      return ERR_PTR(-EEXIST);
 397              		.loc 1 56 6 is_stmt 1 view .LVU110
 398              		.loc 1 56 13 is_stmt 0 view .LVU111
 399 001e 6FF01004 		mvn	r4, #16
 400              	.LVL40:
 401              	.L26:
  57:./fs/vfs.c    ****     }
  58:./fs/vfs.c    **** 
  59:./fs/vfs.c    ****     next_dentry = d_alloc(dir,name); //ÂÖàÂàõÂª∫Â≠êdentryÊ®°ÊùøÔºåÊ≠§Êó∂ÂÆÉÂπ∂Ê≤°ÊúâË¢´ÁúüÂÆûÊ∑ªÂä†
  60:./fs/vfs.c    ****     if(next_dentry == NULL)
ARM GAS  /tmp/ccC84BPF.s 			page 13


  61:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
  62:./fs/vfs.c    **** 
  63:./fs/vfs.c    ****     if(dir->d_inode->i_op->create == NULL){
  64:./fs/vfs.c    ****         __d_drop(next_dentry); //Êí§ÈîÄÂàÜÈÖçÊ≤°Êúâ‰ΩøÁî®ÁöÑdentry
  65:./fs/vfs.c    ****      return ERR_PTR(-EROFS);
  66:./fs/vfs.c    ****     }
  67:./fs/vfs.c    ****     int err;
  68:./fs/vfs.c    ****     if((i_mode &  S_IFMT) == S_IFREG)
  69:./fs/vfs.c    ****     err = dir->d_inode->i_op->create(NULL,dir->d_inode,next_dentry,i_mode,0);
  70:./fs/vfs.c    ****     else if((i_mode &  S_IFMT) == S_IFDIR)
  71:./fs/vfs.c    ****     err = dir->d_inode->i_op->mkdir(NULL,dir->d_inode,next_dentry,i_mode);
  72:./fs/vfs.c    ****     else 
  73:./fs/vfs.c    ****     err = -1;
  74:./fs/vfs.c    **** 
  75:./fs/vfs.c    ****     if(err < 0){
  76:./fs/vfs.c    ****         __d_drop(next_dentry); 
  77:./fs/vfs.c    ****      return ERR_PTR(-ENOMEM);
  78:./fs/vfs.c    ****     }
  79:./fs/vfs.c    ****     return next_dentry;
  80:./fs/vfs.c    **** }
 402              		.loc 1 80 1 view .LVU112
 403 0022 2046     		mov	r0, r4
 404 0024 02B0     		add	sp, sp, #8
 405              	.LCFI7:
 406              		.cfi_remember_state
 407              		.cfi_def_cfa_offset 16
 408              		@ sp needed
 409 0026 70BD     		pop	{r4, r5, r6, pc}
 410              	.LVL41:
 411              	.L27:
 412              	.LCFI8:
 413              		.cfi_restore_state
  59:./fs/vfs.c    ****     if(next_dentry == NULL)
 414              		.loc 1 59 5 is_stmt 1 view .LVU113
  59:./fs/vfs.c    ****     if(next_dentry == NULL)
 415              		.loc 1 59 19 is_stmt 0 view .LVU114
 416 0028 2146     		mov	r1, r4
 417 002a 2846     		mov	r0, r5
 418              	.LVL42:
  59:./fs/vfs.c    ****     if(next_dentry == NULL)
 419              		.loc 1 59 19 view .LVU115
 420 002c FFF7FEFF 		bl	d_alloc
 421              	.LVL43:
  60:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
 422              		.loc 1 60 5 is_stmt 1 view .LVU116
  60:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
 423              		.loc 1 60 7 is_stmt 0 view .LVU117
 424 0030 0446     		mov	r4, r0
 425              	.LVL44:
  60:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
 426              		.loc 1 60 7 view .LVU118
 427 0032 18B3     		cbz	r0, .L33
  63:./fs/vfs.c    ****         __d_drop(next_dentry); //Êí§ÈîÄÂàÜÈÖçÊ≤°Êúâ‰ΩøÁî®ÁöÑdentry
 428              		.loc 1 63 5 is_stmt 1 view .LVU119
  63:./fs/vfs.c    ****         __d_drop(next_dentry); //Êí§ÈîÄÂàÜÈÖçÊ≤°Êúâ‰ΩøÁî®ÁöÑdentry
 429              		.loc 1 63 11 is_stmt 0 view .LVU120
 430 0034 A96C     		ldr	r1, [r5, #72]
ARM GAS  /tmp/ccC84BPF.s 			page 14


  63:./fs/vfs.c    ****         __d_drop(next_dentry); //Êí§ÈîÄÂàÜÈÖçÊ≤°Êúâ‰ΩøÁî®ÁöÑdentry
 431              		.loc 1 63 20 view .LVU121
 432 0036 8A68     		ldr	r2, [r1, #8]
  63:./fs/vfs.c    ****         __d_drop(next_dentry); //Êí§ÈîÄÂàÜÈÖçÊ≤°Êúâ‰ΩøÁî®ÁöÑdentry
 433              		.loc 1 63 26 view .LVU122
 434 0038 5569     		ldr	r5, [r2, #20]
 435              	.LVL45:
  63:./fs/vfs.c    ****         __d_drop(next_dentry); //Êí§ÈîÄÂàÜÈÖçÊ≤°Êúâ‰ΩøÁî®ÁöÑdentry
 436              		.loc 1 63 7 view .LVU123
 437 003a 6DB1     		cbz	r5, .L35
  67:./fs/vfs.c    ****     if((i_mode &  S_IFMT) == S_IFREG)
 438              		.loc 1 67 5 is_stmt 1 view .LVU124
  68:./fs/vfs.c    ****     err = dir->d_inode->i_op->create(NULL,dir->d_inode,next_dentry,i_mode,0);
 439              		.loc 1 68 5 view .LVU125
 440 003c 06F47043 		and	r3, r6, #61440
  68:./fs/vfs.c    ****     err = dir->d_inode->i_op->create(NULL,dir->d_inode,next_dentry,i_mode,0);
 441              		.loc 1 68 7 is_stmt 0 view .LVU126
 442 0040 B3F5004F 		cmp	r3, #32768
 443 0044 0DD0     		beq	.L36
  70:./fs/vfs.c    ****     err = dir->d_inode->i_op->mkdir(NULL,dir->d_inode,next_dentry,i_mode);
 444              		.loc 1 70 10 is_stmt 1 view .LVU127
  70:./fs/vfs.c    ****     err = dir->d_inode->i_op->mkdir(NULL,dir->d_inode,next_dentry,i_mode);
 445              		.loc 1 70 12 is_stmt 0 view .LVU128
 446 0046 B3F5804F 		cmp	r3, #16384
 447 004a 11D1     		bne	.L32
  71:./fs/vfs.c    ****     else 
 448              		.loc 1 71 5 is_stmt 1 view .LVU129
  71:./fs/vfs.c    ****     else 
 449              		.loc 1 71 29 is_stmt 0 view .LVU130
 450 004c 556A     		ldr	r5, [r2, #36]
  71:./fs/vfs.c    ****     else 
 451              		.loc 1 71 11 view .LVU131
 452 004e 3346     		mov	r3, r6
 453 0050 0246     		mov	r2, r0
 454 0052 0020     		movs	r0, #0
 455              	.LVL46:
  71:./fs/vfs.c    ****     else 
 456              		.loc 1 71 11 view .LVU132
 457 0054 A847     		blx	r5
 458              	.LVL47:
  71:./fs/vfs.c    ****     else 
 459              		.loc 1 71 11 view .LVU133
 460 0056 09E0     		b	.L31
 461              	.LVL48:
 462              	.L35:
  64:./fs/vfs.c    ****      return ERR_PTR(-EROFS);
 463              		.loc 1 64 9 is_stmt 1 view .LVU134
 464 0058 FFF7FEFF 		bl	__d_drop
 465              	.LVL49:
  65:./fs/vfs.c    ****     }
 466              		.loc 1 65 6 view .LVU135
  65:./fs/vfs.c    ****     }
 467              		.loc 1 65 13 is_stmt 0 view .LVU136
 468 005c 6FF01D04 		mvn	r4, #29
 469              	.LVL50:
  65:./fs/vfs.c    ****     }
 470              		.loc 1 65 13 view .LVU137
ARM GAS  /tmp/ccC84BPF.s 			page 15


 471 0060 DFE7     		b	.L26
 472              	.LVL51:
 473              	.L36:
  69:./fs/vfs.c    ****     else if((i_mode &  S_IFMT) == S_IFDIR)
 474              		.loc 1 69 5 is_stmt 1 view .LVU138
  69:./fs/vfs.c    ****     else if((i_mode &  S_IFMT) == S_IFDIR)
 475              		.loc 1 69 11 is_stmt 0 view .LVU139
 476 0062 0020     		movs	r0, #0
 477              	.LVL52:
  69:./fs/vfs.c    ****     else if((i_mode &  S_IFMT) == S_IFDIR)
 478              		.loc 1 69 11 view .LVU140
 479 0064 0090     		str	r0, [sp]
 480 0066 3346     		mov	r3, r6
 481 0068 2246     		mov	r2, r4
 482 006a A847     		blx	r5
 483              	.LVL53:
 484              	.L31:
  75:./fs/vfs.c    ****         __d_drop(next_dentry); 
 485              		.loc 1 75 5 is_stmt 1 view .LVU141
  75:./fs/vfs.c    ****         __d_drop(next_dentry); 
 486              		.loc 1 75 7 is_stmt 0 view .LVU142
 487 006c 0028     		cmp	r0, #0
 488 006e D8DA     		bge	.L26
 489              	.LVL54:
 490              	.L32:
  76:./fs/vfs.c    ****      return ERR_PTR(-ENOMEM);
 491              		.loc 1 76 9 is_stmt 1 view .LVU143
 492 0070 2046     		mov	r0, r4
 493 0072 FFF7FEFF 		bl	__d_drop
 494              	.LVL55:
  77:./fs/vfs.c    ****     }
 495              		.loc 1 77 6 view .LVU144
  77:./fs/vfs.c    ****     }
 496              		.loc 1 77 13 is_stmt 0 view .LVU145
 497 0076 6FF00B04 		mvn	r4, #11
 498              	.LVL56:
  77:./fs/vfs.c    ****     }
 499              		.loc 1 77 13 view .LVU146
 500 007a D2E7     		b	.L26
 501              	.LVL57:
 502              	.L33:
  61:./fs/vfs.c    **** 
 503              		.loc 1 61 12 view .LVU147
 504 007c 6FF00B04 		mvn	r4, #11
 505 0080 CFE7     		b	.L26
 506              	.L38:
 507 0082 00BF     		.align	2
 508              	.L37:
 509 0084 00000000 		.word	.LC0
 510              		.cfi_endproc
 511              	.LFE1039:
 513              		.section	.rodata.print_read_only_message.str1.4,"aMS",%progbits,1
 514              		.align	2
 515              	.LC1:
 516 0000 6B65726E 		.ascii	"kernel_write:this file is read only\012\000"
 516      656C5F77 
 516      72697465 
ARM GAS  /tmp/ccC84BPF.s 			page 16


 516      3A746869 
 516      73206669 
 517              		.section	.text.print_read_only_message,"ax",%progbits
 518              		.align	1
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 523              	print_read_only_message:
 524              	.LFB1045:
  81:./fs/vfs.c    **** 
  82:./fs/vfs.c    **** struct  dentry * select_file(char * path , int offset)
  83:./fs/vfs.c    **** {   
  84:./fs/vfs.c    ****     if(path == NULL) 
  85:./fs/vfs.c    ****     return NULL;
  86:./fs/vfs.c    ****     if(path[0] == '/' && path[1] == '\0') 
  87:./fs/vfs.c    ****     return root_dentry;
  88:./fs/vfs.c    ****     int err;    
  89:./fs/vfs.c    ****     int path_numbers = get_dir_number(path);
  90:./fs/vfs.c    ****     char file_name[128];    
  91:./fs/vfs.c    ****     struct dentry * esarch_dentry = root_dentry;
  92:./fs/vfs.c    ****     for(int i = 1 ;i <= path_numbers - offset; i++){
  93:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
  94:./fs/vfs.c    ****         esarch_dentry = find_dentry(esarch_dentry,file_name,0); 
  95:./fs/vfs.c    ****         if(IS_ERR(esarch_dentry)){
  96:./fs/vfs.c    ****             return esarch_dentry;
  97:./fs/vfs.c    ****         }
  98:./fs/vfs.c    ****     }
  99:./fs/vfs.c    ****     return esarch_dentry;
 100:./fs/vfs.c    **** }
 101:./fs/vfs.c    **** 
 102:./fs/vfs.c    **** struct  dentry * create_new_dentry(char * path,umode_t i_mode)
 103:./fs/vfs.c    **** {
 104:./fs/vfs.c    ****     struct  dentry * p_dentry;
 105:./fs/vfs.c    **** 
 106:./fs/vfs.c    ****     p_dentry = select_file(path, 1); //Êü•ËØ¢Â≠êÁõÆÂΩï
 107:./fs/vfs.c    ****     if(IS_ERR(p_dentry)){
 108:./fs/vfs.c    ****         pr_info("can not find parent dentry%d\n",(int)p_dentry);
 109:./fs/vfs.c    ****         return ERR_PTR(-ENOENT);
 110:./fs/vfs.c    ****     }
 111:./fs/vfs.c    ****     mode_t p_denrty_mode = p_dentry->d_inode->i_mode;
 112:./fs/vfs.c    ****     if((p_denrty_mode & S_IFMT) != S_IFDIR)
 113:./fs/vfs.c    ****     {
 114:./fs/vfs.c    ****         pr_info("parent dentry : %s is not a dir\n",p_dentry->d_name.name);
 115:./fs/vfs.c    ****         return ERR_PTR(-ENOTDIR);
 116:./fs/vfs.c    ****     } 
 117:./fs/vfs.c    **** 
 118:./fs/vfs.c    ****     char file_name[128];  
 119:./fs/vfs.c    ****     get_dir_name(path,file_name,get_dir_number(path));     
 120:./fs/vfs.c    ****     p_dentry = create_dentry(p_dentry,file_name,i_mode);
 121:./fs/vfs.c    ****     return p_dentry;
 122:./fs/vfs.c    **** }
 123:./fs/vfs.c    **** 
 124:./fs/vfs.c    **** 
 125:./fs/vfs.c    **** 
 126:./fs/vfs.c    **** 
 127:./fs/vfs.c    **** struct block_device *blkdev_get_by_path(char *path, int flag,void* priv)
 128:./fs/vfs.c    **** {
ARM GAS  /tmp/ccC84BPF.s 			page 17


 129:./fs/vfs.c    ****     struct dentry* dentry = select_file(path,0);
 130:./fs/vfs.c    ****     return devfs_get_blk_dev(dentry->d_inode);
 131:./fs/vfs.c    **** }
 132:./fs/vfs.c    **** 
 133:./fs/vfs.c    **** 
 134:./fs/vfs.c    **** struct dentry* mkdir(char *path,umode_t mode){
 135:./fs/vfs.c    ****    if(mode == NULL) mode = 0755;
 136:./fs/vfs.c    ****    return create_new_dentry(path, S_IFDIR | (mode & 0777));
 137:./fs/vfs.c    **** }
 138:./fs/vfs.c    **** 
 139:./fs/vfs.c    **** struct file *filp_open(const char * path, int flags, umode_t mode)
 140:./fs/vfs.c    **** {
 141:./fs/vfs.c    ****     pr_info("open device %s\n",path);
 142:./fs/vfs.c    ****     struct dentry*file_dentry = select_file(path,0);
 143:./fs/vfs.c    ****     if(IS_ERR(file_dentry))
 144:./fs/vfs.c    ****     {
 145:./fs/vfs.c    ****         if (PTR_ERR(file_dentry) == -ENOENT && (flags & O_CREAT)) 
 146:./fs/vfs.c    ****         {
 147:./fs/vfs.c    ****             pr_info("file not found, try create: %s\n", path);
 148:./fs/vfs.c    ****             file_dentry = create_new_dentry((char *)path, S_IFREG | mode);
 149:./fs/vfs.c    ****             if (IS_ERR(file_dentry)){
 150:./fs/vfs.c    ****                 pr_info("can not create file: %s\n", path);
 151:./fs/vfs.c    ****                 return (struct file *)file_dentry;
 152:./fs/vfs.c    ****             }
 153:./fs/vfs.c    ****         }
 154:./fs/vfs.c    ****         else {
 155:./fs/vfs.c    ****             return (struct file *)file_dentry;
 156:./fs/vfs.c    ****         }      
 157:./fs/vfs.c    ****     }
 158:./fs/vfs.c    ****     struct file *file = f_get(file_dentry);
 159:./fs/vfs.c    ****     if(IS_ERR(file))
 160:./fs/vfs.c    ****         return ERR_PTR(-ENOMEM);
 161:./fs/vfs.c    ****     file->f_flags = flags;
 162:./fs/vfs.c    ****     file->f_mode = mode;
 163:./fs/vfs.c    ****     int flag = 0;
 164:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 165:./fs/vfs.c    ****     if(file->f_op != NULL){
 166:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 167:./fs/vfs.c    ****         if(file->f_op->open != NULL)
 168:./fs/vfs.c    ****         flag = file->f_op->open(file->f_inode,file);
 169:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock);
 170:./fs/vfs.c    ****     }
 171:./fs/vfs.c    ****     spin_unlock(&file->f_slock);
 172:./fs/vfs.c    ****     if(flag < 0){
 173:./fs/vfs.c    ****         f_put(file);
 174:./fs/vfs.c    ****         return NULL;
 175:./fs/vfs.c    ****     }
 176:./fs/vfs.c    ****     
 177:./fs/vfs.c    ****     if(file->f_op->write != NULL)
 178:./fs/vfs.c    ****     file->f_flags |= O_RDONLY;
 179:./fs/vfs.c    **** 
 180:./fs/vfs.c    ****     return file;
 181:./fs/vfs.c    **** }
 182:./fs/vfs.c    **** EXPORT_SYMBOL(filp_open);
 183:./fs/vfs.c    **** 
 184:./fs/vfs.c    **** static void print_read_only_message()
 185:./fs/vfs.c    **** {
ARM GAS  /tmp/ccC84BPF.s 			page 18


 525              		.loc 1 185 1 is_stmt 1 view -0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529 0000 08B5     		push	{r3, lr}
 530              	.LCFI9:
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 3, -8
 533              		.cfi_offset 14, -4
 186:./fs/vfs.c    ****     pr_info("kernel_write:this file is read only\n");
 534              		.loc 1 186 5 view .LVU149
 535 0002 0248     		ldr	r0, .L41
 536 0004 FFF7FEFF 		bl	printk
 537              	.LVL58:
 187:./fs/vfs.c    **** }
 538              		.loc 1 187 1 is_stmt 0 view .LVU150
 539 0008 08BD     		pop	{r3, pc}
 540              	.L42:
 541 000a 00BF     		.align	2
 542              	.L41:
 543 000c 00000000 		.word	.LC1
 544              		.cfi_endproc
 545              	.LFE1045:
 547              		.section	.text.__spin_lock,"ax",%progbits
 548              		.align	1
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 553              	__spin_lock:
 554              	.LVL59:
 555              	.LFB229:
  15:./arch/arm_m/include/asm/spinlock.h **** 
 556              		.loc 2 15 47 is_stmt 1 view -0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
  15:./arch/arm_m/include/asm/spinlock.h **** 
 560              		.loc 2 15 47 is_stmt 0 view .LVU152
 561 0000 38B5     		push	{r3, r4, r5, lr}
 562              	.LCFI10:
 563              		.cfi_def_cfa_offset 16
 564              		.cfi_offset 3, -16
 565              		.cfi_offset 4, -12
 566              		.cfi_offset 5, -8
 567              		.cfi_offset 14, -4
 568 0002 0446     		mov	r4, r0
  17:./arch/arm_m/include/asm/spinlock.h ****     if(lock->flag == 0){
 569              		.loc 2 17 5 is_stmt 1 view .LVU153
 570 0004 FFF7FEFF 		bl	stop_all_scheduler
 571              	.LVL60:
  18:./arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 572              		.loc 2 18 5 view .LVU154
  18:./arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 573              		.loc 2 18 12 is_stmt 0 view .LVU155
 574 0008 2368     		ldr	r3, [r4]
  18:./arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 575              		.loc 2 18 7 view .LVU156
ARM GAS  /tmp/ccC84BPF.s 			page 19


 576 000a 2BB9     		cbnz	r3, .L44
  19:./arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
 577              		.loc 2 19 11 is_stmt 1 view .LVU157
  19:./arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
 578              		.loc 2 19 22 is_stmt 0 view .LVU158
 579 000c 0125     		movs	r5, #1
 580 000e 2560     		str	r5, [r4]
  20:./arch/arm_m/include/asm/spinlock.h ****         return 1;
 581              		.loc 2 20 11 is_stmt 1 view .LVU159
 582 0010 FFF7FEFF 		bl	start_all_scheduler
 583              	.LVL61:
  21:./arch/arm_m/include/asm/spinlock.h ****     }
 584              		.loc 2 21 9 view .LVU160
  21:./arch/arm_m/include/asm/spinlock.h ****     }
 585              		.loc 2 21 16 is_stmt 0 view .LVU161
 586 0014 2846     		mov	r0, r5
 587              	.L43:
  28:./arch/arm_m/include/asm/spinlock.h **** 
 588              		.loc 2 28 1 view .LVU162
 589 0016 38BD     		pop	{r3, r4, r5, pc}
 590              	.LVL62:
 591              	.L44:
  25:./arch/arm_m/include/asm/spinlock.h ****         return 0;
 592              		.loc 2 25 9 is_stmt 1 view .LVU163
 593 0018 FFF7FEFF 		bl	start_all_scheduler
 594              	.LVL63:
  26:./arch/arm_m/include/asm/spinlock.h ****     }
 595              		.loc 2 26 9 view .LVU164
  26:./arch/arm_m/include/asm/spinlock.h ****     }
 596              		.loc 2 26 16 is_stmt 0 view .LVU165
 597 001c 0020     		movs	r0, #0
 598 001e FAE7     		b	.L43
 599              		.cfi_endproc
 600              	.LFE229:
 602              		.section	.text.spin_lock,"ax",%progbits
 603              		.align	1
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 608              	spin_lock:
 609              	.LVL64:
 610              	.LFB232:
  15:./include/linux/spinlock.h ****     while (1)
 611              		.loc 3 15 1 is_stmt 1 view -0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
  15:./include/linux/spinlock.h ****     while (1)
 615              		.loc 3 15 1 is_stmt 0 view .LVU167
 616 0000 38B5     		push	{r3, r4, r5, lr}
 617              	.LCFI11:
 618              		.cfi_def_cfa_offset 16
 619              		.cfi_offset 3, -16
 620              		.cfi_offset 4, -12
 621              		.cfi_offset 5, -8
 622              		.cfi_offset 14, -4
 623 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccC84BPF.s 			page 20


 624 0004 06E0     		b	.L50
 625              	.LVL65:
 626              	.L52:
  19:./include/linux/spinlock.h ****             break;
 627              		.loc 3 19 13 is_stmt 1 view .LVU168
  19:./include/linux/spinlock.h ****             break;
 628              		.loc 3 19 27 is_stmt 0 view .LVU169
 629 0006 FFF7FEFF 		bl	get_current_task
 630              	.LVL66:
  19:./include/linux/spinlock.h ****             break;
 631              		.loc 3 19 25 discriminator 1 view .LVU170
 632 000a 2060     		str	r0, [r4]
  20:./include/linux/spinlock.h ****         }
 633              		.loc 3 20 13 is_stmt 1 view .LVU171
 634              	.L47:
  29:./include/linux/spinlock.h **** 
 635              		.loc 3 29 1 is_stmt 0 view .LVU172
 636 000c 38BD     		pop	{r3, r4, r5, pc}
 637              	.LVL67:
 638              	.L53:
  26:./include/linux/spinlock.h ****         }
 639              		.loc 3 26 13 is_stmt 1 view .LVU173
 640 000e 0520     		movs	r0, #5
 641 0010 FFF7FEFF 		bl	__delay
 642              	.LVL68:
  16:./include/linux/spinlock.h ****     {
 643              		.loc 3 16 11 view .LVU174
 644              	.L50:
  16:./include/linux/spinlock.h ****     {
 645              		.loc 3 16 5 view .LVU175
  18:./include/linux/spinlock.h ****             lock->owner = get_current_task();
 646              		.loc 3 18 9 view .LVU176
  18:./include/linux/spinlock.h ****             lock->owner = get_current_task();
 647              		.loc 3 18 12 is_stmt 0 view .LVU177
 648 0014 2046     		mov	r0, r4
 649 0016 FFF7FEFF 		bl	__spin_lock
 650              	.LVL69:
  18:./include/linux/spinlock.h ****             lock->owner = get_current_task();
 651              		.loc 3 18 11 discriminator 1 view .LVU178
 652 001a 0128     		cmp	r0, #1
 653 001c F3D0     		beq	.L52
  22:./include/linux/spinlock.h ****             return;   
 654              		.loc 3 22 15 is_stmt 1 view .LVU179
  22:./include/linux/spinlock.h ****             return;   
 655              		.loc 3 22 22 is_stmt 0 view .LVU180
 656 001e 2568     		ldr	r5, [r4]
  22:./include/linux/spinlock.h ****             return;   
 657              		.loc 3 22 33 view .LVU181
 658 0020 FFF7FEFF 		bl	get_current_task
 659              	.LVL70:
  22:./include/linux/spinlock.h ****             return;   
 660              		.loc 3 22 17 discriminator 1 view .LVU182
 661 0024 8542     		cmp	r5, r0
 662 0026 F2D1     		bne	.L53
 663 0028 F0E7     		b	.L47
 664              		.cfi_endproc
 665              	.LFE232:
ARM GAS  /tmp/ccC84BPF.s 			page 21


 667              		.section	.text.kernel_read,"ax",%progbits
 668              		.align	1
 669              		.global	kernel_read
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 674              	kernel_read:
 675              	.LVL71:
 676              	.LFB1046:
 188:./fs/vfs.c    **** ssize_t kernel_read(struct file *file, void * buf, size_t count, loff_t *ppos)
 189:./fs/vfs.c    **** {
 677              		.loc 1 189 1 is_stmt 1 view -0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		.loc 1 189 1 is_stmt 0 view .LVU184
 682 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 683              	.LCFI12:
 684              		.cfi_def_cfa_offset 32
 685              		.cfi_offset 3, -32
 686              		.cfi_offset 4, -28
 687              		.cfi_offset 5, -24
 688              		.cfi_offset 6, -20
 689              		.cfi_offset 7, -16
 690              		.cfi_offset 8, -12
 691              		.cfi_offset 9, -8
 692              		.cfi_offset 14, -4
 190:./fs/vfs.c    ****     if(file == NULL) return -1;
 693              		.loc 1 190 5 is_stmt 1 view .LVU185
 694              		.loc 1 190 7 is_stmt 0 view .LVU186
 695 0004 50B3     		cbz	r0, .L58
 696 0006 8846     		mov	r8, r1
 697 0008 1746     		mov	r7, r2
 698 000a 1D46     		mov	r5, r3
 699 000c 0446     		mov	r4, r0
 191:./fs/vfs.c    ****     ssize_t size =  -EBADF;
 700              		.loc 1 191 5 is_stmt 1 view .LVU187
 701              	.LVL72:
 192:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 702              		.loc 1 192 5 view .LVU188
 703 000e 00F15C06 		add	r6, r0, #92
 704 0012 3046     		mov	r0, r6
 705              	.LVL73:
 706              		.loc 1 192 5 is_stmt 0 view .LVU189
 707 0014 FFF7FEFF 		bl	spin_lock
 708              	.LVL74:
 193:./fs/vfs.c    ****     if(file->f_op != NULL){
 709              		.loc 1 193 5 is_stmt 1 view .LVU190
 710              		.loc 1 193 12 is_stmt 0 view .LVU191
 711 0018 636A     		ldr	r3, [r4, #36]
 712              		.loc 1 193 7 view .LVU192
 713 001a E3B1     		cbz	r3, .L59
 194:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 714              		.loc 1 194 9 is_stmt 1 view .LVU193
 715              		.loc 1 194 24 is_stmt 0 view .LVU194
 716 001c E06A     		ldr	r0, [r4, #44]
 717              		.loc 1 194 9 view .LVU195
ARM GAS  /tmp/ccC84BPF.s 			page 22


 718 001e 2C30     		adds	r0, r0, #44
 719 0020 FFF7FEFF 		bl	spin_lock
 720              	.LVL75:
 195:./fs/vfs.c    ****         if(file->f_op->read != NULL)
 721              		.loc 1 195 9 is_stmt 1 view .LVU196
 722              		.loc 1 195 16 is_stmt 0 view .LVU197
 723 0024 636A     		ldr	r3, [r4, #36]
 724              		.loc 1 195 22 view .LVU198
 725 0026 D3F80C90 		ldr	r9, [r3, #12]
 726              		.loc 1 195 11 view .LVU199
 727 002a B9F1000F 		cmp	r9, #0
 728 002e 0FD0     		beq	.L60
 196:./fs/vfs.c    ****         size = file->f_op->read(file,buf,count,ppos);
 729              		.loc 1 196 9 is_stmt 1 view .LVU200
 730              		.loc 1 196 16 is_stmt 0 view .LVU201
 731 0030 2B46     		mov	r3, r5
 732 0032 3A46     		mov	r2, r7
 733 0034 4146     		mov	r1, r8
 734 0036 2046     		mov	r0, r4
 735 0038 C847     		blx	r9
 736              	.LVL76:
 737 003a 0546     		mov	r5, r0
 738              	.LVL77:
 739              	.L57:
 197:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock);
 740              		.loc 1 197 9 is_stmt 1 view .LVU202
 741              		.loc 1 197 26 is_stmt 0 view .LVU203
 742 003c E06A     		ldr	r0, [r4, #44]
 743              		.loc 1 197 9 view .LVU204
 744 003e 2C30     		adds	r0, r0, #44
 745 0040 FFF7FEFF 		bl	spin_unlock
 746              	.LVL78:
 747              	.L56:
 198:./fs/vfs.c    ****     }
 199:./fs/vfs.c    **** 
 200:./fs/vfs.c    **** 
 201:./fs/vfs.c    **** 
 202:./fs/vfs.c    ****     spin_unlock(&file->f_slock);
 748              		.loc 1 202 5 is_stmt 1 view .LVU205
 749 0044 3046     		mov	r0, r6
 750 0046 FFF7FEFF 		bl	spin_unlock
 751              	.LVL79:
 203:./fs/vfs.c    ****     return size;
 752              		.loc 1 203 5 view .LVU206
 753              	.L54:
 204:./fs/vfs.c    **** }
 754              		.loc 1 204 1 is_stmt 0 view .LVU207
 755 004a 2846     		mov	r0, r5
 756 004c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 757              	.LVL80:
 758              	.L60:
 191:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 759              		.loc 1 191 13 view .LVU208
 760 0050 6FF00805 		mvn	r5, #8
 761              	.LVL81:
 191:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 762              		.loc 1 191 13 view .LVU209
ARM GAS  /tmp/ccC84BPF.s 			page 23


 763 0054 F2E7     		b	.L57
 764              	.LVL82:
 765              	.L59:
 191:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 766              		.loc 1 191 13 view .LVU210
 767 0056 6FF00805 		mvn	r5, #8
 768              	.LVL83:
 191:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 769              		.loc 1 191 13 view .LVU211
 770 005a F3E7     		b	.L56
 771              	.LVL84:
 772              	.L58:
 190:./fs/vfs.c    ****     ssize_t size =  -EBADF;
 773              		.loc 1 190 29 discriminator 1 view .LVU212
 774 005c 4FF0FF35 		mov	r5, #-1
 775 0060 F3E7     		b	.L54
 776              		.cfi_endproc
 777              	.LFE1046:
 779              		.section	.text.kernel_write,"ax",%progbits
 780              		.align	1
 781              		.global	kernel_write
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 786              	kernel_write:
 787              	.LVL85:
 788              	.LFB1047:
 205:./fs/vfs.c    **** EXPORT_SYMBOL(kernel_read);
 206:./fs/vfs.c    **** 
 207:./fs/vfs.c    **** ssize_t kernel_write(struct file *file,const void * buf, size_t count, loff_t *ppos)
 208:./fs/vfs.c    **** {    
 789              		.loc 1 208 1 is_stmt 1 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		.loc 1 208 1 is_stmt 0 view .LVU214
 794 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 795              	.LCFI13:
 796              		.cfi_def_cfa_offset 32
 797              		.cfi_offset 4, -32
 798              		.cfi_offset 5, -28
 799              		.cfi_offset 6, -24
 800              		.cfi_offset 7, -20
 801              		.cfi_offset 8, -16
 802              		.cfi_offset 9, -12
 803              		.cfi_offset 10, -8
 804              		.cfi_offset 14, -4
 209:./fs/vfs.c    ****     if(file == NULL) return -1;
 805              		.loc 1 209 5 is_stmt 1 view .LVU215
 806              		.loc 1 209 7 is_stmt 0 view .LVU216
 807 0004 48B3     		cbz	r0, .L66
 808 0006 0D46     		mov	r5, r1
 809 0008 9146     		mov	r9, r2
 810 000a 1F46     		mov	r7, r3
 811 000c 0446     		mov	r4, r0
 210:./fs/vfs.c    ****     if ((file->f_flags & O_ACCMODE) == O_RDONLY) {
 812              		.loc 1 210 5 is_stmt 1 view .LVU217
ARM GAS  /tmp/ccC84BPF.s 			page 24


 813              		.loc 1 210 14 is_stmt 0 view .LVU218
 814 000e 036B     		ldr	r3, [r0, #48]
 815              	.LVL86:
 816              		.loc 1 210 8 view .LVU219
 817 0010 13F0030F 		tst	r3, #3
 818 0014 1CD0     		beq	.L68
 211:./fs/vfs.c    ****         print_read_only_message();
 212:./fs/vfs.c    ****         return -EBADF;  
 213:./fs/vfs.c    ****     }
 214:./fs/vfs.c    ****     ssize_t size;
 819              		.loc 1 214 5 is_stmt 1 view .LVU220
 215:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 820              		.loc 1 215 5 view .LVU221
 821 0016 00F15C06 		add	r6, r0, #92
 822 001a 3046     		mov	r0, r6
 823              	.LVL87:
 824              		.loc 1 215 5 is_stmt 0 view .LVU222
 825 001c FFF7FEFF 		bl	spin_lock
 826              	.LVL88:
 216:./fs/vfs.c    ****     if(file->f_op != NULL){
 827              		.loc 1 216 5 is_stmt 1 view .LVU223
 828              		.loc 1 216 12 is_stmt 0 view .LVU224
 829 0020 636A     		ldr	r3, [r4, #36]
 830              		.loc 1 216 7 view .LVU225
 831 0022 7BB1     		cbz	r3, .L65
 832              	.LBB35:
 217:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 833              		.loc 1 217 9 is_stmt 1 view .LVU226
 834              		.loc 1 217 24 is_stmt 0 view .LVU227
 835 0024 E06A     		ldr	r0, [r4, #44]
 836              		.loc 1 217 9 view .LVU228
 837 0026 2C30     		adds	r0, r0, #44
 838 0028 FFF7FEFF 		bl	spin_lock
 839              	.LVL89:
 218:./fs/vfs.c    ****         ssize_t size = file->f_op->write(file,buf,count,ppos);    
 840              		.loc 1 218 9 is_stmt 1 view .LVU229
 841              		.loc 1 218 28 is_stmt 0 view .LVU230
 842 002c 636A     		ldr	r3, [r4, #36]
 843              		.loc 1 218 34 view .LVU231
 844 002e D3F810A0 		ldr	r10, [r3, #16]
 845              		.loc 1 218 24 view .LVU232
 846 0032 3B46     		mov	r3, r7
 847 0034 4A46     		mov	r2, r9
 848 0036 2946     		mov	r1, r5
 849 0038 2046     		mov	r0, r4
 850 003a D047     		blx	r10
 851              	.LVL90:
 219:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock);
 852              		.loc 1 219 9 is_stmt 1 view .LVU233
 853              		.loc 1 219 26 is_stmt 0 view .LVU234
 854 003c E06A     		ldr	r0, [r4, #44]
 855              		.loc 1 219 9 view .LVU235
 856 003e 2C30     		adds	r0, r0, #44
 857 0040 FFF7FEFF 		bl	spin_unlock
 858              	.LVL91:
 859              	.L65:
 860              	.LBE35:
ARM GAS  /tmp/ccC84BPF.s 			page 25


 220:./fs/vfs.c    ****     }
 221:./fs/vfs.c    ****     spin_unlock(&file->f_slock);
 861              		.loc 1 221 5 is_stmt 1 view .LVU236
 862 0044 3046     		mov	r0, r6
 863 0046 FFF7FEFF 		bl	spin_unlock
 864              	.LVL92:
 222:./fs/vfs.c    ****     return size;
 865              		.loc 1 222 5 view .LVU237
 866              	.L62:
 223:./fs/vfs.c    **** }
 867              		.loc 1 223 1 is_stmt 0 view .LVU238
 868 004a 4046     		mov	r0, r8
 869 004c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 870              	.LVL93:
 871              	.L68:
 211:./fs/vfs.c    ****         return -EBADF;  
 872              		.loc 1 211 9 is_stmt 1 view .LVU239
 873 0050 FFF7FEFF 		bl	print_read_only_message
 874              	.LVL94:
 212:./fs/vfs.c    ****     }
 875              		.loc 1 212 9 view .LVU240
 212:./fs/vfs.c    ****     }
 876              		.loc 1 212 16 is_stmt 0 view .LVU241
 877 0054 6FF00808 		mvn	r8, #8
 878 0058 F7E7     		b	.L62
 879              	.LVL95:
 880              	.L66:
 209:./fs/vfs.c    ****     if ((file->f_flags & O_ACCMODE) == O_RDONLY) {
 881              		.loc 1 209 29 discriminator 1 view .LVU242
 882 005a 4FF0FF38 		mov	r8, #-1
 883 005e F4E7     		b	.L62
 884              		.cfi_endproc
 885              	.LFE1047:
 887              		.section	.text.vfs_ioctl,"ax",%progbits
 888              		.align	1
 889              		.global	vfs_ioctl
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 894              	vfs_ioctl:
 895              	.LVL96:
 896              	.LFB1048:
 224:./fs/vfs.c    **** EXPORT_SYMBOL(kernel_write);
 225:./fs/vfs.c    **** 
 226:./fs/vfs.c    **** 
 227:./fs/vfs.c    **** long vfs_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 228:./fs/vfs.c    **** {
 897              		.loc 1 228 1 is_stmt 1 view -0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              		.loc 1 228 1 is_stmt 0 view .LVU244
 902 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 903              	.LCFI14:
 904              		.cfi_def_cfa_offset 24
 905              		.cfi_offset 3, -24
 906              		.cfi_offset 4, -20
ARM GAS  /tmp/ccC84BPF.s 			page 26


 907              		.cfi_offset 5, -16
 908              		.cfi_offset 6, -12
 909              		.cfi_offset 7, -8
 910              		.cfi_offset 14, -4
 229:./fs/vfs.c    ****     if(file == NULL) return -1;
 911              		.loc 1 229 5 is_stmt 1 view .LVU245
 912              		.loc 1 229 7 is_stmt 0 view .LVU246
 913 0002 68B3     		cbz	r0, .L74
 914 0004 0F46     		mov	r7, r1
 915 0006 1546     		mov	r5, r2
 916 0008 0446     		mov	r4, r0
 230:./fs/vfs.c    ****     if ((file->f_flags & O_ACCMODE) == O_RDONLY) {
 917              		.loc 1 230 5 is_stmt 1 view .LVU247
 918              		.loc 1 230 14 is_stmt 0 view .LVU248
 919 000a 036B     		ldr	r3, [r0, #48]
 920              		.loc 1 230 8 view .LVU249
 921 000c 13F0030F 		tst	r3, #3
 922 0010 1BD0     		beq	.L78
 231:./fs/vfs.c    ****         print_read_only_message();
 232:./fs/vfs.c    ****         return -EBADF;  // Âè™ËØªÊâìÂºÄÔºå‰∏çÂÖÅËÆ∏ÂÜô
 233:./fs/vfs.c    ****     }
 234:./fs/vfs.c    ****     ssize_t size =  -EBADF;
 923              		.loc 1 234 5 is_stmt 1 view .LVU250
 924              	.LVL97:
 235:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 925              		.loc 1 235 5 view .LVU251
 926 0012 00F15C06 		add	r6, r0, #92
 927 0016 3046     		mov	r0, r6
 928              	.LVL98:
 929              		.loc 1 235 5 is_stmt 0 view .LVU252
 930 0018 FFF7FEFF 		bl	spin_lock
 931              	.LVL99:
 236:./fs/vfs.c    ****     if(file->f_op != NULL){
 932              		.loc 1 236 5 is_stmt 1 view .LVU253
 933              		.loc 1 236 12 is_stmt 0 view .LVU254
 934 001c 636A     		ldr	r3, [r4, #36]
 935              		.loc 1 236 7 view .LVU255
 936 001e E3B1     		cbz	r3, .L75
 237:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 937              		.loc 1 237 9 is_stmt 1 view .LVU256
 938              		.loc 1 237 24 is_stmt 0 view .LVU257
 939 0020 E06A     		ldr	r0, [r4, #44]
 940              		.loc 1 237 9 view .LVU258
 941 0022 2C30     		adds	r0, r0, #44
 942 0024 FFF7FEFF 		bl	spin_lock
 943              	.LVL100:
 238:./fs/vfs.c    ****         if(file->f_op->unlocked_ioctl != NULL)
 944              		.loc 1 238 9 is_stmt 1 view .LVU259
 945              		.loc 1 238 16 is_stmt 0 view .LVU260
 946 0028 636A     		ldr	r3, [r4, #36]
 947              		.loc 1 238 22 view .LVU261
 948 002a 9B6A     		ldr	r3, [r3, #40]
 949              		.loc 1 238 11 view .LVU262
 950 002c 93B1     		cbz	r3, .L76
 239:./fs/vfs.c    ****         size = file->f_op->unlocked_ioctl(file,cmd,arg);
 951              		.loc 1 239 9 is_stmt 1 view .LVU263
 952              		.loc 1 239 16 is_stmt 0 view .LVU264
ARM GAS  /tmp/ccC84BPF.s 			page 27


 953 002e 2A46     		mov	r2, r5
 954 0030 3946     		mov	r1, r7
 955 0032 2046     		mov	r0, r4
 956 0034 9847     		blx	r3
 957              	.LVL101:
 958 0036 0546     		mov	r5, r0
 959              	.LVL102:
 960              	.L73:
 240:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock); 
 961              		.loc 1 240 9 is_stmt 1 view .LVU265
 962              		.loc 1 240 26 is_stmt 0 view .LVU266
 963 0038 E06A     		ldr	r0, [r4, #44]
 964              		.loc 1 240 9 view .LVU267
 965 003a 2C30     		adds	r0, r0, #44
 966 003c FFF7FEFF 		bl	spin_unlock
 967              	.LVL103:
 968              	.L72:
 241:./fs/vfs.c    ****     }
 242:./fs/vfs.c    ****     spin_unlock(&file->f_slock);
 969              		.loc 1 242 5 is_stmt 1 view .LVU268
 970 0040 3046     		mov	r0, r6
 971 0042 FFF7FEFF 		bl	spin_unlock
 972              	.LVL104:
 243:./fs/vfs.c    ****     return size;
 973              		.loc 1 243 5 view .LVU269
 974              	.L69:
 244:./fs/vfs.c    **** }
 975              		.loc 1 244 1 is_stmt 0 view .LVU270
 976 0046 2846     		mov	r0, r5
 977 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 978              	.LVL105:
 979              	.L78:
 231:./fs/vfs.c    ****         return -EBADF;  // Âè™ËØªÊâìÂºÄÔºå‰∏çÂÖÅËÆ∏ÂÜô
 980              		.loc 1 231 9 is_stmt 1 view .LVU271
 981 004a FFF7FEFF 		bl	print_read_only_message
 982              	.LVL106:
 232:./fs/vfs.c    ****     }
 983              		.loc 1 232 9 view .LVU272
 232:./fs/vfs.c    ****     }
 984              		.loc 1 232 16 is_stmt 0 view .LVU273
 985 004e 6FF00805 		mvn	r5, #8
 986              	.LVL107:
 232:./fs/vfs.c    ****     }
 987              		.loc 1 232 16 view .LVU274
 988 0052 F8E7     		b	.L69
 989              	.LVL108:
 990              	.L76:
 234:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 991              		.loc 1 234 13 view .LVU275
 992 0054 6FF00805 		mvn	r5, #8
 993              	.LVL109:
 234:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 994              		.loc 1 234 13 view .LVU276
 995 0058 EEE7     		b	.L73
 996              	.LVL110:
 997              	.L75:
 234:./fs/vfs.c    ****     spin_lock(&file->f_slock);
ARM GAS  /tmp/ccC84BPF.s 			page 28


 998              		.loc 1 234 13 view .LVU277
 999 005a 6FF00805 		mvn	r5, #8
 1000              	.LVL111:
 234:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1001              		.loc 1 234 13 view .LVU278
 1002 005e EFE7     		b	.L72
 1003              	.LVL112:
 1004              	.L74:
 229:./fs/vfs.c    ****     if ((file->f_flags & O_ACCMODE) == O_RDONLY) {
 1005              		.loc 1 229 29 discriminator 1 view .LVU279
 1006 0060 4FF0FF35 		mov	r5, #-1
 1007 0064 EFE7     		b	.L69
 1008              		.cfi_endproc
 1009              	.LFE1048:
 1011              		.section	.text.file_close,"ax",%progbits
 1012              		.align	1
 1013              		.global	file_close
 1014              		.syntax unified
 1015              		.thumb
 1016              		.thumb_func
 1018              	file_close:
 1019              	.LVL113:
 1020              	.LFB1049:
 245:./fs/vfs.c    **** EXPORT_SYMBOL(vfs_ioctl);
 246:./fs/vfs.c    **** 
 247:./fs/vfs.c    **** int file_close(struct file *file, fl_owner_t id)
 248:./fs/vfs.c    **** {
 1021              		.loc 1 248 1 is_stmt 1 view -0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 249:./fs/vfs.c    ****     if(file == NULL) return -1;
 1025              		.loc 1 249 5 view .LVU281
 1026              		.loc 1 249 7 is_stmt 0 view .LVU282
 1027 0000 E8B1     		cbz	r0, .L86
 248:./fs/vfs.c    ****     if(file == NULL) return -1;
 1028              		.loc 1 248 1 view .LVU283
 1029 0002 38B5     		push	{r3, r4, r5, lr}
 1030              	.LCFI15:
 1031              		.cfi_def_cfa_offset 16
 1032              		.cfi_offset 3, -16
 1033              		.cfi_offset 4, -12
 1034              		.cfi_offset 5, -8
 1035              		.cfi_offset 14, -4
 1036 0004 0446     		mov	r4, r0
 250:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1037              		.loc 1 250 5 is_stmt 1 view .LVU284
 1038 0006 00F15C05 		add	r5, r0, #92
 1039 000a 2846     		mov	r0, r5
 1040              	.LVL114:
 1041              		.loc 1 250 5 is_stmt 0 view .LVU285
 1042 000c FFF7FEFF 		bl	spin_lock
 1043              	.LVL115:
 251:./fs/vfs.c    ****     if(file->f_op != NULL){
 1044              		.loc 1 251 5 is_stmt 1 view .LVU286
 1045              		.loc 1 251 12 is_stmt 0 view .LVU287
 1046 0010 636A     		ldr	r3, [r4, #36]
ARM GAS  /tmp/ccC84BPF.s 			page 29


 1047              		.loc 1 251 7 view .LVU288
 1048 0012 6BB1     		cbz	r3, .L81
 252:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 1049              		.loc 1 252 9 is_stmt 1 view .LVU289
 1050              		.loc 1 252 24 is_stmt 0 view .LVU290
 1051 0014 E06A     		ldr	r0, [r4, #44]
 1052              		.loc 1 252 9 view .LVU291
 1053 0016 2C30     		adds	r0, r0, #44
 1054 0018 FFF7FEFF 		bl	spin_lock
 1055              	.LVL116:
 253:./fs/vfs.c    ****         if(file->f_op->release != NULL)
 1056              		.loc 1 253 9 is_stmt 1 view .LVU292
 1057              		.loc 1 253 16 is_stmt 0 view .LVU293
 1058 001c 636A     		ldr	r3, [r4, #36]
 1059              		.loc 1 253 22 view .LVU294
 1060 001e DB6B     		ldr	r3, [r3, #60]
 1061              		.loc 1 253 11 view .LVU295
 1062 0020 13B1     		cbz	r3, .L82
 254:./fs/vfs.c    ****          file->f_op->release(file->f_inode,file);
 1063              		.loc 1 254 10 is_stmt 1 view .LVU296
 1064 0022 2146     		mov	r1, r4
 1065 0024 E06A     		ldr	r0, [r4, #44]
 1066 0026 9847     		blx	r3
 1067              	.LVL117:
 1068              	.L82:
 255:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock);
 1069              		.loc 1 255 9 view .LVU297
 1070              		.loc 1 255 26 is_stmt 0 view .LVU298
 1071 0028 E06A     		ldr	r0, [r4, #44]
 1072              		.loc 1 255 9 view .LVU299
 1073 002a 2C30     		adds	r0, r0, #44
 1074 002c FFF7FEFF 		bl	spin_unlock
 1075              	.LVL118:
 1076              	.L81:
 256:./fs/vfs.c    ****     }
 257:./fs/vfs.c    ****     spin_unlock(&file->f_slock);
 1077              		.loc 1 257 5 is_stmt 1 view .LVU300
 1078 0030 2846     		mov	r0, r5
 1079 0032 FFF7FEFF 		bl	spin_unlock
 1080              	.LVL119:
 258:./fs/vfs.c    ****     f_put(file);
 1081              		.loc 1 258 5 view .LVU301
 1082 0036 2046     		mov	r0, r4
 1083 0038 FFF7FEFF 		bl	f_put
 1084              	.LVL120:
 259:./fs/vfs.c    **** }
 1085              		.loc 1 259 1 is_stmt 0 view .LVU302
 1086 003c 38BD     		pop	{r3, r4, r5, pc}
 1087              	.LVL121:
 1088              	.L86:
 1089              	.LCFI16:
 1090              		.cfi_def_cfa_offset 0
 1091              		.cfi_restore 3
 1092              		.cfi_restore 4
 1093              		.cfi_restore 5
 1094              		.cfi_restore 14
 249:./fs/vfs.c    ****     spin_lock(&file->f_slock);
ARM GAS  /tmp/ccC84BPF.s 			page 30


 1095              		.loc 1 249 22 is_stmt 1 discriminator 1 view .LVU303
 249:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1096              		.loc 1 249 29 is_stmt 0 discriminator 2 view .LVU304
 1097 003e 4FF0FF30 		mov	r0, #-1
 1098              	.LVL122:
 1099              		.loc 1 259 1 view .LVU305
 1100 0042 7047     		bx	lr
 1101              		.cfi_endproc
 1102              	.LFE1049:
 1104              		.section	.text.select_file,"ax",%progbits
 1105              		.align	1
 1106              		.global	select_file
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1111              	select_file:
 1112              	.LVL123:
 1113              	.LFB1040:
  83:./fs/vfs.c    ****     if(path == NULL) 
 1114              		.loc 1 83 1 is_stmt 1 view -0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 128
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
  83:./fs/vfs.c    ****     if(path == NULL) 
 1118              		.loc 1 83 1 is_stmt 0 view .LVU307
 1119 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1120              	.LCFI17:
 1121              		.cfi_def_cfa_offset 24
 1122              		.cfi_offset 4, -24
 1123              		.cfi_offset 5, -20
 1124              		.cfi_offset 6, -16
 1125              		.cfi_offset 7, -12
 1126              		.cfi_offset 8, -8
 1127              		.cfi_offset 14, -4
 1128 0004 A0B0     		sub	sp, sp, #128
 1129              	.LCFI18:
 1130              		.cfi_def_cfa_offset 152
  84:./fs/vfs.c    ****     return NULL;
 1131              		.loc 1 84 5 is_stmt 1 view .LVU308
  84:./fs/vfs.c    ****     return NULL;
 1132              		.loc 1 84 7 is_stmt 0 view .LVU309
 1133 0006 0746     		mov	r7, r0
 1134 0008 38B3     		cbz	r0, .L92
 1135 000a 0E46     		mov	r6, r1
  86:./fs/vfs.c    ****     return root_dentry;
 1136              		.loc 1 86 5 is_stmt 1 view .LVU310
  86:./fs/vfs.c    ****     return root_dentry;
 1137              		.loc 1 86 12 is_stmt 0 view .LVU311
 1138 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  86:./fs/vfs.c    ****     return root_dentry;
 1139              		.loc 1 86 7 view .LVU312
 1140 000e 2F2B     		cmp	r3, #47
 1141 0010 1AD0     		beq	.L94
 1142              	.L89:
  88:./fs/vfs.c    ****     int path_numbers = get_dir_number(path);
 1143              		.loc 1 88 5 is_stmt 1 view .LVU313
  89:./fs/vfs.c    ****     char file_name[128];    
ARM GAS  /tmp/ccC84BPF.s 			page 31


 1144              		.loc 1 89 5 view .LVU314
  89:./fs/vfs.c    ****     char file_name[128];    
 1145              		.loc 1 89 24 is_stmt 0 view .LVU315
 1146 0012 3846     		mov	r0, r7
 1147              	.LVL124:
  89:./fs/vfs.c    ****     char file_name[128];    
 1148              		.loc 1 89 24 view .LVU316
 1149 0014 FFF7FEFF 		bl	get_dir_number
 1150              	.LVL125:
  89:./fs/vfs.c    ****     char file_name[128];    
 1151              		.loc 1 89 24 view .LVU317
 1152 0018 8046     		mov	r8, r0
 1153              	.LVL126:
  90:./fs/vfs.c    ****     struct dentry * esarch_dentry = root_dentry;
 1154              		.loc 1 90 5 is_stmt 1 view .LVU318
  91:./fs/vfs.c    ****     for(int i = 1 ;i <= path_numbers - offset; i++){
 1155              		.loc 1 91 5 view .LVU319
  91:./fs/vfs.c    ****     for(int i = 1 ;i <= path_numbers - offset; i++){
 1156              		.loc 1 91 21 is_stmt 0 view .LVU320
 1157 001a 114B     		ldr	r3, .L95
 1158 001c 1C68     		ldr	r4, [r3]
 1159              	.LVL127:
  92:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1160              		.loc 1 92 5 is_stmt 1 view .LVU321
 1161              	.LBB36:
  92:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1162              		.loc 1 92 9 view .LVU322
  92:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1163              		.loc 1 92 13 is_stmt 0 view .LVU323
 1164 001e 0125     		movs	r5, #1
 1165              	.LVL128:
 1166              	.L90:
  92:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1167              		.loc 1 92 22 is_stmt 1 discriminator 1 view .LVU324
  92:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1168              		.loc 1 92 38 is_stmt 0 discriminator 1 view .LVU325
 1169 0020 A8EB0603 		sub	r3, r8, r6
  92:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1170              		.loc 1 92 22 discriminator 1 view .LVU326
 1171 0024 AB42     		cmp	r3, r5
 1172 0026 14DB     		blt	.L87
  93:./fs/vfs.c    ****         esarch_dentry = find_dentry(esarch_dentry,file_name,0); 
 1173              		.loc 1 93 9 is_stmt 1 view .LVU327
 1174 0028 2A46     		mov	r2, r5
 1175 002a 6946     		mov	r1, sp
 1176 002c 3846     		mov	r0, r7
 1177 002e FFF7FEFF 		bl	get_dir_name
 1178              	.LVL129:
  94:./fs/vfs.c    ****         if(IS_ERR(esarch_dentry)){
 1179              		.loc 1 94 9 view .LVU328
  94:./fs/vfs.c    ****         if(IS_ERR(esarch_dentry)){
 1180              		.loc 1 94 25 is_stmt 0 view .LVU329
 1181 0032 0022     		movs	r2, #0
 1182 0034 6946     		mov	r1, sp
 1183 0036 2046     		mov	r0, r4
 1184 0038 FFF7FEFF 		bl	find_dentry
 1185              	.LVL130:
ARM GAS  /tmp/ccC84BPF.s 			page 32


 1186 003c 0446     		mov	r4, r0
 1187              	.LVL131:
  95:./fs/vfs.c    ****             return esarch_dentry;
 1188              		.loc 1 95 9 is_stmt 1 view .LVU330
 1189              	.LBB37:
 1190              	.LBI37:
  75:./include/linux/err.h **** {
 1191              		.loc 5 75 33 view .LVU331
 1192              	.LBB38:
 1193              		.loc 5 77 2 view .LVU332
 1194              		.loc 5 77 2 is_stmt 0 view .LVU333
 1195              	.LBE38:
 1196              	.LBE37:
  95:./fs/vfs.c    ****             return esarch_dentry;
 1197              		.loc 1 95 11 discriminator 1 view .LVU334
 1198 003e 10F5805F 		cmn	r0, #4096
 1199 0042 06D8     		bhi	.L87
  92:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1200              		.loc 1 92 49 is_stmt 1 discriminator 2 view .LVU335
 1201 0044 0135     		adds	r5, r5, #1
 1202              	.LVL132:
  92:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1203              		.loc 1 92 49 is_stmt 0 discriminator 2 view .LVU336
 1204 0046 EBE7     		b	.L90
 1205              	.LVL133:
 1206              	.L94:
  92:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1207              		.loc 1 92 49 discriminator 2 view .LVU337
 1208              	.LBE36:
  86:./fs/vfs.c    ****     return root_dentry;
 1209              		.loc 1 86 30 discriminator 1 view .LVU338
 1210 0048 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  86:./fs/vfs.c    ****     return root_dentry;
 1211              		.loc 1 86 23 discriminator 1 view .LVU339
 1212 004a 002B     		cmp	r3, #0
 1213 004c E1D1     		bne	.L89
  87:./fs/vfs.c    ****     int err;    
 1214              		.loc 1 87 5 is_stmt 1 view .LVU340
  87:./fs/vfs.c    ****     int err;    
 1215              		.loc 1 87 12 is_stmt 0 view .LVU341
 1216 004e 044B     		ldr	r3, .L95
 1217 0050 1C68     		ldr	r4, [r3]
 1218              	.LVL134:
 1219              	.L87:
 100:./fs/vfs.c    **** 
 1220              		.loc 1 100 1 view .LVU342
 1221 0052 2046     		mov	r0, r4
 1222 0054 20B0     		add	sp, sp, #128
 1223              	.LCFI19:
 1224              		.cfi_remember_state
 1225              		.cfi_def_cfa_offset 24
 1226              		@ sp needed
 1227 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1228              	.LVL135:
 1229              	.L92:
 1230              	.LCFI20:
 1231              		.cfi_restore_state
ARM GAS  /tmp/ccC84BPF.s 			page 33


  85:./fs/vfs.c    ****     if(path[0] == '/' && path[1] == '\0') 
 1232              		.loc 1 85 12 view .LVU343
 1233 005a 0446     		mov	r4, r0
 1234 005c F9E7     		b	.L87
 1235              	.L96:
 1236 005e 00BF     		.align	2
 1237              	.L95:
 1238 0060 00000000 		.word	root_dentry
 1239              		.cfi_endproc
 1240              	.LFE1040:
 1242              		.section	.rodata.create_new_dentry.str1.4,"aMS",%progbits,1
 1243              		.align	2
 1244              	.LC2:
 1245 0000 63616E20 		.ascii	"can not find parent dentry%d\012\000"
 1245      6E6F7420 
 1245      66696E64 
 1245      20706172 
 1245      656E7420 
 1246 001e 0000     		.align	2
 1247              	.LC3:
 1248 0020 70617265 		.ascii	"parent dentry : %s is not a dir\012\000"
 1248      6E742064 
 1248      656E7472 
 1248      79203A20 
 1248      25732069 
 1249              		.section	.text.create_new_dentry,"ax",%progbits
 1250              		.align	1
 1251              		.global	create_new_dentry
 1252              		.syntax unified
 1253              		.thumb
 1254              		.thumb_func
 1256              	create_new_dentry:
 1257              	.LVL136:
 1258              	.LFB1041:
 103:./fs/vfs.c    ****     struct  dentry * p_dentry;
 1259              		.loc 1 103 1 is_stmt 1 view -0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 128
 1262              		@ frame_needed = 0, uses_anonymous_args = 0
 103:./fs/vfs.c    ****     struct  dentry * p_dentry;
 1263              		.loc 1 103 1 is_stmt 0 view .LVU345
 1264 0000 70B5     		push	{r4, r5, r6, lr}
 1265              	.LCFI21:
 1266              		.cfi_def_cfa_offset 16
 1267              		.cfi_offset 4, -16
 1268              		.cfi_offset 5, -12
 1269              		.cfi_offset 6, -8
 1270              		.cfi_offset 14, -4
 1271 0002 A0B0     		sub	sp, sp, #128
 1272              	.LCFI22:
 1273              		.cfi_def_cfa_offset 144
 1274 0004 0646     		mov	r6, r0
 1275 0006 0D46     		mov	r5, r1
 104:./fs/vfs.c    **** 
 1276              		.loc 1 104 5 is_stmt 1 view .LVU346
 106:./fs/vfs.c    ****     if(IS_ERR(p_dentry)){
 1277              		.loc 1 106 5 view .LVU347
ARM GAS  /tmp/ccC84BPF.s 			page 34


 106:./fs/vfs.c    ****     if(IS_ERR(p_dentry)){
 1278              		.loc 1 106 16 is_stmt 0 view .LVU348
 1279 0008 0121     		movs	r1, #1
 1280              	.LVL137:
 106:./fs/vfs.c    ****     if(IS_ERR(p_dentry)){
 1281              		.loc 1 106 16 view .LVU349
 1282 000a FFF7FEFF 		bl	select_file
 1283              	.LVL138:
 106:./fs/vfs.c    ****     if(IS_ERR(p_dentry)){
 1284              		.loc 1 106 16 view .LVU350
 1285 000e 0446     		mov	r4, r0
 1286              	.LVL139:
 107:./fs/vfs.c    ****         pr_info("can not find parent dentry%d\n",(int)p_dentry);
 1287              		.loc 1 107 5 is_stmt 1 view .LVU351
 1288              	.LBB39:
 1289              	.LBI39:
  75:./include/linux/err.h **** {
 1290              		.loc 5 75 33 view .LVU352
 1291              	.LBB40:
 1292              		.loc 5 77 2 view .LVU353
 1293              		.loc 5 77 2 is_stmt 0 view .LVU354
 1294              	.LBE40:
 1295              	.LBE39:
 107:./fs/vfs.c    ****         pr_info("can not find parent dentry%d\n",(int)p_dentry);
 1296              		.loc 1 107 7 discriminator 1 view .LVU355
 1297 0010 10F5805F 		cmn	r0, #4096
 1298 0014 0ED8     		bhi	.L102
 111:./fs/vfs.c    ****     if((p_denrty_mode & S_IFMT) != S_IFDIR)
 1299              		.loc 1 111 5 is_stmt 1 view .LVU356
 111:./fs/vfs.c    ****     if((p_denrty_mode & S_IFMT) != S_IFDIR)
 1300              		.loc 1 111 36 is_stmt 0 view .LVU357
 1301 0016 836C     		ldr	r3, [r0, #72]
 111:./fs/vfs.c    ****     if((p_denrty_mode & S_IFMT) != S_IFDIR)
 1302              		.loc 1 111 45 view .LVU358
 1303 0018 1B88     		ldrh	r3, [r3]
 1304              	.LVL140:
 112:./fs/vfs.c    ****     {
 1305              		.loc 1 112 5 is_stmt 1 view .LVU359
 112:./fs/vfs.c    ****     {
 1306              		.loc 1 112 7 is_stmt 0 view .LVU360
 1307 001a 03F47043 		and	r3, r3, #61440
 1308 001e B3F5804F 		cmp	r3, #16384
 1309 0022 0ED0     		beq	.L100
 114:./fs/vfs.c    ****         return ERR_PTR(-ENOTDIR);
 1310              		.loc 1 114 9 is_stmt 1 view .LVU361
 1311 0024 8169     		ldr	r1, [r0, #24]
 1312 0026 0E48     		ldr	r0, .L103
 1313              	.LVL141:
 114:./fs/vfs.c    ****         return ERR_PTR(-ENOTDIR);
 1314              		.loc 1 114 9 is_stmt 0 view .LVU362
 1315 0028 FFF7FEFF 		bl	printk
 1316              	.LVL142:
 115:./fs/vfs.c    ****     } 
 1317              		.loc 1 115 9 is_stmt 1 view .LVU363
 115:./fs/vfs.c    ****     } 
 1318              		.loc 1 115 16 is_stmt 0 view .LVU364
 1319 002c 6FF01300 		mvn	r0, #19
ARM GAS  /tmp/ccC84BPF.s 			page 35


 1320              	.LVL143:
 1321              	.L97:
 122:./fs/vfs.c    **** 
 1322              		.loc 1 122 1 view .LVU365
 1323 0030 20B0     		add	sp, sp, #128
 1324              	.LCFI23:
 1325              		.cfi_remember_state
 1326              		.cfi_def_cfa_offset 16
 1327              		@ sp needed
 1328 0032 70BD     		pop	{r4, r5, r6, pc}
 1329              	.LVL144:
 1330              	.L102:
 1331              	.LCFI24:
 1332              		.cfi_restore_state
 108:./fs/vfs.c    ****         return ERR_PTR(-ENOENT);
 1333              		.loc 1 108 9 is_stmt 1 view .LVU366
 1334 0034 0146     		mov	r1, r0
 1335 0036 0B48     		ldr	r0, .L103+4
 1336              	.LVL145:
 108:./fs/vfs.c    ****         return ERR_PTR(-ENOENT);
 1337              		.loc 1 108 9 is_stmt 0 view .LVU367
 1338 0038 FFF7FEFF 		bl	printk
 1339              	.LVL146:
 109:./fs/vfs.c    ****     }
 1340              		.loc 1 109 9 is_stmt 1 view .LVU368
 109:./fs/vfs.c    ****     }
 1341              		.loc 1 109 16 is_stmt 0 view .LVU369
 1342 003c 6FF00100 		mvn	r0, #1
 1343 0040 F6E7     		b	.L97
 1344              	.LVL147:
 1345              	.L100:
 118:./fs/vfs.c    ****     get_dir_name(path,file_name,get_dir_number(path));     
 1346              		.loc 1 118 5 is_stmt 1 view .LVU370
 119:./fs/vfs.c    ****     p_dentry = create_dentry(p_dentry,file_name,i_mode);
 1347              		.loc 1 119 5 view .LVU371
 1348 0042 3046     		mov	r0, r6
 1349              	.LVL148:
 119:./fs/vfs.c    ****     p_dentry = create_dentry(p_dentry,file_name,i_mode);
 1350              		.loc 1 119 5 is_stmt 0 view .LVU372
 1351 0044 FFF7FEFF 		bl	get_dir_number
 1352              	.LVL149:
 119:./fs/vfs.c    ****     p_dentry = create_dentry(p_dentry,file_name,i_mode);
 1353              		.loc 1 119 5 view .LVU373
 1354 0048 0246     		mov	r2, r0
 119:./fs/vfs.c    ****     p_dentry = create_dentry(p_dentry,file_name,i_mode);
 1355              		.loc 1 119 5 discriminator 1 view .LVU374
 1356 004a 6946     		mov	r1, sp
 1357 004c 3046     		mov	r0, r6
 1358 004e FFF7FEFF 		bl	get_dir_name
 1359              	.LVL150:
 120:./fs/vfs.c    ****     return p_dentry;
 1360              		.loc 1 120 5 is_stmt 1 view .LVU375
 120:./fs/vfs.c    ****     return p_dentry;
 1361              		.loc 1 120 16 is_stmt 0 view .LVU376
 1362 0052 2A46     		mov	r2, r5
 1363 0054 6946     		mov	r1, sp
 1364 0056 2046     		mov	r0, r4
ARM GAS  /tmp/ccC84BPF.s 			page 36


 1365 0058 FFF7FEFF 		bl	create_dentry
 1366              	.LVL151:
 121:./fs/vfs.c    **** }
 1367              		.loc 1 121 5 is_stmt 1 view .LVU377
 121:./fs/vfs.c    **** }
 1368              		.loc 1 121 12 is_stmt 0 view .LVU378
 1369 005c E8E7     		b	.L97
 1370              	.L104:
 1371 005e 00BF     		.align	2
 1372              	.L103:
 1373 0060 20000000 		.word	.LC3
 1374 0064 00000000 		.word	.LC2
 1375              		.cfi_endproc
 1376              	.LFE1041:
 1378              		.section	.rodata.filp_open.str1.4,"aMS",%progbits,1
 1379              		.align	2
 1380              	.LC4:
 1381 0000 6F70656E 		.ascii	"open device %s\012\000"
 1381      20646576 
 1381      69636520 
 1381      25730A00 
 1382              		.align	2
 1383              	.LC5:
 1384 0010 66696C65 		.ascii	"file not found, try create: %s\012\000"
 1384      206E6F74 
 1384      20666F75 
 1384      6E642C20 
 1384      74727920 
 1385              		.align	2
 1386              	.LC6:
 1387 0030 63616E20 		.ascii	"can not create file: %s\012\000"
 1387      6E6F7420 
 1387      63726561 
 1387      74652066 
 1387      696C653A 
 1388              		.section	.text.filp_open,"ax",%progbits
 1389              		.align	1
 1390              		.global	filp_open
 1391              		.syntax unified
 1392              		.thumb
 1393              		.thumb_func
 1395              	filp_open:
 1396              	.LVL152:
 1397              	.LFB1044:
 140:./fs/vfs.c    ****     pr_info("open device %s\n",path);
 1398              		.loc 1 140 1 is_stmt 1 view -0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 0
 1401              		@ frame_needed = 0, uses_anonymous_args = 0
 140:./fs/vfs.c    ****     pr_info("open device %s\n",path);
 1402              		.loc 1 140 1 is_stmt 0 view .LVU380
 1403 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1404              	.LCFI25:
 1405              		.cfi_def_cfa_offset 24
 1406              		.cfi_offset 3, -24
 1407              		.cfi_offset 4, -20
 1408              		.cfi_offset 5, -16
ARM GAS  /tmp/ccC84BPF.s 			page 37


 1409              		.cfi_offset 6, -12
 1410              		.cfi_offset 7, -8
 1411              		.cfi_offset 14, -4
 1412 0002 0546     		mov	r5, r0
 1413 0004 0F46     		mov	r7, r1
 1414 0006 1646     		mov	r6, r2
 141:./fs/vfs.c    ****     struct dentry*file_dentry = select_file(path,0);
 1415              		.loc 1 141 5 is_stmt 1 view .LVU381
 1416 0008 0146     		mov	r1, r0
 1417              	.LVL153:
 141:./fs/vfs.c    ****     struct dentry*file_dentry = select_file(path,0);
 1418              		.loc 1 141 5 is_stmt 0 view .LVU382
 1419 000a 2A48     		ldr	r0, .L114
 1420              	.LVL154:
 141:./fs/vfs.c    ****     struct dentry*file_dentry = select_file(path,0);
 1421              		.loc 1 141 5 view .LVU383
 1422 000c FFF7FEFF 		bl	printk
 1423              	.LVL155:
 142:./fs/vfs.c    ****     if(IS_ERR(file_dentry))
 1424              		.loc 1 142 5 is_stmt 1 view .LVU384
 142:./fs/vfs.c    ****     if(IS_ERR(file_dentry))
 1425              		.loc 1 142 33 is_stmt 0 view .LVU385
 1426 0010 0021     		movs	r1, #0
 1427 0012 2846     		mov	r0, r5
 1428 0014 FFF7FEFF 		bl	select_file
 1429              	.LVL156:
 1430 0018 0446     		mov	r4, r0
 1431              	.LVL157:
 143:./fs/vfs.c    ****     {
 1432              		.loc 1 143 5 is_stmt 1 view .LVU386
 1433              	.LBB41:
 1434              	.LBI41:
  75:./include/linux/err.h **** {
 1435              		.loc 5 75 33 view .LVU387
 1436              	.LBB42:
 1437              		.loc 5 77 2 view .LVU388
 1438              		.loc 5 77 2 is_stmt 0 view .LVU389
 1439              	.LBE42:
 1440              	.LBE41:
 143:./fs/vfs.c    ****     {
 1441              		.loc 1 143 7 discriminator 1 view .LVU390
 1442 001a 10F5805F 		cmn	r0, #4096
 1443 001e 29D8     		bhi	.L112
 1444              	.L106:
 158:./fs/vfs.c    ****     if(IS_ERR(file))
 1445              		.loc 1 158 5 is_stmt 1 view .LVU391
 158:./fs/vfs.c    ****     if(IS_ERR(file))
 1446              		.loc 1 158 25 is_stmt 0 view .LVU392
 1447 0020 2046     		mov	r0, r4
 158:./fs/vfs.c    ****     if(IS_ERR(file))
 1448              		.loc 1 158 25 view .LVU393
 1449 0022 FFF7FEFF 		bl	f_get
 1450              	.LVL158:
 158:./fs/vfs.c    ****     if(IS_ERR(file))
 1451              		.loc 1 158 25 view .LVU394
 1452 0026 0446     		mov	r4, r0
 1453              	.LVL159:
ARM GAS  /tmp/ccC84BPF.s 			page 38


 159:./fs/vfs.c    ****         return ERR_PTR(-ENOMEM);
 1454              		.loc 1 159 5 is_stmt 1 view .LVU395
 1455              	.LBB43:
 1456              	.LBI43:
  75:./include/linux/err.h **** {
 1457              		.loc 5 75 33 view .LVU396
 1458              	.LBB44:
 1459              		.loc 5 77 2 view .LVU397
 1460              		.loc 5 77 9 is_stmt 0 view .LVU398
 1461 0028 10F5805F 		cmn	r0, #4096
 1462 002c 94BF     		ite	ls
 1463 002e 0025     		movls	r5, #0
 1464              	.LVL160:
 1465              		.loc 5 77 9 view .LVU399
 1466 0030 0125     		movhi	r5, #1
 1467              	.LVL161:
 1468              		.loc 5 77 9 view .LVU400
 1469              	.LBE44:
 1470              	.LBE43:
 159:./fs/vfs.c    ****         return ERR_PTR(-ENOMEM);
 1471              		.loc 1 159 7 discriminator 1 view .LVU401
 1472 0032 002D     		cmp	r5, #0
 1473 0034 3BD1     		bne	.L110
 161:./fs/vfs.c    ****     file->f_mode = mode;
 1474              		.loc 1 161 5 is_stmt 1 view .LVU402
 161:./fs/vfs.c    ****     file->f_mode = mode;
 1475              		.loc 1 161 19 is_stmt 0 view .LVU403
 1476 0036 0763     		str	r7, [r0, #48]
 162:./fs/vfs.c    ****     int flag = 0;
 1477              		.loc 1 162 5 is_stmt 1 view .LVU404
 162:./fs/vfs.c    ****     int flag = 0;
 1478              		.loc 1 162 18 is_stmt 0 view .LVU405
 1479 0038 0662     		str	r6, [r0, #32]
 163:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1480              		.loc 1 163 5 is_stmt 1 view .LVU406
 1481              	.LVL162:
 164:./fs/vfs.c    ****     if(file->f_op != NULL){
 1482              		.loc 1 164 5 view .LVU407
 1483 003a 00F15C06 		add	r6, r0, #92
 1484              	.LVL163:
 164:./fs/vfs.c    ****     if(file->f_op != NULL){
 1485              		.loc 1 164 5 is_stmt 0 view .LVU408
 1486 003e 3046     		mov	r0, r6
 1487              	.LVL164:
 164:./fs/vfs.c    ****     if(file->f_op != NULL){
 1488              		.loc 1 164 5 view .LVU409
 1489 0040 FFF7FEFF 		bl	spin_lock
 1490              	.LVL165:
 165:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 1491              		.loc 1 165 5 is_stmt 1 view .LVU410
 165:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 1492              		.loc 1 165 12 is_stmt 0 view .LVU411
 1493 0044 636A     		ldr	r3, [r4, #36]
 165:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 1494              		.loc 1 165 7 view .LVU412
 1495 0046 73B1     		cbz	r3, .L108
 166:./fs/vfs.c    ****         if(file->f_op->open != NULL)
ARM GAS  /tmp/ccC84BPF.s 			page 39


 1496              		.loc 1 166 9 is_stmt 1 view .LVU413
 166:./fs/vfs.c    ****         if(file->f_op->open != NULL)
 1497              		.loc 1 166 24 is_stmt 0 view .LVU414
 1498 0048 E06A     		ldr	r0, [r4, #44]
 166:./fs/vfs.c    ****         if(file->f_op->open != NULL)
 1499              		.loc 1 166 9 view .LVU415
 1500 004a 2C30     		adds	r0, r0, #44
 1501 004c FFF7FEFF 		bl	spin_lock
 1502              	.LVL166:
 167:./fs/vfs.c    ****         flag = file->f_op->open(file->f_inode,file);
 1503              		.loc 1 167 9 is_stmt 1 view .LVU416
 167:./fs/vfs.c    ****         flag = file->f_op->open(file->f_inode,file);
 1504              		.loc 1 167 16 is_stmt 0 view .LVU417
 1505 0050 636A     		ldr	r3, [r4, #36]
 167:./fs/vfs.c    ****         flag = file->f_op->open(file->f_inode,file);
 1506              		.loc 1 167 22 view .LVU418
 1507 0052 5B6B     		ldr	r3, [r3, #52]
 167:./fs/vfs.c    ****         flag = file->f_op->open(file->f_inode,file);
 1508              		.loc 1 167 11 view .LVU419
 1509 0054 1BB1     		cbz	r3, .L109
 168:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock);
 1510              		.loc 1 168 9 is_stmt 1 view .LVU420
 168:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock);
 1511              		.loc 1 168 16 is_stmt 0 view .LVU421
 1512 0056 2146     		mov	r1, r4
 1513 0058 E06A     		ldr	r0, [r4, #44]
 1514 005a 9847     		blx	r3
 1515              	.LVL167:
 1516 005c 0546     		mov	r5, r0
 1517              	.LVL168:
 1518              	.L109:
 169:./fs/vfs.c    ****     }
 1519              		.loc 1 169 9 is_stmt 1 view .LVU422
 169:./fs/vfs.c    ****     }
 1520              		.loc 1 169 26 is_stmt 0 view .LVU423
 1521 005e E06A     		ldr	r0, [r4, #44]
 169:./fs/vfs.c    ****     }
 1522              		.loc 1 169 9 view .LVU424
 1523 0060 2C30     		adds	r0, r0, #44
 1524 0062 FFF7FEFF 		bl	spin_unlock
 1525              	.LVL169:
 1526              	.L108:
 171:./fs/vfs.c    ****     if(flag < 0){
 1527              		.loc 1 171 5 is_stmt 1 view .LVU425
 1528 0066 3046     		mov	r0, r6
 1529 0068 FFF7FEFF 		bl	spin_unlock
 1530              	.LVL170:
 172:./fs/vfs.c    ****         f_put(file);
 1531              		.loc 1 172 5 view .LVU426
 172:./fs/vfs.c    ****         f_put(file);
 1532              		.loc 1 172 7 is_stmt 0 view .LVU427
 1533 006c 002D     		cmp	r5, #0
 1534 006e 19DB     		blt	.L113
 1535              	.LVL171:
 1536              	.L105:
 181:./fs/vfs.c    **** EXPORT_SYMBOL(filp_open);
 1537              		.loc 1 181 1 view .LVU428
ARM GAS  /tmp/ccC84BPF.s 			page 40


 1538 0070 2046     		mov	r0, r4
 1539 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1540              	.LVL172:
 1541              	.L112:
 145:./fs/vfs.c    ****         {
 1542              		.loc 1 145 9 is_stmt 1 view .LVU429
 145:./fs/vfs.c    ****         {
 1543              		.loc 1 145 12 is_stmt 0 discriminator 1 view .LVU430
 1544 0074 10F1020F 		cmn	r0, #2
 1545 0078 FAD1     		bne	.L105
 145:./fs/vfs.c    ****         {
 1546              		.loc 1 145 45 discriminator 1 view .LVU431
 1547 007a 17F0400F 		tst	r7, #64
 1548 007e F7D0     		beq	.L105
 147:./fs/vfs.c    ****             file_dentry = create_new_dentry((char *)path, S_IFREG | mode);
 1549              		.loc 1 147 13 is_stmt 1 view .LVU432
 1550 0080 2946     		mov	r1, r5
 1551 0082 0D48     		ldr	r0, .L114+4
 1552              	.LVL173:
 147:./fs/vfs.c    ****             file_dentry = create_new_dentry((char *)path, S_IFREG | mode);
 1553              		.loc 1 147 13 is_stmt 0 view .LVU433
 1554 0084 FFF7FEFF 		bl	printk
 1555              	.LVL174:
 148:./fs/vfs.c    ****             if (IS_ERR(file_dentry)){
 1556              		.loc 1 148 13 is_stmt 1 view .LVU434
 148:./fs/vfs.c    ****             if (IS_ERR(file_dentry)){
 1557              		.loc 1 148 27 is_stmt 0 view .LVU435
 1558 0088 46F40041 		orr	r1, r6, #32768
 1559 008c 2846     		mov	r0, r5
 1560 008e FFF7FEFF 		bl	create_new_dentry
 1561              	.LVL175:
 1562 0092 0446     		mov	r4, r0
 1563              	.LVL176:
 149:./fs/vfs.c    ****                 pr_info("can not create file: %s\n", path);
 1564              		.loc 1 149 13 is_stmt 1 view .LVU436
 1565              	.LBB45:
 1566              	.LBI45:
  75:./include/linux/err.h **** {
 1567              		.loc 5 75 33 view .LVU437
 1568              	.LBB46:
 1569              		.loc 5 77 2 view .LVU438
 1570              		.loc 5 77 2 is_stmt 0 view .LVU439
 1571              	.LBE46:
 1572              	.LBE45:
 149:./fs/vfs.c    ****                 pr_info("can not create file: %s\n", path);
 1573              		.loc 1 149 16 discriminator 1 view .LVU440
 1574 0094 10F5805F 		cmn	r0, #4096
 1575 0098 C2D9     		bls	.L106
 150:./fs/vfs.c    ****                 return (struct file *)file_dentry;
 1576              		.loc 1 150 17 is_stmt 1 view .LVU441
 1577 009a 2946     		mov	r1, r5
 1578 009c 0748     		ldr	r0, .L114+8
 1579              	.LVL177:
 150:./fs/vfs.c    ****                 return (struct file *)file_dentry;
 1580              		.loc 1 150 17 is_stmt 0 view .LVU442
 1581 009e FFF7FEFF 		bl	printk
 1582              	.LVL178:
ARM GAS  /tmp/ccC84BPF.s 			page 41


 151:./fs/vfs.c    ****             }
 1583              		.loc 1 151 17 is_stmt 1 view .LVU443
 151:./fs/vfs.c    ****             }
 1584              		.loc 1 151 24 is_stmt 0 view .LVU444
 1585 00a2 E5E7     		b	.L105
 1586              	.LVL179:
 1587              	.L113:
 173:./fs/vfs.c    ****         return NULL;
 1588              		.loc 1 173 9 is_stmt 1 view .LVU445
 1589 00a4 2046     		mov	r0, r4
 1590 00a6 FFF7FEFF 		bl	f_put
 1591              	.LVL180:
 174:./fs/vfs.c    ****     }
 1592              		.loc 1 174 9 view .LVU446
 174:./fs/vfs.c    ****     }
 1593              		.loc 1 174 16 is_stmt 0 view .LVU447
 1594 00aa 0024     		movs	r4, #0
 1595              	.LVL181:
 174:./fs/vfs.c    ****     }
 1596              		.loc 1 174 16 view .LVU448
 1597 00ac E0E7     		b	.L105
 1598              	.LVL182:
 1599              	.L110:
 160:./fs/vfs.c    ****     file->f_flags = flags;
 1600              		.loc 1 160 16 view .LVU449
 1601 00ae 6FF00B04 		mvn	r4, #11
 1602 00b2 DDE7     		b	.L105
 1603              	.L115:
 1604              		.align	2
 1605              	.L114:
 1606 00b4 00000000 		.word	.LC4
 1607 00b8 10000000 		.word	.LC5
 1608 00bc 30000000 		.word	.LC6
 1609              		.cfi_endproc
 1610              	.LFE1044:
 1612              		.section	.text.blkdev_get_by_path,"ax",%progbits
 1613              		.align	1
 1614              		.global	blkdev_get_by_path
 1615              		.syntax unified
 1616              		.thumb
 1617              		.thumb_func
 1619              	blkdev_get_by_path:
 1620              	.LVL183:
 1621              	.LFB1042:
 128:./fs/vfs.c    ****     struct dentry* dentry = select_file(path,0);
 1622              		.loc 1 128 1 is_stmt 1 view -0
 1623              		.cfi_startproc
 1624              		@ args = 0, pretend = 0, frame = 0
 1625              		@ frame_needed = 0, uses_anonymous_args = 0
 128:./fs/vfs.c    ****     struct dentry* dentry = select_file(path,0);
 1626              		.loc 1 128 1 is_stmt 0 view .LVU451
 1627 0000 08B5     		push	{r3, lr}
 1628              	.LCFI26:
 1629              		.cfi_def_cfa_offset 8
 1630              		.cfi_offset 3, -8
 1631              		.cfi_offset 14, -4
 129:./fs/vfs.c    ****     return devfs_get_blk_dev(dentry->d_inode);
ARM GAS  /tmp/ccC84BPF.s 			page 42


 1632              		.loc 1 129 5 is_stmt 1 view .LVU452
 129:./fs/vfs.c    ****     return devfs_get_blk_dev(dentry->d_inode);
 1633              		.loc 1 129 29 is_stmt 0 view .LVU453
 1634 0002 0021     		movs	r1, #0
 1635              	.LVL184:
 129:./fs/vfs.c    ****     return devfs_get_blk_dev(dentry->d_inode);
 1636              		.loc 1 129 29 view .LVU454
 1637 0004 FFF7FEFF 		bl	select_file
 1638              	.LVL185:
 130:./fs/vfs.c    **** }
 1639              		.loc 1 130 5 is_stmt 1 view .LVU455
 130:./fs/vfs.c    **** }
 1640              		.loc 1 130 12 is_stmt 0 view .LVU456
 1641 0008 806C     		ldr	r0, [r0, #72]
 1642              	.LVL186:
 130:./fs/vfs.c    **** }
 1643              		.loc 1 130 12 view .LVU457
 1644 000a FFF7FEFF 		bl	devfs_get_blk_dev
 1645              	.LVL187:
 131:./fs/vfs.c    **** 
 1646              		.loc 1 131 1 view .LVU458
 1647 000e 08BD     		pop	{r3, pc}
 1648              		.cfi_endproc
 1649              	.LFE1042:
 1651              		.section	.text.mkdir,"ax",%progbits
 1652              		.align	1
 1653              		.global	mkdir
 1654              		.syntax unified
 1655              		.thumb
 1656              		.thumb_func
 1658              	mkdir:
 1659              	.LVL188:
 1660              	.LFB1043:
 134:./fs/vfs.c    ****    if(mode == NULL) mode = 0755;
 1661              		.loc 1 134 46 is_stmt 1 view -0
 1662              		.cfi_startproc
 1663              		@ args = 0, pretend = 0, frame = 0
 1664              		@ frame_needed = 0, uses_anonymous_args = 0
 134:./fs/vfs.c    ****    if(mode == NULL) mode = 0755;
 1665              		.loc 1 134 46 is_stmt 0 view .LVU460
 1666 0000 08B5     		push	{r3, lr}
 1667              	.LCFI27:
 1668              		.cfi_def_cfa_offset 8
 1669              		.cfi_offset 3, -8
 1670              		.cfi_offset 14, -4
 135:./fs/vfs.c    ****    return create_new_dentry(path, S_IFDIR | (mode & 0777));
 1671              		.loc 1 135 4 is_stmt 1 view .LVU461
 135:./fs/vfs.c    ****    return create_new_dentry(path, S_IFDIR | (mode & 0777));
 1672              		.loc 1 135 6 is_stmt 0 view .LVU462
 1673 0002 0B46     		mov	r3, r1
 1674 0004 09B9     		cbnz	r1, .L119
 135:./fs/vfs.c    ****    return create_new_dentry(path, S_IFDIR | (mode & 0777));
 1675              		.loc 1 135 26 discriminator 1 view .LVU463
 1676 0006 40F2ED13 		movw	r3, #493
 1677              	.L119:
 1678              	.LVL189:
 136:./fs/vfs.c    **** }
ARM GAS  /tmp/ccC84BPF.s 			page 43


 1679              		.loc 1 136 4 is_stmt 1 view .LVU464
 136:./fs/vfs.c    **** }
 1680              		.loc 1 136 11 is_stmt 0 view .LVU465
 1681 000a C3F30801 		ubfx	r1, r3, #0, #9
 1682 000e 41F48041 		orr	r1, r1, #16384
 1683 0012 FFF7FEFF 		bl	create_new_dentry
 1684              	.LVL190:
 137:./fs/vfs.c    **** 
 1685              		.loc 1 137 1 view .LVU466
 1686 0016 08BD     		pop	{r3, pc}
 1687              		.cfi_endproc
 1688              	.LFE1043:
 1690              		.section	.rodata.root_fs_init.str1.4,"aMS",%progbits,1
 1691              		.align	2
 1692              	.LC7:
 1693 0000 696E6974 		.ascii	"initramfs\000"
 1693      72616D66 
 1693      7300
 1694 000a 0000     		.align	2
 1695              	.LC8:
 1696 000c 63616E20 		.ascii	"can not get root fs: devfs\012\000"
 1696      6E6F7420 
 1696      67657420 
 1696      726F6F74 
 1696      2066733A 
 1697              		.align	2
 1698              	.LC9:
 1699 0028 2F646576 		.ascii	"/dev\000"
 1699      00
 1700 002d 000000   		.align	2
 1701              	.LC10:
 1702 0030 2F746D70 		.ascii	"/tmp\000"
 1702      00
 1703 0035 000000   		.align	2
 1704              	.LC11:
 1705 0038 2F6D6E74 		.ascii	"/mnt\000"
 1705      00
 1706 003d 000000   		.align	2
 1707              	.LC12:
 1708 0040 2F746D70 		.ascii	"/tmp/pipe\000"
 1708      2F706970 
 1708      6500
 1709 004a 0000     		.align	2
 1710              	.LC13:
 1711 004c 64657666 		.ascii	"devfs\000"
 1711      7300
 1712 0052 0000     		.align	2
 1713              	.LC14:
 1714 0054 70697065 		.ascii	"pipefs\000"
 1714      667300
 1715              		.section	.text.root_fs_init,"ax",%progbits
 1716              		.align	1
 1717              		.syntax unified
 1718              		.thumb
 1719              		.thumb_func
 1721              	root_fs_init:
 1722              	.LFB1050:
ARM GAS  /tmp/ccC84BPF.s 			page 44


 260:./fs/vfs.c    **** EXPORT_SYMBOL(file_close);
 261:./fs/vfs.c    **** 
 262:./fs/vfs.c    **** 
 263:./fs/vfs.c    **** static int root_fs_init()
 264:./fs/vfs.c    **** {
 1723              		.loc 1 264 1 is_stmt 1 view -0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 0
 1726              		@ frame_needed = 0, uses_anonymous_args = 0
 1727 0000 70B5     		push	{r4, r5, r6, lr}
 1728              	.LCFI28:
 1729              		.cfi_def_cfa_offset 16
 1730              		.cfi_offset 4, -16
 1731              		.cfi_offset 5, -12
 1732              		.cfi_offset 6, -8
 1733              		.cfi_offset 14, -4
 1734 0002 82B0     		sub	sp, sp, #8
 1735              	.LCFI29:
 1736              		.cfi_def_cfa_offset 24
 265:./fs/vfs.c    ****     int err;
 1737              		.loc 1 265 5 view .LVU468
 266:./fs/vfs.c    ****     err = mount_root_fs(CONFIG_ROOT_FILE_SYSTEM_MOUNT);
 1738              		.loc 1 266 5 view .LVU469
 1739              		.loc 1 266 11 is_stmt 0 view .LVU470
 1740 0004 1648     		ldr	r0, .L126
 1741 0006 FFF7FEFF 		bl	mount_root_fs
 1742              	.LVL191:
 267:./fs/vfs.c    ****     if(err < 0){
 1743              		.loc 1 267 5 is_stmt 1 view .LVU471
 1744              		.loc 1 267 7 is_stmt 0 view .LVU472
 1745 000a 0028     		cmp	r0, #0
 1746 000c 22DB     		blt	.L125
 268:./fs/vfs.c    ****         pr_info("can not get root fs: devfs\n");
 269:./fs/vfs.c    ****         return -1;
 270:./fs/vfs.c    ****     }
 271:./fs/vfs.c    ****     mkdir("/dev",NULL);
 1747              		.loc 1 271 5 is_stmt 1 view .LVU473
 1748 000e 154E     		ldr	r6, .L126+4
 1749 0010 0021     		movs	r1, #0
 1750 0012 3046     		mov	r0, r6
 1751              	.LVL192:
 1752              		.loc 1 271 5 is_stmt 0 view .LVU474
 1753 0014 FFF7FEFF 		bl	mkdir
 1754              	.LVL193:
 272:./fs/vfs.c    ****     mkdir("/tmp",NULL);
 1755              		.loc 1 272 5 is_stmt 1 view .LVU475
 1756 0018 0021     		movs	r1, #0
 1757 001a 1348     		ldr	r0, .L126+8
 1758 001c FFF7FEFF 		bl	mkdir
 1759              	.LVL194:
 273:./fs/vfs.c    ****     mkdir("/mnt",NULL);
 1760              		.loc 1 273 5 view .LVU476
 1761 0020 0021     		movs	r1, #0
 1762 0022 1248     		ldr	r0, .L126+12
 1763 0024 FFF7FEFF 		bl	mkdir
 1764              	.LVL195:
 274:./fs/vfs.c    ****     mkdir("/tmp/pipe",NULL);
ARM GAS  /tmp/ccC84BPF.s 			page 45


 1765              		.loc 1 274 5 view .LVU477
 1766 0028 114D     		ldr	r5, .L126+16
 1767 002a 0021     		movs	r1, #0
 1768 002c 2846     		mov	r0, r5
 1769 002e FFF7FEFF 		bl	mkdir
 1770              	.LVL196:
 275:./fs/vfs.c    ****     sys_mount(NULL,"/dev","devfs",0,NULL);
 1771              		.loc 1 275 5 view .LVU478
 1772 0032 0024     		movs	r4, #0
 1773 0034 0094     		str	r4, [sp]
 1774 0036 2346     		mov	r3, r4
 1775 0038 0E4A     		ldr	r2, .L126+20
 1776 003a 3146     		mov	r1, r6
 1777 003c 2046     		mov	r0, r4
 1778 003e FFF7FEFF 		bl	sys_mount
 1779              	.LVL197:
 276:./fs/vfs.c    ****     sys_mount(NULL,"/tmp/pipe","pipefs",0,NULL);
 1780              		.loc 1 276 5 view .LVU479
 1781 0042 0094     		str	r4, [sp]
 1782 0044 2346     		mov	r3, r4
 1783 0046 0C4A     		ldr	r2, .L126+24
 1784 0048 2946     		mov	r1, r5
 1785 004a 2046     		mov	r0, r4
 1786 004c FFF7FEFF 		bl	sys_mount
 1787              	.LVL198:
 1788              	.L122:
 277:./fs/vfs.c    **** }
 1789              		.loc 1 277 1 is_stmt 0 view .LVU480
 1790 0050 02B0     		add	sp, sp, #8
 1791              	.LCFI30:
 1792              		.cfi_remember_state
 1793              		.cfi_def_cfa_offset 16
 1794              		@ sp needed
 1795 0052 70BD     		pop	{r4, r5, r6, pc}
 1796              	.LVL199:
 1797              	.L125:
 1798              	.LCFI31:
 1799              		.cfi_restore_state
 268:./fs/vfs.c    ****         return -1;
 1800              		.loc 1 268 9 is_stmt 1 view .LVU481
 1801 0054 0948     		ldr	r0, .L126+28
 1802              	.LVL200:
 268:./fs/vfs.c    ****         return -1;
 1803              		.loc 1 268 9 is_stmt 0 view .LVU482
 1804 0056 FFF7FEFF 		bl	printk
 1805              	.LVL201:
 269:./fs/vfs.c    ****     }
 1806              		.loc 1 269 9 is_stmt 1 view .LVU483
 269:./fs/vfs.c    ****     }
 1807              		.loc 1 269 16 is_stmt 0 discriminator 1 view .LVU484
 1808 005a 4FF0FF30 		mov	r0, #-1
 269:./fs/vfs.c    ****     }
 1809              		.loc 1 269 16 view .LVU485
 1810 005e F7E7     		b	.L122
 1811              	.L127:
 1812              		.align	2
 1813              	.L126:
ARM GAS  /tmp/ccC84BPF.s 			page 46


 1814 0060 00000000 		.word	.LC7
 1815 0064 28000000 		.word	.LC9
 1816 0068 30000000 		.word	.LC10
 1817 006c 38000000 		.word	.LC11
 1818 0070 40000000 		.word	.LC12
 1819 0074 4C000000 		.word	.LC13
 1820 0078 54000000 		.word	.LC14
 1821 007c 0C000000 		.word	.LC8
 1822              		.cfi_endproc
 1823              	.LFE1050:
 1825              		.section	.rodata.moun_spiflash.str1.4,"aMS",%progbits,1
 1826              		.align	2
 1827              	.LC15:
 1828 0000 2F6D6E74 		.ascii	"/mnt/storage\000"
 1828      2F73746F 
 1828      72616765 
 1828      00
 1829 000d 000000   		.align	2
 1830              	.LC16:
 1831 0010 65787432 		.ascii	"ext2\000"
 1831      00
 1832 0015 000000   		.align	2
 1833              	.LC17:
 1834 0018 2F646576 		.ascii	"/dev/sda0\000"
 1834      2F736461 
 1834      3000
 1835              		.section	.text.moun_spiflash,"ax",%progbits
 1836              		.align	1
 1837              		.syntax unified
 1838              		.thumb
 1839              		.thumb_func
 1841              	moun_spiflash:
 1842              	.LFB1051:
 278:./fs/vfs.c    **** rootfs_initcall(root_fs_init);
 279:./fs/vfs.c    **** 
 280:./fs/vfs.c    **** static int moun_spiflash()
 281:./fs/vfs.c    **** {
 1843              		.loc 1 281 1 is_stmt 1 view -0
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 0
 1846              		@ frame_needed = 0, uses_anonymous_args = 0
 1847 0000 10B5     		push	{r4, lr}
 1848              	.LCFI32:
 1849              		.cfi_def_cfa_offset 8
 1850              		.cfi_offset 4, -8
 1851              		.cfi_offset 14, -4
 1852 0002 82B0     		sub	sp, sp, #8
 1853              	.LCFI33:
 1854              		.cfi_def_cfa_offset 16
 282:./fs/vfs.c    ****     mkdir("/mnt/storage",NULL);
 1855              		.loc 1 282 5 view .LVU487
 1856 0004 074C     		ldr	r4, .L130
 1857 0006 0021     		movs	r1, #0
 1858 0008 2046     		mov	r0, r4
 1859 000a FFF7FEFF 		bl	mkdir
 1860              	.LVL202:
 283:./fs/vfs.c    ****     sys_mount(NULL,"/mnt/storage","ext2",0,"/dev/sda0");
ARM GAS  /tmp/ccC84BPF.s 			page 47


 1861              		.loc 1 283 5 view .LVU488
 1862 000e 064B     		ldr	r3, .L130+4
 1863 0010 0093     		str	r3, [sp]
 1864 0012 0023     		movs	r3, #0
 1865 0014 054A     		ldr	r2, .L130+8
 1866 0016 2146     		mov	r1, r4
 1867 0018 1846     		mov	r0, r3
 1868 001a FFF7FEFF 		bl	sys_mount
 1869              	.LVL203:
 284:./fs/vfs.c    **** }
 1870              		.loc 1 284 1 is_stmt 0 view .LVU489
 1871 001e 02B0     		add	sp, sp, #8
 1872              	.LCFI34:
 1873              		.cfi_def_cfa_offset 8
 1874              		@ sp needed
 1875 0020 10BD     		pop	{r4, pc}
 1876              	.L131:
 1877 0022 00BF     		.align	2
 1878              	.L130:
 1879 0024 00000000 		.word	.LC15
 1880 0028 18000000 		.word	.LC17
 1881 002c 10000000 		.word	.LC16
 1882              		.cfi_endproc
 1883              	.LFE1051:
 1885              		.section	.device_initcall_sync,"aw"
 1886              		.align	2
 1889              	_initcall_moun_spiflash:
 1890 0000 00000000 		.word	moun_spiflash
 1891              		.section	.rootfsinitcall,"aw"
 1892              		.align	2
 1895              	_initcall_root_fs_init:
 1896 0000 00000000 		.word	root_fs_init
 1897              		.section	.rodata.str1.4,"aMS",%progbits,1
 1898              		.align	2
 1899              	.LC18:
 1900 0000 66696C65 		.ascii	"file_close\000"
 1900      5F636C6F 
 1900      736500
 1901 000b 00       		.align	2
 1902              	.LC19:
 1903 000c 00       		.ascii	"\000"
 1904              		.section	.export_table,"aw"
 1905              		.align	2
 1908              	file_close_export_struct:
 1909 0000 00000000 		.word	.LC18
 1910 0004 0C000000 		.word	.LC19
 1911 0008 00000000 		.word	file_close
 1912              		.section	.rodata.str1.4
 1913 000d 000000   		.align	2
 1914              	.LC20:
 1915 0010 7666735F 		.ascii	"vfs_ioctl\000"
 1915      696F6374 
 1915      6C00
 1916              		.section	.export_table
 1917              		.align	2
 1920              	vfs_ioctl_export_struct:
 1921 000c 10000000 		.word	.LC20
ARM GAS  /tmp/ccC84BPF.s 			page 48


 1922 0010 0C000000 		.word	.LC19
 1923 0014 00000000 		.word	vfs_ioctl
 1924              		.section	.rodata.str1.4
 1925 001a 0000     		.align	2
 1926              	.LC21:
 1927 001c 6B65726E 		.ascii	"kernel_write\000"
 1927      656C5F77 
 1927      72697465 
 1927      00
 1928              		.section	.export_table
 1929              		.align	2
 1932              	kernel_write_export_struct:
 1933 0018 1C000000 		.word	.LC21
 1934 001c 0C000000 		.word	.LC19
 1935 0020 00000000 		.word	kernel_write
 1936              		.section	.rodata.str1.4
 1937 0029 000000   		.align	2
 1938              	.LC22:
 1939 002c 6B65726E 		.ascii	"kernel_read\000"
 1939      656C5F72 
 1939      65616400 
 1940              		.section	.export_table
 1941              		.align	2
 1944              	kernel_read_export_struct:
 1945 0024 2C000000 		.word	.LC22
 1946 0028 0C000000 		.word	.LC19
 1947 002c 00000000 		.word	kernel_read
 1948              		.section	.rodata.str1.4
 1949              		.align	2
 1950              	.LC23:
 1951 0038 66696C70 		.ascii	"filp_open\000"
 1951      5F6F7065 
 1951      6E00
 1952              		.section	.export_table
 1953              		.align	2
 1956              	filp_open_export_struct:
 1957 0030 38000000 		.word	.LC23
 1958 0034 0C000000 		.word	.LC19
 1959 0038 00000000 		.word	filp_open
 1960              		.global	root_dentry
 1961              		.section	.bss.root_dentry,"aw",%nobits
 1962              		.align	2
 1965              	root_dentry:
 1966 0000 00000000 		.space	4
 1967              		.text
 1968              	.Letext0:
 1969              		.file 6 "./include/asm-generic/int-l64.h"
 1970              		.file 7 "./include/asm-generic/posix_types.h"
 1971              		.file 8 "./include/uapi/linux/types.h"
 1972              		.file 9 "./include/linux/types.h"
 1973              		.file 10 "./include/linux/init.h"
 1974              		.file 11 "./include/linux/export.h"
 1975              		.file 12 "./include/linux/errseq.h"
 1976              		.file 13 "./include/linux/time64.h"
 1977              		.file 14 "./arch/arm_m/include/asm/sched.h"
 1978              		.file 15 "./include/linux/sched.h"
 1979              		.file 16 "./include/linux/spinlock_types_raw.h"
ARM GAS  /tmp/ccC84BPF.s 			page 49


 1980              		.file 17 "./include/linux/spinlock_types.h"
 1981              		.file 18 "./include/linux/rbtree_types.h"
 1982              		.file 19 "./include/linux/uidgid_types.h"
 1983              		.file 20 "./include/linux/projid.h"
 1984              		.file 21 "./include/linux/fs.h"
 1985              		.file 22 "./include/linux/mnt_idmapping.h"
 1986              		.file 23 "./include/linux/mutex.h"
 1987              		.file 24 "./include/linux/uio.h"
 1988              		.file 25 "./include/linux/migrate_mode.h"
 1989              		.file 26 "./include/linux/wait.h"
 1990              		.file 27 "./include/linux/xarray.h"
 1991              		.file 28 "./include/linux/rw_hint.h"
 1992              		.file 29 "./include/linux/reciprocal_div.h"
 1993              		.file 30 "./include/linux/slab.h"
 1994              		.file 31 "./include/linux/mm_type.h"
 1995              		.file 32 "./include/linux/bvec.h"
 1996              		.file 33 "./include/linux/blk_types.h"
 1997              		.file 34 "./include/linux/blkdev.h"
 1998              		.file 35 "./include/linux/bio.h"
 1999              		.file 36 "./include/linux/mempool_super_haper.h"
 2000              		.file 37 "./include/linux/mempool.h"
 2001              		.file 38 "./include/linux/lockdep_types.h"
 2002              		.file 39 "./include/linux/workqueue_types.h"
 2003              		.file 40 "./include/linux/blk-mq.h"
 2004              		.file 41 "./include/linux/dcache.h"
 2005              		.file 42 "./include/uapi/linux/pr.h"
 2006              		.file 43 "./include/linux/pr.h"
 2007              		.file 44 "./include/linux/hdreg.h"
 2008              		.file 45 "./include/linux/lockref.h"
 2009              		.file 46 "./include/linux/path.h"
 2010              		.file 47 "./include/linux/statfs.h"
 2011              		.file 48 "./include/linux/stat.h"
 2012              		.file 49 "./include/linux/printk.h"
ARM GAS  /tmp/ccC84BPF.s 			page 50


DEFINED SYMBOLS
                            *ABS*:00000000 vfs.c
     /tmp/ccC84BPF.s:21     .text.__spin_unlock:00000000 $t
     /tmp/ccC84BPF.s:26     .text.__spin_unlock:00000000 __spin_unlock
     /tmp/ccC84BPF.s:45     .text.spin_unlock:00000000 $t
     /tmp/ccC84BPF.s:50     .text.spin_unlock:00000000 spin_unlock
     /tmp/ccC84BPF.s:73     .text.get_dir_name:00000000 $t
     /tmp/ccC84BPF.s:78     .text.get_dir_name:00000000 get_dir_name
     /tmp/ccC84BPF.s:190    .text.get_dir_number:00000000 $t
     /tmp/ccC84BPF.s:195    .text.get_dir_number:00000000 get_dir_number
     /tmp/ccC84BPF.s:253    .text.find_dentry:00000000 $t
     /tmp/ccC84BPF.s:258    .text.find_dentry:00000000 find_dentry
     /tmp/ccC84BPF.s:340    .rodata.create_dentry.str1.4:00000000 $d
     /tmp/ccC84BPF.s:344    .text.create_dentry:00000000 $t
     /tmp/ccC84BPF.s:349    .text.create_dentry:00000000 create_dentry
     /tmp/ccC84BPF.s:509    .text.create_dentry:00000084 $d
     /tmp/ccC84BPF.s:514    .rodata.print_read_only_message.str1.4:00000000 $d
     /tmp/ccC84BPF.s:518    .text.print_read_only_message:00000000 $t
     /tmp/ccC84BPF.s:523    .text.print_read_only_message:00000000 print_read_only_message
     /tmp/ccC84BPF.s:543    .text.print_read_only_message:0000000c $d
     /tmp/ccC84BPF.s:548    .text.__spin_lock:00000000 $t
     /tmp/ccC84BPF.s:553    .text.__spin_lock:00000000 __spin_lock
     /tmp/ccC84BPF.s:603    .text.spin_lock:00000000 $t
     /tmp/ccC84BPF.s:608    .text.spin_lock:00000000 spin_lock
     /tmp/ccC84BPF.s:668    .text.kernel_read:00000000 $t
     /tmp/ccC84BPF.s:674    .text.kernel_read:00000000 kernel_read
     /tmp/ccC84BPF.s:780    .text.kernel_write:00000000 $t
     /tmp/ccC84BPF.s:786    .text.kernel_write:00000000 kernel_write
     /tmp/ccC84BPF.s:888    .text.vfs_ioctl:00000000 $t
     /tmp/ccC84BPF.s:894    .text.vfs_ioctl:00000000 vfs_ioctl
     /tmp/ccC84BPF.s:1012   .text.file_close:00000000 $t
     /tmp/ccC84BPF.s:1018   .text.file_close:00000000 file_close
     /tmp/ccC84BPF.s:1105   .text.select_file:00000000 $t
     /tmp/ccC84BPF.s:1111   .text.select_file:00000000 select_file
     /tmp/ccC84BPF.s:1238   .text.select_file:00000060 $d
     /tmp/ccC84BPF.s:1965   .bss.root_dentry:00000000 root_dentry
     /tmp/ccC84BPF.s:1243   .rodata.create_new_dentry.str1.4:00000000 $d
     /tmp/ccC84BPF.s:1250   .text.create_new_dentry:00000000 $t
     /tmp/ccC84BPF.s:1256   .text.create_new_dentry:00000000 create_new_dentry
     /tmp/ccC84BPF.s:1373   .text.create_new_dentry:00000060 $d
     /tmp/ccC84BPF.s:1379   .rodata.filp_open.str1.4:00000000 $d
     /tmp/ccC84BPF.s:1389   .text.filp_open:00000000 $t
     /tmp/ccC84BPF.s:1395   .text.filp_open:00000000 filp_open
     /tmp/ccC84BPF.s:1606   .text.filp_open:000000b4 $d
     /tmp/ccC84BPF.s:1613   .text.blkdev_get_by_path:00000000 $t
     /tmp/ccC84BPF.s:1619   .text.blkdev_get_by_path:00000000 blkdev_get_by_path
     /tmp/ccC84BPF.s:1652   .text.mkdir:00000000 $t
     /tmp/ccC84BPF.s:1658   .text.mkdir:00000000 mkdir
     /tmp/ccC84BPF.s:1691   .rodata.root_fs_init.str1.4:00000000 $d
     /tmp/ccC84BPF.s:1716   .text.root_fs_init:00000000 $t
     /tmp/ccC84BPF.s:1721   .text.root_fs_init:00000000 root_fs_init
     /tmp/ccC84BPF.s:1814   .text.root_fs_init:00000060 $d
     /tmp/ccC84BPF.s:1826   .rodata.moun_spiflash.str1.4:00000000 $d
     /tmp/ccC84BPF.s:1836   .text.moun_spiflash:00000000 $t
     /tmp/ccC84BPF.s:1841   .text.moun_spiflash:00000000 moun_spiflash
     /tmp/ccC84BPF.s:1879   .text.moun_spiflash:00000024 $d
     /tmp/ccC84BPF.s:1886   .device_initcall_sync:00000000 $d
ARM GAS  /tmp/ccC84BPF.s 			page 51


     /tmp/ccC84BPF.s:1889   .device_initcall_sync:00000000 _initcall_moun_spiflash
     /tmp/ccC84BPF.s:1892   .rootfsinitcall:00000000 $d
     /tmp/ccC84BPF.s:1895   .rootfsinitcall:00000000 _initcall_root_fs_init
     /tmp/ccC84BPF.s:1898   .rodata.str1.4:00000000 $d
     /tmp/ccC84BPF.s:1905   .export_table:00000000 $d
     /tmp/ccC84BPF.s:1908   .export_table:00000000 file_close_export_struct
     /tmp/ccC84BPF.s:1920   .export_table:0000000c vfs_ioctl_export_struct
     /tmp/ccC84BPF.s:1932   .export_table:00000018 kernel_write_export_struct
     /tmp/ccC84BPF.s:1944   .export_table:00000024 kernel_read_export_struct
     /tmp/ccC84BPF.s:1956   .export_table:00000030 filp_open_export_struct
     /tmp/ccC84BPF.s:1962   .bss.root_dentry:00000000 $d

UNDEFINED SYMBOLS
d_lookup_dentry
d_alloc
__d_drop
printk
stop_all_scheduler
start_all_scheduler
get_current_task
__delay
f_put
f_get
devfs_get_blk_dev
mount_root_fs
sys_mount
