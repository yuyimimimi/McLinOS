ARM GAS  /tmp/ccvYHbtC.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"vfs.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./fs/vfs.c"
  20              		.section	.text.__spin_unlock,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__spin_unlock:
  27              	.LVL0:
  28              	.LFB228:
  29              		.file 2 "./arch/arm_m/include/asm/spinlock.h"
   1:./arch/arm_m/include/asm/spinlock.h **** #ifndef __SPIN_LOCK_H_
   2:./arch/arm_m/include/asm/spinlock.h **** #define __SPIN_LOCK_H_
   3:./arch/arm_m/include/asm/spinlock.h **** 
   4:./arch/arm_m/include/asm/spinlock.h **** #include <linux/sched.h>
   5:./arch/arm_m/include/asm/spinlock.h **** 
   6:./arch/arm_m/include/asm/spinlock.h **** typedef struct { 
   7:./arch/arm_m/include/asm/spinlock.h ****      int flag; 
   8:./arch/arm_m/include/asm/spinlock.h **** } arch_spinlock_t;
   9:./arch/arm_m/include/asm/spinlock.h **** 
  10:./arch/arm_m/include/asm/spinlock.h **** static int __spin_init(arch_spinlock_t *lock) 
  11:./arch/arm_m/include/asm/spinlock.h **** {
  12:./arch/arm_m/include/asm/spinlock.h ****     lock->flag = 0;
  13:./arch/arm_m/include/asm/spinlock.h **** }
  14:./arch/arm_m/include/asm/spinlock.h **** 
  15:./arch/arm_m/include/asm/spinlock.h **** static int __spin_lock(arch_spinlock_t *lock) {
  16:./arch/arm_m/include/asm/spinlock.h **** 
  17:./arch/arm_m/include/asm/spinlock.h ****     stop_all_scheduler();
  18:./arch/arm_m/include/asm/spinlock.h ****     if(lock->flag == 0){
  19:./arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
  20:./arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
  21:./arch/arm_m/include/asm/spinlock.h ****         return 1;
  22:./arch/arm_m/include/asm/spinlock.h ****     }
  23:./arch/arm_m/include/asm/spinlock.h ****     else
  24:./arch/arm_m/include/asm/spinlock.h ****     {
  25:./arch/arm_m/include/asm/spinlock.h ****         start_all_scheduler();
  26:./arch/arm_m/include/asm/spinlock.h ****         return 0;
  27:./arch/arm_m/include/asm/spinlock.h ****     }
  28:./arch/arm_m/include/asm/spinlock.h **** }
  29:./arch/arm_m/include/asm/spinlock.h **** 
ARM GAS  /tmp/ccvYHbtC.s 			page 2


  30:./arch/arm_m/include/asm/spinlock.h **** static void  __spin_unlock( arch_spinlock_t *lock ){
  30              		.loc 2 30 52 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  31:./arch/arm_m/include/asm/spinlock.h ****     lock->flag = 0;
  35              		.loc 2 31 5 view .LVU1
  36              		.loc 2 31 16 is_stmt 0 view .LVU2
  37 0000 0023     		movs	r3, #0
  38 0002 0360     		str	r3, [r0]
  32:./arch/arm_m/include/asm/spinlock.h **** }
  39              		.loc 2 32 1 view .LVU3
  40 0004 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE228:
  44              		.section	.text.spin_unlock,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	spin_unlock:
  51              	.LVL1:
  52              	.LFB231:
  53              		.file 3 "./include/linux/spinlock.h"
   1:./include/linux/spinlock.h **** #ifndef __SPINLOCK_H__
   2:./include/linux/spinlock.h **** #define __SPINLOCK_H__
   3:./include/linux/spinlock.h **** 
   4:./include/linux/spinlock.h **** #include <linux/types.h>
   5:./include/linux/spinlock.h **** #include <linux/spinlock_types.h>
   6:./include/linux/spinlock.h **** #include <linux/sched.h>
   7:./include/linux/spinlock.h **** 
   8:./include/linux/spinlock.h **** 
   9:./include/linux/spinlock.h **** 
  10:./include/linux/spinlock.h **** static void spin_lock_init(spinlock_t* lock){
  11:./include/linux/spinlock.h ****     __spin_init(&lock->rlock.raw_lock);
  12:./include/linux/spinlock.h **** }
  13:./include/linux/spinlock.h **** 
  14:./include/linux/spinlock.h **** static void spin_lock(spinlock_t* lock)
  15:./include/linux/spinlock.h **** {  
  16:./include/linux/spinlock.h ****     while (1)
  17:./include/linux/spinlock.h ****     {
  18:./include/linux/spinlock.h ****         if(__spin_lock(&lock->rlock.raw_lock) == 1){
  19:./include/linux/spinlock.h ****             lock->owner = get_current_task();
  20:./include/linux/spinlock.h ****             break;
  21:./include/linux/spinlock.h ****         }
  22:./include/linux/spinlock.h ****         else  if(lock->owner == get_current_task()){  //Â¶ÇÊûúÂ∑≤ÁªèË¢´ÈîÅ‰Ωè‰ΩÜÊòØÈîÅÊòØËá™Â∑±ÁöÑÔ
  23:./include/linux/spinlock.h ****             return;   
  24:./include/linux/spinlock.h ****         }
  25:./include/linux/spinlock.h ****         else{
  26:./include/linux/spinlock.h ****             __delay(5); //‰∏ªÂä®ËÆ©Âá∫Êó∂Èó¥Áâá
  27:./include/linux/spinlock.h ****         }
  28:./include/linux/spinlock.h ****     }
  29:./include/linux/spinlock.h **** }
  30:./include/linux/spinlock.h **** 
  31:./include/linux/spinlock.h **** static void spin_unlock(spinlock_t* lock)
  32:./include/linux/spinlock.h **** {
ARM GAS  /tmp/ccvYHbtC.s 			page 3


  54              		.loc 3 32 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		.loc 3 32 1 is_stmt 0 view .LVU5
  59 0000 08B5     		push	{r3, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 3, -8
  63              		.cfi_offset 14, -4
  33:./include/linux/spinlock.h ****     __spin_unlock(&lock->rlock.raw_lock);
  64              		.loc 3 33 5 is_stmt 1 view .LVU6
  65 0002 FFF7FEFF 		bl	__spin_unlock
  66              	.LVL2:
  34:./include/linux/spinlock.h **** }
  67              		.loc 3 34 1 is_stmt 0 view .LVU7
  68 0006 08BD     		pop	{r3, pc}
  69              		.cfi_endproc
  70              	.LFE231:
  72              		.section	.text.get_dir_name,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  78              	get_dir_name:
  79              	.LVL3:
  80              	.LFB1033:
  81              		.file 4 "./fs/fs.h"
   1:./fs/fs.h     **** #ifndef _FS_H_
   2:./fs/fs.h     **** #define _FS_H_
   3:./fs/fs.h     **** 
   4:./fs/fs.h     **** #include <linux/fs.h>    
   5:./fs/fs.h     **** 
   6:./fs/fs.h     **** static int get_dir_name(const char *path, char *dir_name,int nummber) //Ëé∑ÂèñÊåáÂÆöÁõÆÂΩï‰∏≠ÊåáÂÆö
   7:./fs/fs.h     **** {
  82              		.loc 4 7 1 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              		.loc 4 7 1 is_stmt 0 view .LVU9
  88 0000 10B4     		push	{r4}
  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 4
  91              		.cfi_offset 4, -4
   8:./fs/fs.h     ****     int i = 0,j = 0;
  92              		.loc 4 8 5 is_stmt 1 view .LVU10
  93              	.LVL4:
   9:./fs/fs.h     ****     while (path[i]!= '\0'){
  94              		.loc 4 9 5 view .LVU11
   8:./fs/fs.h     ****     int i = 0,j = 0;
  95              		.loc 4 8 15 is_stmt 0 view .LVU12
  96 0002 4FF0000C 		mov	ip, #0
   8:./fs/fs.h     ****     int i = 0,j = 0;
  97              		.loc 4 8 9 view .LVU13
  98 0006 6346     		mov	r3, ip
  99              		.loc 4 9 11 view .LVU14
ARM GAS  /tmp/ccvYHbtC.s 			page 4


 100 0008 02E0     		b	.L5
 101              	.LVL5:
 102              	.L6:
  10:./fs/fs.h     ****         if(path[i] == '/')
  11:./fs/fs.h     ****         j++;
  12:./fs/fs.h     ****         if(j == nummber)
 103              		.loc 4 12 9 is_stmt 1 view .LVU15
 104              		.loc 4 12 11 is_stmt 0 view .LVU16
 105 000a 9445     		cmp	ip, r2
 106 000c 07D0     		beq	.L14
  13:./fs/fs.h     ****         goto a;
  14:./fs/fs.h     ****         i++;
 107              		.loc 4 14 9 is_stmt 1 view .LVU17
 108              		.loc 4 14 10 is_stmt 0 view .LVU18
 109 000e 0133     		adds	r3, r3, #1
 110              	.LVL6:
 111              	.L5:
   9:./fs/fs.h     ****         if(path[i] == '/')
 112              		.loc 4 9 19 is_stmt 1 view .LVU19
   9:./fs/fs.h     ****         if(path[i] == '/')
 113              		.loc 4 9 16 is_stmt 0 view .LVU20
 114 0010 C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
   9:./fs/fs.h     ****         if(path[i] == '/')
 115              		.loc 4 9 19 view .LVU21
 116 0012 74B1     		cbz	r4, .L15
  10:./fs/fs.h     ****         if(path[i] == '/')
 117              		.loc 4 10 9 is_stmt 1 view .LVU22
  10:./fs/fs.h     ****         if(path[i] == '/')
 118              		.loc 4 10 11 is_stmt 0 view .LVU23
 119 0014 2F2C     		cmp	r4, #47
 120 0016 F8D1     		bne	.L6
  11:./fs/fs.h     ****         if(j == nummber)
 121              		.loc 4 11 9 is_stmt 1 view .LVU24
  11:./fs/fs.h     ****         if(j == nummber)
 122              		.loc 4 11 10 is_stmt 0 view .LVU25
 123 0018 0CF1010C 		add	ip, ip, #1
 124              	.LVL7:
  11:./fs/fs.h     ****         if(j == nummber)
 125              		.loc 4 11 10 view .LVU26
 126 001c F5E7     		b	.L6
 127              	.L14:
  13:./fs/fs.h     ****         goto a;
 128              		.loc 4 13 9 is_stmt 1 view .LVU27
 129              	.LDL1:
  15:./fs/fs.h     ****     }
  16:./fs/fs.h     ****     return -1;
  17:./fs/fs.h     ****     a:
  18:./fs/fs.h     ****     i++;
 130              		.loc 4 18 5 view .LVU28
 131              		.loc 4 18 6 is_stmt 0 view .LVU29
 132 001e 0133     		adds	r3, r3, #1
 133              	.LVL8:
  19:./fs/fs.h     ****     j = 0;
 134              		.loc 4 19 5 is_stmt 1 view .LVU30
  20:./fs/fs.h     ****     while (path[i+j]!= '\0'){
 135              		.loc 4 20 5 view .LVU31
  19:./fs/fs.h     ****     j = 0;
ARM GAS  /tmp/ccvYHbtC.s 			page 5


 136              		.loc 4 19 7 is_stmt 0 view .LVU32
 137 0020 0022     		movs	r2, #0
 138              	.LVL9:
 139              	.L8:
 140              		.loc 4 20 21 is_stmt 1 view .LVU33
 141              		.loc 4 20 18 is_stmt 0 view .LVU34
 142 0022 D418     		adds	r4, r2, r3
 143              		.loc 4 20 16 view .LVU35
 144 0024 045D     		ldrb	r4, [r0, r4]	@ zero_extendqisi2
 145              		.loc 4 20 21 view .LVU36
 146 0026 4CB1     		cbz	r4, .L11
  21:./fs/fs.h     ****        dir_name[j] = path[i+j];
 147              		.loc 4 21 8 is_stmt 1 view .LVU37
 148              		.loc 4 21 20 is_stmt 0 view .LVU38
 149 0028 8C54     		strb	r4, [r1, r2]
  22:./fs/fs.h     ****        if(path[i+j] == '/')
 150              		.loc 4 22 8 is_stmt 1 view .LVU39
 151              		.loc 4 22 10 is_stmt 0 view .LVU40
 152 002a 2F2C     		cmp	r4, #47
 153 002c 06D0     		beq	.L11
  23:./fs/fs.h     ****        break;
  24:./fs/fs.h     ****        j++;
 154              		.loc 4 24 8 is_stmt 1 view .LVU41
 155              		.loc 4 24 9 is_stmt 0 view .LVU42
 156 002e 0132     		adds	r2, r2, #1
 157              	.LVL10:
 158              		.loc 4 24 9 view .LVU43
 159 0030 F7E7     		b	.L8
 160              	.LVL11:
 161              	.L15:
  16:./fs/fs.h     ****     a:
 162              		.loc 4 16 12 view .LVU44
 163 0032 4FF0FF30 		mov	r0, #-1
 164              	.LVL12:
 165              	.L4:
  25:./fs/fs.h     ****     }
  26:./fs/fs.h     ****     dir_name[j] = '\0';
  27:./fs/fs.h     ****     return 0;
  28:./fs/fs.h     **** }
 166              		.loc 4 28 1 view .LVU45
 167 0036 5DF8044B 		ldr	r4, [sp], #4
 168              	.LCFI2:
 169              		.cfi_remember_state
 170              		.cfi_restore 4
 171              		.cfi_def_cfa_offset 0
 172 003a 7047     		bx	lr
 173              	.LVL13:
 174              	.L11:
 175              	.LCFI3:
 176              		.cfi_restore_state
  26:./fs/fs.h     ****     return 0;
 177              		.loc 4 26 5 is_stmt 1 view .LVU46
  26:./fs/fs.h     ****     return 0;
 178              		.loc 4 26 17 is_stmt 0 view .LVU47
 179 003c 0020     		movs	r0, #0
 180              	.LVL14:
  26:./fs/fs.h     ****     return 0;
ARM GAS  /tmp/ccvYHbtC.s 			page 6


 181              		.loc 4 26 17 view .LVU48
 182 003e 8854     		strb	r0, [r1, r2]
  27:./fs/fs.h     **** }
 183              		.loc 4 27 5 is_stmt 1 view .LVU49
  27:./fs/fs.h     **** }
 184              		.loc 4 27 12 is_stmt 0 view .LVU50
 185 0040 F9E7     		b	.L4
 186              		.cfi_endproc
 187              	.LFE1033:
 189              		.section	.text.get_dir_number,"ax",%progbits
 190              		.align	1
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	get_dir_number:
 196              	.LVL15:
 197              	.LFB1034:
  29:./fs/fs.h     **** 
  30:./fs/fs.h     **** static int get_dir_number(char *path){                       //Ëé∑ÂèñÊåáÂÆöÁõÆÂΩïÁöÑÂ±ÇÁ∫ßÊï∞
 198              		.loc 4 30 38 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203              		.loc 4 30 38 is_stmt 0 view .LVU52
 204 0000 8446     		mov	ip, r0
  31:./fs/fs.h     ****     int j = 0,i = 0;
 205              		.loc 4 31 5 is_stmt 1 view .LVU53
 206              	.LVL16:
  32:./fs/fs.h     ****     while (path[j]!= '\0'){
 207              		.loc 4 32 5 view .LVU54
  31:./fs/fs.h     ****     int j = 0,i = 0;
 208              		.loc 4 31 15 is_stmt 0 view .LVU55
 209 0002 0020     		movs	r0, #0
 210              	.LVL17:
  31:./fs/fs.h     ****     int j = 0,i = 0;
 211              		.loc 4 31 9 view .LVU56
 212 0004 0346     		mov	r3, r0
 213              		.loc 4 32 11 view .LVU57
 214 0006 00E0     		b	.L17
 215              	.LVL18:
 216              	.L18:
  33:./fs/fs.h     ****         if(path[j] == '/' && path[j+1] != '\0')
  34:./fs/fs.h     ****         i++;
  35:./fs/fs.h     ****         j++;
 217              		.loc 4 35 9 is_stmt 1 view .LVU58
 218              		.loc 4 35 10 is_stmt 0 view .LVU59
 219 0008 0133     		adds	r3, r3, #1
 220              	.LVL19:
 221              	.L17:
  32:./fs/fs.h     ****     while (path[j]!= '\0'){
 222              		.loc 4 32 19 is_stmt 1 view .LVU60
  32:./fs/fs.h     ****     while (path[j]!= '\0'){
 223              		.loc 4 32 16 is_stmt 0 view .LVU61
 224 000a 1946     		mov	r1, r3
 225 000c 1CF80320 		ldrb	r2, [ip, r3]	@ zero_extendqisi2
  32:./fs/fs.h     ****     while (path[j]!= '\0'){
ARM GAS  /tmp/ccvYHbtC.s 			page 7


 226              		.loc 4 32 19 view .LVU62
 227 0010 3AB1     		cbz	r2, .L20
  33:./fs/fs.h     ****         if(path[j] == '/' && path[j+1] != '\0')
 228              		.loc 4 33 9 is_stmt 1 view .LVU63
  33:./fs/fs.h     ****         if(path[j] == '/' && path[j+1] != '\0')
 229              		.loc 4 33 11 is_stmt 0 view .LVU64
 230 0012 2F2A     		cmp	r2, #47
 231 0014 F8D1     		bne	.L18
  33:./fs/fs.h     ****         if(path[j] == '/' && path[j+1] != '\0')
 232              		.loc 4 33 34 discriminator 1 view .LVU65
 233 0016 6144     		add	r1, r1, ip
 234 0018 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  33:./fs/fs.h     ****         if(path[j] == '/' && path[j+1] != '\0')
 235              		.loc 4 33 27 discriminator 1 view .LVU66
 236 001a 002A     		cmp	r2, #0
 237 001c F4D0     		beq	.L18
  34:./fs/fs.h     ****         j++;
 238              		.loc 4 34 9 is_stmt 1 view .LVU67
  34:./fs/fs.h     ****         j++;
 239              		.loc 4 34 10 is_stmt 0 view .LVU68
 240 001e 0130     		adds	r0, r0, #1
 241              	.LVL20:
  34:./fs/fs.h     ****         j++;
 242              		.loc 4 34 10 view .LVU69
 243 0020 F2E7     		b	.L18
 244              	.LVL21:
 245              	.L20:
  36:./fs/fs.h     ****     }
  37:./fs/fs.h     ****     return i;
 246              		.loc 4 37 5 is_stmt 1 view .LVU70
  38:./fs/fs.h     **** }
 247              		.loc 4 38 1 is_stmt 0 view .LVU71
 248 0022 7047     		bx	lr
 249              		.cfi_endproc
 250              	.LFE1034:
 252              		.section	.text.find_dentry,"ax",%progbits
 253              		.align	1
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	find_dentry:
 259              	.LVL22:
 260              	.LFB1036:
   1:./fs/vfs.c    **** #include <linux/kernel.h>
   2:./fs/vfs.c    **** #include <linux/fs.h>
   3:./fs/vfs.c    **** #include <linux/slab.h>
   4:./fs/vfs.c    **** #include <linux/stat.h>
   5:./fs/vfs.c    **** #include <linux/cache.h>
   6:./fs/vfs.c    **** #include <linux/list.h> 
   7:./fs/vfs.c    **** #include <generated/autoconf.h>
   8:./fs/vfs.c    **** #include "fs.h"
   9:./fs/vfs.c    **** 
  10:./fs/vfs.c    **** struct dentry *root_dentry = NULL;
  11:./fs/vfs.c    **** 
  12:./fs/vfs.c    **** 
  13:./fs/vfs.c    **** 
  14:./fs/vfs.c    **** 
ARM GAS  /tmp/ccvYHbtC.s 			page 8


  15:./fs/vfs.c    **** extern struct super_block * sget(struct file_system_type *type,
  16:./fs/vfs.c    ****     int (*test)(struct super_block *,void *),
  17:./fs/vfs.c    ****     int (*set)(struct super_block *,void *),
  18:./fs/vfs.c    ****     int flags, void *data);
  19:./fs/vfs.c    **** 
  20:./fs/vfs.c    **** extern int mount_root_fs(char *file_system_type);
  21:./fs/vfs.c    **** 
  22:./fs/vfs.c    **** 
  23:./fs/vfs.c    **** extern int sys_mount(const char __user *dev_name, const char __user *dir_name,
  24:./fs/vfs.c    ****     const char __user *type, unsigned long flags,
  25:./fs/vfs.c    ****     const void __user *data);
  26:./fs/vfs.c    **** 
  27:./fs/vfs.c    **** static struct inode* get_dentry_inode(struct  dentry * dir){
  28:./fs/vfs.c    ****     if(dir == NULL) return NULL;
  29:./fs/vfs.c    ****     if(dir->d_inode != NULL) return dir->d_inode;
  30:./fs/vfs.c    ****     return NULL;
  31:./fs/vfs.c    **** }
  32:./fs/vfs.c    **** 
  33:./fs/vfs.c    **** 
  34:./fs/vfs.c    **** static struct dentry* find_dentry(struct dentry* dir,char *dentry_name, unsigned int flags)
  35:./fs/vfs.c    **** {
 261              		.loc 1 35 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		.loc 1 35 1 is_stmt 0 view .LVU73
 266 0000 38B5     		push	{r3, r4, r5, lr}
 267              	.LCFI4:
 268              		.cfi_def_cfa_offset 16
 269              		.cfi_offset 3, -16
 270              		.cfi_offset 4, -12
 271              		.cfi_offset 5, -8
 272              		.cfi_offset 14, -4
 273 0002 0446     		mov	r4, r0
 274 0004 0D46     		mov	r5, r1
  36:./fs/vfs.c    ****     struct dentry* son_dentry = d_lookup_dentry(dir,dentry_name);
 275              		.loc 1 36 5 is_stmt 1 view .LVU74
 276              		.loc 1 36 33 is_stmt 0 view .LVU75
 277 0006 FFF7FEFF 		bl	d_lookup_dentry
 278              	.LVL23:
  37:./fs/vfs.c    ****     if(son_dentry != NULL) {
 279              		.loc 1 37 5 is_stmt 1 view .LVU76
 280              		.loc 1 37 7 is_stmt 0 view .LVU77
 281 000a 00B1     		cbz	r0, .L26
 282              	.LVL24:
 283              	.L21:
  38:./fs/vfs.c    ****         //pr_info("find from chache\n");
  39:./fs/vfs.c    ****         return son_dentry;
  40:./fs/vfs.c    ****     }
  41:./fs/vfs.c    ****     son_dentry = d_alloc(dir,dentry_name); 
  42:./fs/vfs.c    ****     if(son_dentry == NULL)
  43:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
  44:./fs/vfs.c    ****     struct dentry* son_dentry_ = NULL;
  45:./fs/vfs.c    ****     son_dentry_ =  dir->d_inode->i_op->lookup(dir->d_inode,son_dentry,0); 
  46:./fs/vfs.c    ****     if(son_dentry_ == NULL || IS_ERR(son_dentry_)){
  47:./fs/vfs.c    ****        
  48:./fs/vfs.c    ****         __d_drop(son_dentry); 
ARM GAS  /tmp/ccvYHbtC.s 			page 9


  49:./fs/vfs.c    ****         return -ENOENT; 
  50:./fs/vfs.c    ****     }
  51:./fs/vfs.c    ****     return son_dentry_; 
  52:./fs/vfs.c    **** }
 284              		.loc 1 52 1 view .LVU78
 285 000c 38BD     		pop	{r3, r4, r5, pc}
 286              	.LVL25:
 287              	.L26:
  41:./fs/vfs.c    ****     if(son_dentry == NULL)
 288              		.loc 1 41 5 is_stmt 1 view .LVU79
  41:./fs/vfs.c    ****     if(son_dentry == NULL)
 289              		.loc 1 41 18 is_stmt 0 view .LVU80
 290 000e 2946     		mov	r1, r5
 291 0010 2046     		mov	r0, r4
 292 0012 FFF7FEFF 		bl	d_alloc
 293              	.LVL26:
  42:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
 294              		.loc 1 42 5 is_stmt 1 view .LVU81
  42:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
 295              		.loc 1 42 7 is_stmt 0 view .LVU82
 296 0016 0546     		mov	r5, r0
 297              	.LVL27:
  42:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
 298              		.loc 1 42 7 view .LVU83
 299 0018 78B1     		cbz	r0, .L24
  44:./fs/vfs.c    ****     son_dentry_ =  dir->d_inode->i_op->lookup(dir->d_inode,son_dentry,0); 
 300              		.loc 1 44 5 is_stmt 1 view .LVU84
 301              	.LVL28:
  45:./fs/vfs.c    ****     if(son_dentry_ == NULL || IS_ERR(son_dentry_)){
 302              		.loc 1 45 5 view .LVU85
  45:./fs/vfs.c    ****     if(son_dentry_ == NULL || IS_ERR(son_dentry_)){
 303              		.loc 1 45 23 is_stmt 0 view .LVU86
 304 001a A06C     		ldr	r0, [r4, #72]
 305              	.LVL29:
  45:./fs/vfs.c    ****     if(son_dentry_ == NULL || IS_ERR(son_dentry_)){
 306              		.loc 1 45 32 view .LVU87
 307 001c 0369     		ldr	r3, [r0, #16]
  45:./fs/vfs.c    ****     if(son_dentry_ == NULL || IS_ERR(son_dentry_)){
 308              		.loc 1 45 38 view .LVU88
 309 001e 1B68     		ldr	r3, [r3]
  45:./fs/vfs.c    ****     if(son_dentry_ == NULL || IS_ERR(son_dentry_)){
 310              		.loc 1 45 20 view .LVU89
 311 0020 0022     		movs	r2, #0
 312 0022 2946     		mov	r1, r5
 313 0024 9847     		blx	r3
 314              	.LVL30:
  46:./fs/vfs.c    ****        
 315              		.loc 1 46 5 is_stmt 1 view .LVU90
  46:./fs/vfs.c    ****        
 316              		.loc 1 46 7 is_stmt 0 view .LVU91
 317 0026 10B1     		cbz	r0, .L23
 318              	.LVL31:
 319              	.LBB39:
 320              	.LBI39:
 321              		.file 5 "./include/linux/err.h"
   1:./include/linux/err.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:./include/linux/err.h **** #ifndef _LINUX_ERR_H
ARM GAS  /tmp/ccvYHbtC.s 			page 10


   3:./include/linux/err.h **** #define _LINUX_ERR_H
   4:./include/linux/err.h **** 
   5:./include/linux/err.h **** #include <linux/compiler_attributes.h>
   6:./include/linux/err.h **** #include <linux/compiler.h>
   7:./include/linux/err.h **** #include <linux/types.h>
   8:./include/linux/err.h **** 
   9:./include/linux/err.h **** #include <asm/errno.h>
  10:./include/linux/err.h **** 
  11:./include/linux/err.h **** /*
  12:./include/linux/err.h ****  * Kernel pointers have redundant information, so we can use a
  13:./include/linux/err.h ****  * scheme where we can return either an error code or a normal
  14:./include/linux/err.h ****  * pointer with the same return value.
  15:./include/linux/err.h ****  *
  16:./include/linux/err.h ****  * This should be a per-architecture thing, to allow different
  17:./include/linux/err.h ****  * error and pointer decisions.
  18:./include/linux/err.h ****  */
  19:./include/linux/err.h **** #define MAX_ERRNO	4095
  20:./include/linux/err.h **** 
  21:./include/linux/err.h **** #ifndef __ASSEMBLY__
  22:./include/linux/err.h **** 
  23:./include/linux/err.h **** /**
  24:./include/linux/err.h ****  * IS_ERR_VALUE - Detect an error pointer.
  25:./include/linux/err.h ****  * @x: The pointer to check.
  26:./include/linux/err.h ****  *
  27:./include/linux/err.h ****  * Like IS_ERR(), but does not generate a compiler warning if result is unused.
  28:./include/linux/err.h ****  */
  29:./include/linux/err.h **** 
  30:./include/linux/err.h **** #ifndef unlikely
  31:./include/linux/err.h **** #  define unlikely(x) __builtin_expect(!!(x), 0)
  32:./include/linux/err.h **** #endif
  33:./include/linux/err.h **** 
  34:./include/linux/err.h **** #ifndef likely
  35:./include/linux/err.h **** #  define likely(x) __builtin_expect(!!(x), 1)
  36:./include/linux/err.h **** #endif
  37:./include/linux/err.h **** 
  38:./include/linux/err.h **** #define IS_ERR_VALUE(x) unlikely((unsigned long)(void *)(x) >= (unsigned long)-MAX_ERRNO)
  39:./include/linux/err.h **** 
  40:./include/linux/err.h **** /**
  41:./include/linux/err.h ****  * ERR_PTR - Create an error pointer.
  42:./include/linux/err.h ****  * @error: A negative error code.
  43:./include/linux/err.h ****  *
  44:./include/linux/err.h ****  * Encodes @error into a pointer value. Users should consider the result
  45:./include/linux/err.h ****  * opaque and not assume anything about how the error is encoded.
  46:./include/linux/err.h ****  *
  47:./include/linux/err.h ****  * Return: A pointer with @error encoded within its value.
  48:./include/linux/err.h ****  */
  49:./include/linux/err.h **** static inline void * __must_check ERR_PTR(long error)
  50:./include/linux/err.h **** {
  51:./include/linux/err.h **** 	return (void *) error;
  52:./include/linux/err.h **** }
  53:./include/linux/err.h **** 
  54:./include/linux/err.h **** /* Return the pointer in the percpu address space. */
  55:./include/linux/err.h **** #define ERR_PTR_PCPU(error) ((void __percpu *)(unsigned long)ERR_PTR(error))
  56:./include/linux/err.h **** 
  57:./include/linux/err.h **** /**
  58:./include/linux/err.h ****  * PTR_ERR - Extract the error code from an error pointer.
  59:./include/linux/err.h ****  * @ptr: An error pointer.
ARM GAS  /tmp/ccvYHbtC.s 			page 11


  60:./include/linux/err.h ****  * Return: The error code within @ptr.
  61:./include/linux/err.h ****  */
  62:./include/linux/err.h **** static inline long __must_check PTR_ERR(__force const void *ptr)
  63:./include/linux/err.h **** {
  64:./include/linux/err.h **** 	return (long) ptr;
  65:./include/linux/err.h **** }
  66:./include/linux/err.h **** 
  67:./include/linux/err.h **** /* Read an error pointer from the percpu address space. */
  68:./include/linux/err.h **** #define PTR_ERR_PCPU(ptr) (PTR_ERR((const void *)(__force const unsigned long)(ptr)))
  69:./include/linux/err.h **** 
  70:./include/linux/err.h **** /**
  71:./include/linux/err.h ****  * IS_ERR - Detect an error pointer.
  72:./include/linux/err.h ****  * @ptr: The pointer to check.
  73:./include/linux/err.h ****  * Return: true if @ptr is an error pointer, false otherwise.
  74:./include/linux/err.h ****  */
  75:./include/linux/err.h **** static inline bool __must_check IS_ERR(__force const void *ptr)
 322              		.loc 5 75 33 is_stmt 1 view .LVU92
 323              	.LBB40:
  76:./include/linux/err.h **** {
  77:./include/linux/err.h **** 	return IS_ERR_VALUE((unsigned long)ptr);
 324              		.loc 5 77 2 view .LVU93
 325              		.loc 5 77 2 is_stmt 0 view .LVU94
 326              	.LBE40:
 327              	.LBE39:
  46:./fs/vfs.c    ****        
 328              		.loc 1 46 28 discriminator 1 view .LVU95
 329 0028 10F5805F 		cmn	r0, #4096
 330 002c EED9     		bls	.L21
 331              	.L23:
  48:./fs/vfs.c    ****         return -ENOENT; 
 332              		.loc 1 48 9 is_stmt 1 view .LVU96
 333 002e 2846     		mov	r0, r5
 334              	.LVL32:
  48:./fs/vfs.c    ****         return -ENOENT; 
 335              		.loc 1 48 9 is_stmt 0 view .LVU97
 336 0030 FFF7FEFF 		bl	__d_drop
 337              	.LVL33:
  49:./fs/vfs.c    ****     }
 338              		.loc 1 49 9 is_stmt 1 view .LVU98
  49:./fs/vfs.c    ****     }
 339              		.loc 1 49 16 is_stmt 0 view .LVU99
 340 0034 6FF00100 		mvn	r0, #1
 341 0038 E8E7     		b	.L21
 342              	.LVL34:
 343              	.L24:
  43:./fs/vfs.c    ****     struct dentry* son_dentry_ = NULL;
 344              		.loc 1 43 12 view .LVU100
 345 003a 6FF00B00 		mvn	r0, #11
 346              	.LVL35:
  43:./fs/vfs.c    ****     struct dentry* son_dentry_ = NULL;
 347              		.loc 1 43 12 view .LVU101
 348 003e E5E7     		b	.L21
 349              		.cfi_endproc
 350              	.LFE1036:
 352              		.section	.rodata.create_dentry.str1.4,"aMS",%progbits,1
 353              		.align	2
 354              	.LC0:
ARM GAS  /tmp/ccvYHbtC.s 			page 12


 355 0000 66696C65 		.ascii	"file already exists: %s\012\000"
 355      20616C72 
 355      65616479 
 355      20657869 
 355      7374733A 
 356              		.section	.text.create_dentry,"ax",%progbits
 357              		.align	1
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 362              	create_dentry:
 363              	.LVL36:
 364              	.LFB1037:
  53:./fs/vfs.c    **** 
  54:./fs/vfs.c    **** static struct dentry* create_dentry(struct dentry* dir,char *name,umode_t i_mode)
  55:./fs/vfs.c    **** {
 365              		.loc 1 55 1 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		.loc 1 55 1 is_stmt 0 view .LVU103
 370 0000 70B5     		push	{r4, r5, r6, lr}
 371              	.LCFI5:
 372              		.cfi_def_cfa_offset 16
 373              		.cfi_offset 4, -16
 374              		.cfi_offset 5, -12
 375              		.cfi_offset 6, -8
 376              		.cfi_offset 14, -4
 377 0002 82B0     		sub	sp, sp, #8
 378              	.LCFI6:
 379              		.cfi_def_cfa_offset 24
 380 0004 0546     		mov	r5, r0
 381 0006 0C46     		mov	r4, r1
 382 0008 1646     		mov	r6, r2
  56:./fs/vfs.c    ****     struct dentry* next_dentry = find_dentry(dir,name,0);     //Â¶ÇÊûúÂ∑≤ÊúâËØ•Êñá‰ª∂ÂàôÁõ¥Êé•ËøîÂõ
 383              		.loc 1 56 5 is_stmt 1 view .LVU104
 384              		.loc 1 56 34 is_stmt 0 view .LVU105
 385 000a 0022     		movs	r2, #0
 386              	.LVL37:
 387              		.loc 1 56 34 view .LVU106
 388 000c FFF7FEFF 		bl	find_dentry
 389              	.LVL38:
  57:./fs/vfs.c    ****     if(!IS_ERR(next_dentry)){
 390              		.loc 1 57 5 is_stmt 1 view .LVU107
 391              	.LBB41:
 392              	.LBI41:
  75:./include/linux/err.h **** {
 393              		.loc 5 75 33 view .LVU108
 394              	.LBB42:
 395              		.loc 5 77 2 view .LVU109
 396              		.loc 5 77 2 is_stmt 0 view .LVU110
 397              	.LBE42:
 398              	.LBE41:
 399              		.loc 1 57 7 discriminator 1 view .LVU111
 400 0010 10F5805F 		cmn	r0, #4096
 401 0014 08D8     		bhi	.L28
  58:./fs/vfs.c    ****      pr_info("file already exists: %s\n", name);
ARM GAS  /tmp/ccvYHbtC.s 			page 13


 402              		.loc 1 58 6 is_stmt 1 view .LVU112
 403 0016 2146     		mov	r1, r4
 404 0018 1A48     		ldr	r0, .L38
 405              	.LVL39:
 406              		.loc 1 58 6 is_stmt 0 view .LVU113
 407 001a FFF7FEFF 		bl	printk
 408              	.LVL40:
  59:./fs/vfs.c    ****      return ERR_PTR(-EEXIST);
 409              		.loc 1 59 6 is_stmt 1 view .LVU114
 410              		.loc 1 59 13 is_stmt 0 view .LVU115
 411 001e 6FF01004 		mvn	r4, #16
 412              	.LVL41:
 413              	.L27:
  60:./fs/vfs.c    ****     }
  61:./fs/vfs.c    ****     next_dentry = d_alloc(dir,name); //ÂÖàÂàõÂª∫Â≠êdentryÊ®°ÊùøÔºåÊ≠§Êó∂ÂÆÉÂπ∂Ê≤°ÊúâË¢´ÁúüÂÆûÊ∑ªÂä†
  62:./fs/vfs.c    ****     if(next_dentry == NULL)
  63:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
  64:./fs/vfs.c    ****     if(dir->d_inode->i_op->create == NULL){
  65:./fs/vfs.c    ****         __d_drop(next_dentry); //Êí§ÈîÄÂàÜÈÖçÊ≤°Êúâ‰ΩøÁî®ÁöÑdentry
  66:./fs/vfs.c    ****      return ERR_PTR(-EROFS);
  67:./fs/vfs.c    ****     }
  68:./fs/vfs.c    ****     int err;
  69:./fs/vfs.c    ****     if((i_mode & S_IFMT) == S_IFREG)
  70:./fs/vfs.c    ****     {
  71:./fs/vfs.c    ****        // pr_info("create file \n");
  72:./fs/vfs.c    ****         err = dir->d_inode->i_op->create(NULL,dir->d_inode,next_dentry,i_mode,0);
  73:./fs/vfs.c    ****     }
  74:./fs/vfs.c    ****     else if((i_mode &  S_IFMT) == S_IFDIR)
  75:./fs/vfs.c    ****     {
  76:./fs/vfs.c    ****        // pr_info("create dir \n");
  77:./fs/vfs.c    ****         err = dir->d_inode->i_op->mkdir(NULL,dir->d_inode,next_dentry,i_mode);
  78:./fs/vfs.c    ****     }
  79:./fs/vfs.c    ****     else 
  80:./fs/vfs.c    ****     err = -1;
  81:./fs/vfs.c    **** 
  82:./fs/vfs.c    ****     if(err < 0){
  83:./fs/vfs.c    ****         __d_drop(next_dentry); 
  84:./fs/vfs.c    ****      return ERR_PTR(-ENOMEM);
  85:./fs/vfs.c    ****     }
  86:./fs/vfs.c    ****     return next_dentry;
  87:./fs/vfs.c    **** }
 414              		.loc 1 87 1 view .LVU116
 415 0022 2046     		mov	r0, r4
 416 0024 02B0     		add	sp, sp, #8
 417              	.LCFI7:
 418              		.cfi_remember_state
 419              		.cfi_def_cfa_offset 16
 420              		@ sp needed
 421 0026 70BD     		pop	{r4, r5, r6, pc}
 422              	.LVL42:
 423              	.L28:
 424              	.LCFI8:
 425              		.cfi_restore_state
  61:./fs/vfs.c    ****     if(next_dentry == NULL)
 426              		.loc 1 61 5 is_stmt 1 view .LVU117
  61:./fs/vfs.c    ****     if(next_dentry == NULL)
 427              		.loc 1 61 19 is_stmt 0 view .LVU118
ARM GAS  /tmp/ccvYHbtC.s 			page 14


 428 0028 2146     		mov	r1, r4
 429 002a 2846     		mov	r0, r5
 430              	.LVL43:
  61:./fs/vfs.c    ****     if(next_dentry == NULL)
 431              		.loc 1 61 19 view .LVU119
 432 002c FFF7FEFF 		bl	d_alloc
 433              	.LVL44:
  62:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
 434              		.loc 1 62 5 is_stmt 1 view .LVU120
  62:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
 435              		.loc 1 62 7 is_stmt 0 view .LVU121
 436 0030 0446     		mov	r4, r0
 437              	.LVL45:
  62:./fs/vfs.c    ****     return ERR_PTR(-ENOMEM);
 438              		.loc 1 62 7 view .LVU122
 439 0032 18B3     		cbz	r0, .L34
  64:./fs/vfs.c    ****         __d_drop(next_dentry); //Êí§ÈîÄÂàÜÈÖçÊ≤°Êúâ‰ΩøÁî®ÁöÑdentry
 440              		.loc 1 64 5 is_stmt 1 view .LVU123
  64:./fs/vfs.c    ****         __d_drop(next_dentry); //Êí§ÈîÄÂàÜÈÖçÊ≤°Êúâ‰ΩøÁî®ÁöÑdentry
 441              		.loc 1 64 11 is_stmt 0 view .LVU124
 442 0034 A96C     		ldr	r1, [r5, #72]
  64:./fs/vfs.c    ****         __d_drop(next_dentry); //Êí§ÈîÄÂàÜÈÖçÊ≤°Êúâ‰ΩøÁî®ÁöÑdentry
 443              		.loc 1 64 20 view .LVU125
 444 0036 0A69     		ldr	r2, [r1, #16]
  64:./fs/vfs.c    ****         __d_drop(next_dentry); //Êí§ÈîÄÂàÜÈÖçÊ≤°Êúâ‰ΩøÁî®ÁöÑdentry
 445              		.loc 1 64 26 view .LVU126
 446 0038 5569     		ldr	r5, [r2, #20]
 447              	.LVL46:
  64:./fs/vfs.c    ****         __d_drop(next_dentry); //Êí§ÈîÄÂàÜÈÖçÊ≤°Êúâ‰ΩøÁî®ÁöÑdentry
 448              		.loc 1 64 7 view .LVU127
 449 003a 6DB1     		cbz	r5, .L36
  68:./fs/vfs.c    ****     if((i_mode & S_IFMT) == S_IFREG)
 450              		.loc 1 68 5 is_stmt 1 view .LVU128
  69:./fs/vfs.c    ****     {
 451              		.loc 1 69 5 view .LVU129
 452 003c 06F47043 		and	r3, r6, #61440
  69:./fs/vfs.c    ****     {
 453              		.loc 1 69 7 is_stmt 0 view .LVU130
 454 0040 B3F5004F 		cmp	r3, #32768
 455 0044 0DD0     		beq	.L37
  74:./fs/vfs.c    ****     {
 456              		.loc 1 74 10 is_stmt 1 view .LVU131
  74:./fs/vfs.c    ****     {
 457              		.loc 1 74 12 is_stmt 0 view .LVU132
 458 0046 B3F5804F 		cmp	r3, #16384
 459 004a 11D1     		bne	.L33
  77:./fs/vfs.c    ****     }
 460              		.loc 1 77 9 is_stmt 1 view .LVU133
  77:./fs/vfs.c    ****     }
 461              		.loc 1 77 33 is_stmt 0 view .LVU134
 462 004c 556A     		ldr	r5, [r2, #36]
  77:./fs/vfs.c    ****     }
 463              		.loc 1 77 15 view .LVU135
 464 004e 3346     		mov	r3, r6
 465 0050 0246     		mov	r2, r0
 466 0052 0020     		movs	r0, #0
 467              	.LVL47:
ARM GAS  /tmp/ccvYHbtC.s 			page 15


  77:./fs/vfs.c    ****     }
 468              		.loc 1 77 15 view .LVU136
 469 0054 A847     		blx	r5
 470              	.LVL48:
  77:./fs/vfs.c    ****     }
 471              		.loc 1 77 15 view .LVU137
 472 0056 09E0     		b	.L32
 473              	.LVL49:
 474              	.L36:
  65:./fs/vfs.c    ****      return ERR_PTR(-EROFS);
 475              		.loc 1 65 9 is_stmt 1 view .LVU138
 476 0058 FFF7FEFF 		bl	__d_drop
 477              	.LVL50:
  66:./fs/vfs.c    ****     }
 478              		.loc 1 66 6 view .LVU139
  66:./fs/vfs.c    ****     }
 479              		.loc 1 66 13 is_stmt 0 view .LVU140
 480 005c 6FF01D04 		mvn	r4, #29
 481              	.LVL51:
  66:./fs/vfs.c    ****     }
 482              		.loc 1 66 13 view .LVU141
 483 0060 DFE7     		b	.L27
 484              	.LVL52:
 485              	.L37:
  72:./fs/vfs.c    ****     }
 486              		.loc 1 72 9 is_stmt 1 view .LVU142
  72:./fs/vfs.c    ****     }
 487              		.loc 1 72 15 is_stmt 0 view .LVU143
 488 0062 0020     		movs	r0, #0
 489              	.LVL53:
  72:./fs/vfs.c    ****     }
 490              		.loc 1 72 15 view .LVU144
 491 0064 0090     		str	r0, [sp]
 492 0066 3346     		mov	r3, r6
 493 0068 2246     		mov	r2, r4
 494 006a A847     		blx	r5
 495              	.LVL54:
 496              	.L32:
  82:./fs/vfs.c    ****         __d_drop(next_dentry); 
 497              		.loc 1 82 5 is_stmt 1 view .LVU145
  82:./fs/vfs.c    ****         __d_drop(next_dentry); 
 498              		.loc 1 82 7 is_stmt 0 view .LVU146
 499 006c 0028     		cmp	r0, #0
 500 006e D8DA     		bge	.L27
 501              	.LVL55:
 502              	.L33:
  83:./fs/vfs.c    ****      return ERR_PTR(-ENOMEM);
 503              		.loc 1 83 9 is_stmt 1 view .LVU147
 504 0070 2046     		mov	r0, r4
 505 0072 FFF7FEFF 		bl	__d_drop
 506              	.LVL56:
  84:./fs/vfs.c    ****     }
 507              		.loc 1 84 6 view .LVU148
  84:./fs/vfs.c    ****     }
 508              		.loc 1 84 13 is_stmt 0 view .LVU149
 509 0076 6FF00B04 		mvn	r4, #11
 510              	.LVL57:
ARM GAS  /tmp/ccvYHbtC.s 			page 16


  84:./fs/vfs.c    ****     }
 511              		.loc 1 84 13 view .LVU150
 512 007a D2E7     		b	.L27
 513              	.LVL58:
 514              	.L34:
  63:./fs/vfs.c    ****     if(dir->d_inode->i_op->create == NULL){
 515              		.loc 1 63 12 view .LVU151
 516 007c 6FF00B04 		mvn	r4, #11
 517 0080 CFE7     		b	.L27
 518              	.L39:
 519 0082 00BF     		.align	2
 520              	.L38:
 521 0084 00000000 		.word	.LC0
 522              		.cfi_endproc
 523              	.LFE1037:
 525              		.section	.rodata.print_read_only_message.str1.4,"aMS",%progbits,1
 526              		.align	2
 527              	.LC1:
 528 0000 6B65726E 		.ascii	"kernel_write:this file is read only\012\000"
 528      656C5F77 
 528      72697465 
 528      3A746869 
 528      73206669 
 529              		.section	.text.print_read_only_message,"ax",%progbits
 530              		.align	1
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 535              	print_read_only_message:
 536              	.LFB1047:
  88:./fs/vfs.c    **** 
  89:./fs/vfs.c    **** 
  90:./fs/vfs.c    **** static int __remove_dentry(struct dentry* dentry)    
  91:./fs/vfs.c    **** {
  92:./fs/vfs.c    ****     if(dentry == NULL){                            
  93:./fs/vfs.c    ****         return -1;                                    
  94:./fs/vfs.c    ****     }
  95:./fs/vfs.c    ****     if(dentry->d_sb->s_root == dentry){
  96:./fs/vfs.c    ****         pr_warn("can not remove mount point\n");
  97:./fs/vfs.c    ****         return -1;
  98:./fs/vfs.c    ****     }
  99:./fs/vfs.c    ****     umode_t i_mode = dentry->d_inode->i_mode;      
 100:./fs/vfs.c    ****     if((i_mode &  S_IFMT) == S_IFCHR || (i_mode &  S_IFMT) == S_IFBLK  ){
 101:./fs/vfs.c    ****         return -1;
 102:./fs/vfs.c    ****     }
 103:./fs/vfs.c    ****     else if((i_mode &  S_IFDIR) == S_IFCHR)
 104:./fs/vfs.c    ****     {
 105:./fs/vfs.c    ****         dentry->d_inode->i_op->rmdir(dentry->d_parent->d_inode,dentry);
 106:./fs/vfs.c    ****     }
 107:./fs/vfs.c    ****     else{
 108:./fs/vfs.c    ****         dentry->d_inode->i_op->unlink(dentry->d_parent->d_inode,dentry);
 109:./fs/vfs.c    ****         simple_unlink(dentry->d_parent->d_inode,dentry);
 110:./fs/vfs.c    ****     }
 111:./fs/vfs.c    ****     return 0;
 112:./fs/vfs.c    **** }
 113:./fs/vfs.c    **** 
 114:./fs/vfs.c    **** 
ARM GAS  /tmp/ccvYHbtC.s 			page 17


 115:./fs/vfs.c    **** struct  dentry * select_file(char * path , int offset)
 116:./fs/vfs.c    **** {   
 117:./fs/vfs.c    ****     if(path == NULL) 
 118:./fs/vfs.c    ****     return NULL;
 119:./fs/vfs.c    ****     if(path[0] == '/' && path[1] == '\0') 
 120:./fs/vfs.c    ****     return root_dentry;
 121:./fs/vfs.c    ****     int err;    
 122:./fs/vfs.c    ****     int path_numbers = get_dir_number(path);
 123:./fs/vfs.c    ****     char file_name[128];    
 124:./fs/vfs.c    ****     struct dentry * esarch_dentry = root_dentry;
 125:./fs/vfs.c    ****     for(int i = 1 ;i <= path_numbers - offset; i++){
 126:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 127:./fs/vfs.c    ****         esarch_dentry = find_dentry(esarch_dentry,file_name,0); 
 128:./fs/vfs.c    ****         if(IS_ERR(esarch_dentry)){
 129:./fs/vfs.c    ****             return esarch_dentry;
 130:./fs/vfs.c    ****         }
 131:./fs/vfs.c    ****     }
 132:./fs/vfs.c    ****     return esarch_dentry;
 133:./fs/vfs.c    **** }
 134:./fs/vfs.c    **** 
 135:./fs/vfs.c    **** 
 136:./fs/vfs.c    **** 
 137:./fs/vfs.c    **** 
 138:./fs/vfs.c    **** struct  dentry * create_new_dentry(char * path,umode_t i_mode)
 139:./fs/vfs.c    **** {
 140:./fs/vfs.c    ****     struct  dentry * p_dentry;
 141:./fs/vfs.c    **** 
 142:./fs/vfs.c    ****     p_dentry = select_file(path, 1); //Êü•ËØ¢Â≠êÁõÆÂΩï
 143:./fs/vfs.c    ****     if(IS_ERR(p_dentry)){
 144:./fs/vfs.c    ****         //pr_info("can not find parent dentry%d\n",(int)p_dentry);
 145:./fs/vfs.c    ****         return ERR_PTR(-ENOENT);
 146:./fs/vfs.c    ****     }
 147:./fs/vfs.c    ****     mode_t p_denrty_mode = p_dentry->d_inode->i_mode;
 148:./fs/vfs.c    ****     if((p_denrty_mode & S_IFMT) != S_IFDIR)
 149:./fs/vfs.c    ****     {
 150:./fs/vfs.c    ****         //pr_info("parent dentry : %s is not a dir\n",p_dentry->d_name.name);
 151:./fs/vfs.c    ****         return ERR_PTR(-ENOTDIR);
 152:./fs/vfs.c    ****     } 
 153:./fs/vfs.c    ****     char file_name[128];  
 154:./fs/vfs.c    ****     get_dir_name(path,file_name,get_dir_number(path));     
 155:./fs/vfs.c    ****     p_dentry = create_dentry(p_dentry,file_name,i_mode);
 156:./fs/vfs.c    ****     return p_dentry;
 157:./fs/vfs.c    **** }
 158:./fs/vfs.c    **** 
 159:./fs/vfs.c    **** 
 160:./fs/vfs.c    **** 
 161:./fs/vfs.c    **** 
 162:./fs/vfs.c    **** 
 163:./fs/vfs.c    **** 
 164:./fs/vfs.c    **** 
 165:./fs/vfs.c    **** 
 166:./fs/vfs.c    **** int remove_dentry(char* path)
 167:./fs/vfs.c    **** {
 168:./fs/vfs.c    ****     struct  dentry * dentry = select_file(path,0);
 169:./fs/vfs.c    ****     if(!IS_ERR(dentry)){
 170:./fs/vfs.c    ****         __remove_dentry(dentry);
 171:./fs/vfs.c    ****         return 0;
ARM GAS  /tmp/ccvYHbtC.s 			page 18


 172:./fs/vfs.c    ****     }
 173:./fs/vfs.c    ****     return -1;
 174:./fs/vfs.c    **** }
 175:./fs/vfs.c    **** EXPORT_SYMBOL(remove_dentry);
 176:./fs/vfs.c    **** 
 177:./fs/vfs.c    **** struct block_device *blkdev_get_by_path(char *path, int flag,void* priv)
 178:./fs/vfs.c    **** {
 179:./fs/vfs.c    ****     struct dentry* dentry = select_file(path,0);
 180:./fs/vfs.c    ****     return devfs_get_blk_dev(dentry->d_inode);
 181:./fs/vfs.c    **** }
 182:./fs/vfs.c    **** EXPORT_SYMBOL(blkdev_get_by_path);
 183:./fs/vfs.c    **** 
 184:./fs/vfs.c    **** struct dentry* mkdir(char *path,umode_t mode){
 185:./fs/vfs.c    ****    if(mode == NULL) mode = 0755;
 186:./fs/vfs.c    ****    return create_new_dentry(path, S_IFDIR | (mode & 0777));
 187:./fs/vfs.c    **** }
 188:./fs/vfs.c    **** EXPORT_SYMBOL(mkdir);
 189:./fs/vfs.c    **** 
 190:./fs/vfs.c    **** 
 191:./fs/vfs.c    **** umode_t get_file_mode(char *path){
 192:./fs/vfs.c    ****     struct dentry*file_dentry = select_file(path,0);
 193:./fs/vfs.c    ****     if(IS_ERR(file_dentry)){
 194:./fs/vfs.c    ****         return 0;
 195:./fs/vfs.c    ****     }
 196:./fs/vfs.c    ****     return file_dentry->d_inode->i_mode;
 197:./fs/vfs.c    **** }
 198:./fs/vfs.c    **** void *print_mode(char *path)
 199:./fs/vfs.c    **** {
 200:./fs/vfs.c    ****     umode_t mode = get_file_mode(path);
 201:./fs/vfs.c    ****     char data[10];
 202:./fs/vfs.c    ****     data[0] = (S_ISDIR(mode)) ? 'd' : 
 203:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 204:./fs/vfs.c    ****     (S_ISBLK(mode)) ? 'b' : 
 205:./fs/vfs.c    ****     (S_ISFIFO(mode)) ? 'p' : 
 206:./fs/vfs.c    ****     (S_ISLNK(mode)) ? 'l' : 
 207:./fs/vfs.c    ****     (S_ISSOCK(mode)) ? 's' : '-';
 208:./fs/vfs.c    ****     data[1] = (mode & S_IRUSR) ? 'r' : '-';
 209:./fs/vfs.c    ****     data[2] = (mode & S_IWUSR) ? 'w' : '-';
 210:./fs/vfs.c    ****     data[3] = (mode & S_IXUSR) ? 'x' : '-';
 211:./fs/vfs.c    ****     data[4] = (mode & S_IRGRP) ? 'r' : '-';
 212:./fs/vfs.c    ****     data[5] = (mode & S_IWGRP) ? 'w' : '-';
 213:./fs/vfs.c    ****     data[6] = (mode & S_IXGRP) ? 'x' : '-';
 214:./fs/vfs.c    ****     data[7] = (mode & S_IROTH) ? 'r' : '-';
 215:./fs/vfs.c    ****     data[8] = (mode & S_IWOTH) ? 'w' : '-';
 216:./fs/vfs.c    ****     data[9] = (mode & S_IXOTH) ? 'x' : '-';
 217:./fs/vfs.c    ****     printk(KERN_INFO "File mode: %s\n", data);
 218:./fs/vfs.c    ****     return NULL;
 219:./fs/vfs.c    **** }
 220:./fs/vfs.c    **** 
 221:./fs/vfs.c    **** 
 222:./fs/vfs.c    **** 
 223:./fs/vfs.c    **** 
 224:./fs/vfs.c    **** 
 225:./fs/vfs.c    **** 
 226:./fs/vfs.c    **** 
 227:./fs/vfs.c    **** 
 228:./fs/vfs.c    **** struct file *filp_open(const char * path, int flags, umode_t mode)
ARM GAS  /tmp/ccvYHbtC.s 			page 19


 229:./fs/vfs.c    **** {
 230:./fs/vfs.c    ****     pr_info("open file %s\n",path);
 231:./fs/vfs.c    ****     struct dentry*file_dentry = select_file(path,0);
 232:./fs/vfs.c    ****     if(IS_ERR(file_dentry))
 233:./fs/vfs.c    ****     {
 234:./fs/vfs.c    ****         pr_info("file not found\n");
 235:./fs/vfs.c    ****         if (PTR_ERR(file_dentry) == -ENOENT && (flags & O_CREAT)) 
 236:./fs/vfs.c    ****         {
 237:./fs/vfs.c    ****             pr_info("try create: %s\n", path);
 238:./fs/vfs.c    ****             file_dentry = create_new_dentry((char *)path, S_IFREG | mode);
 239:./fs/vfs.c    ****             if (IS_ERR(file_dentry)){
 240:./fs/vfs.c    ****                 pr_info("can not create file: %s\n", path);
 241:./fs/vfs.c    ****                 return (struct file *)file_dentry;
 242:./fs/vfs.c    ****             }
 243:./fs/vfs.c    ****         }
 244:./fs/vfs.c    ****         else {
 245:./fs/vfs.c    ****             return -ENOENT;
 246:./fs/vfs.c    ****         }      
 247:./fs/vfs.c    ****     }
 248:./fs/vfs.c    ****     struct file *file = f_get(file_dentry);
 249:./fs/vfs.c    ****     if(IS_ERR(file))
 250:./fs/vfs.c    ****         return ERR_PTR(-ENOMEM);
 251:./fs/vfs.c    ****     file->f_flags = flags;
 252:./fs/vfs.c    ****     file->f_mode = mode;
 253:./fs/vfs.c    ****     int flag = 0;
 254:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 255:./fs/vfs.c    ****     if(file->f_op != NULL){
 256:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 257:./fs/vfs.c    ****         if(file->f_op->open != NULL)
 258:./fs/vfs.c    ****         flag = file->f_op->open(file->f_inode,file);
 259:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock);
 260:./fs/vfs.c    ****     }
 261:./fs/vfs.c    ****     spin_unlock(&file->f_slock);
 262:./fs/vfs.c    ****     if(flag < 0){
 263:./fs/vfs.c    ****         f_put(file);
 264:./fs/vfs.c    ****         return NULL;
 265:./fs/vfs.c    ****     }
 266:./fs/vfs.c    ****     
 267:./fs/vfs.c    ****     if(file->f_op->write != NULL)
 268:./fs/vfs.c    ****     file->f_flags |= O_RDONLY;
 269:./fs/vfs.c    **** 
 270:./fs/vfs.c    ****     file->f_inode->i_atime_nsec  = jiffies/HZ;
 271:./fs/vfs.c    ****     file->f_inode->i_atime_nsec  = jiffies%HZ;
 272:./fs/vfs.c    **** 
 273:./fs/vfs.c    ****     return file;
 274:./fs/vfs.c    **** }
 275:./fs/vfs.c    **** EXPORT_SYMBOL(filp_open);
 276:./fs/vfs.c    **** 
 277:./fs/vfs.c    **** static void print_read_only_message()
 278:./fs/vfs.c    **** {
 537              		.loc 1 278 1 is_stmt 1 view -0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541 0000 08B5     		push	{r3, lr}
 542              	.LCFI9:
 543              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccvYHbtC.s 			page 20


 544              		.cfi_offset 3, -8
 545              		.cfi_offset 14, -4
 279:./fs/vfs.c    ****     pr_info("kernel_write:this file is read only\n");
 546              		.loc 1 279 5 view .LVU153
 547 0002 0248     		ldr	r0, .L42
 548 0004 FFF7FEFF 		bl	printk
 549              	.LVL59:
 280:./fs/vfs.c    **** }
 550              		.loc 1 280 1 is_stmt 0 view .LVU154
 551 0008 08BD     		pop	{r3, pc}
 552              	.L43:
 553 000a 00BF     		.align	2
 554              	.L42:
 555 000c 00000000 		.word	.LC1
 556              		.cfi_endproc
 557              	.LFE1047:
 559              		.section	.rodata.__remove_dentry.str1.4,"aMS",%progbits,1
 560              		.align	2
 561              	.LC2:
 562 0000 63616E20 		.ascii	"can not remove mount point\012\000"
 562      6E6F7420 
 562      72656D6F 
 562      7665206D 
 562      6F756E74 
 563              		.section	.text.__remove_dentry,"ax",%progbits
 564              		.align	1
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 569              	__remove_dentry:
 570              	.LVL60:
 571              	.LFB1038:
  91:./fs/vfs.c    ****     if(dentry == NULL){                            
 572              		.loc 1 91 1 is_stmt 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
  92:./fs/vfs.c    ****         return -1;                                    
 576              		.loc 1 92 5 view .LVU156
  92:./fs/vfs.c    ****         return -1;                                    
 577              		.loc 1 92 7 is_stmt 0 view .LVU157
 578 0000 10B3     		cbz	r0, .L47
  91:./fs/vfs.c    ****     if(dentry == NULL){                            
 579              		.loc 1 91 1 view .LVU158
 580 0002 10B5     		push	{r4, lr}
 581              	.LCFI10:
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 4, -8
 584              		.cfi_offset 14, -4
 585 0004 0446     		mov	r4, r0
  95:./fs/vfs.c    ****         pr_warn("can not remove mount point\n");
 586              		.loc 1 95 5 is_stmt 1 view .LVU159
  95:./fs/vfs.c    ****         pr_warn("can not remove mount point\n");
 587              		.loc 1 95 14 is_stmt 0 view .LVU160
 588 0006 036D     		ldr	r3, [r0, #80]
  95:./fs/vfs.c    ****         pr_warn("can not remove mount point\n");
 589              		.loc 1 95 20 view .LVU161
ARM GAS  /tmp/ccvYHbtC.s 			page 21


 590 0008 9B69     		ldr	r3, [r3, #24]
  95:./fs/vfs.c    ****         pr_warn("can not remove mount point\n");
 591              		.loc 1 95 7 view .LVU162
 592 000a 8342     		cmp	r3, r0
 593 000c 16D0     		beq	.L54
  99:./fs/vfs.c    ****     if((i_mode &  S_IFMT) == S_IFCHR || (i_mode &  S_IFMT) == S_IFBLK  ){
 594              		.loc 1 99 5 is_stmt 1 view .LVU163
  99:./fs/vfs.c    ****     if((i_mode &  S_IFMT) == S_IFCHR || (i_mode &  S_IFMT) == S_IFBLK  ){
 595              		.loc 1 99 28 is_stmt 0 view .LVU164
 596 000e 826C     		ldr	r2, [r0, #72]
  99:./fs/vfs.c    ****     if((i_mode &  S_IFMT) == S_IFCHR || (i_mode &  S_IFMT) == S_IFBLK  ){
 597              		.loc 1 99 13 view .LVU165
 598 0010 1388     		ldrh	r3, [r2]
 599              	.LVL61:
 100:./fs/vfs.c    ****         return -1;
 600              		.loc 1 100 5 is_stmt 1 view .LVU166
 601 0012 03F47043 		and	r3, r3, #61440
 100:./fs/vfs.c    ****         return -1;
 602              		.loc 1 100 7 is_stmt 0 view .LVU167
 603 0016 B3F5005F 		cmp	r3, #8192
 604 001a 18D0     		beq	.L48
 100:./fs/vfs.c    ****         return -1;
 605              		.loc 1 100 38 discriminator 1 view .LVU168
 606 001c B3F5C04F 		cmp	r3, #24576
 607 0020 18D0     		beq	.L49
 103:./fs/vfs.c    ****     {
 608              		.loc 1 103 10 is_stmt 1 view .LVU169
 108:./fs/vfs.c    ****         simple_unlink(dentry->d_parent->d_inode,dentry);
 609              		.loc 1 108 9 view .LVU170
 108:./fs/vfs.c    ****         simple_unlink(dentry->d_parent->d_inode,dentry);
 610              		.loc 1 108 24 is_stmt 0 view .LVU171
 611 0022 1369     		ldr	r3, [r2, #16]
 108:./fs/vfs.c    ****         simple_unlink(dentry->d_parent->d_inode,dentry);
 612              		.loc 1 108 30 view .LVU172
 613 0024 DB69     		ldr	r3, [r3, #28]
 108:./fs/vfs.c    ****         simple_unlink(dentry->d_parent->d_inode,dentry);
 614              		.loc 1 108 45 view .LVU173
 615 0026 4268     		ldr	r2, [r0, #4]
 616              	.LVL62:
 108:./fs/vfs.c    ****         simple_unlink(dentry->d_parent->d_inode,dentry);
 617              		.loc 1 108 9 view .LVU174
 618 0028 0146     		mov	r1, r0
 619 002a 906C     		ldr	r0, [r2, #72]
 620              	.LVL63:
 108:./fs/vfs.c    ****         simple_unlink(dentry->d_parent->d_inode,dentry);
 621              		.loc 1 108 9 view .LVU175
 622 002c 9847     		blx	r3
 623              	.LVL64:
 109:./fs/vfs.c    ****     }
 624              		.loc 1 109 9 is_stmt 1 view .LVU176
 109:./fs/vfs.c    ****     }
 625              		.loc 1 109 29 is_stmt 0 view .LVU177
 626 002e 6368     		ldr	r3, [r4, #4]
 109:./fs/vfs.c    ****     }
 627              		.loc 1 109 9 view .LVU178
 628 0030 2146     		mov	r1, r4
 629 0032 986C     		ldr	r0, [r3, #72]
ARM GAS  /tmp/ccvYHbtC.s 			page 22


 630 0034 FFF7FEFF 		bl	simple_unlink
 631              	.LVL65:
 111:./fs/vfs.c    **** }
 632              		.loc 1 111 5 is_stmt 1 view .LVU179
 111:./fs/vfs.c    **** }
 633              		.loc 1 111 12 is_stmt 0 view .LVU180
 634 0038 0020     		movs	r0, #0
 635              	.LVL66:
 636              	.L44:
 112:./fs/vfs.c    **** 
 637              		.loc 1 112 1 view .LVU181
 638 003a 10BD     		pop	{r4, pc}
 639              	.LVL67:
 640              	.L54:
  96:./fs/vfs.c    ****         return -1;
 641              		.loc 1 96 9 is_stmt 1 view .LVU182
 642 003c 0748     		ldr	r0, .L55
 643              	.LVL68:
  96:./fs/vfs.c    ****         return -1;
 644              		.loc 1 96 9 is_stmt 0 view .LVU183
 645 003e FFF7FEFF 		bl	printk
 646              	.LVL69:
  97:./fs/vfs.c    ****     }
 647              		.loc 1 97 9 is_stmt 1 view .LVU184
  97:./fs/vfs.c    ****     }
 648              		.loc 1 97 16 is_stmt 0 view .LVU185
 649 0042 4FF0FF30 		mov	r0, #-1
 650 0046 F8E7     		b	.L44
 651              	.LVL70:
 652              	.L47:
 653              	.LCFI11:
 654              		.cfi_def_cfa_offset 0
 655              		.cfi_restore 4
 656              		.cfi_restore 14
  93:./fs/vfs.c    ****     }
 657              		.loc 1 93 16 view .LVU186
 658 0048 4FF0FF30 		mov	r0, #-1
 659              	.LVL71:
 112:./fs/vfs.c    **** 
 660              		.loc 1 112 1 view .LVU187
 661 004c 7047     		bx	lr
 662              	.LVL72:
 663              	.L48:
 664              	.LCFI12:
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 4, -8
 667              		.cfi_offset 14, -4
 101:./fs/vfs.c    ****     }
 668              		.loc 1 101 16 view .LVU188
 669 004e 4FF0FF30 		mov	r0, #-1
 670              	.LVL73:
 101:./fs/vfs.c    ****     }
 671              		.loc 1 101 16 view .LVU189
 672 0052 F2E7     		b	.L44
 673              	.LVL74:
 674              	.L49:
 101:./fs/vfs.c    ****     }
ARM GAS  /tmp/ccvYHbtC.s 			page 23


 675              		.loc 1 101 16 view .LVU190
 676 0054 4FF0FF30 		mov	r0, #-1
 677              	.LVL75:
 101:./fs/vfs.c    ****     }
 678              		.loc 1 101 16 view .LVU191
 679 0058 EFE7     		b	.L44
 680              	.L56:
 681 005a 00BF     		.align	2
 682              	.L55:
 683 005c 00000000 		.word	.LC2
 684              		.cfi_endproc
 685              	.LFE1038:
 687              		.section	.text.__spin_lock,"ax",%progbits
 688              		.align	1
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 693              	__spin_lock:
 694              	.LVL76:
 695              	.LFB227:
  15:./arch/arm_m/include/asm/spinlock.h **** 
 696              		.loc 2 15 47 is_stmt 1 view -0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
  15:./arch/arm_m/include/asm/spinlock.h **** 
 700              		.loc 2 15 47 is_stmt 0 view .LVU193
 701 0000 38B5     		push	{r3, r4, r5, lr}
 702              	.LCFI13:
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 3, -16
 705              		.cfi_offset 4, -12
 706              		.cfi_offset 5, -8
 707              		.cfi_offset 14, -4
 708 0002 0446     		mov	r4, r0
  17:./arch/arm_m/include/asm/spinlock.h ****     if(lock->flag == 0){
 709              		.loc 2 17 5 is_stmt 1 view .LVU194
 710 0004 FFF7FEFF 		bl	stop_all_scheduler
 711              	.LVL77:
  18:./arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 712              		.loc 2 18 5 view .LVU195
  18:./arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 713              		.loc 2 18 12 is_stmt 0 view .LVU196
 714 0008 2368     		ldr	r3, [r4]
  18:./arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 715              		.loc 2 18 7 view .LVU197
 716 000a 2BB9     		cbnz	r3, .L58
  19:./arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
 717              		.loc 2 19 11 is_stmt 1 view .LVU198
  19:./arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
 718              		.loc 2 19 22 is_stmt 0 view .LVU199
 719 000c 0125     		movs	r5, #1
 720 000e 2560     		str	r5, [r4]
  20:./arch/arm_m/include/asm/spinlock.h ****         return 1;
 721              		.loc 2 20 11 is_stmt 1 view .LVU200
 722 0010 FFF7FEFF 		bl	start_all_scheduler
 723              	.LVL78:
ARM GAS  /tmp/ccvYHbtC.s 			page 24


  21:./arch/arm_m/include/asm/spinlock.h ****     }
 724              		.loc 2 21 9 view .LVU201
  21:./arch/arm_m/include/asm/spinlock.h ****     }
 725              		.loc 2 21 16 is_stmt 0 view .LVU202
 726 0014 2846     		mov	r0, r5
 727              	.L57:
  28:./arch/arm_m/include/asm/spinlock.h **** 
 728              		.loc 2 28 1 view .LVU203
 729 0016 38BD     		pop	{r3, r4, r5, pc}
 730              	.LVL79:
 731              	.L58:
  25:./arch/arm_m/include/asm/spinlock.h ****         return 0;
 732              		.loc 2 25 9 is_stmt 1 view .LVU204
 733 0018 FFF7FEFF 		bl	start_all_scheduler
 734              	.LVL80:
  26:./arch/arm_m/include/asm/spinlock.h ****     }
 735              		.loc 2 26 9 view .LVU205
  26:./arch/arm_m/include/asm/spinlock.h ****     }
 736              		.loc 2 26 16 is_stmt 0 view .LVU206
 737 001c 0020     		movs	r0, #0
 738 001e FAE7     		b	.L57
 739              		.cfi_endproc
 740              	.LFE227:
 742              		.section	.text.spin_lock,"ax",%progbits
 743              		.align	1
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 748              	spin_lock:
 749              	.LVL81:
 750              	.LFB230:
  15:./include/linux/spinlock.h ****     while (1)
 751              		.loc 3 15 1 is_stmt 1 view -0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
  15:./include/linux/spinlock.h ****     while (1)
 755              		.loc 3 15 1 is_stmt 0 view .LVU208
 756 0000 38B5     		push	{r3, r4, r5, lr}
 757              	.LCFI14:
 758              		.cfi_def_cfa_offset 16
 759              		.cfi_offset 3, -16
 760              		.cfi_offset 4, -12
 761              		.cfi_offset 5, -8
 762              		.cfi_offset 14, -4
 763 0002 0446     		mov	r4, r0
 764 0004 06E0     		b	.L64
 765              	.LVL82:
 766              	.L66:
  19:./include/linux/spinlock.h ****             break;
 767              		.loc 3 19 13 is_stmt 1 view .LVU209
  19:./include/linux/spinlock.h ****             break;
 768              		.loc 3 19 27 is_stmt 0 view .LVU210
 769 0006 FFF7FEFF 		bl	get_current_task
 770              	.LVL83:
  19:./include/linux/spinlock.h ****             break;
 771              		.loc 3 19 25 discriminator 1 view .LVU211
ARM GAS  /tmp/ccvYHbtC.s 			page 25


 772 000a 2060     		str	r0, [r4]
  20:./include/linux/spinlock.h ****         }
 773              		.loc 3 20 13 is_stmt 1 view .LVU212
 774              	.L61:
  29:./include/linux/spinlock.h **** 
 775              		.loc 3 29 1 is_stmt 0 view .LVU213
 776 000c 38BD     		pop	{r3, r4, r5, pc}
 777              	.LVL84:
 778              	.L67:
  26:./include/linux/spinlock.h ****         }
 779              		.loc 3 26 13 is_stmt 1 view .LVU214
 780 000e 0520     		movs	r0, #5
 781 0010 FFF7FEFF 		bl	__delay
 782              	.LVL85:
  16:./include/linux/spinlock.h ****     {
 783              		.loc 3 16 11 view .LVU215
 784              	.L64:
  16:./include/linux/spinlock.h ****     {
 785              		.loc 3 16 5 view .LVU216
  18:./include/linux/spinlock.h ****             lock->owner = get_current_task();
 786              		.loc 3 18 9 view .LVU217
  18:./include/linux/spinlock.h ****             lock->owner = get_current_task();
 787              		.loc 3 18 12 is_stmt 0 view .LVU218
 788 0014 2046     		mov	r0, r4
 789 0016 FFF7FEFF 		bl	__spin_lock
 790              	.LVL86:
  18:./include/linux/spinlock.h ****             lock->owner = get_current_task();
 791              		.loc 3 18 11 discriminator 1 view .LVU219
 792 001a 0128     		cmp	r0, #1
 793 001c F3D0     		beq	.L66
  22:./include/linux/spinlock.h ****             return;   
 794              		.loc 3 22 15 is_stmt 1 view .LVU220
  22:./include/linux/spinlock.h ****             return;   
 795              		.loc 3 22 22 is_stmt 0 view .LVU221
 796 001e 2568     		ldr	r5, [r4]
  22:./include/linux/spinlock.h ****             return;   
 797              		.loc 3 22 33 view .LVU222
 798 0020 FFF7FEFF 		bl	get_current_task
 799              	.LVL87:
  22:./include/linux/spinlock.h ****             return;   
 800              		.loc 3 22 17 discriminator 1 view .LVU223
 801 0024 8542     		cmp	r5, r0
 802 0026 F2D1     		bne	.L67
 803 0028 F0E7     		b	.L61
 804              		.cfi_endproc
 805              	.LFE230:
 807              		.section	.text.kernel_read,"ax",%progbits
 808              		.align	1
 809              		.global	kernel_read
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 814              	kernel_read:
 815              	.LVL88:
 816              	.LFB1048:
 281:./fs/vfs.c    **** ssize_t kernel_read(struct file *file, void * buf, size_t count, loff_t *ppos)
 282:./fs/vfs.c    **** {
ARM GAS  /tmp/ccvYHbtC.s 			page 26


 817              		.loc 1 282 1 is_stmt 1 view -0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		.loc 1 282 1 is_stmt 0 view .LVU225
 822 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 823              	.LCFI15:
 824              		.cfi_def_cfa_offset 32
 825              		.cfi_offset 3, -32
 826              		.cfi_offset 4, -28
 827              		.cfi_offset 5, -24
 828              		.cfi_offset 6, -20
 829              		.cfi_offset 7, -16
 830              		.cfi_offset 8, -12
 831              		.cfi_offset 9, -8
 832              		.cfi_offset 14, -4
 283:./fs/vfs.c    ****     if(file == NULL) return -1;
 833              		.loc 1 283 5 is_stmt 1 view .LVU226
 834              		.loc 1 283 7 is_stmt 0 view .LVU227
 835 0004 50B3     		cbz	r0, .L72
 836 0006 8846     		mov	r8, r1
 837 0008 1746     		mov	r7, r2
 838 000a 1D46     		mov	r5, r3
 839 000c 0446     		mov	r4, r0
 284:./fs/vfs.c    ****     ssize_t size =  -EBADF;
 840              		.loc 1 284 5 is_stmt 1 view .LVU228
 841              	.LVL89:
 285:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 842              		.loc 1 285 5 view .LVU229
 843 000e 00F15C06 		add	r6, r0, #92
 844 0012 3046     		mov	r0, r6
 845              	.LVL90:
 846              		.loc 1 285 5 is_stmt 0 view .LVU230
 847 0014 FFF7FEFF 		bl	spin_lock
 848              	.LVL91:
 286:./fs/vfs.c    ****     if(file->f_op != NULL){
 849              		.loc 1 286 5 is_stmt 1 view .LVU231
 850              		.loc 1 286 12 is_stmt 0 view .LVU232
 851 0018 636A     		ldr	r3, [r4, #36]
 852              		.loc 1 286 7 view .LVU233
 853 001a E3B1     		cbz	r3, .L73
 287:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 854              		.loc 1 287 9 is_stmt 1 view .LVU234
 855              		.loc 1 287 24 is_stmt 0 view .LVU235
 856 001c E06A     		ldr	r0, [r4, #44]
 857              		.loc 1 287 9 view .LVU236
 858 001e 5830     		adds	r0, r0, #88
 859 0020 FFF7FEFF 		bl	spin_lock
 860              	.LVL92:
 288:./fs/vfs.c    ****         if(file->f_op->read != NULL)
 861              		.loc 1 288 9 is_stmt 1 view .LVU237
 862              		.loc 1 288 16 is_stmt 0 view .LVU238
 863 0024 636A     		ldr	r3, [r4, #36]
 864              		.loc 1 288 22 view .LVU239
 865 0026 D3F80C90 		ldr	r9, [r3, #12]
 866              		.loc 1 288 11 view .LVU240
 867 002a B9F1000F 		cmp	r9, #0
ARM GAS  /tmp/ccvYHbtC.s 			page 27


 868 002e 0FD0     		beq	.L74
 289:./fs/vfs.c    ****         size = file->f_op->read(file,buf,count,ppos);
 869              		.loc 1 289 9 is_stmt 1 view .LVU241
 870              		.loc 1 289 16 is_stmt 0 view .LVU242
 871 0030 2B46     		mov	r3, r5
 872 0032 3A46     		mov	r2, r7
 873 0034 4146     		mov	r1, r8
 874 0036 2046     		mov	r0, r4
 875 0038 C847     		blx	r9
 876              	.LVL93:
 877 003a 0546     		mov	r5, r0
 878              	.LVL94:
 879              	.L71:
 290:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock);
 880              		.loc 1 290 9 is_stmt 1 view .LVU243
 881              		.loc 1 290 26 is_stmt 0 view .LVU244
 882 003c E06A     		ldr	r0, [r4, #44]
 883              		.loc 1 290 9 view .LVU245
 884 003e 5830     		adds	r0, r0, #88
 885 0040 FFF7FEFF 		bl	spin_unlock
 886              	.LVL95:
 887              	.L70:
 291:./fs/vfs.c    ****     }
 292:./fs/vfs.c    ****     spin_unlock(&file->f_slock);
 888              		.loc 1 292 5 is_stmt 1 view .LVU246
 889 0044 3046     		mov	r0, r6
 890 0046 FFF7FEFF 		bl	spin_unlock
 891              	.LVL96:
 293:./fs/vfs.c    ****     return size;
 892              		.loc 1 293 5 view .LVU247
 893              	.L68:
 294:./fs/vfs.c    **** }
 894              		.loc 1 294 1 is_stmt 0 view .LVU248
 895 004a 2846     		mov	r0, r5
 896 004c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 897              	.LVL97:
 898              	.L74:
 284:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 899              		.loc 1 284 13 view .LVU249
 900 0050 6FF00805 		mvn	r5, #8
 901              	.LVL98:
 284:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 902              		.loc 1 284 13 view .LVU250
 903 0054 F2E7     		b	.L71
 904              	.LVL99:
 905              	.L73:
 284:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 906              		.loc 1 284 13 view .LVU251
 907 0056 6FF00805 		mvn	r5, #8
 908              	.LVL100:
 284:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 909              		.loc 1 284 13 view .LVU252
 910 005a F3E7     		b	.L70
 911              	.LVL101:
 912              	.L72:
 283:./fs/vfs.c    ****     ssize_t size =  -EBADF;
 913              		.loc 1 283 29 discriminator 1 view .LVU253
ARM GAS  /tmp/ccvYHbtC.s 			page 28


 914 005c 4FF0FF35 		mov	r5, #-1
 915 0060 F3E7     		b	.L68
 916              		.cfi_endproc
 917              	.LFE1048:
 919              		.section	.text.kernel_write,"ax",%progbits
 920              		.align	1
 921              		.global	kernel_write
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 926              	kernel_write:
 927              	.LVL102:
 928              	.LFB1049:
 295:./fs/vfs.c    **** EXPORT_SYMBOL(kernel_read);
 296:./fs/vfs.c    **** 
 297:./fs/vfs.c    **** ssize_t kernel_write(struct file *file,const void * buf, size_t count, loff_t *ppos)
 298:./fs/vfs.c    **** {    
 929              		.loc 1 298 1 is_stmt 1 view -0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              		.loc 1 298 1 is_stmt 0 view .LVU255
 934 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 935              	.LCFI16:
 936              		.cfi_def_cfa_offset 32
 937              		.cfi_offset 3, -32
 938              		.cfi_offset 4, -28
 939              		.cfi_offset 5, -24
 940              		.cfi_offset 6, -20
 941              		.cfi_offset 7, -16
 942              		.cfi_offset 8, -12
 943              		.cfi_offset 9, -8
 944              		.cfi_offset 14, -4
 299:./fs/vfs.c    ****     if(file == NULL) return -1;
 945              		.loc 1 299 5 is_stmt 1 view .LVU256
 946              		.loc 1 299 7 is_stmt 0 view .LVU257
 947 0004 0028     		cmp	r0, #0
 948 0006 3AD0     		beq	.L80
 949 0008 0D46     		mov	r5, r1
 950 000a 9146     		mov	r9, r2
 951 000c 9846     		mov	r8, r3
 952 000e 0446     		mov	r4, r0
 300:./fs/vfs.c    ****     if ((file->f_flags & O_ACCMODE) == O_RDONLY) {
 953              		.loc 1 300 5 is_stmt 1 view .LVU258
 954              		.loc 1 300 14 is_stmt 0 view .LVU259
 955 0010 036B     		ldr	r3, [r0, #48]
 956              	.LVL103:
 957              		.loc 1 300 8 view .LVU260
 958 0012 13F0030F 		tst	r3, #3
 959 0016 2DD0     		beq	.L82
 301:./fs/vfs.c    ****         print_read_only_message();
 302:./fs/vfs.c    ****         return -EBADF;  
 303:./fs/vfs.c    ****     }
 304:./fs/vfs.c    ****     ssize_t size;
 960              		.loc 1 304 5 is_stmt 1 view .LVU261
 305:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 961              		.loc 1 305 5 view .LVU262
ARM GAS  /tmp/ccvYHbtC.s 			page 29


 962 0018 00F15C06 		add	r6, r0, #92
 963 001c 3046     		mov	r0, r6
 964              	.LVL104:
 965              		.loc 1 305 5 is_stmt 0 view .LVU263
 966 001e FFF7FEFF 		bl	spin_lock
 967              	.LVL105:
 306:./fs/vfs.c    ****     if(file->f_op != NULL){
 968              		.loc 1 306 5 is_stmt 1 view .LVU264
 969              		.loc 1 306 12 is_stmt 0 view .LVU265
 970 0022 636A     		ldr	r3, [r4, #36]
 971              		.loc 1 306 7 view .LVU266
 972 0024 03B3     		cbz	r3, .L79
 307:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 973              		.loc 1 307 9 is_stmt 1 view .LVU267
 974              		.loc 1 307 24 is_stmt 0 view .LVU268
 975 0026 E06A     		ldr	r0, [r4, #44]
 976              		.loc 1 307 9 view .LVU269
 977 0028 5830     		adds	r0, r0, #88
 978 002a FFF7FEFF 		bl	spin_lock
 979              	.LVL106:
 308:./fs/vfs.c    ****         size = file->f_op->write(file,buf,count,ppos);   
 980              		.loc 1 308 9 is_stmt 1 view .LVU270
 981              		.loc 1 308 20 is_stmt 0 view .LVU271
 982 002e 636A     		ldr	r3, [r4, #36]
 983              		.loc 1 308 26 view .LVU272
 984 0030 1F69     		ldr	r7, [r3, #16]
 985              		.loc 1 308 16 view .LVU273
 986 0032 4346     		mov	r3, r8
 987 0034 4A46     		mov	r2, r9
 988 0036 2946     		mov	r1, r5
 989 0038 2046     		mov	r0, r4
 990 003a B847     		blx	r7
 991              	.LVL107:
 992 003c 0746     		mov	r7, r0
 993              	.LVL108:
 309:./fs/vfs.c    ****         file->f_inode->i_mtime_sec   = jiffies/HZ;
 994              		.loc 1 309 9 is_stmt 1 view .LVU274
 995              		.loc 1 309 40 is_stmt 0 view .LVU275
 996 003e FFF7FEFF 		bl	ktime_get
 997              	.LVL109:
 998              		.loc 1 309 13 discriminator 1 view .LVU276
 999 0042 E36A     		ldr	r3, [r4, #44]
 1000              		.loc 1 309 47 discriminator 1 view .LVU277
 1001 0044 0F4D     		ldr	r5, .L83
 1002              	.LVL110:
 1003              		.loc 1 309 47 discriminator 1 view .LVU278
 1004 0046 2A68     		ldr	r2, [r5]
 1005 0048 B0FBF2F0 		udiv	r0, r0, r2
 1006              		.loc 1 309 38 discriminator 1 view .LVU279
 1007 004c D862     		str	r0, [r3, #44]
 310:./fs/vfs.c    ****         file->f_inode->i_mtime_nsec  = jiffies%HZ; 
 1008              		.loc 1 310 9 is_stmt 1 view .LVU280
 1009              		.loc 1 310 40 is_stmt 0 view .LVU281
 1010 004e FFF7FEFF 		bl	ktime_get
 1011              	.LVL111:
 1012              		.loc 1 310 13 discriminator 1 view .LVU282
 1013 0052 E26A     		ldr	r2, [r4, #44]
ARM GAS  /tmp/ccvYHbtC.s 			page 30


 1014              		.loc 1 310 47 discriminator 1 view .LVU283
 1015 0054 2B68     		ldr	r3, [r5]
 1016 0056 B0FBF3F1 		udiv	r1, r0, r3
 1017 005a 03FB1103 		mls	r3, r3, r1, r0
 1018              		.loc 1 310 38 discriminator 1 view .LVU284
 1019 005e 9363     		str	r3, [r2, #56]
 311:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock);
 1020              		.loc 1 311 9 is_stmt 1 view .LVU285
 1021              		.loc 1 311 26 is_stmt 0 view .LVU286
 1022 0060 E06A     		ldr	r0, [r4, #44]
 1023              		.loc 1 311 9 view .LVU287
 1024 0062 5830     		adds	r0, r0, #88
 1025 0064 FFF7FEFF 		bl	spin_unlock
 1026              	.LVL112:
 1027              	.L79:
 312:./fs/vfs.c    ****     }
 313:./fs/vfs.c    ****     spin_unlock(&file->f_slock);
 1028              		.loc 1 313 5 is_stmt 1 view .LVU288
 1029 0068 3046     		mov	r0, r6
 1030 006a FFF7FEFF 		bl	spin_unlock
 1031              	.LVL113:
 314:./fs/vfs.c    ****     return size;
 1032              		.loc 1 314 5 view .LVU289
 1033              	.L76:
 315:./fs/vfs.c    **** }
 1034              		.loc 1 315 1 is_stmt 0 view .LVU290
 1035 006e 3846     		mov	r0, r7
 1036 0070 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1037              	.LVL114:
 1038              	.L82:
 301:./fs/vfs.c    ****         return -EBADF;  
 1039              		.loc 1 301 9 is_stmt 1 view .LVU291
 1040 0074 FFF7FEFF 		bl	print_read_only_message
 1041              	.LVL115:
 302:./fs/vfs.c    ****     }
 1042              		.loc 1 302 9 view .LVU292
 302:./fs/vfs.c    ****     }
 1043              		.loc 1 302 16 is_stmt 0 view .LVU293
 1044 0078 6FF00807 		mvn	r7, #8
 1045 007c F7E7     		b	.L76
 1046              	.LVL116:
 1047              	.L80:
 299:./fs/vfs.c    ****     if ((file->f_flags & O_ACCMODE) == O_RDONLY) {
 1048              		.loc 1 299 29 discriminator 1 view .LVU294
 1049 007e 4FF0FF37 		mov	r7, #-1
 1050 0082 F4E7     		b	.L76
 1051              	.L84:
 1052              		.align	2
 1053              	.L83:
 1054 0084 00000000 		.word	HZ
 1055              		.cfi_endproc
 1056              	.LFE1049:
 1058              		.section	.text.vfs_ioctl,"ax",%progbits
 1059              		.align	1
 1060              		.global	vfs_ioctl
 1061              		.syntax unified
 1062              		.thumb
ARM GAS  /tmp/ccvYHbtC.s 			page 31


 1063              		.thumb_func
 1065              	vfs_ioctl:
 1066              	.LVL117:
 1067              	.LFB1050:
 316:./fs/vfs.c    **** EXPORT_SYMBOL(kernel_write);
 317:./fs/vfs.c    **** 
 318:./fs/vfs.c    **** 
 319:./fs/vfs.c    **** long vfs_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 320:./fs/vfs.c    **** {
 1068              		.loc 1 320 1 is_stmt 1 view -0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              		.loc 1 320 1 is_stmt 0 view .LVU296
 1073 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1074              	.LCFI17:
 1075              		.cfi_def_cfa_offset 24
 1076              		.cfi_offset 3, -24
 1077              		.cfi_offset 4, -20
 1078              		.cfi_offset 5, -16
 1079              		.cfi_offset 6, -12
 1080              		.cfi_offset 7, -8
 1081              		.cfi_offset 14, -4
 321:./fs/vfs.c    ****     if(file == NULL) return -1;
 1082              		.loc 1 321 5 is_stmt 1 view .LVU297
 1083              		.loc 1 321 7 is_stmt 0 view .LVU298
 1084 0002 68B3     		cbz	r0, .L90
 1085 0004 0F46     		mov	r7, r1
 1086 0006 1546     		mov	r5, r2
 1087 0008 0446     		mov	r4, r0
 322:./fs/vfs.c    ****     if ((file->f_flags & O_ACCMODE) == O_RDONLY) {
 1088              		.loc 1 322 5 is_stmt 1 view .LVU299
 1089              		.loc 1 322 14 is_stmt 0 view .LVU300
 1090 000a 036B     		ldr	r3, [r0, #48]
 1091              		.loc 1 322 8 view .LVU301
 1092 000c 13F0030F 		tst	r3, #3
 1093 0010 1BD0     		beq	.L94
 323:./fs/vfs.c    ****         print_read_only_message();
 324:./fs/vfs.c    ****         return -EBADF;  // Âè™ËØªÊâìÂºÄÔºå‰∏çÂÖÅËÆ∏ÂÜô
 325:./fs/vfs.c    ****     }
 326:./fs/vfs.c    ****     ssize_t size =  -EBADF;
 1094              		.loc 1 326 5 is_stmt 1 view .LVU302
 1095              	.LVL118:
 327:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1096              		.loc 1 327 5 view .LVU303
 1097 0012 00F15C06 		add	r6, r0, #92
 1098 0016 3046     		mov	r0, r6
 1099              	.LVL119:
 1100              		.loc 1 327 5 is_stmt 0 view .LVU304
 1101 0018 FFF7FEFF 		bl	spin_lock
 1102              	.LVL120:
 328:./fs/vfs.c    ****     if(file->f_op != NULL){
 1103              		.loc 1 328 5 is_stmt 1 view .LVU305
 1104              		.loc 1 328 12 is_stmt 0 view .LVU306
 1105 001c 636A     		ldr	r3, [r4, #36]
 1106              		.loc 1 328 7 view .LVU307
 1107 001e E3B1     		cbz	r3, .L91
ARM GAS  /tmp/ccvYHbtC.s 			page 32


 329:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 1108              		.loc 1 329 9 is_stmt 1 view .LVU308
 1109              		.loc 1 329 24 is_stmt 0 view .LVU309
 1110 0020 E06A     		ldr	r0, [r4, #44]
 1111              		.loc 1 329 9 view .LVU310
 1112 0022 5830     		adds	r0, r0, #88
 1113 0024 FFF7FEFF 		bl	spin_lock
 1114              	.LVL121:
 330:./fs/vfs.c    ****         if(file->f_op->unlocked_ioctl != NULL)
 1115              		.loc 1 330 9 is_stmt 1 view .LVU311
 1116              		.loc 1 330 16 is_stmt 0 view .LVU312
 1117 0028 636A     		ldr	r3, [r4, #36]
 1118              		.loc 1 330 22 view .LVU313
 1119 002a 9B6A     		ldr	r3, [r3, #40]
 1120              		.loc 1 330 11 view .LVU314
 1121 002c 93B1     		cbz	r3, .L92
 331:./fs/vfs.c    ****         size = file->f_op->unlocked_ioctl(file,cmd,arg);
 1122              		.loc 1 331 9 is_stmt 1 view .LVU315
 1123              		.loc 1 331 16 is_stmt 0 view .LVU316
 1124 002e 2A46     		mov	r2, r5
 1125 0030 3946     		mov	r1, r7
 1126 0032 2046     		mov	r0, r4
 1127 0034 9847     		blx	r3
 1128              	.LVL122:
 1129 0036 0546     		mov	r5, r0
 1130              	.LVL123:
 1131              	.L89:
 332:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock); 
 1132              		.loc 1 332 9 is_stmt 1 view .LVU317
 1133              		.loc 1 332 26 is_stmt 0 view .LVU318
 1134 0038 E06A     		ldr	r0, [r4, #44]
 1135              		.loc 1 332 9 view .LVU319
 1136 003a 5830     		adds	r0, r0, #88
 1137 003c FFF7FEFF 		bl	spin_unlock
 1138              	.LVL124:
 1139              	.L88:
 333:./fs/vfs.c    ****     }
 334:./fs/vfs.c    ****     spin_unlock(&file->f_slock);
 1140              		.loc 1 334 5 is_stmt 1 view .LVU320
 1141 0040 3046     		mov	r0, r6
 1142 0042 FFF7FEFF 		bl	spin_unlock
 1143              	.LVL125:
 335:./fs/vfs.c    ****     return size;
 1144              		.loc 1 335 5 view .LVU321
 1145              	.L85:
 336:./fs/vfs.c    **** }
 1146              		.loc 1 336 1 is_stmt 0 view .LVU322
 1147 0046 2846     		mov	r0, r5
 1148 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1149              	.LVL126:
 1150              	.L94:
 323:./fs/vfs.c    ****         return -EBADF;  // Âè™ËØªÊâìÂºÄÔºå‰∏çÂÖÅËÆ∏ÂÜô
 1151              		.loc 1 323 9 is_stmt 1 view .LVU323
 1152 004a FFF7FEFF 		bl	print_read_only_message
 1153              	.LVL127:
 324:./fs/vfs.c    ****     }
 1154              		.loc 1 324 9 view .LVU324
ARM GAS  /tmp/ccvYHbtC.s 			page 33


 324:./fs/vfs.c    ****     }
 1155              		.loc 1 324 16 is_stmt 0 view .LVU325
 1156 004e 6FF00805 		mvn	r5, #8
 1157              	.LVL128:
 324:./fs/vfs.c    ****     }
 1158              		.loc 1 324 16 view .LVU326
 1159 0052 F8E7     		b	.L85
 1160              	.LVL129:
 1161              	.L92:
 326:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1162              		.loc 1 326 13 view .LVU327
 1163 0054 6FF00805 		mvn	r5, #8
 1164              	.LVL130:
 326:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1165              		.loc 1 326 13 view .LVU328
 1166 0058 EEE7     		b	.L89
 1167              	.LVL131:
 1168              	.L91:
 326:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1169              		.loc 1 326 13 view .LVU329
 1170 005a 6FF00805 		mvn	r5, #8
 1171              	.LVL132:
 326:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1172              		.loc 1 326 13 view .LVU330
 1173 005e EFE7     		b	.L88
 1174              	.LVL133:
 1175              	.L90:
 321:./fs/vfs.c    ****     if ((file->f_flags & O_ACCMODE) == O_RDONLY) {
 1176              		.loc 1 321 29 discriminator 1 view .LVU331
 1177 0060 4FF0FF35 		mov	r5, #-1
 1178 0064 EFE7     		b	.L85
 1179              		.cfi_endproc
 1180              	.LFE1050:
 1182              		.section	.text.file_close,"ax",%progbits
 1183              		.align	1
 1184              		.global	file_close
 1185              		.syntax unified
 1186              		.thumb
 1187              		.thumb_func
 1189              	file_close:
 1190              	.LVL134:
 1191              	.LFB1051:
 337:./fs/vfs.c    **** EXPORT_SYMBOL(vfs_ioctl);
 338:./fs/vfs.c    **** 
 339:./fs/vfs.c    **** int file_close(struct file *file, fl_owner_t id)
 340:./fs/vfs.c    **** {
 1192              		.loc 1 340 1 is_stmt 1 view -0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 341:./fs/vfs.c    ****     if(file == NULL) return -1;
 1196              		.loc 1 341 5 view .LVU333
 1197              		.loc 1 341 7 is_stmt 0 view .LVU334
 1198 0000 E8B1     		cbz	r0, .L102
 340:./fs/vfs.c    ****     if(file == NULL) return -1;
 1199              		.loc 1 340 1 view .LVU335
 1200 0002 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccvYHbtC.s 			page 34


 1201              	.LCFI18:
 1202              		.cfi_def_cfa_offset 16
 1203              		.cfi_offset 3, -16
 1204              		.cfi_offset 4, -12
 1205              		.cfi_offset 5, -8
 1206              		.cfi_offset 14, -4
 1207 0004 0446     		mov	r4, r0
 342:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1208              		.loc 1 342 5 is_stmt 1 view .LVU336
 1209 0006 00F15C05 		add	r5, r0, #92
 1210 000a 2846     		mov	r0, r5
 1211              	.LVL135:
 1212              		.loc 1 342 5 is_stmt 0 view .LVU337
 1213 000c FFF7FEFF 		bl	spin_lock
 1214              	.LVL136:
 343:./fs/vfs.c    ****     if(file->f_op != NULL){
 1215              		.loc 1 343 5 is_stmt 1 view .LVU338
 1216              		.loc 1 343 12 is_stmt 0 view .LVU339
 1217 0010 636A     		ldr	r3, [r4, #36]
 1218              		.loc 1 343 7 view .LVU340
 1219 0012 6BB1     		cbz	r3, .L97
 344:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 1220              		.loc 1 344 9 is_stmt 1 view .LVU341
 1221              		.loc 1 344 24 is_stmt 0 view .LVU342
 1222 0014 E06A     		ldr	r0, [r4, #44]
 1223              		.loc 1 344 9 view .LVU343
 1224 0016 5830     		adds	r0, r0, #88
 1225 0018 FFF7FEFF 		bl	spin_lock
 1226              	.LVL137:
 345:./fs/vfs.c    ****         if(file->f_op->release != NULL)
 1227              		.loc 1 345 9 is_stmt 1 view .LVU344
 1228              		.loc 1 345 16 is_stmt 0 view .LVU345
 1229 001c 636A     		ldr	r3, [r4, #36]
 1230              		.loc 1 345 22 view .LVU346
 1231 001e DB6B     		ldr	r3, [r3, #60]
 1232              		.loc 1 345 11 view .LVU347
 1233 0020 13B1     		cbz	r3, .L98
 346:./fs/vfs.c    ****          file->f_op->release(file->f_inode,file);
 1234              		.loc 1 346 10 is_stmt 1 view .LVU348
 1235 0022 2146     		mov	r1, r4
 1236 0024 E06A     		ldr	r0, [r4, #44]
 1237 0026 9847     		blx	r3
 1238              	.LVL138:
 1239              	.L98:
 347:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock);
 1240              		.loc 1 347 9 view .LVU349
 1241              		.loc 1 347 26 is_stmt 0 view .LVU350
 1242 0028 E06A     		ldr	r0, [r4, #44]
 1243              		.loc 1 347 9 view .LVU351
 1244 002a 5830     		adds	r0, r0, #88
 1245 002c FFF7FEFF 		bl	spin_unlock
 1246              	.LVL139:
 1247              	.L97:
 348:./fs/vfs.c    ****     }
 349:./fs/vfs.c    ****     spin_unlock(&file->f_slock);
 1248              		.loc 1 349 5 is_stmt 1 view .LVU352
 1249 0030 2846     		mov	r0, r5
ARM GAS  /tmp/ccvYHbtC.s 			page 35


 1250 0032 FFF7FEFF 		bl	spin_unlock
 1251              	.LVL140:
 350:./fs/vfs.c    ****     f_put(file);
 1252              		.loc 1 350 5 view .LVU353
 1253 0036 2046     		mov	r0, r4
 1254 0038 FFF7FEFF 		bl	f_put
 1255              	.LVL141:
 351:./fs/vfs.c    **** }
 1256              		.loc 1 351 1 is_stmt 0 view .LVU354
 1257 003c 38BD     		pop	{r3, r4, r5, pc}
 1258              	.LVL142:
 1259              	.L102:
 1260              	.LCFI19:
 1261              		.cfi_def_cfa_offset 0
 1262              		.cfi_restore 3
 1263              		.cfi_restore 4
 1264              		.cfi_restore 5
 1265              		.cfi_restore 14
 341:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1266              		.loc 1 341 22 is_stmt 1 discriminator 1 view .LVU355
 341:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1267              		.loc 1 341 29 is_stmt 0 discriminator 2 view .LVU356
 1268 003e 4FF0FF30 		mov	r0, #-1
 1269              	.LVL143:
 1270              		.loc 1 351 1 view .LVU357
 1271 0042 7047     		bx	lr
 1272              		.cfi_endproc
 1273              	.LFE1051:
 1275              		.section	.text.select_file,"ax",%progbits
 1276              		.align	1
 1277              		.global	select_file
 1278              		.syntax unified
 1279              		.thumb
 1280              		.thumb_func
 1282              	select_file:
 1283              	.LVL144:
 1284              	.LFB1039:
 116:./fs/vfs.c    ****     if(path == NULL) 
 1285              		.loc 1 116 1 is_stmt 1 view -0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 128
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 116:./fs/vfs.c    ****     if(path == NULL) 
 1289              		.loc 1 116 1 is_stmt 0 view .LVU359
 1290 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1291              	.LCFI20:
 1292              		.cfi_def_cfa_offset 24
 1293              		.cfi_offset 4, -24
 1294              		.cfi_offset 5, -20
 1295              		.cfi_offset 6, -16
 1296              		.cfi_offset 7, -12
 1297              		.cfi_offset 8, -8
 1298              		.cfi_offset 14, -4
 1299 0004 A0B0     		sub	sp, sp, #128
 1300              	.LCFI21:
 1301              		.cfi_def_cfa_offset 152
 117:./fs/vfs.c    ****     return NULL;
ARM GAS  /tmp/ccvYHbtC.s 			page 36


 1302              		.loc 1 117 5 is_stmt 1 view .LVU360
 117:./fs/vfs.c    ****     return NULL;
 1303              		.loc 1 117 7 is_stmt 0 view .LVU361
 1304 0006 0746     		mov	r7, r0
 1305 0008 38B3     		cbz	r0, .L108
 1306 000a 0E46     		mov	r6, r1
 119:./fs/vfs.c    ****     return root_dentry;
 1307              		.loc 1 119 5 is_stmt 1 view .LVU362
 119:./fs/vfs.c    ****     return root_dentry;
 1308              		.loc 1 119 12 is_stmt 0 view .LVU363
 1309 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 119:./fs/vfs.c    ****     return root_dentry;
 1310              		.loc 1 119 7 view .LVU364
 1311 000e 2F2B     		cmp	r3, #47
 1312 0010 1AD0     		beq	.L110
 1313              	.L105:
 121:./fs/vfs.c    ****     int path_numbers = get_dir_number(path);
 1314              		.loc 1 121 5 is_stmt 1 view .LVU365
 122:./fs/vfs.c    ****     char file_name[128];    
 1315              		.loc 1 122 5 view .LVU366
 122:./fs/vfs.c    ****     char file_name[128];    
 1316              		.loc 1 122 24 is_stmt 0 view .LVU367
 1317 0012 3846     		mov	r0, r7
 1318              	.LVL145:
 122:./fs/vfs.c    ****     char file_name[128];    
 1319              		.loc 1 122 24 view .LVU368
 1320 0014 FFF7FEFF 		bl	get_dir_number
 1321              	.LVL146:
 122:./fs/vfs.c    ****     char file_name[128];    
 1322              		.loc 1 122 24 view .LVU369
 1323 0018 8046     		mov	r8, r0
 1324              	.LVL147:
 123:./fs/vfs.c    ****     struct dentry * esarch_dentry = root_dentry;
 1325              		.loc 1 123 5 is_stmt 1 view .LVU370
 124:./fs/vfs.c    ****     for(int i = 1 ;i <= path_numbers - offset; i++){
 1326              		.loc 1 124 5 view .LVU371
 124:./fs/vfs.c    ****     for(int i = 1 ;i <= path_numbers - offset; i++){
 1327              		.loc 1 124 21 is_stmt 0 view .LVU372
 1328 001a 114B     		ldr	r3, .L111
 1329 001c 1C68     		ldr	r4, [r3]
 1330              	.LVL148:
 125:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1331              		.loc 1 125 5 is_stmt 1 view .LVU373
 1332              	.LBB43:
 125:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1333              		.loc 1 125 9 view .LVU374
 125:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1334              		.loc 1 125 13 is_stmt 0 view .LVU375
 1335 001e 0125     		movs	r5, #1
 1336              	.LVL149:
 1337              	.L106:
 125:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1338              		.loc 1 125 22 is_stmt 1 discriminator 1 view .LVU376
 125:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1339              		.loc 1 125 38 is_stmt 0 discriminator 1 view .LVU377
 1340 0020 A8EB0603 		sub	r3, r8, r6
 125:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
ARM GAS  /tmp/ccvYHbtC.s 			page 37


 1341              		.loc 1 125 22 discriminator 1 view .LVU378
 1342 0024 AB42     		cmp	r3, r5
 1343 0026 14DB     		blt	.L103
 126:./fs/vfs.c    ****         esarch_dentry = find_dentry(esarch_dentry,file_name,0); 
 1344              		.loc 1 126 9 is_stmt 1 view .LVU379
 1345 0028 2A46     		mov	r2, r5
 1346 002a 6946     		mov	r1, sp
 1347 002c 3846     		mov	r0, r7
 1348 002e FFF7FEFF 		bl	get_dir_name
 1349              	.LVL150:
 127:./fs/vfs.c    ****         if(IS_ERR(esarch_dentry)){
 1350              		.loc 1 127 9 view .LVU380
 127:./fs/vfs.c    ****         if(IS_ERR(esarch_dentry)){
 1351              		.loc 1 127 25 is_stmt 0 view .LVU381
 1352 0032 0022     		movs	r2, #0
 1353 0034 6946     		mov	r1, sp
 1354 0036 2046     		mov	r0, r4
 1355 0038 FFF7FEFF 		bl	find_dentry
 1356              	.LVL151:
 1357 003c 0446     		mov	r4, r0
 1358              	.LVL152:
 128:./fs/vfs.c    ****             return esarch_dentry;
 1359              		.loc 1 128 9 is_stmt 1 view .LVU382
 1360              	.LBB44:
 1361              	.LBI44:
  75:./include/linux/err.h **** {
 1362              		.loc 5 75 33 view .LVU383
 1363              	.LBB45:
 1364              		.loc 5 77 2 view .LVU384
 1365              		.loc 5 77 2 is_stmt 0 view .LVU385
 1366              	.LBE45:
 1367              	.LBE44:
 128:./fs/vfs.c    ****             return esarch_dentry;
 1368              		.loc 1 128 11 discriminator 1 view .LVU386
 1369 003e 10F5805F 		cmn	r0, #4096
 1370 0042 06D8     		bhi	.L103
 125:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1371              		.loc 1 125 49 is_stmt 1 discriminator 2 view .LVU387
 1372 0044 0135     		adds	r5, r5, #1
 1373              	.LVL153:
 125:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1374              		.loc 1 125 49 is_stmt 0 discriminator 2 view .LVU388
 1375 0046 EBE7     		b	.L106
 1376              	.LVL154:
 1377              	.L110:
 125:./fs/vfs.c    ****         get_dir_name(path,file_name,i); //‰∏çÂèØËÉΩÈîôËØØÊâÄ‰ª•‰∏çÈúÄË¶ÅÈ™åËØÅ
 1378              		.loc 1 125 49 discriminator 2 view .LVU389
 1379              	.LBE43:
 119:./fs/vfs.c    ****     return root_dentry;
 1380              		.loc 1 119 30 discriminator 1 view .LVU390
 1381 0048 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 119:./fs/vfs.c    ****     return root_dentry;
 1382              		.loc 1 119 23 discriminator 1 view .LVU391
 1383 004a 002B     		cmp	r3, #0
 1384 004c E1D1     		bne	.L105
 120:./fs/vfs.c    ****     int err;    
 1385              		.loc 1 120 5 is_stmt 1 view .LVU392
ARM GAS  /tmp/ccvYHbtC.s 			page 38


 120:./fs/vfs.c    ****     int err;    
 1386              		.loc 1 120 12 is_stmt 0 view .LVU393
 1387 004e 044B     		ldr	r3, .L111
 1388 0050 1C68     		ldr	r4, [r3]
 1389              	.LVL155:
 1390              	.L103:
 133:./fs/vfs.c    **** 
 1391              		.loc 1 133 1 view .LVU394
 1392 0052 2046     		mov	r0, r4
 1393 0054 20B0     		add	sp, sp, #128
 1394              	.LCFI22:
 1395              		.cfi_remember_state
 1396              		.cfi_def_cfa_offset 24
 1397              		@ sp needed
 1398 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1399              	.LVL156:
 1400              	.L108:
 1401              	.LCFI23:
 1402              		.cfi_restore_state
 118:./fs/vfs.c    ****     if(path[0] == '/' && path[1] == '\0') 
 1403              		.loc 1 118 12 view .LVU395
 1404 005a 0446     		mov	r4, r0
 1405 005c F9E7     		b	.L103
 1406              	.L112:
 1407 005e 00BF     		.align	2
 1408              	.L111:
 1409 0060 00000000 		.word	root_dentry
 1410              		.cfi_endproc
 1411              	.LFE1039:
 1413              		.section	.text.remove_dentry,"ax",%progbits
 1414              		.align	1
 1415              		.global	remove_dentry
 1416              		.syntax unified
 1417              		.thumb
 1418              		.thumb_func
 1420              	remove_dentry:
 1421              	.LVL157:
 1422              	.LFB1041:
 167:./fs/vfs.c    ****     struct  dentry * dentry = select_file(path,0);
 1423              		.loc 1 167 1 is_stmt 1 view -0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 0, uses_anonymous_args = 0
 167:./fs/vfs.c    ****     struct  dentry * dentry = select_file(path,0);
 1427              		.loc 1 167 1 is_stmt 0 view .LVU397
 1428 0000 10B5     		push	{r4, lr}
 1429              	.LCFI24:
 1430              		.cfi_def_cfa_offset 8
 1431              		.cfi_offset 4, -8
 1432              		.cfi_offset 14, -4
 168:./fs/vfs.c    ****     if(!IS_ERR(dentry)){
 1433              		.loc 1 168 5 is_stmt 1 view .LVU398
 168:./fs/vfs.c    ****     if(!IS_ERR(dentry)){
 1434              		.loc 1 168 31 is_stmt 0 view .LVU399
 1435 0002 0021     		movs	r1, #0
 1436 0004 FFF7FEFF 		bl	select_file
 1437              	.LVL158:
ARM GAS  /tmp/ccvYHbtC.s 			page 39


 169:./fs/vfs.c    ****         __remove_dentry(dentry);
 1438              		.loc 1 169 5 is_stmt 1 view .LVU400
 1439              	.LBB46:
 1440              	.LBI46:
  75:./include/linux/err.h **** {
 1441              		.loc 5 75 33 view .LVU401
 1442              	.LBB47:
 1443              		.loc 5 77 2 view .LVU402
 1444              		.loc 5 77 9 is_stmt 0 view .LVU403
 1445 0008 10F5805F 		cmn	r0, #4096
 1446 000c 94BF     		ite	ls
 1447 000e 0024     		movls	r4, #0
 1448 0010 0124     		movhi	r4, #1
 1449              	.LVL159:
 1450              		.loc 5 77 9 view .LVU404
 1451              	.LBE47:
 1452              	.LBE46:
 169:./fs/vfs.c    ****         __remove_dentry(dentry);
 1453              		.loc 1 169 7 discriminator 1 view .LVU405
 1454 0012 1CB9     		cbnz	r4, .L115
 170:./fs/vfs.c    ****         return 0;
 1455              		.loc 1 170 9 is_stmt 1 view .LVU406
 1456 0014 FFF7FEFF 		bl	__remove_dentry
 1457              	.LVL160:
 171:./fs/vfs.c    ****     }
 1458              		.loc 1 171 9 view .LVU407
 1459              	.L113:
 174:./fs/vfs.c    **** EXPORT_SYMBOL(remove_dentry);
 1460              		.loc 1 174 1 is_stmt 0 view .LVU408
 1461 0018 2046     		mov	r0, r4
 1462 001a 10BD     		pop	{r4, pc}
 1463              	.LVL161:
 1464              	.L115:
 173:./fs/vfs.c    **** }
 1465              		.loc 1 173 12 view .LVU409
 1466 001c 4FF0FF34 		mov	r4, #-1
 1467 0020 FAE7     		b	.L113
 1468              		.cfi_endproc
 1469              	.LFE1041:
 1471              		.section	.text.blkdev_get_by_path,"ax",%progbits
 1472              		.align	1
 1473              		.global	blkdev_get_by_path
 1474              		.syntax unified
 1475              		.thumb
 1476              		.thumb_func
 1478              	blkdev_get_by_path:
 1479              	.LVL162:
 1480              	.LFB1042:
 178:./fs/vfs.c    ****     struct dentry* dentry = select_file(path,0);
 1481              		.loc 1 178 1 is_stmt 1 view -0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 178:./fs/vfs.c    ****     struct dentry* dentry = select_file(path,0);
 1485              		.loc 1 178 1 is_stmt 0 view .LVU411
 1486 0000 08B5     		push	{r3, lr}
 1487              	.LCFI25:
ARM GAS  /tmp/ccvYHbtC.s 			page 40


 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 3, -8
 1490              		.cfi_offset 14, -4
 179:./fs/vfs.c    ****     return devfs_get_blk_dev(dentry->d_inode);
 1491              		.loc 1 179 5 is_stmt 1 view .LVU412
 179:./fs/vfs.c    ****     return devfs_get_blk_dev(dentry->d_inode);
 1492              		.loc 1 179 29 is_stmt 0 view .LVU413
 1493 0002 0021     		movs	r1, #0
 1494              	.LVL163:
 179:./fs/vfs.c    ****     return devfs_get_blk_dev(dentry->d_inode);
 1495              		.loc 1 179 29 view .LVU414
 1496 0004 FFF7FEFF 		bl	select_file
 1497              	.LVL164:
 180:./fs/vfs.c    **** }
 1498              		.loc 1 180 5 is_stmt 1 view .LVU415
 180:./fs/vfs.c    **** }
 1499              		.loc 1 180 12 is_stmt 0 view .LVU416
 1500 0008 806C     		ldr	r0, [r0, #72]
 1501              	.LVL165:
 180:./fs/vfs.c    **** }
 1502              		.loc 1 180 12 view .LVU417
 1503 000a FFF7FEFF 		bl	devfs_get_blk_dev
 1504              	.LVL166:
 181:./fs/vfs.c    **** EXPORT_SYMBOL(blkdev_get_by_path);
 1505              		.loc 1 181 1 view .LVU418
 1506 000e 08BD     		pop	{r3, pc}
 1507              		.cfi_endproc
 1508              	.LFE1042:
 1510              		.section	.text.create_new_dentry,"ax",%progbits
 1511              		.align	1
 1512              		.global	create_new_dentry
 1513              		.syntax unified
 1514              		.thumb
 1515              		.thumb_func
 1517              	create_new_dentry:
 1518              	.LVL167:
 1519              	.LFB1040:
 139:./fs/vfs.c    ****     struct  dentry * p_dentry;
 1520              		.loc 1 139 1 is_stmt 1 view -0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 128
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 139:./fs/vfs.c    ****     struct  dentry * p_dentry;
 1524              		.loc 1 139 1 is_stmt 0 view .LVU420
 1525 0000 70B5     		push	{r4, r5, r6, lr}
 1526              	.LCFI26:
 1527              		.cfi_def_cfa_offset 16
 1528              		.cfi_offset 4, -16
 1529              		.cfi_offset 5, -12
 1530              		.cfi_offset 6, -8
 1531              		.cfi_offset 14, -4
 1532 0002 A0B0     		sub	sp, sp, #128
 1533              	.LCFI27:
 1534              		.cfi_def_cfa_offset 144
 1535 0004 0646     		mov	r6, r0
 1536 0006 0D46     		mov	r5, r1
 140:./fs/vfs.c    **** 
ARM GAS  /tmp/ccvYHbtC.s 			page 41


 1537              		.loc 1 140 5 is_stmt 1 view .LVU421
 142:./fs/vfs.c    ****     if(IS_ERR(p_dentry)){
 1538              		.loc 1 142 5 view .LVU422
 142:./fs/vfs.c    ****     if(IS_ERR(p_dentry)){
 1539              		.loc 1 142 16 is_stmt 0 view .LVU423
 1540 0008 0121     		movs	r1, #1
 1541              	.LVL168:
 142:./fs/vfs.c    ****     if(IS_ERR(p_dentry)){
 1542              		.loc 1 142 16 view .LVU424
 1543 000a FFF7FEFF 		bl	select_file
 1544              	.LVL169:
 143:./fs/vfs.c    ****         //pr_info("can not find parent dentry%d\n",(int)p_dentry);
 1545              		.loc 1 143 5 is_stmt 1 view .LVU425
 1546              	.LBB48:
 1547              	.LBI48:
  75:./include/linux/err.h **** {
 1548              		.loc 5 75 33 view .LVU426
 1549              	.LBB49:
 1550              		.loc 5 77 2 view .LVU427
 1551              		.loc 5 77 2 is_stmt 0 view .LVU428
 1552              	.LBE49:
 1553              	.LBE48:
 143:./fs/vfs.c    ****         //pr_info("can not find parent dentry%d\n",(int)p_dentry);
 1554              		.loc 1 143 7 discriminator 1 view .LVU429
 1555 000e 10F5805F 		cmn	r0, #4096
 1556 0012 19D8     		bhi	.L121
 1557 0014 0446     		mov	r4, r0
 147:./fs/vfs.c    ****     if((p_denrty_mode & S_IFMT) != S_IFDIR)
 1558              		.loc 1 147 5 is_stmt 1 view .LVU430
 147:./fs/vfs.c    ****     if((p_denrty_mode & S_IFMT) != S_IFDIR)
 1559              		.loc 1 147 36 is_stmt 0 view .LVU431
 1560 0016 836C     		ldr	r3, [r0, #72]
 147:./fs/vfs.c    ****     if((p_denrty_mode & S_IFMT) != S_IFDIR)
 1561              		.loc 1 147 45 view .LVU432
 1562 0018 1B88     		ldrh	r3, [r3]
 1563              	.LVL170:
 148:./fs/vfs.c    ****     {
 1564              		.loc 1 148 5 is_stmt 1 view .LVU433
 148:./fs/vfs.c    ****     {
 1565              		.loc 1 148 7 is_stmt 0 view .LVU434
 1566 001a 03F47043 		and	r3, r3, #61440
 1567 001e B3F5804F 		cmp	r3, #16384
 1568 0022 03D0     		beq	.L124
 151:./fs/vfs.c    ****     } 
 1569              		.loc 1 151 16 view .LVU435
 1570 0024 6FF01300 		mvn	r0, #19
 1571              	.LVL171:
 1572              	.L119:
 157:./fs/vfs.c    **** 
 1573              		.loc 1 157 1 view .LVU436
 1574 0028 20B0     		add	sp, sp, #128
 1575              	.LCFI28:
 1576              		.cfi_remember_state
 1577              		.cfi_def_cfa_offset 16
 1578              		@ sp needed
 1579 002a 70BD     		pop	{r4, r5, r6, pc}
 1580              	.LVL172:
ARM GAS  /tmp/ccvYHbtC.s 			page 42


 1581              	.L124:
 1582              	.LCFI29:
 1583              		.cfi_restore_state
 153:./fs/vfs.c    ****     get_dir_name(path,file_name,get_dir_number(path));     
 1584              		.loc 1 153 5 is_stmt 1 view .LVU437
 154:./fs/vfs.c    ****     p_dentry = create_dentry(p_dentry,file_name,i_mode);
 1585              		.loc 1 154 5 view .LVU438
 1586 002c 3046     		mov	r0, r6
 1587              	.LVL173:
 154:./fs/vfs.c    ****     p_dentry = create_dentry(p_dentry,file_name,i_mode);
 1588              		.loc 1 154 5 is_stmt 0 view .LVU439
 1589 002e FFF7FEFF 		bl	get_dir_number
 1590              	.LVL174:
 154:./fs/vfs.c    ****     p_dentry = create_dentry(p_dentry,file_name,i_mode);
 1591              		.loc 1 154 5 view .LVU440
 1592 0032 0246     		mov	r2, r0
 154:./fs/vfs.c    ****     p_dentry = create_dentry(p_dentry,file_name,i_mode);
 1593              		.loc 1 154 5 discriminator 1 view .LVU441
 1594 0034 6946     		mov	r1, sp
 1595 0036 3046     		mov	r0, r6
 1596 0038 FFF7FEFF 		bl	get_dir_name
 1597              	.LVL175:
 155:./fs/vfs.c    ****     return p_dentry;
 1598              		.loc 1 155 5 is_stmt 1 view .LVU442
 155:./fs/vfs.c    ****     return p_dentry;
 1599              		.loc 1 155 16 is_stmt 0 view .LVU443
 1600 003c 2A46     		mov	r2, r5
 1601 003e 6946     		mov	r1, sp
 1602 0040 2046     		mov	r0, r4
 1603 0042 FFF7FEFF 		bl	create_dentry
 1604              	.LVL176:
 156:./fs/vfs.c    **** }
 1605              		.loc 1 156 5 is_stmt 1 view .LVU444
 156:./fs/vfs.c    **** }
 1606              		.loc 1 156 12 is_stmt 0 view .LVU445
 1607 0046 EFE7     		b	.L119
 1608              	.LVL177:
 1609              	.L121:
 145:./fs/vfs.c    ****     }
 1610              		.loc 1 145 16 view .LVU446
 1611 0048 6FF00100 		mvn	r0, #1
 1612              	.LVL178:
 145:./fs/vfs.c    ****     }
 1613              		.loc 1 145 16 view .LVU447
 1614 004c ECE7     		b	.L119
 1615              		.cfi_endproc
 1616              	.LFE1040:
 1618              		.section	.text.mkdir,"ax",%progbits
 1619              		.align	1
 1620              		.global	mkdir
 1621              		.syntax unified
 1622              		.thumb
 1623              		.thumb_func
 1625              	mkdir:
 1626              	.LVL179:
 1627              	.LFB1043:
 184:./fs/vfs.c    ****    if(mode == NULL) mode = 0755;
ARM GAS  /tmp/ccvYHbtC.s 			page 43


 1628              		.loc 1 184 46 is_stmt 1 view -0
 1629              		.cfi_startproc
 1630              		@ args = 0, pretend = 0, frame = 0
 1631              		@ frame_needed = 0, uses_anonymous_args = 0
 184:./fs/vfs.c    ****    if(mode == NULL) mode = 0755;
 1632              		.loc 1 184 46 is_stmt 0 view .LVU449
 1633 0000 08B5     		push	{r3, lr}
 1634              	.LCFI30:
 1635              		.cfi_def_cfa_offset 8
 1636              		.cfi_offset 3, -8
 1637              		.cfi_offset 14, -4
 185:./fs/vfs.c    ****    return create_new_dentry(path, S_IFDIR | (mode & 0777));
 1638              		.loc 1 185 4 is_stmt 1 view .LVU450
 185:./fs/vfs.c    ****    return create_new_dentry(path, S_IFDIR | (mode & 0777));
 1639              		.loc 1 185 6 is_stmt 0 view .LVU451
 1640 0002 0B46     		mov	r3, r1
 1641 0004 09B9     		cbnz	r1, .L126
 185:./fs/vfs.c    ****    return create_new_dentry(path, S_IFDIR | (mode & 0777));
 1642              		.loc 1 185 26 discriminator 1 view .LVU452
 1643 0006 40F2ED13 		movw	r3, #493
 1644              	.L126:
 1645              	.LVL180:
 186:./fs/vfs.c    **** }
 1646              		.loc 1 186 4 is_stmt 1 view .LVU453
 186:./fs/vfs.c    **** }
 1647              		.loc 1 186 11 is_stmt 0 view .LVU454
 1648 000a C3F30801 		ubfx	r1, r3, #0, #9
 1649 000e 41F48041 		orr	r1, r1, #16384
 1650 0012 FFF7FEFF 		bl	create_new_dentry
 1651              	.LVL181:
 187:./fs/vfs.c    **** EXPORT_SYMBOL(mkdir);
 1652              		.loc 1 187 1 view .LVU455
 1653 0016 08BD     		pop	{r3, pc}
 1654              		.cfi_endproc
 1655              	.LFE1043:
 1657              		.section	.rodata.root_fs_init.str1.4,"aMS",%progbits,1
 1658              		.align	2
 1659              	.LC3:
 1660 0000 696E6974 		.ascii	"initramfs\000"
 1660      72616D66 
 1660      7300
 1661 000a 0000     		.align	2
 1662              	.LC4:
 1663 000c 63616E20 		.ascii	"can not get root fs: devfs\012\000"
 1663      6E6F7420 
 1663      67657420 
 1663      726F6F74 
 1663      2066733A 
 1664              		.align	2
 1665              	.LC5:
 1666 0028 2F646576 		.ascii	"/dev\000"
 1666      00
 1667 002d 000000   		.align	2
 1668              	.LC6:
 1669 0030 2F746D70 		.ascii	"/tmp\000"
 1669      00
 1670 0035 000000   		.align	2
ARM GAS  /tmp/ccvYHbtC.s 			page 44


 1671              	.LC7:
 1672 0038 2F6D6E74 		.ascii	"/mnt\000"
 1672      00
 1673 003d 000000   		.align	2
 1674              	.LC8:
 1675 0040 2F737973 		.ascii	"/sys\000"
 1675      00
 1676 0045 000000   		.align	2
 1677              	.LC9:
 1678 0048 2F746D70 		.ascii	"/tmp/pipe\000"
 1678      2F706970 
 1678      6500
 1679 0052 0000     		.align	2
 1680              	.LC10:
 1681 0054 64657666 		.ascii	"devfs\000"
 1681      7300
 1682 005a 0000     		.align	2
 1683              	.LC11:
 1684 005c 70697065 		.ascii	"pipefs\000"
 1684      667300
 1685 0063 00       		.align	2
 1686              	.LC12:
 1687 0064 73797366 		.ascii	"sysfs\000"
 1687      7300
 1688              		.section	.text.root_fs_init,"ax",%progbits
 1689              		.align	1
 1690              		.syntax unified
 1691              		.thumb
 1692              		.thumb_func
 1694              	root_fs_init:
 1695              	.LFB1052:
 352:./fs/vfs.c    **** EXPORT_SYMBOL(file_close);
 353:./fs/vfs.c    **** 
 354:./fs/vfs.c    **** 
 355:./fs/vfs.c    **** 
 356:./fs/vfs.c    **** static int root_fs_init()
 357:./fs/vfs.c    **** {
 1696              		.loc 1 357 1 is_stmt 1 view -0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 0
 1699              		@ frame_needed = 0, uses_anonymous_args = 0
 1700 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1701              	.LCFI31:
 1702              		.cfi_def_cfa_offset 20
 1703              		.cfi_offset 4, -20
 1704              		.cfi_offset 5, -16
 1705              		.cfi_offset 6, -12
 1706              		.cfi_offset 7, -8
 1707              		.cfi_offset 14, -4
 1708 0002 83B0     		sub	sp, sp, #12
 1709              	.LCFI32:
 1710              		.cfi_def_cfa_offset 32
 358:./fs/vfs.c    ****     int err;
 1711              		.loc 1 358 5 view .LVU457
 359:./fs/vfs.c    ****     err = mount_root_fs(CONFIG_ROOT_FILE_SYSTEM_MOUNT);
 1712              		.loc 1 359 5 view .LVU458
 1713              		.loc 1 359 11 is_stmt 0 view .LVU459
ARM GAS  /tmp/ccvYHbtC.s 			page 45


 1714 0004 1E48     		ldr	r0, .L133
 1715 0006 FFF7FEFF 		bl	mount_root_fs
 1716              	.LVL182:
 360:./fs/vfs.c    ****     if(err < 0){
 1717              		.loc 1 360 5 is_stmt 1 view .LVU460
 1718              		.loc 1 360 7 is_stmt 0 view .LVU461
 1719 000a 0028     		cmp	r0, #0
 1720 000c 32DB     		blt	.L132
 361:./fs/vfs.c    ****         pr_info("can not get root fs: devfs\n");
 362:./fs/vfs.c    ****         return -1;
 363:./fs/vfs.c    ****     }
 364:./fs/vfs.c    ****     mkdir("/dev",0755);
 1721              		.loc 1 364 5 is_stmt 1 view .LVU462
 1722 000e 1D4F     		ldr	r7, .L133+4
 1723 0010 40F2ED11 		movw	r1, #493
 1724 0014 3846     		mov	r0, r7
 1725              	.LVL183:
 1726              		.loc 1 364 5 is_stmt 0 view .LVU463
 1727 0016 FFF7FEFF 		bl	mkdir
 1728              	.LVL184:
 365:./fs/vfs.c    ****     mkdir("/tmp",0755);
 1729              		.loc 1 365 5 is_stmt 1 view .LVU464
 1730 001a 40F2ED11 		movw	r1, #493
 1731 001e 1A48     		ldr	r0, .L133+8
 1732 0020 FFF7FEFF 		bl	mkdir
 1733              	.LVL185:
 366:./fs/vfs.c    ****     mkdir("/mnt",0755);
 1734              		.loc 1 366 5 view .LVU465
 1735 0024 40F2ED11 		movw	r1, #493
 1736 0028 1848     		ldr	r0, .L133+12
 1737 002a FFF7FEFF 		bl	mkdir
 1738              	.LVL186:
 367:./fs/vfs.c    ****     mkdir("/sys",0755);
 1739              		.loc 1 367 5 view .LVU466
 1740 002e 184D     		ldr	r5, .L133+16
 1741 0030 40F2ED11 		movw	r1, #493
 1742 0034 2846     		mov	r0, r5
 1743 0036 FFF7FEFF 		bl	mkdir
 1744              	.LVL187:
 368:./fs/vfs.c    ****     mkdir("/tmp/pipe",NULL);
 1745              		.loc 1 368 5 view .LVU467
 1746 003a 164E     		ldr	r6, .L133+20
 1747 003c 0021     		movs	r1, #0
 1748 003e 3046     		mov	r0, r6
 1749 0040 FFF7FEFF 		bl	mkdir
 1750              	.LVL188:
 369:./fs/vfs.c    ****     sys_mount(NULL,"/dev","devfs",0,NULL);
 1751              		.loc 1 369 5 view .LVU468
 1752 0044 0024     		movs	r4, #0
 1753 0046 0094     		str	r4, [sp]
 1754 0048 2346     		mov	r3, r4
 1755 004a 134A     		ldr	r2, .L133+24
 1756 004c 3946     		mov	r1, r7
 1757 004e 2046     		mov	r0, r4
 1758 0050 FFF7FEFF 		bl	sys_mount
 1759              	.LVL189:
 370:./fs/vfs.c    ****     sys_mount(NULL,"/tmp/pipe","pipefs",0,NULL);
ARM GAS  /tmp/ccvYHbtC.s 			page 46


 1760              		.loc 1 370 5 view .LVU469
 1761 0054 0094     		str	r4, [sp]
 1762 0056 2346     		mov	r3, r4
 1763 0058 104A     		ldr	r2, .L133+28
 1764 005a 3146     		mov	r1, r6
 1765 005c 2046     		mov	r0, r4
 1766 005e FFF7FEFF 		bl	sys_mount
 1767              	.LVL190:
 371:./fs/vfs.c    ****     sys_mount(NULL,"/sys","sysfs",0,NULL);
 1768              		.loc 1 371 5 view .LVU470
 1769 0062 0094     		str	r4, [sp]
 1770 0064 2346     		mov	r3, r4
 1771 0066 0E4A     		ldr	r2, .L133+32
 1772 0068 2946     		mov	r1, r5
 1773 006a 2046     		mov	r0, r4
 1774 006c FFF7FEFF 		bl	sys_mount
 1775              	.LVL191:
 1776              	.L129:
 372:./fs/vfs.c    **** }
 1777              		.loc 1 372 1 is_stmt 0 view .LVU471
 1778 0070 03B0     		add	sp, sp, #12
 1779              	.LCFI33:
 1780              		.cfi_remember_state
 1781              		.cfi_def_cfa_offset 20
 1782              		@ sp needed
 1783 0072 F0BD     		pop	{r4, r5, r6, r7, pc}
 1784              	.LVL192:
 1785              	.L132:
 1786              	.LCFI34:
 1787              		.cfi_restore_state
 361:./fs/vfs.c    ****         return -1;
 1788              		.loc 1 361 9 is_stmt 1 view .LVU472
 1789 0074 0B48     		ldr	r0, .L133+36
 1790              	.LVL193:
 361:./fs/vfs.c    ****         return -1;
 1791              		.loc 1 361 9 is_stmt 0 view .LVU473
 1792 0076 FFF7FEFF 		bl	printk
 1793              	.LVL194:
 362:./fs/vfs.c    ****     }
 1794              		.loc 1 362 9 is_stmt 1 view .LVU474
 362:./fs/vfs.c    ****     }
 1795              		.loc 1 362 16 is_stmt 0 discriminator 1 view .LVU475
 1796 007a 4FF0FF30 		mov	r0, #-1
 362:./fs/vfs.c    ****     }
 1797              		.loc 1 362 16 view .LVU476
 1798 007e F7E7     		b	.L129
 1799              	.L134:
 1800              		.align	2
 1801              	.L133:
 1802 0080 00000000 		.word	.LC3
 1803 0084 28000000 		.word	.LC5
 1804 0088 30000000 		.word	.LC6
 1805 008c 38000000 		.word	.LC7
 1806 0090 40000000 		.word	.LC8
 1807 0094 48000000 		.word	.LC9
 1808 0098 54000000 		.word	.LC10
 1809 009c 5C000000 		.word	.LC11
ARM GAS  /tmp/ccvYHbtC.s 			page 47


 1810 00a0 64000000 		.word	.LC12
 1811 00a4 0C000000 		.word	.LC4
 1812              		.cfi_endproc
 1813              	.LFE1052:
 1815              		.section	.rodata.filp_open.str1.4,"aMS",%progbits,1
 1816              		.align	2
 1817              	.LC13:
 1818 0000 6F70656E 		.ascii	"open file %s\012\000"
 1818      2066696C 
 1818      65202573 
 1818      0A00
 1819 000e 0000     		.align	2
 1820              	.LC14:
 1821 0010 66696C65 		.ascii	"file not found\012\000"
 1821      206E6F74 
 1821      20666F75 
 1821      6E640A00 
 1822              		.align	2
 1823              	.LC15:
 1824 0020 74727920 		.ascii	"try create: %s\012\000"
 1824      63726561 
 1824      74653A20 
 1824      25730A00 
 1825              		.align	2
 1826              	.LC16:
 1827 0030 63616E20 		.ascii	"can not create file: %s\012\000"
 1827      6E6F7420 
 1827      63726561 
 1827      74652066 
 1827      696C653A 
 1828              		.section	.text.filp_open,"ax",%progbits
 1829              		.align	1
 1830              		.global	filp_open
 1831              		.syntax unified
 1832              		.thumb
 1833              		.thumb_func
 1835              	filp_open:
 1836              	.LVL195:
 1837              	.LFB1046:
 229:./fs/vfs.c    ****     pr_info("open file %s\n",path);
 1838              		.loc 1 229 1 is_stmt 1 view -0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 0
 1841              		@ frame_needed = 0, uses_anonymous_args = 0
 229:./fs/vfs.c    ****     pr_info("open file %s\n",path);
 1842              		.loc 1 229 1 is_stmt 0 view .LVU478
 1843 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1844              	.LCFI35:
 1845              		.cfi_def_cfa_offset 24
 1846              		.cfi_offset 3, -24
 1847              		.cfi_offset 4, -20
 1848              		.cfi_offset 5, -16
 1849              		.cfi_offset 6, -12
 1850              		.cfi_offset 7, -8
 1851              		.cfi_offset 14, -4
 1852 0002 0546     		mov	r5, r0
 1853 0004 0F46     		mov	r7, r1
ARM GAS  /tmp/ccvYHbtC.s 			page 48


 1854 0006 1646     		mov	r6, r2
 230:./fs/vfs.c    ****     struct dentry*file_dentry = select_file(path,0);
 1855              		.loc 1 230 5 is_stmt 1 view .LVU479
 1856 0008 0146     		mov	r1, r0
 1857              	.LVL196:
 230:./fs/vfs.c    ****     struct dentry*file_dentry = select_file(path,0);
 1858              		.loc 1 230 5 is_stmt 0 view .LVU480
 1859 000a 3648     		ldr	r0, .L147
 1860              	.LVL197:
 230:./fs/vfs.c    ****     struct dentry*file_dentry = select_file(path,0);
 1861              		.loc 1 230 5 view .LVU481
 1862 000c FFF7FEFF 		bl	printk
 1863              	.LVL198:
 231:./fs/vfs.c    ****     if(IS_ERR(file_dentry))
 1864              		.loc 1 231 5 is_stmt 1 view .LVU482
 231:./fs/vfs.c    ****     if(IS_ERR(file_dentry))
 1865              		.loc 1 231 33 is_stmt 0 view .LVU483
 1866 0010 0021     		movs	r1, #0
 1867 0012 2846     		mov	r0, r5
 1868 0014 FFF7FEFF 		bl	select_file
 1869              	.LVL199:
 1870 0018 0446     		mov	r4, r0
 1871              	.LVL200:
 232:./fs/vfs.c    ****     {
 1872              		.loc 1 232 5 is_stmt 1 view .LVU484
 1873              	.LBB50:
 1874              	.LBI50:
  75:./include/linux/err.h **** {
 1875              		.loc 5 75 33 view .LVU485
 1876              	.LBB51:
 1877              		.loc 5 77 2 view .LVU486
 1878              		.loc 5 77 2 is_stmt 0 view .LVU487
 1879              	.LBE51:
 1880              	.LBE50:
 232:./fs/vfs.c    ****     {
 1881              		.loc 1 232 7 discriminator 1 view .LVU488
 1882 001a 10F5805F 		cmn	r0, #4096
 1883 001e 3AD8     		bhi	.L144
 1884              	.L136:
 248:./fs/vfs.c    ****     if(IS_ERR(file))
 1885              		.loc 1 248 5 is_stmt 1 view .LVU489
 248:./fs/vfs.c    ****     if(IS_ERR(file))
 1886              		.loc 1 248 25 is_stmt 0 view .LVU490
 1887 0020 2046     		mov	r0, r4
 248:./fs/vfs.c    ****     if(IS_ERR(file))
 1888              		.loc 1 248 25 view .LVU491
 1889 0022 FFF7FEFF 		bl	f_get
 1890              	.LVL201:
 248:./fs/vfs.c    ****     if(IS_ERR(file))
 1891              		.loc 1 248 25 view .LVU492
 1892 0026 0446     		mov	r4, r0
 1893              	.LVL202:
 249:./fs/vfs.c    ****         return ERR_PTR(-ENOMEM);
 1894              		.loc 1 249 5 is_stmt 1 view .LVU493
 1895              	.LBB52:
 1896              	.LBI52:
  75:./include/linux/err.h **** {
ARM GAS  /tmp/ccvYHbtC.s 			page 49


 1897              		.loc 5 75 33 view .LVU494
 1898              	.LBB53:
 1899              		.loc 5 77 2 view .LVU495
 1900              		.loc 5 77 9 is_stmt 0 view .LVU496
 1901 0028 10F5805F 		cmn	r0, #4096
 1902 002c 94BF     		ite	ls
 1903 002e 0025     		movls	r5, #0
 1904              	.LVL203:
 1905              		.loc 5 77 9 view .LVU497
 1906 0030 0125     		movhi	r5, #1
 1907              	.LVL204:
 1908              		.loc 5 77 9 view .LVU498
 1909              	.LBE53:
 1910              	.LBE52:
 249:./fs/vfs.c    ****         return ERR_PTR(-ENOMEM);
 1911              		.loc 1 249 7 discriminator 1 view .LVU499
 1912 0032 002D     		cmp	r5, #0
 1913 0034 52D1     		bne	.L142
 251:./fs/vfs.c    ****     file->f_mode = mode;
 1914              		.loc 1 251 5 is_stmt 1 view .LVU500
 251:./fs/vfs.c    ****     file->f_mode = mode;
 1915              		.loc 1 251 19 is_stmt 0 view .LVU501
 1916 0036 0763     		str	r7, [r0, #48]
 252:./fs/vfs.c    ****     int flag = 0;
 1917              		.loc 1 252 5 is_stmt 1 view .LVU502
 252:./fs/vfs.c    ****     int flag = 0;
 1918              		.loc 1 252 18 is_stmt 0 view .LVU503
 1919 0038 0662     		str	r6, [r0, #32]
 253:./fs/vfs.c    ****     spin_lock(&file->f_slock);
 1920              		.loc 1 253 5 is_stmt 1 view .LVU504
 1921              	.LVL205:
 254:./fs/vfs.c    ****     if(file->f_op != NULL){
 1922              		.loc 1 254 5 view .LVU505
 1923 003a 00F15C06 		add	r6, r0, #92
 1924              	.LVL206:
 254:./fs/vfs.c    ****     if(file->f_op != NULL){
 1925              		.loc 1 254 5 is_stmt 0 view .LVU506
 1926 003e 3046     		mov	r0, r6
 1927              	.LVL207:
 254:./fs/vfs.c    ****     if(file->f_op != NULL){
 1928              		.loc 1 254 5 view .LVU507
 1929 0040 FFF7FEFF 		bl	spin_lock
 1930              	.LVL208:
 255:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 1931              		.loc 1 255 5 is_stmt 1 view .LVU508
 255:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 1932              		.loc 1 255 12 is_stmt 0 view .LVU509
 1933 0044 636A     		ldr	r3, [r4, #36]
 255:./fs/vfs.c    ****         spin_lock(&file->f_inode->i_lock);
 1934              		.loc 1 255 7 view .LVU510
 1935 0046 73B1     		cbz	r3, .L138
 256:./fs/vfs.c    ****         if(file->f_op->open != NULL)
 1936              		.loc 1 256 9 is_stmt 1 view .LVU511
 256:./fs/vfs.c    ****         if(file->f_op->open != NULL)
 1937              		.loc 1 256 24 is_stmt 0 view .LVU512
 1938 0048 E06A     		ldr	r0, [r4, #44]
 256:./fs/vfs.c    ****         if(file->f_op->open != NULL)
ARM GAS  /tmp/ccvYHbtC.s 			page 50


 1939              		.loc 1 256 9 view .LVU513
 1940 004a 5830     		adds	r0, r0, #88
 1941 004c FFF7FEFF 		bl	spin_lock
 1942              	.LVL209:
 257:./fs/vfs.c    ****         flag = file->f_op->open(file->f_inode,file);
 1943              		.loc 1 257 9 is_stmt 1 view .LVU514
 257:./fs/vfs.c    ****         flag = file->f_op->open(file->f_inode,file);
 1944              		.loc 1 257 16 is_stmt 0 view .LVU515
 1945 0050 636A     		ldr	r3, [r4, #36]
 257:./fs/vfs.c    ****         flag = file->f_op->open(file->f_inode,file);
 1946              		.loc 1 257 22 view .LVU516
 1947 0052 5B6B     		ldr	r3, [r3, #52]
 257:./fs/vfs.c    ****         flag = file->f_op->open(file->f_inode,file);
 1948              		.loc 1 257 11 view .LVU517
 1949 0054 1BB1     		cbz	r3, .L139
 258:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock);
 1950              		.loc 1 258 9 is_stmt 1 view .LVU518
 258:./fs/vfs.c    ****         spin_unlock(&file->f_inode->i_lock);
 1951              		.loc 1 258 16 is_stmt 0 view .LVU519
 1952 0056 2146     		mov	r1, r4
 1953 0058 E06A     		ldr	r0, [r4, #44]
 1954 005a 9847     		blx	r3
 1955              	.LVL210:
 1956 005c 0546     		mov	r5, r0
 1957              	.LVL211:
 1958              	.L139:
 259:./fs/vfs.c    ****     }
 1959              		.loc 1 259 9 is_stmt 1 view .LVU520
 259:./fs/vfs.c    ****     }
 1960              		.loc 1 259 26 is_stmt 0 view .LVU521
 1961 005e E06A     		ldr	r0, [r4, #44]
 259:./fs/vfs.c    ****     }
 1962              		.loc 1 259 9 view .LVU522
 1963 0060 5830     		adds	r0, r0, #88
 1964 0062 FFF7FEFF 		bl	spin_unlock
 1965              	.LVL212:
 1966              	.L138:
 261:./fs/vfs.c    ****     if(flag < 0){
 1967              		.loc 1 261 5 is_stmt 1 view .LVU523
 1968 0066 3046     		mov	r0, r6
 1969 0068 FFF7FEFF 		bl	spin_unlock
 1970              	.LVL213:
 262:./fs/vfs.c    ****         f_put(file);
 1971              		.loc 1 262 5 view .LVU524
 262:./fs/vfs.c    ****         f_put(file);
 1972              		.loc 1 262 7 is_stmt 0 view .LVU525
 1973 006c 002D     		cmp	r5, #0
 1974 006e 30DB     		blt	.L145
 267:./fs/vfs.c    ****     file->f_flags |= O_RDONLY;
 1975              		.loc 1 267 5 is_stmt 1 view .LVU526
 268:./fs/vfs.c    **** 
 1976              		.loc 1 268 5 view .LVU527
 270:./fs/vfs.c    ****     file->f_inode->i_atime_nsec  = jiffies%HZ;
 1977              		.loc 1 270 5 view .LVU528
 270:./fs/vfs.c    ****     file->f_inode->i_atime_nsec  = jiffies%HZ;
 1978              		.loc 1 270 36 is_stmt 0 view .LVU529
 1979 0070 FFF7FEFF 		bl	ktime_get
ARM GAS  /tmp/ccvYHbtC.s 			page 51


 1980              	.LVL214:
 270:./fs/vfs.c    ****     file->f_inode->i_atime_nsec  = jiffies%HZ;
 1981              		.loc 1 270 9 discriminator 1 view .LVU530
 1982 0074 E36A     		ldr	r3, [r4, #44]
 270:./fs/vfs.c    ****     file->f_inode->i_atime_nsec  = jiffies%HZ;
 1983              		.loc 1 270 43 discriminator 1 view .LVU531
 1984 0076 1C4D     		ldr	r5, .L147+4
 1985              	.LVL215:
 270:./fs/vfs.c    ****     file->f_inode->i_atime_nsec  = jiffies%HZ;
 1986              		.loc 1 270 43 discriminator 1 view .LVU532
 1987 0078 2A68     		ldr	r2, [r5]
 1988 007a B0FBF2F0 		udiv	r0, r0, r2
 270:./fs/vfs.c    ****     file->f_inode->i_atime_nsec  = jiffies%HZ;
 1989              		.loc 1 270 34 discriminator 1 view .LVU533
 1990 007e 5863     		str	r0, [r3, #52]
 271:./fs/vfs.c    **** 
 1991              		.loc 1 271 5 is_stmt 1 view .LVU534
 271:./fs/vfs.c    **** 
 1992              		.loc 1 271 36 is_stmt 0 view .LVU535
 1993 0080 FFF7FEFF 		bl	ktime_get
 1994              	.LVL216:
 271:./fs/vfs.c    **** 
 1995              		.loc 1 271 9 discriminator 1 view .LVU536
 1996 0084 E26A     		ldr	r2, [r4, #44]
 271:./fs/vfs.c    **** 
 1997              		.loc 1 271 43 discriminator 1 view .LVU537
 1998 0086 2B68     		ldr	r3, [r5]
 1999 0088 B0FBF3F1 		udiv	r1, r0, r3
 2000 008c 03FB1100 		mls	r0, r3, r1, r0
 271:./fs/vfs.c    **** 
 2001              		.loc 1 271 34 discriminator 1 view .LVU538
 2002 0090 5063     		str	r0, [r2, #52]
 273:./fs/vfs.c    **** }
 2003              		.loc 1 273 5 is_stmt 1 view .LVU539
 2004              	.LVL217:
 2005              	.L135:
 274:./fs/vfs.c    **** EXPORT_SYMBOL(filp_open);
 2006              		.loc 1 274 1 is_stmt 0 view .LVU540
 2007 0092 2046     		mov	r0, r4
 2008 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2009              	.LVL218:
 2010              	.L144:
 234:./fs/vfs.c    ****         if (PTR_ERR(file_dentry) == -ENOENT && (flags & O_CREAT)) 
 2011              		.loc 1 234 9 is_stmt 1 view .LVU541
 2012 0096 1548     		ldr	r0, .L147+8
 2013              	.LVL219:
 234:./fs/vfs.c    ****         if (PTR_ERR(file_dentry) == -ENOENT && (flags & O_CREAT)) 
 2014              		.loc 1 234 9 is_stmt 0 view .LVU542
 2015 0098 FFF7FEFF 		bl	printk
 2016              	.LVL220:
 235:./fs/vfs.c    ****         {
 2017              		.loc 1 235 9 is_stmt 1 view .LVU543
 235:./fs/vfs.c    ****         {
 2018              		.loc 1 235 12 is_stmt 0 discriminator 1 view .LVU544
 2019 009c 14F1020F 		cmn	r4, #2
 2020 00a0 02D0     		beq	.L146
 245:./fs/vfs.c    ****         }      
ARM GAS  /tmp/ccvYHbtC.s 			page 52


 2021              		.loc 1 245 20 view .LVU545
 2022 00a2 6FF00104 		mvn	r4, #1
 2023              	.LVL221:
 245:./fs/vfs.c    ****         }      
 2024              		.loc 1 245 20 view .LVU546
 2025 00a6 F4E7     		b	.L135
 2026              	.LVL222:
 2027              	.L146:
 235:./fs/vfs.c    ****         {
 2028              		.loc 1 235 45 discriminator 1 view .LVU547
 2029 00a8 17F0400F 		tst	r7, #64
 2030 00ac F1D0     		beq	.L135
 237:./fs/vfs.c    ****             file_dentry = create_new_dentry((char *)path, S_IFREG | mode);
 2031              		.loc 1 237 13 is_stmt 1 view .LVU548
 2032 00ae 2946     		mov	r1, r5
 2033 00b0 0F48     		ldr	r0, .L147+12
 2034 00b2 FFF7FEFF 		bl	printk
 2035              	.LVL223:
 238:./fs/vfs.c    ****             if (IS_ERR(file_dentry)){
 2036              		.loc 1 238 13 view .LVU549
 238:./fs/vfs.c    ****             if (IS_ERR(file_dentry)){
 2037              		.loc 1 238 27 is_stmt 0 view .LVU550
 2038 00b6 46F40041 		orr	r1, r6, #32768
 2039 00ba 2846     		mov	r0, r5
 2040 00bc FFF7FEFF 		bl	create_new_dentry
 2041              	.LVL224:
 2042 00c0 0446     		mov	r4, r0
 2043              	.LVL225:
 239:./fs/vfs.c    ****                 pr_info("can not create file: %s\n", path);
 2044              		.loc 1 239 13 is_stmt 1 view .LVU551
 2045              	.LBB54:
 2046              	.LBI54:
  75:./include/linux/err.h **** {
 2047              		.loc 5 75 33 view .LVU552
 2048              	.LBB55:
 2049              		.loc 5 77 2 view .LVU553
 2050              		.loc 5 77 2 is_stmt 0 view .LVU554
 2051              	.LBE55:
 2052              	.LBE54:
 239:./fs/vfs.c    ****                 pr_info("can not create file: %s\n", path);
 2053              		.loc 1 239 16 discriminator 1 view .LVU555
 2054 00c2 10F5805F 		cmn	r0, #4096
 2055 00c6 ABD9     		bls	.L136
 240:./fs/vfs.c    ****                 return (struct file *)file_dentry;
 2056              		.loc 1 240 17 is_stmt 1 view .LVU556
 2057 00c8 2946     		mov	r1, r5
 2058 00ca 0A48     		ldr	r0, .L147+16
 2059              	.LVL226:
 240:./fs/vfs.c    ****                 return (struct file *)file_dentry;
 2060              		.loc 1 240 17 is_stmt 0 view .LVU557
 2061 00cc FFF7FEFF 		bl	printk
 2062              	.LVL227:
 241:./fs/vfs.c    ****             }
 2063              		.loc 1 241 17 is_stmt 1 view .LVU558
 241:./fs/vfs.c    ****             }
 2064              		.loc 1 241 24 is_stmt 0 view .LVU559
 2065 00d0 DFE7     		b	.L135
ARM GAS  /tmp/ccvYHbtC.s 			page 53


 2066              	.LVL228:
 2067              	.L145:
 263:./fs/vfs.c    ****         return NULL;
 2068              		.loc 1 263 9 is_stmt 1 view .LVU560
 2069 00d2 2046     		mov	r0, r4
 2070 00d4 FFF7FEFF 		bl	f_put
 2071              	.LVL229:
 264:./fs/vfs.c    ****     }
 2072              		.loc 1 264 9 view .LVU561
 264:./fs/vfs.c    ****     }
 2073              		.loc 1 264 16 is_stmt 0 view .LVU562
 2074 00d8 0024     		movs	r4, #0
 2075              	.LVL230:
 264:./fs/vfs.c    ****     }
 2076              		.loc 1 264 16 view .LVU563
 2077 00da DAE7     		b	.L135
 2078              	.LVL231:
 2079              	.L142:
 250:./fs/vfs.c    ****     file->f_flags = flags;
 2080              		.loc 1 250 16 view .LVU564
 2081 00dc 6FF00B04 		mvn	r4, #11
 2082 00e0 D7E7     		b	.L135
 2083              	.L148:
 2084 00e2 00BF     		.align	2
 2085              	.L147:
 2086 00e4 00000000 		.word	.LC13
 2087 00e8 00000000 		.word	HZ
 2088 00ec 10000000 		.word	.LC14
 2089 00f0 20000000 		.word	.LC15
 2090 00f4 30000000 		.word	.LC16
 2091              		.cfi_endproc
 2092              	.LFE1046:
 2094              		.section	.text.get_file_mode,"ax",%progbits
 2095              		.align	1
 2096              		.global	get_file_mode
 2097              		.syntax unified
 2098              		.thumb
 2099              		.thumb_func
 2101              	get_file_mode:
 2102              	.LVL232:
 2103              	.LFB1044:
 191:./fs/vfs.c    ****     struct dentry*file_dentry = select_file(path,0);
 2104              		.loc 1 191 34 is_stmt 1 view -0
 2105              		.cfi_startproc
 2106              		@ args = 0, pretend = 0, frame = 0
 2107              		@ frame_needed = 0, uses_anonymous_args = 0
 191:./fs/vfs.c    ****     struct dentry*file_dentry = select_file(path,0);
 2108              		.loc 1 191 34 is_stmt 0 view .LVU566
 2109 0000 08B5     		push	{r3, lr}
 2110              	.LCFI36:
 2111              		.cfi_def_cfa_offset 8
 2112              		.cfi_offset 3, -8
 2113              		.cfi_offset 14, -4
 192:./fs/vfs.c    ****     if(IS_ERR(file_dentry)){
 2114              		.loc 1 192 5 is_stmt 1 view .LVU567
 192:./fs/vfs.c    ****     if(IS_ERR(file_dentry)){
 2115              		.loc 1 192 33 is_stmt 0 view .LVU568
ARM GAS  /tmp/ccvYHbtC.s 			page 54


 2116 0002 0021     		movs	r1, #0
 2117 0004 FFF7FEFF 		bl	select_file
 2118              	.LVL233:
 193:./fs/vfs.c    ****         return 0;
 2119              		.loc 1 193 5 is_stmt 1 view .LVU569
 2120              	.LBB56:
 2121              	.LBI56:
  75:./include/linux/err.h **** {
 2122              		.loc 5 75 33 view .LVU570
 2123              	.LBB57:
 2124              		.loc 5 77 2 view .LVU571
 2125              		.loc 5 77 2 is_stmt 0 view .LVU572
 2126              	.LBE57:
 2127              	.LBE56:
 193:./fs/vfs.c    ****         return 0;
 2128              		.loc 1 193 7 discriminator 1 view .LVU573
 2129 0008 10F5805F 		cmn	r0, #4096
 2130 000c 02D8     		bhi	.L151
 196:./fs/vfs.c    **** }
 2131              		.loc 1 196 5 is_stmt 1 view .LVU574
 196:./fs/vfs.c    **** }
 2132              		.loc 1 196 23 is_stmt 0 view .LVU575
 2133 000e 836C     		ldr	r3, [r0, #72]
 196:./fs/vfs.c    **** }
 2134              		.loc 1 196 32 view .LVU576
 2135 0010 1888     		ldrh	r0, [r3]
 2136              	.LVL234:
 2137              	.L150:
 197:./fs/vfs.c    **** void *print_mode(char *path)
 2138              		.loc 1 197 1 view .LVU577
 2139 0012 08BD     		pop	{r3, pc}
 2140              	.LVL235:
 2141              	.L151:
 194:./fs/vfs.c    ****     }
 2142              		.loc 1 194 16 view .LVU578
 2143 0014 0020     		movs	r0, #0
 2144              	.LVL236:
 194:./fs/vfs.c    ****     }
 2145              		.loc 1 194 16 view .LVU579
 2146 0016 FCE7     		b	.L150
 2147              		.cfi_endproc
 2148              	.LFE1044:
 2150              		.section	.rodata.print_mode.str1.4,"aMS",%progbits,1
 2151              		.align	2
 2152              	.LC17:
 2153 0000 46696C65 		.ascii	"File mode: %s\012\000"
 2153      206D6F64 
 2153      653A2025 
 2153      730A00
 2154              		.section	.text.print_mode,"ax",%progbits
 2155              		.align	1
 2156              		.global	print_mode
 2157              		.syntax unified
 2158              		.thumb
 2159              		.thumb_func
 2161              	print_mode:
 2162              	.LVL237:
ARM GAS  /tmp/ccvYHbtC.s 			page 55


 2163              	.LFB1045:
 199:./fs/vfs.c    ****     umode_t mode = get_file_mode(path);
 2164              		.loc 1 199 1 is_stmt 1 view -0
 2165              		.cfi_startproc
 2166              		@ args = 0, pretend = 0, frame = 16
 2167              		@ frame_needed = 0, uses_anonymous_args = 0
 199:./fs/vfs.c    ****     umode_t mode = get_file_mode(path);
 2168              		.loc 1 199 1 is_stmt 0 view .LVU581
 2169 0000 00B5     		push	{lr}
 2170              	.LCFI37:
 2171              		.cfi_def_cfa_offset 4
 2172              		.cfi_offset 14, -4
 2173 0002 85B0     		sub	sp, sp, #20
 2174              	.LCFI38:
 2175              		.cfi_def_cfa_offset 24
 200:./fs/vfs.c    ****     char data[10];
 2176              		.loc 1 200 5 is_stmt 1 view .LVU582
 200:./fs/vfs.c    ****     char data[10];
 2177              		.loc 1 200 20 is_stmt 0 view .LVU583
 2178 0004 FFF7FEFF 		bl	get_file_mode
 2179              	.LVL238:
 201:./fs/vfs.c    ****     data[0] = (S_ISDIR(mode)) ? 'd' : 
 2180              		.loc 1 201 5 is_stmt 1 view .LVU584
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2181              		.loc 1 202 5 view .LVU585
 2182 0008 00F47043 		and	r3, r0, #61440
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2183              		.loc 1 202 13 is_stmt 0 view .LVU586
 2184 000c B3F5804F 		cmp	r3, #16384
 2185 0010 12D0     		beq	.L164
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2186              		.loc 1 202 13 discriminator 1 view .LVU587
 2187 0012 B3F5005F 		cmp	r3, #8192
 2188 0016 50D0     		beq	.L165
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2189              		.loc 1 202 13 discriminator 3 view .LVU588
 2190 0018 B3F5C04F 		cmp	r3, #24576
 2191 001c 4FD0     		beq	.L166
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2192              		.loc 1 202 13 discriminator 5 view .LVU589
 2193 001e B3F5805F 		cmp	r3, #4096
 2194 0022 4ED0     		beq	.L167
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2195              		.loc 1 202 13 discriminator 7 view .LVU590
 2196 0024 B3F5204F 		cmp	r3, #40960
 2197 0028 4DD0     		beq	.L168
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2198              		.loc 1 202 13 discriminator 9 view .LVU591
 2199 002a B3F5404F 		cmp	r3, #49152
 2200 002e 01D0     		beq	.L180
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2201              		.loc 1 202 13 discriminator 12 view .LVU592
 2202 0030 2D23     		movs	r3, #45
 2203 0032 02E0     		b	.L154
 2204              	.L180:
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2205              		.loc 1 202 13 discriminator 11 view .LVU593
ARM GAS  /tmp/ccvYHbtC.s 			page 56


 2206 0034 7323     		movs	r3, #115
 2207 0036 00E0     		b	.L154
 2208              	.L164:
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2209              		.loc 1 202 13 discriminator 2 view .LVU594
 2210 0038 6423     		movs	r3, #100
 2211              	.L154:
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2212              		.loc 1 202 13 discriminator 24 view .LVU595
 2213 003a 8DF80430 		strb	r3, [sp, #4]
 208:./fs/vfs.c    ****     data[2] = (mode & S_IWUSR) ? 'w' : '-';
 2214              		.loc 1 208 5 is_stmt 1 view .LVU596
 208:./fs/vfs.c    ****     data[2] = (mode & S_IWUSR) ? 'w' : '-';
 2215              		.loc 1 208 13 is_stmt 0 view .LVU597
 2216 003e 10F4807F 		tst	r0, #256
 2217 0042 42D0     		beq	.L170
 208:./fs/vfs.c    ****     data[2] = (mode & S_IWUSR) ? 'w' : '-';
 2218              		.loc 1 208 13 discriminator 1 view .LVU598
 2219 0044 7223     		movs	r3, #114
 2220              	.L155:
 208:./fs/vfs.c    ****     data[2] = (mode & S_IWUSR) ? 'w' : '-';
 2221              		.loc 1 208 13 discriminator 4 view .LVU599
 2222 0046 8DF80530 		strb	r3, [sp, #5]
 209:./fs/vfs.c    ****     data[3] = (mode & S_IXUSR) ? 'x' : '-';
 2223              		.loc 1 209 5 is_stmt 1 view .LVU600
 209:./fs/vfs.c    ****     data[3] = (mode & S_IXUSR) ? 'x' : '-';
 2224              		.loc 1 209 13 is_stmt 0 view .LVU601
 2225 004a 10F0800F 		tst	r0, #128
 2226 004e 3ED0     		beq	.L171
 209:./fs/vfs.c    ****     data[3] = (mode & S_IXUSR) ? 'x' : '-';
 2227              		.loc 1 209 13 discriminator 1 view .LVU602
 2228 0050 7723     		movs	r3, #119
 2229              	.L156:
 209:./fs/vfs.c    ****     data[3] = (mode & S_IXUSR) ? 'x' : '-';
 2230              		.loc 1 209 13 discriminator 4 view .LVU603
 2231 0052 8DF80630 		strb	r3, [sp, #6]
 210:./fs/vfs.c    ****     data[4] = (mode & S_IRGRP) ? 'r' : '-';
 2232              		.loc 1 210 5 is_stmt 1 view .LVU604
 210:./fs/vfs.c    ****     data[4] = (mode & S_IRGRP) ? 'r' : '-';
 2233              		.loc 1 210 13 is_stmt 0 view .LVU605
 2234 0056 10F0400F 		tst	r0, #64
 2235 005a 3AD0     		beq	.L172
 210:./fs/vfs.c    ****     data[4] = (mode & S_IRGRP) ? 'r' : '-';
 2236              		.loc 1 210 13 discriminator 1 view .LVU606
 2237 005c 7823     		movs	r3, #120
 2238              	.L157:
 210:./fs/vfs.c    ****     data[4] = (mode & S_IRGRP) ? 'r' : '-';
 2239              		.loc 1 210 13 discriminator 4 view .LVU607
 2240 005e 8DF80730 		strb	r3, [sp, #7]
 211:./fs/vfs.c    ****     data[5] = (mode & S_IWGRP) ? 'w' : '-';
 2241              		.loc 1 211 5 is_stmt 1 view .LVU608
 211:./fs/vfs.c    ****     data[5] = (mode & S_IWGRP) ? 'w' : '-';
 2242              		.loc 1 211 13 is_stmt 0 view .LVU609
 2243 0062 10F0200F 		tst	r0, #32
 2244 0066 36D0     		beq	.L173
 211:./fs/vfs.c    ****     data[5] = (mode & S_IWGRP) ? 'w' : '-';
 2245              		.loc 1 211 13 discriminator 1 view .LVU610
ARM GAS  /tmp/ccvYHbtC.s 			page 57


 2246 0068 7223     		movs	r3, #114
 2247              	.L158:
 211:./fs/vfs.c    ****     data[5] = (mode & S_IWGRP) ? 'w' : '-';
 2248              		.loc 1 211 13 discriminator 4 view .LVU611
 2249 006a 8DF80830 		strb	r3, [sp, #8]
 212:./fs/vfs.c    ****     data[6] = (mode & S_IXGRP) ? 'x' : '-';
 2250              		.loc 1 212 5 is_stmt 1 view .LVU612
 212:./fs/vfs.c    ****     data[6] = (mode & S_IXGRP) ? 'x' : '-';
 2251              		.loc 1 212 13 is_stmt 0 view .LVU613
 2252 006e 10F0100F 		tst	r0, #16
 2253 0072 32D0     		beq	.L174
 212:./fs/vfs.c    ****     data[6] = (mode & S_IXGRP) ? 'x' : '-';
 2254              		.loc 1 212 13 discriminator 1 view .LVU614
 2255 0074 7723     		movs	r3, #119
 2256              	.L159:
 212:./fs/vfs.c    ****     data[6] = (mode & S_IXGRP) ? 'x' : '-';
 2257              		.loc 1 212 13 discriminator 4 view .LVU615
 2258 0076 8DF80930 		strb	r3, [sp, #9]
 213:./fs/vfs.c    ****     data[7] = (mode & S_IROTH) ? 'r' : '-';
 2259              		.loc 1 213 5 is_stmt 1 view .LVU616
 213:./fs/vfs.c    ****     data[7] = (mode & S_IROTH) ? 'r' : '-';
 2260              		.loc 1 213 13 is_stmt 0 view .LVU617
 2261 007a 10F0080F 		tst	r0, #8
 2262 007e 2ED0     		beq	.L175
 213:./fs/vfs.c    ****     data[7] = (mode & S_IROTH) ? 'r' : '-';
 2263              		.loc 1 213 13 discriminator 1 view .LVU618
 2264 0080 7823     		movs	r3, #120
 2265              	.L160:
 213:./fs/vfs.c    ****     data[7] = (mode & S_IROTH) ? 'r' : '-';
 2266              		.loc 1 213 13 discriminator 4 view .LVU619
 2267 0082 8DF80A30 		strb	r3, [sp, #10]
 214:./fs/vfs.c    ****     data[8] = (mode & S_IWOTH) ? 'w' : '-';
 2268              		.loc 1 214 5 is_stmt 1 view .LVU620
 214:./fs/vfs.c    ****     data[8] = (mode & S_IWOTH) ? 'w' : '-';
 2269              		.loc 1 214 13 is_stmt 0 view .LVU621
 2270 0086 10F0040F 		tst	r0, #4
 2271 008a 2AD0     		beq	.L176
 214:./fs/vfs.c    ****     data[8] = (mode & S_IWOTH) ? 'w' : '-';
 2272              		.loc 1 214 13 discriminator 1 view .LVU622
 2273 008c 7223     		movs	r3, #114
 2274              	.L161:
 214:./fs/vfs.c    ****     data[8] = (mode & S_IWOTH) ? 'w' : '-';
 2275              		.loc 1 214 13 discriminator 4 view .LVU623
 2276 008e 8DF80B30 		strb	r3, [sp, #11]
 215:./fs/vfs.c    ****     data[9] = (mode & S_IXOTH) ? 'x' : '-';
 2277              		.loc 1 215 5 is_stmt 1 view .LVU624
 215:./fs/vfs.c    ****     data[9] = (mode & S_IXOTH) ? 'x' : '-';
 2278              		.loc 1 215 13 is_stmt 0 view .LVU625
 2279 0092 10F0020F 		tst	r0, #2
 2280 0096 26D0     		beq	.L177
 215:./fs/vfs.c    ****     data[9] = (mode & S_IXOTH) ? 'x' : '-';
 2281              		.loc 1 215 13 discriminator 1 view .LVU626
 2282 0098 7723     		movs	r3, #119
 2283              	.L162:
 215:./fs/vfs.c    ****     data[9] = (mode & S_IXOTH) ? 'x' : '-';
 2284              		.loc 1 215 13 discriminator 4 view .LVU627
 2285 009a 8DF80C30 		strb	r3, [sp, #12]
ARM GAS  /tmp/ccvYHbtC.s 			page 58


 216:./fs/vfs.c    ****     printk(KERN_INFO "File mode: %s\n", data);
 2286              		.loc 1 216 5 is_stmt 1 view .LVU628
 216:./fs/vfs.c    ****     printk(KERN_INFO "File mode: %s\n", data);
 2287              		.loc 1 216 13 is_stmt 0 view .LVU629
 2288 009e 10F0010F 		tst	r0, #1
 2289 00a2 22D0     		beq	.L178
 216:./fs/vfs.c    ****     printk(KERN_INFO "File mode: %s\n", data);
 2290              		.loc 1 216 13 discriminator 1 view .LVU630
 2291 00a4 7823     		movs	r3, #120
 2292              	.L163:
 216:./fs/vfs.c    ****     printk(KERN_INFO "File mode: %s\n", data);
 2293              		.loc 1 216 13 discriminator 4 view .LVU631
 2294 00a6 8DF80D30 		strb	r3, [sp, #13]
 217:./fs/vfs.c    ****     return NULL;
 2295              		.loc 1 217 5 is_stmt 1 view .LVU632
 2296 00aa 01A9     		add	r1, sp, #4
 2297 00ac 1048     		ldr	r0, .L181
 2298              	.LVL239:
 217:./fs/vfs.c    ****     return NULL;
 2299              		.loc 1 217 5 is_stmt 0 view .LVU633
 2300 00ae FFF7FEFF 		bl	printk
 2301              	.LVL240:
 218:./fs/vfs.c    **** }
 2302              		.loc 1 218 5 is_stmt 1 view .LVU634
 219:./fs/vfs.c    **** 
 2303              		.loc 1 219 1 is_stmt 0 view .LVU635
 2304 00b2 0020     		movs	r0, #0
 2305 00b4 05B0     		add	sp, sp, #20
 2306              	.LCFI39:
 2307              		.cfi_remember_state
 2308              		.cfi_def_cfa_offset 4
 2309              		@ sp needed
 2310 00b6 5DF804FB 		ldr	pc, [sp], #4
 2311              	.LVL241:
 2312              	.L165:
 2313              	.LCFI40:
 2314              		.cfi_restore_state
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2315              		.loc 1 202 13 discriminator 4 view .LVU636
 2316 00ba 6323     		movs	r3, #99
 2317 00bc BDE7     		b	.L154
 2318              	.L166:
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2319              		.loc 1 202 13 discriminator 6 view .LVU637
 2320 00be 6223     		movs	r3, #98
 2321 00c0 BBE7     		b	.L154
 2322              	.L167:
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2323              		.loc 1 202 13 discriminator 8 view .LVU638
 2324 00c2 7023     		movs	r3, #112
 2325 00c4 B9E7     		b	.L154
 2326              	.L168:
 202:./fs/vfs.c    ****     (S_ISCHR(mode)) ? 'c' : 
 2327              		.loc 1 202 13 discriminator 10 view .LVU639
 2328 00c6 6C23     		movs	r3, #108
 2329 00c8 B7E7     		b	.L154
 2330              	.L170:
ARM GAS  /tmp/ccvYHbtC.s 			page 59


 208:./fs/vfs.c    ****     data[2] = (mode & S_IWUSR) ? 'w' : '-';
 2331              		.loc 1 208 13 discriminator 2 view .LVU640
 2332 00ca 2D23     		movs	r3, #45
 2333 00cc BBE7     		b	.L155
 2334              	.L171:
 209:./fs/vfs.c    ****     data[3] = (mode & S_IXUSR) ? 'x' : '-';
 2335              		.loc 1 209 13 discriminator 2 view .LVU641
 2336 00ce 2D23     		movs	r3, #45
 2337 00d0 BFE7     		b	.L156
 2338              	.L172:
 210:./fs/vfs.c    ****     data[4] = (mode & S_IRGRP) ? 'r' : '-';
 2339              		.loc 1 210 13 discriminator 2 view .LVU642
 2340 00d2 2D23     		movs	r3, #45
 2341 00d4 C3E7     		b	.L157
 2342              	.L173:
 211:./fs/vfs.c    ****     data[5] = (mode & S_IWGRP) ? 'w' : '-';
 2343              		.loc 1 211 13 discriminator 2 view .LVU643
 2344 00d6 2D23     		movs	r3, #45
 2345 00d8 C7E7     		b	.L158
 2346              	.L174:
 212:./fs/vfs.c    ****     data[6] = (mode & S_IXGRP) ? 'x' : '-';
 2347              		.loc 1 212 13 discriminator 2 view .LVU644
 2348 00da 2D23     		movs	r3, #45
 2349 00dc CBE7     		b	.L159
 2350              	.L175:
 213:./fs/vfs.c    ****     data[7] = (mode & S_IROTH) ? 'r' : '-';
 2351              		.loc 1 213 13 discriminator 2 view .LVU645
 2352 00de 2D23     		movs	r3, #45
 2353 00e0 CFE7     		b	.L160
 2354              	.L176:
 214:./fs/vfs.c    ****     data[8] = (mode & S_IWOTH) ? 'w' : '-';
 2355              		.loc 1 214 13 discriminator 2 view .LVU646
 2356 00e2 2D23     		movs	r3, #45
 2357 00e4 D3E7     		b	.L161
 2358              	.L177:
 215:./fs/vfs.c    ****     data[9] = (mode & S_IXOTH) ? 'x' : '-';
 2359              		.loc 1 215 13 discriminator 2 view .LVU647
 2360 00e6 2D23     		movs	r3, #45
 2361 00e8 D7E7     		b	.L162
 2362              	.L178:
 216:./fs/vfs.c    ****     printk(KERN_INFO "File mode: %s\n", data);
 2363              		.loc 1 216 13 discriminator 2 view .LVU648
 2364 00ea 2D23     		movs	r3, #45
 2365 00ec DBE7     		b	.L163
 2366              	.L182:
 2367 00ee 00BF     		.align	2
 2368              	.L181:
 2369 00f0 00000000 		.word	.LC17
 2370              		.cfi_endproc
 2371              	.LFE1045:
 2373              		.section	.rootfsinitcall,"aw"
 2374              		.align	2
 2377              	_initcall_root_fs_init:
 2378 0000 00000000 		.word	root_fs_init
 2379              		.section	.rodata.str1.4,"aMS",%progbits,1
 2380              		.align	2
 2381              	.LC18:
ARM GAS  /tmp/ccvYHbtC.s 			page 60


 2382 0000 66696C65 		.ascii	"file_close\000"
 2382      5F636C6F 
 2382      736500
 2383 000b 00       		.align	2
 2384              	.LC19:
 2385 000c 00       		.ascii	"\000"
 2386              		.section	.export_table,"aw"
 2387              		.align	2
 2390              	file_close_export_struct:
 2391 0000 00000000 		.word	.LC18
 2392 0004 0C000000 		.word	.LC19
 2393 0008 00000000 		.word	file_close
 2394              		.section	.rodata.str1.4
 2395 000d 000000   		.align	2
 2396              	.LC20:
 2397 0010 7666735F 		.ascii	"vfs_ioctl\000"
 2397      696F6374 
 2397      6C00
 2398              		.section	.export_table
 2399              		.align	2
 2402              	vfs_ioctl_export_struct:
 2403 000c 10000000 		.word	.LC20
 2404 0010 0C000000 		.word	.LC19
 2405 0014 00000000 		.word	vfs_ioctl
 2406              		.section	.rodata.str1.4
 2407 001a 0000     		.align	2
 2408              	.LC21:
 2409 001c 6B65726E 		.ascii	"kernel_write\000"
 2409      656C5F77 
 2409      72697465 
 2409      00
 2410              		.section	.export_table
 2411              		.align	2
 2414              	kernel_write_export_struct:
 2415 0018 1C000000 		.word	.LC21
 2416 001c 0C000000 		.word	.LC19
 2417 0020 00000000 		.word	kernel_write
 2418              		.section	.rodata.str1.4
 2419 0029 000000   		.align	2
 2420              	.LC22:
 2421 002c 6B65726E 		.ascii	"kernel_read\000"
 2421      656C5F72 
 2421      65616400 
 2422              		.section	.export_table
 2423              		.align	2
 2426              	kernel_read_export_struct:
 2427 0024 2C000000 		.word	.LC22
 2428 0028 0C000000 		.word	.LC19
 2429 002c 00000000 		.word	kernel_read
 2430              		.section	.rodata.str1.4
 2431              		.align	2
 2432              	.LC23:
 2433 0038 66696C70 		.ascii	"filp_open\000"
 2433      5F6F7065 
 2433      6E00
 2434              		.section	.export_table
 2435              		.align	2
ARM GAS  /tmp/ccvYHbtC.s 			page 61


 2438              	filp_open_export_struct:
 2439 0030 38000000 		.word	.LC23
 2440 0034 0C000000 		.word	.LC19
 2441 0038 00000000 		.word	filp_open
 2442              		.section	.rodata.str1.4
 2443 0042 0000     		.align	2
 2444              	.LC24:
 2445 0044 6D6B6469 		.ascii	"mkdir\000"
 2445      7200
 2446              		.section	.export_table
 2447              		.align	2
 2450              	mkdir_export_struct:
 2451 003c 44000000 		.word	.LC24
 2452 0040 0C000000 		.word	.LC19
 2453 0044 00000000 		.word	mkdir
 2454              		.section	.rodata.str1.4
 2455 004a 0000     		.align	2
 2456              	.LC25:
 2457 004c 626C6B64 		.ascii	"blkdev_get_by_path\000"
 2457      65765F67 
 2457      65745F62 
 2457      795F7061 
 2457      746800
 2458              		.section	.export_table
 2459              		.align	2
 2462              	blkdev_get_by_path_export_struct:
 2463 0048 4C000000 		.word	.LC25
 2464 004c 0C000000 		.word	.LC19
 2465 0050 00000000 		.word	blkdev_get_by_path
 2466              		.section	.rodata.str1.4
 2467 005f 00       		.align	2
 2468              	.LC26:
 2469 0060 72656D6F 		.ascii	"remove_dentry\000"
 2469      76655F64 
 2469      656E7472 
 2469      7900
 2470              		.section	.export_table
 2471              		.align	2
 2474              	remove_dentry_export_struct:
 2475 0054 60000000 		.word	.LC26
 2476 0058 0C000000 		.word	.LC19
 2477 005c 00000000 		.word	remove_dentry
 2478              		.global	root_dentry
 2479              		.section	.bss.root_dentry,"aw",%nobits
 2480              		.align	2
 2483              	root_dentry:
 2484 0000 00000000 		.space	4
 2485              		.text
 2486              	.Letext0:
 2487              		.file 6 "./include/asm-generic/int-l64.h"
 2488              		.file 7 "./include/asm-generic/posix_types.h"
 2489              		.file 8 "./include/uapi/linux/types.h"
 2490              		.file 9 "./include/linux/types.h"
 2491              		.file 10 "./include/linux/init.h"
 2492              		.file 11 "./include/linux/export.h"
 2493              		.file 12 "./include/linux/errseq.h"
 2494              		.file 13 "./include/linux/time64.h"
ARM GAS  /tmp/ccvYHbtC.s 			page 62


 2495              		.file 14 "./arch/arm_m/include/asm/sched.h"
 2496              		.file 15 "./include/linux/sched.h"
 2497              		.file 16 "./include/linux/spinlock_types_raw.h"
 2498              		.file 17 "./include/linux/spinlock_types.h"
 2499              		.file 18 "./include/linux/rbtree_types.h"
 2500              		.file 19 "./include/linux/uidgid_types.h"
 2501              		.file 20 "./include/linux/projid.h"
 2502              		.file 21 "./include/linux/fs.h"
 2503              		.file 22 "./include/linux/mnt_idmapping.h"
 2504              		.file 23 "./include/linux/mutex.h"
 2505              		.file 24 "./include/linux/uio.h"
 2506              		.file 25 "./include/linux/migrate_mode.h"
 2507              		.file 26 "./include/linux/wait.h"
 2508              		.file 27 "./include/linux/xarray.h"
 2509              		.file 28 "./include/linux/rw_hint.h"
 2510              		.file 29 "./include/linux/reciprocal_div.h"
 2511              		.file 30 "./include/linux/slab.h"
 2512              		.file 31 "./include/linux/mm_type.h"
 2513              		.file 32 "./include/linux/bvec.h"
 2514              		.file 33 "./include/linux/blk_types.h"
 2515              		.file 34 "./include/linux/blkdev.h"
 2516              		.file 35 "./include/linux/bio.h"
 2517              		.file 36 "./include/linux/mempool_super_haper.h"
 2518              		.file 37 "./include/linux/mempool.h"
 2519              		.file 38 "./include/linux/lockdep_types.h"
 2520              		.file 39 "./include/linux/workqueue_types.h"
 2521              		.file 40 "./include/linux/blk-mq.h"
 2522              		.file 41 "./include/linux/dcache.h"
 2523              		.file 42 "./include/uapi/linux/pr.h"
 2524              		.file 43 "./include/linux/pr.h"
 2525              		.file 44 "./include/linux/hdreg.h"
 2526              		.file 45 "./include/linux/lockref.h"
 2527              		.file 46 "./include/linux/path.h"
 2528              		.file 47 "./include/linux/statfs.h"
 2529              		.file 48 "./include/linux/stat.h"
 2530              		.file 49 "./include/linux/time.h"
 2531              		.file 50 "./include/linux/printk.h"
ARM GAS  /tmp/ccvYHbtC.s 			page 63


DEFINED SYMBOLS
                            *ABS*:00000000 vfs.c
     /tmp/ccvYHbtC.s:21     .text.__spin_unlock:00000000 $t
     /tmp/ccvYHbtC.s:26     .text.__spin_unlock:00000000 __spin_unlock
     /tmp/ccvYHbtC.s:45     .text.spin_unlock:00000000 $t
     /tmp/ccvYHbtC.s:50     .text.spin_unlock:00000000 spin_unlock
     /tmp/ccvYHbtC.s:73     .text.get_dir_name:00000000 $t
     /tmp/ccvYHbtC.s:78     .text.get_dir_name:00000000 get_dir_name
     /tmp/ccvYHbtC.s:190    .text.get_dir_number:00000000 $t
     /tmp/ccvYHbtC.s:195    .text.get_dir_number:00000000 get_dir_number
     /tmp/ccvYHbtC.s:253    .text.find_dentry:00000000 $t
     /tmp/ccvYHbtC.s:258    .text.find_dentry:00000000 find_dentry
     /tmp/ccvYHbtC.s:353    .rodata.create_dentry.str1.4:00000000 $d
     /tmp/ccvYHbtC.s:357    .text.create_dentry:00000000 $t
     /tmp/ccvYHbtC.s:362    .text.create_dentry:00000000 create_dentry
     /tmp/ccvYHbtC.s:521    .text.create_dentry:00000084 $d
     /tmp/ccvYHbtC.s:526    .rodata.print_read_only_message.str1.4:00000000 $d
     /tmp/ccvYHbtC.s:530    .text.print_read_only_message:00000000 $t
     /tmp/ccvYHbtC.s:535    .text.print_read_only_message:00000000 print_read_only_message
     /tmp/ccvYHbtC.s:555    .text.print_read_only_message:0000000c $d
     /tmp/ccvYHbtC.s:560    .rodata.__remove_dentry.str1.4:00000000 $d
     /tmp/ccvYHbtC.s:564    .text.__remove_dentry:00000000 $t
     /tmp/ccvYHbtC.s:569    .text.__remove_dentry:00000000 __remove_dentry
     /tmp/ccvYHbtC.s:683    .text.__remove_dentry:0000005c $d
     /tmp/ccvYHbtC.s:688    .text.__spin_lock:00000000 $t
     /tmp/ccvYHbtC.s:693    .text.__spin_lock:00000000 __spin_lock
     /tmp/ccvYHbtC.s:743    .text.spin_lock:00000000 $t
     /tmp/ccvYHbtC.s:748    .text.spin_lock:00000000 spin_lock
     /tmp/ccvYHbtC.s:808    .text.kernel_read:00000000 $t
     /tmp/ccvYHbtC.s:814    .text.kernel_read:00000000 kernel_read
     /tmp/ccvYHbtC.s:920    .text.kernel_write:00000000 $t
     /tmp/ccvYHbtC.s:926    .text.kernel_write:00000000 kernel_write
     /tmp/ccvYHbtC.s:1054   .text.kernel_write:00000084 $d
     /tmp/ccvYHbtC.s:1059   .text.vfs_ioctl:00000000 $t
     /tmp/ccvYHbtC.s:1065   .text.vfs_ioctl:00000000 vfs_ioctl
     /tmp/ccvYHbtC.s:1183   .text.file_close:00000000 $t
     /tmp/ccvYHbtC.s:1189   .text.file_close:00000000 file_close
     /tmp/ccvYHbtC.s:1276   .text.select_file:00000000 $t
     /tmp/ccvYHbtC.s:1282   .text.select_file:00000000 select_file
     /tmp/ccvYHbtC.s:1409   .text.select_file:00000060 $d
     /tmp/ccvYHbtC.s:2483   .bss.root_dentry:00000000 root_dentry
     /tmp/ccvYHbtC.s:1414   .text.remove_dentry:00000000 $t
     /tmp/ccvYHbtC.s:1420   .text.remove_dentry:00000000 remove_dentry
     /tmp/ccvYHbtC.s:1472   .text.blkdev_get_by_path:00000000 $t
     /tmp/ccvYHbtC.s:1478   .text.blkdev_get_by_path:00000000 blkdev_get_by_path
     /tmp/ccvYHbtC.s:1511   .text.create_new_dentry:00000000 $t
     /tmp/ccvYHbtC.s:1517   .text.create_new_dentry:00000000 create_new_dentry
     /tmp/ccvYHbtC.s:1619   .text.mkdir:00000000 $t
     /tmp/ccvYHbtC.s:1625   .text.mkdir:00000000 mkdir
     /tmp/ccvYHbtC.s:1658   .rodata.root_fs_init.str1.4:00000000 $d
     /tmp/ccvYHbtC.s:1689   .text.root_fs_init:00000000 $t
     /tmp/ccvYHbtC.s:1694   .text.root_fs_init:00000000 root_fs_init
     /tmp/ccvYHbtC.s:1802   .text.root_fs_init:00000080 $d
     /tmp/ccvYHbtC.s:1816   .rodata.filp_open.str1.4:00000000 $d
     /tmp/ccvYHbtC.s:1829   .text.filp_open:00000000 $t
     /tmp/ccvYHbtC.s:1835   .text.filp_open:00000000 filp_open
     /tmp/ccvYHbtC.s:2086   .text.filp_open:000000e4 $d
ARM GAS  /tmp/ccvYHbtC.s 			page 64


     /tmp/ccvYHbtC.s:2095   .text.get_file_mode:00000000 $t
     /tmp/ccvYHbtC.s:2101   .text.get_file_mode:00000000 get_file_mode
     /tmp/ccvYHbtC.s:2151   .rodata.print_mode.str1.4:00000000 $d
     /tmp/ccvYHbtC.s:2155   .text.print_mode:00000000 $t
     /tmp/ccvYHbtC.s:2161   .text.print_mode:00000000 print_mode
     /tmp/ccvYHbtC.s:2369   .text.print_mode:000000f0 $d
     /tmp/ccvYHbtC.s:2374   .rootfsinitcall:00000000 $d
     /tmp/ccvYHbtC.s:2377   .rootfsinitcall:00000000 _initcall_root_fs_init
     /tmp/ccvYHbtC.s:2380   .rodata.str1.4:00000000 $d
     /tmp/ccvYHbtC.s:2387   .export_table:00000000 $d
     /tmp/ccvYHbtC.s:2390   .export_table:00000000 file_close_export_struct
     /tmp/ccvYHbtC.s:2402   .export_table:0000000c vfs_ioctl_export_struct
     /tmp/ccvYHbtC.s:2414   .export_table:00000018 kernel_write_export_struct
     /tmp/ccvYHbtC.s:2426   .export_table:00000024 kernel_read_export_struct
     /tmp/ccvYHbtC.s:2438   .export_table:00000030 filp_open_export_struct
     /tmp/ccvYHbtC.s:2450   .export_table:0000003c mkdir_export_struct
     /tmp/ccvYHbtC.s:2462   .export_table:00000048 blkdev_get_by_path_export_struct
     /tmp/ccvYHbtC.s:2474   .export_table:00000054 remove_dentry_export_struct
     /tmp/ccvYHbtC.s:2480   .bss.root_dentry:00000000 $d

UNDEFINED SYMBOLS
d_lookup_dentry
d_alloc
__d_drop
printk
simple_unlink
stop_all_scheduler
start_all_scheduler
get_current_task
__delay
ktime_get
HZ
f_put
devfs_get_blk_dev
mount_root_fs
sys_mount
f_get
