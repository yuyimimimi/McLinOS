ARM GAS  /tmp/ccvuNOOV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"mempool.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c"
  20              		.section	.text.__spin_init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__spin_init:
  27              	.LVL0:
  28              	.LFB226:
  29              		.file 2 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h"
   1:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** #ifndef __SPIN_LOCK_H_
   2:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** #define __SPIN_LOCK_H_
   3:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
   4:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** #include <linux/sched.h>
   5:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
   6:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** typedef struct { 
   7:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****      int flag; 
   8:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** } arch_spinlock_t;
   9:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  10:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** static int __spin_init(arch_spinlock_t *lock) 
  11:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** {
  30              		.loc 2 11 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  12:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     lock->flag = 0;
  35              		.loc 2 12 5 view .LVU1
  36              		.loc 2 12 16 is_stmt 0 view .LVU2
  37 0000 0023     		movs	r3, #0
  38 0002 0360     		str	r3, [r0]
  39              	.LVL1:
  13:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** }
  40              		.loc 2 13 1 view .LVU3
  41 0004 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE226:
  45              		.section	.text.__spin_unlock,"ax",%progbits
  46              		.align	1
ARM GAS  /tmp/ccvuNOOV.s 			page 2


  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	__spin_unlock:
  52              	.LVL2:
  53              	.LFB228:
  14:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  15:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** static int __spin_lock(arch_spinlock_t *lock) {
  16:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  17:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     stop_all_scheduler();
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     if(lock->flag == 0){
  19:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
  20:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
  21:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         return 1;
  22:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
  23:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     else
  24:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     {
  25:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         start_all_scheduler();
  26:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         return 0;
  27:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
  28:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** }
  29:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  30:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** static void  __spin_unlock( arch_spinlock_t *lock ){
  54              		.loc 2 30 52 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  31:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     lock->flag = 0;
  59              		.loc 2 31 5 view .LVU5
  60              		.loc 2 31 16 is_stmt 0 view .LVU6
  61 0000 0023     		movs	r3, #0
  62 0002 0360     		str	r3, [r0]
  32:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** }
  63              		.loc 2 32 1 view .LVU7
  64 0004 7047     		bx	lr
  65              		.cfi_endproc
  66              	.LFE228:
  68              		.section	.text.spin_lock_init,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	spin_lock_init:
  75              	.LVL3:
  76              	.LFB229:
  77              		.file 3 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #ifndef __SPINLOCK_H__
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #define __SPINLOCK_H__
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #include <linux/types.h>
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #include <linux/spinlock_types.h>
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #include <linux/sched.h>
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** static void spin_lock_init(spinlock_t* lock){
ARM GAS  /tmp/ccvuNOOV.s 			page 3


  78              		.loc 3 10 45 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		.loc 3 10 45 is_stmt 0 view .LVU9
  83 0000 08B5     		push	{r3, lr}
  84              	.LCFI0:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 3, -8
  87              		.cfi_offset 14, -4
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     __spin_init(&lock->rlock.raw_lock);
  88              		.loc 3 11 5 is_stmt 1 view .LVU10
  89 0002 FFF7FEFF 		bl	__spin_init
  90              	.LVL4:
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** }
  91              		.loc 3 12 1 is_stmt 0 view .LVU11
  92 0006 08BD     		pop	{r3, pc}
  93              		.cfi_endproc
  94              	.LFE229:
  96              		.section	.text.spin_unlock,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	spin_unlock:
 103              	.LVL5:
 104              	.LFB231:
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** static void spin_lock(spinlock_t* lock)
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** {  
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     while (1)
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     {
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         if(__spin_lock(&lock->rlock.raw_lock) == 1){
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             lock->owner = get_current_task();
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             break;
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         else  if(lock->owner == get_current_task()){  //Â¶ÇÊûúÂ∑≤ÁªèË¢´ÈîÅ‰Ωè‰ΩÜÊòØÈîÅÊòØËá™Â∑±ÁöÑÔ
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         else{
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             __delay(5); //‰∏ªÂä®ËÆ©Âá∫Êó∂Èó¥Áâá
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     }
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** }
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** static void spin_unlock(spinlock_t* lock)
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** {
 105              		.loc 3 32 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		.loc 3 32 1 is_stmt 0 view .LVU13
 110 0000 08B5     		push	{r3, lr}
 111              	.LCFI1:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 3, -8
 114              		.cfi_offset 14, -4
ARM GAS  /tmp/ccvuNOOV.s 			page 4


  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     __spin_unlock(&lock->rlock.raw_lock);
 115              		.loc 3 33 5 is_stmt 1 view .LVU14
 116 0002 FFF7FEFF 		bl	__spin_unlock
 117              	.LVL6:
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** }
 118              		.loc 3 34 1 is_stmt 0 view .LVU15
 119 0006 08BD     		pop	{r3, pc}
 120              		.cfi_endproc
 121              	.LFE231:
 123              		.section	.text.reset_block_status,"ax",%progbits
 124              		.align	1
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 129              	reset_block_status:
 130              	.LVL7:
 131              	.LFB237:
 132              		.file 4 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #ifndef _MEMPOOL_MY_H
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #define _MEMPOOL_MY_H
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #include <linux/types.h>
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #include <linux/spinlock.h>
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #define minimum_size 8    //ÊúÄÂ∞èÁ¢éÁâáÂ§ßÂ∞è
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** typedef uint32_t block_t; //ÊØè‰∏Ä‰∏™Âùó‰∏∫4bit
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** typedef uint32_t count_t;	
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** typedef uint8_t  u8_t;
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** typedef void* (*memory_block_operation_t)(struct haper2*haper, struct memory_block* block,void *arg
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** struct memory_block
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** {
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	u8_t  flag; 
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	#define BASE_MAGIC 0xABCD 
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	uint16_t magic;                        
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	u8_t   owner;    //ÊöÇÊó∂Áî®‰∫éÂ°´ÂÖÖ
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	size_t block_size;					
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* next; 
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* priv_block;    
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }__attribute__((aligned(4)));
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** struct haper2 {
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	uint8_t mode;                        
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	block_t* space;
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	spinlock_t lock;
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	count_t memory_size;                  
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* start_addr;     
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** };
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #define use_flag     (0x01 << 0)  //you can add other flags in there
ARM GAS  /tmp/ccvuNOOV.s 			page 5


  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #define other_flag_0 (0x01 << 1)
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #define	other_flag_1 (0x01 << 2)
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #define other_flag_2 (0x01 << 3)
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #define other_flag_3 (0x01 << 4)
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #define other_flag_4 (0x01 << 5)
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #define other_flag_5 (0x01 << 6)
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** #define other_flag_6 (0x01 << 7)
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static void reset_block_status(struct memory_block* block,uint8_t status){                         
 133              		.loc 4 48 74 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	block->flag &= ~status;
 138              		.loc 4 49 2 view .LVU17
 139              		.loc 4 49 7 is_stmt 0 view .LVU18
 140 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 141              		.loc 4 49 14 view .LVU19
 142 0002 C943     		mvns	r1, r1
 143              	.LVL8:
 144              		.loc 4 49 14 view .LVU20
 145 0004 49B2     		sxtb	r1, r1
 146              	.LVL9:
 147              		.loc 4 49 14 view .LVU21
 148 0006 0B40     		ands	r3, r3, r1
 149 0008 0370     		strb	r3, [r0]
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 150              		.loc 4 50 1 view .LVU22
 151 000a 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE237:
 155              		.section	.text.get_block_status,"ax",%progbits
 156              		.align	1
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	get_block_status:
 162              	.LVL10:
 163              	.LFB239:
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static void set_block_status(struct memory_block* block,uint8_t status){						
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	block->flag |= status;
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static int get_block_status(struct memory_block* block,uint8_t status){							
 164              		.loc 4 54 71 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (block->flag & status)return 1;
 169              		.loc 4 55 2 view .LVU24
 170              		.loc 4 55 11 is_stmt 0 view .LVU25
 171 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 172              		.loc 4 55 5 view .LVU26
 173 0002 0B42     		tst	r3, r1
 174 0004 01D0     		beq	.L10
 175              		.loc 4 55 34 discriminator 1 view .LVU27
ARM GAS  /tmp/ccvuNOOV.s 			page 6


 176 0006 0120     		movs	r0, #1
 177              	.LVL11:
 178              		.loc 4 55 34 discriminator 1 view .LVU28
 179 0008 7047     		bx	lr
 180              	.LVL12:
 181              	.L10:
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	else return 0;
 182              		.loc 4 56 14 view .LVU29
 183 000a 0020     		movs	r0, #0
 184              	.LVL13:
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** } 
 185              		.loc 4 57 1 view .LVU30
 186 000c 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE239:
 190              		.section	.text.get_next_block,"ax",%progbits
 191              		.align	1
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	get_next_block:
 197              	.LVL14:
 198              	.LFB240:
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static struct memory_block* get_next_block(struct memory_block* block){                            
 199              		.loc 4 58 71 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		@ link register save eliminated.
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return block->next;
 204              		.loc 4 59 2 view .LVU32
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 205              		.loc 4 60 1 is_stmt 0 view .LVU33
 206 0000 C068     		ldr	r0, [r0, #12]
 207              	.LVL15:
 208              		.loc 4 60 1 view .LVU34
 209 0002 7047     		bx	lr
 210              		.cfi_endproc
 211              	.LFE240:
 213              		.section	.text.get_priv_block,"ax",%progbits
 214              		.align	1
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 219              	get_priv_block:
 220              	.LVL16:
 221              	.LFB241:
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static struct memory_block* get_priv_block(struct memory_block* block) {						   
 222              		.loc 4 61 72 is_stmt 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return block->priv_block;
 227              		.loc 4 62 2 view .LVU36
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 228              		.loc 4 63 1 is_stmt 0 view .LVU37
ARM GAS  /tmp/ccvuNOOV.s 			page 7


 229 0000 0069     		ldr	r0, [r0, #16]
 230              	.LVL17:
 231              		.loc 4 63 1 view .LVU38
 232 0002 7047     		bx	lr
 233              		.cfi_endproc
 234              	.LFE241:
 236              		.section	.text.clean_block,"ax",%progbits
 237              		.align	1
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	clean_block:
 243              	.LVL18:
 244              	.LFB243:
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static size_t get_block_size(struct memory_block* block){						
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return block->block_size;
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static void clean_block(struct memory_block* block){						
 245              		.loc 4 67 52 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (block == NULL) return;
 250              		.loc 4 68 2 view .LVU40
 251              		.loc 4 68 5 is_stmt 0 view .LVU41
 252 0000 8446     		mov	ip, r0
 253 0002 48B1     		cbz	r0, .L13
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	u8_t* data = (u8_t*)block;
 254              		.loc 4 69 2 is_stmt 1 view .LVU42
 255              	.LVL19:
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	int length = sizeof(struct memory_block) + block->block_size;
 256              		.loc 4 70 2 view .LVU43
 257              		.loc 4 70 50 is_stmt 0 view .LVU44
 258 0004 8168     		ldr	r1, [r0, #8]
 259              		.loc 4 70 43 view .LVU45
 260 0006 1431     		adds	r1, r1, #20
 261              	.LVL20:
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	for (int i = 0; i < length; i++){
 262              		.loc 4 71 2 is_stmt 1 view .LVU46
 263              	.LBB28:
 264              		.loc 4 71 7 view .LVU47
 265              		.loc 4 71 11 is_stmt 0 view .LVU48
 266 0008 0023     		movs	r3, #0
 267              		.loc 4 71 2 view .LVU49
 268 000a 03E0     		b	.L15
 269              	.LVL21:
 270              	.L16:
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		data[i] = 0;
 271              		.loc 4 72 3 is_stmt 1 view .LVU50
 272              		.loc 4 72 11 is_stmt 0 view .LVU51
 273 000c 0022     		movs	r2, #0
 274 000e 0CF80320 		strb	r2, [ip, r3]
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	for (int i = 0; i < length; i++){
 275              		.loc 4 71 31 is_stmt 1 discriminator 3 view .LVU52
 276 0012 0133     		adds	r3, r3, #1
 277              	.LVL22:
ARM GAS  /tmp/ccvuNOOV.s 			page 8


 278              	.L15:
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	for (int i = 0; i < length; i++){
 279              		.loc 4 71 20 discriminator 1 view .LVU53
 280 0014 8B42     		cmp	r3, r1
 281 0016 F9DB     		blt	.L16
 282              	.LVL23:
 283              	.L13:
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	for (int i = 0; i < length; i++){
 284              		.loc 4 71 20 is_stmt 0 discriminator 1 view .LVU54
 285              	.LBE28:
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 286              		.loc 4 74 1 view .LVU55
 287 0018 7047     		bx	lr
 288              		.cfi_endproc
 289              	.LFE243:
 291              		.section	.text.haper2_init,"ax",%progbits
 292              		.align	1
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 297              	haper2_init:
 298              	.LVL24:
 299              	.LFB244:
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static int haper2_init(struct haper2* haper, block_t* space, size_t space_size,uint8_t mode){	
 300              		.loc 4 75 93 is_stmt 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		.loc 4 75 93 is_stmt 0 view .LVU57
 305 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 306              	.LCFI2:
 307              		.cfi_def_cfa_offset 24
 308              		.cfi_offset 4, -24
 309              		.cfi_offset 5, -20
 310              		.cfi_offset 6, -16
 311              		.cfi_offset 7, -12
 312              		.cfi_offset 8, -8
 313              		.cfi_offset 14, -4
 314 0004 0546     		mov	r5, r0
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (space_size < sizeof(struct memory_block)){
 315              		.loc 4 76 2 is_stmt 1 view .LVU58
 316              		.loc 4 76 5 is_stmt 0 view .LVU59
 317 0006 132A     		cmp	r2, #19
 318 0008 1AD9     		bls	.L21
 319 000a 0C46     		mov	r4, r1
 320 000c 1646     		mov	r6, r2
 321 000e 9846     		mov	r8, r3
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			haper->memory_size = 0;
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			haper->mode = 0;
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			haper->start_addr = NULL;
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			haper->space = NULL;
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		 return -1;
  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}		
  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block *rootblock = (struct memory_block*)space;    
 322              		.loc 4 83 2 is_stmt 1 view .LVU60
 323              	.LVL25:
ARM GAS  /tmp/ccvuNOOV.s 			page 9


  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	rootblock->block_size = space_size - sizeof(struct memory_block);
 324              		.loc 4 84 2 view .LVU61
 325              		.loc 4 84 37 is_stmt 0 view .LVU62
 326 0010 A2F11403 		sub	r3, r2, #20
 327              	.LVL26:
 328              		.loc 4 84 24 view .LVU63
 329 0014 8B60     		str	r3, [r1, #8]
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	rootblock->magic = BASE_MAGIC;
 330              		.loc 4 85 2 is_stmt 1 view .LVU64
 331              		.loc 4 85 19 is_stmt 0 view .LVU65
 332 0016 4AF6CD33 		movw	r3, #43981
 333 001a 4B80     		strh	r3, [r1, #2]	@ movhi
  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	reset_block_status(rootblock, use_flag);									                                                
 334              		.loc 4 86 2 is_stmt 1 view .LVU66
 335 001c 0121     		movs	r1, #1
 336              	.LVL27:
 337              		.loc 4 86 2 is_stmt 0 view .LVU67
 338 001e 2046     		mov	r0, r4
 339              	.LVL28:
 340              		.loc 4 86 2 view .LVU68
 341 0020 FFF7FEFF 		bl	reset_block_status
 342              	.LVL29:
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	rootblock->priv_block = (struct memory_block*) NULL;                                          
 343              		.loc 4 87 2 is_stmt 1 view .LVU69
 344              		.loc 4 87 24 is_stmt 0 view .LVU70
 345 0024 0027     		movs	r7, #0
 346 0026 2761     		str	r7, [r4, #16]
  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	rootblock->next		  = (struct memory_block*) NULL;
 347              		.loc 4 88 2 is_stmt 1 view .LVU71
 348              		.loc 4 88 21 is_stmt 0 view .LVU72
 349 0028 E760     		str	r7, [r4, #12]
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	haper->space = space;	
 350              		.loc 4 89 2 is_stmt 1 view .LVU73
 351              		.loc 4 89 15 is_stmt 0 view .LVU74
 352 002a 6C60     		str	r4, [r5, #4]
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	haper->mode = mode;
 353              		.loc 4 90 2 is_stmt 1 view .LVU75
 354              		.loc 4 90 14 is_stmt 0 view .LVU76
 355 002c 2846     		mov	r0, r5
 356 002e 00F8088B 		strb	r8, [r0], #8
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	spin_lock_init(&haper->lock);
 357              		.loc 4 91 2 is_stmt 1 view .LVU77
 358 0032 FFF7FEFF 		bl	spin_lock_init
 359              	.LVL30:
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	haper->memory_size  = space_size;                         				
 360              		.loc 4 92 2 view .LVU78
 361              		.loc 4 92 22 is_stmt 0 view .LVU79
 362 0036 AE61     		str	r6, [r5, #24]
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	haper->start_addr = rootblock;
 363              		.loc 4 93 2 is_stmt 1 view .LVU80
 364              		.loc 4 93 20 is_stmt 0 view .LVU81
 365 0038 EC61     		str	r4, [r5, #28]
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return 0;
 366              		.loc 4 94 2 is_stmt 1 view .LVU82
 367              		.loc 4 94 9 is_stmt 0 view .LVU83
 368 003a 3846     		mov	r0, r7
 369              	.LVL31:
ARM GAS  /tmp/ccvuNOOV.s 			page 10


 370              	.L17:
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 371              		.loc 4 95 1 view .LVU84
 372 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 373              	.LVL32:
 374              	.L21:
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			haper->mode = 0;
 375              		.loc 4 77 4 is_stmt 1 view .LVU85
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			haper->mode = 0;
 376              		.loc 4 77 23 is_stmt 0 view .LVU86
 377 0040 0023     		movs	r3, #0
 378              	.LVL33:
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			haper->mode = 0;
 379              		.loc 4 77 23 view .LVU87
 380 0042 8361     		str	r3, [r0, #24]
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			haper->start_addr = NULL;
 381              		.loc 4 78 4 is_stmt 1 view .LVU88
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			haper->start_addr = NULL;
 382              		.loc 4 78 16 is_stmt 0 view .LVU89
 383 0044 0370     		strb	r3, [r0]
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			haper->space = NULL;
 384              		.loc 4 79 4 is_stmt 1 view .LVU90
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			haper->space = NULL;
 385              		.loc 4 79 22 is_stmt 0 view .LVU91
 386 0046 C361     		str	r3, [r0, #28]
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		 return -1;
 387              		.loc 4 80 4 is_stmt 1 view .LVU92
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		 return -1;
 388              		.loc 4 80 17 is_stmt 0 view .LVU93
 389 0048 4360     		str	r3, [r0, #4]
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}		
 390              		.loc 4 81 4 is_stmt 1 view .LVU94
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}		
 391              		.loc 4 81 11 is_stmt 0 view .LVU95
 392 004a 4FF0FF30 		mov	r0, #-1
 393              	.LVL34:
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}		
 394              		.loc 4 81 11 view .LVU96
 395 004e F5E7     		b	.L17
 396              		.cfi_endproc
 397              	.LFE244:
 399              		.section	.text.free_block,"ax",%progbits
 400              		.align	1
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 405              	free_block:
 406              	.LVL35:
 407              	.LFB246:
  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static struct memory_block* incise_free_block(struct memory_block* father_block, size_t size){     
  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (father_block == NULL || size <= 0) return (struct memory_block*)NULL;
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (size + sizeof(struct memory_block) > get_block_size(father_block) ) return (struct memory_bloc
  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (get_block_status(father_block,use_flag) == 1 ) return (struct memory_block*)NULL;             
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	size_t memory_offset = sizeof(struct memory_block) + size;
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* newblock =(struct memory_block*)( (u8_t*)(father_block) + memory_offset);			
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	newblock->block_size = father_block->block_size - memory_offset;
ARM GAS  /tmp/ccvuNOOV.s 			page 11


 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	father_block->block_size = size;
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	reset_block_status(newblock,use_flag);										
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	newblock->next = father_block->next;    
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	newblock->magic = BASE_MAGIC;                               
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if(father_block->next) father_block->next->priv_block = newblock;
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	father_block->next   = newblock;
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	newblock->priv_block = father_block;
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return father_block;
 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static struct memory_block* free_block(struct memory_block* block){								
 408              		.loc 4 113 67 is_stmt 1 view -0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		.loc 4 113 67 is_stmt 0 view .LVU98
 413 0000 70B5     		push	{r4, r5, r6, lr}
 414              	.LCFI3:
 415              		.cfi_def_cfa_offset 16
 416              		.cfi_offset 4, -16
 417              		.cfi_offset 5, -12
 418              		.cfi_offset 6, -8
 419              		.cfi_offset 14, -4
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (block == NULL) return (struct memory_block*)NULL;
 420              		.loc 4 114 2 is_stmt 1 view .LVU99
 421              		.loc 4 114 5 is_stmt 0 view .LVU100
 422 0002 0446     		mov	r4, r0
 423 0004 B0B1     		cbz	r0, .L23
 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* priv_block = get_priv_block(block);
 424              		.loc 4 115 2 is_stmt 1 view .LVU101
 425              		.loc 4 115 36 is_stmt 0 view .LVU102
 426 0006 FFF7FEFF 		bl	get_priv_block
 427              	.LVL36:
 428              		.loc 4 115 36 view .LVU103
 429 000a 0546     		mov	r5, r0
 430              	.LVL37:
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* next_block = get_next_block(block);
 431              		.loc 4 116 2 is_stmt 1 view .LVU104
 432              		.loc 4 116 36 is_stmt 0 view .LVU105
 433 000c 2046     		mov	r0, r4
 434              	.LVL38:
 435              		.loc 4 116 36 view .LVU106
 436 000e FFF7FEFF 		bl	get_next_block
 437              	.LVL39:
 438 0012 0646     		mov	r6, r0
 439              	.LVL40:
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	reset_block_status(block,use_flag);                                                   
 440              		.loc 4 117 2 is_stmt 1 view .LVU107
 441 0014 0121     		movs	r1, #1
 442 0016 2046     		mov	r0, r4
 443              	.LVL41:
 444              		.loc 4 117 2 is_stmt 0 view .LVU108
 445 0018 FFF7FEFF 		bl	reset_block_status
 446              	.LVL42:
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (priv_block && get_block_status(priv_block,use_flag) == 0 ){
 447              		.loc 4 118 2 is_stmt 1 view .LVU109
 448              		.loc 4 118 5 is_stmt 0 view .LVU110
 449 001c 25B1     		cbz	r5, .L24
ARM GAS  /tmp/ccvuNOOV.s 			page 12


 450              		.loc 4 118 20 discriminator 1 view .LVU111
 451 001e 0121     		movs	r1, #1
 452 0020 2846     		mov	r0, r5
 453 0022 FFF7FEFF 		bl	get_block_status
 454              	.LVL43:
 455              		.loc 4 118 17 discriminator 1 view .LVU112
 456 0026 38B1     		cbz	r0, .L28
 457              	.L24:
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		priv_block->block_size += sizeof(struct memory_block) + block->block_size;  
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		priv_block->next = next_block;
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		if(next_block)	next_block->priv_block = priv_block;
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		clean_block(block);	
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		return priv_block;	
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if(next_block && get_block_status(next_block,use_flag) == 0){
 458              		.loc 4 125 2 is_stmt 1 view .LVU113
 459              		.loc 4 125 4 is_stmt 0 view .LVU114
 460 0028 26B1     		cbz	r6, .L23
 461              		.loc 4 125 19 discriminator 1 view .LVU115
 462 002a 0121     		movs	r1, #1
 463 002c 3046     		mov	r0, r6
 464 002e FFF7FEFF 		bl	get_block_status
 465              	.LVL44:
 466              		.loc 4 125 16 discriminator 1 view .LVU116
 467 0032 70B1     		cbz	r0, .L29
 468              	.LVL45:
 469              	.L23:
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		block->block_size += sizeof(struct memory_block) + next_block->block_size;
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		block->next = next_block->next;
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		if(next_block->next) next_block->next->priv_block = block;
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		clean_block(next_block);		
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		return block;
 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return block;
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 470              		.loc 4 133 1 view .LVU117
 471 0034 2046     		mov	r0, r4
 472 0036 70BD     		pop	{r4, r5, r6, pc}
 473              	.LVL46:
 474              	.L28:
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		priv_block->block_size += sizeof(struct memory_block) + block->block_size;  
 475              		.loc 4 119 3 is_stmt 1 view .LVU118
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		priv_block->block_size += sizeof(struct memory_block) + block->block_size;  
 476              		.loc 4 119 13 is_stmt 0 view .LVU119
 477 0038 AB68     		ldr	r3, [r5, #8]
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		priv_block->block_size += sizeof(struct memory_block) + block->block_size;  
 478              		.loc 4 119 64 view .LVU120
 479 003a A268     		ldr	r2, [r4, #8]
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		priv_block->block_size += sizeof(struct memory_block) + block->block_size;  
 480              		.loc 4 119 26 view .LVU121
 481 003c 1344     		add	r3, r3, r2
 482 003e 1433     		adds	r3, r3, #20
 483 0040 AB60     		str	r3, [r5, #8]
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		if(next_block)	next_block->priv_block = priv_block;
 484              		.loc 4 120 3 is_stmt 1 view .LVU122
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		if(next_block)	next_block->priv_block = priv_block;
 485              		.loc 4 120 20 is_stmt 0 view .LVU123
ARM GAS  /tmp/ccvuNOOV.s 			page 13


 486 0042 EE60     		str	r6, [r5, #12]
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		clean_block(block);	
 487              		.loc 4 121 3 is_stmt 1 view .LVU124
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		clean_block(block);	
 488              		.loc 4 121 5 is_stmt 0 view .LVU125
 489 0044 06B1     		cbz	r6, .L25
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		clean_block(block);	
 490              		.loc 4 121 18 is_stmt 1 discriminator 1 view .LVU126
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		clean_block(block);	
 491              		.loc 4 121 41 is_stmt 0 discriminator 1 view .LVU127
 492 0046 3561     		str	r5, [r6, #16]
 493              	.L25:
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		return priv_block;	
 494              		.loc 4 122 3 is_stmt 1 view .LVU128
 495 0048 2046     		mov	r0, r4
 496 004a FFF7FEFF 		bl	clean_block
 497              	.LVL47:
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 498              		.loc 4 123 3 view .LVU129
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 499              		.loc 4 123 10 is_stmt 0 view .LVU130
 500 004e 2C46     		mov	r4, r5
 501              	.LVL48:
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 502              		.loc 4 123 10 view .LVU131
 503 0050 F0E7     		b	.L23
 504              	.LVL49:
 505              	.L29:
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		block->next = next_block->next;
 506              		.loc 4 126 3 is_stmt 1 view .LVU132
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		block->next = next_block->next;
 507              		.loc 4 126 8 is_stmt 0 view .LVU133
 508 0052 A368     		ldr	r3, [r4, #8]
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		block->next = next_block->next;
 509              		.loc 4 126 64 view .LVU134
 510 0054 B268     		ldr	r2, [r6, #8]
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		block->next = next_block->next;
 511              		.loc 4 126 21 view .LVU135
 512 0056 1344     		add	r3, r3, r2
 513 0058 1433     		adds	r3, r3, #20
 514 005a A360     		str	r3, [r4, #8]
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		if(next_block->next) next_block->next->priv_block = block;
 515              		.loc 4 127 3 is_stmt 1 view .LVU136
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		if(next_block->next) next_block->next->priv_block = block;
 516              		.loc 4 127 27 is_stmt 0 view .LVU137
 517 005c F368     		ldr	r3, [r6, #12]
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		if(next_block->next) next_block->next->priv_block = block;
 518              		.loc 4 127 15 view .LVU138
 519 005e E360     		str	r3, [r4, #12]
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		clean_block(next_block);		
 520              		.loc 4 128 3 is_stmt 1 view .LVU139
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		clean_block(next_block);		
 521              		.loc 4 128 5 is_stmt 0 view .LVU140
 522 0060 03B1     		cbz	r3, .L26
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		clean_block(next_block);		
 523              		.loc 4 128 24 is_stmt 1 discriminator 1 view .LVU141
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		clean_block(next_block);		
ARM GAS  /tmp/ccvuNOOV.s 			page 14


 524              		.loc 4 128 53 is_stmt 0 discriminator 1 view .LVU142
 525 0062 1C61     		str	r4, [r3, #16]
 526              	.L26:
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		return block;
 527              		.loc 4 129 3 is_stmt 1 view .LVU143
 528 0064 3046     		mov	r0, r6
 529 0066 FFF7FEFF 		bl	clean_block
 530              	.LVL50:
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 531              		.loc 4 130 3 view .LVU144
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 532              		.loc 4 130 10 is_stmt 0 view .LVU145
 533 006a E3E7     		b	.L23
 534              		.cfi_endproc
 535              	.LFE246:
 537              		.section	.text.free_memory,"ax",%progbits
 538              		.align	1
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 543              	free_memory:
 544              	.LVL51:
 545              	.LFB247:
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static void free_memory(struct haper2* haper, struct memory_block* block){  
 546              		.loc 4 135 74 is_stmt 1 view -0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (block == NULL) return;
 550              		.loc 4 136 2 view .LVU147
 551              		.loc 4 136 5 is_stmt 0 view .LVU148
 552 0000 51B1     		cbz	r1, .L35
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (block == NULL) return;
 553              		.loc 4 135 74 view .LVU149
 554 0002 10B5     		push	{r4, lr}
 555              	.LCFI4:
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 4, -8
 558              		.cfi_offset 14, -4
 559 0004 0846     		mov	r0, r1
 560              	.LVL52:
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* new_block = block;
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	size_t block_size = 0;
 561              		.loc 4 138 9 view .LVU150
 562 0006 0023     		movs	r3, #0
 563 0008 02E0     		b	.L32
 564              	.LVL53:
 565              	.L33:
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	while (block_size != new_block->block_size){
 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		block_size = new_block->block_size;
 566              		.loc 4 140 3 is_stmt 1 view .LVU151
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		new_block = free_block(new_block);
 567              		.loc 4 141 3 view .LVU152
 568              		.loc 4 141 15 is_stmt 0 view .LVU153
 569 000a FFF7FEFF 		bl	free_block
 570              	.LVL54:
ARM GAS  /tmp/ccvuNOOV.s 			page 15


 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		new_block = free_block(new_block);
 571              		.loc 4 140 14 view .LVU154
 572 000e 2346     		mov	r3, r4
 573              	.LVL55:
 574              	.L32:
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	while (block_size != new_block->block_size){
 575              		.loc 4 139 20 is_stmt 1 view .LVU155
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	while (block_size != new_block->block_size){
 576              		.loc 4 139 32 is_stmt 0 view .LVU156
 577 0010 8468     		ldr	r4, [r0, #8]
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	while (block_size != new_block->block_size){
 578              		.loc 4 139 20 view .LVU157
 579 0012 9C42     		cmp	r4, r3
 580 0014 F9D1     		bne	.L33
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 581              		.loc 4 143 1 view .LVU158
 582 0016 10BD     		pop	{r4, pc}
 583              	.LVL56:
 584              	.L35:
 585              	.LCFI5:
 586              		.cfi_def_cfa_offset 0
 587              		.cfi_restore 4
 588              		.cfi_restore 14
 589              		.loc 4 143 1 view .LVU159
 590 0018 7047     		bx	lr
 591              		.cfi_endproc
 592              	.LFE247:
 594              		.section	.text.memory_block_laterator,"ax",%progbits
 595              		.align	1
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 600              	memory_block_laterator:
 601              	.LVL57:
 602              	.LFB248:
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static void * memory_block_laterator(struct haper2* haper, memory_block_operation_t operation,void 
 603              		.loc 4 145 106 is_stmt 1 view -0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		.loc 4 145 106 is_stmt 0 view .LVU161
 608 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 609              	.LCFI6:
 610              		.cfi_def_cfa_offset 24
 611              		.cfi_offset 3, -24
 612              		.cfi_offset 4, -20
 613              		.cfi_offset 5, -16
 614              		.cfi_offset 6, -12
 615              		.cfi_offset 7, -8
 616              		.cfi_offset 14, -4
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if(haper == NULL) return 0;
 617              		.loc 4 146 2 is_stmt 1 view .LVU162
 618              		.loc 4 146 4 is_stmt 0 view .LVU163
 619 0002 0746     		mov	r7, r0
 620 0004 58B1     		cbz	r0, .L42
ARM GAS  /tmp/ccvuNOOV.s 			page 16


 621 0006 0E46     		mov	r6, r1
 622 0008 1546     		mov	r5, r2
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* curr = haper->start_addr;
 623              		.loc 4 147 2 is_stmt 1 view .LVU164
 624              		.loc 4 147 23 is_stmt 0 view .LVU165
 625 000a C469     		ldr	r4, [r0, #28]
 626              	.LVL58:
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if(curr == NULL) return 0;
 627              		.loc 4 148 2 is_stmt 1 view .LVU166
 628              		.loc 4 148 4 is_stmt 0 view .LVU167
 629 000c 54B1     		cbz	r4, .L45
 630              	.LVL59:
 631              	.L40:
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	while (curr != NULL) {
 632              		.loc 4 149 14 is_stmt 1 view .LVU168
 633 000e 3CB1     		cbz	r4, .L39
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		if(operation(haper, curr ,data) == 0) return data;
 634              		.loc 4 150 3 view .LVU169
 635              		.loc 4 150 6 is_stmt 0 view .LVU170
 636 0010 2A46     		mov	r2, r5
 637 0012 2146     		mov	r1, r4
 638 0014 3846     		mov	r0, r7
 639 0016 B047     		blx	r6
 640              	.LVL60:
 641              		.loc 4 150 5 discriminator 1 view .LVU171
 642 0018 10B1     		cbz	r0, .L39
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		curr = curr->next;
 643              		.loc 4 151 3 is_stmt 1 view .LVU172
 644              		.loc 4 151 8 is_stmt 0 view .LVU173
 645 001a E468     		ldr	r4, [r4, #12]
 646              	.LVL61:
 647              		.loc 4 151 8 view .LVU174
 648 001c F7E7     		b	.L40
 649              	.LVL62:
 650              	.L42:
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* curr = haper->start_addr;
 651              		.loc 4 146 27 discriminator 1 view .LVU175
 652 001e 0546     		mov	r5, r0
 653              	.LVL63:
 654              	.L39:
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return data;
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 655              		.loc 4 154 1 view .LVU176
 656 0020 2846     		mov	r0, r5
 657 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 658              	.LVL64:
 659              	.L45:
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	while (curr != NULL) {
 660              		.loc 4 148 26 discriminator 1 view .LVU177
 661 0024 2546     		mov	r5, r4
 662 0026 FBE7     		b	.L39
 663              		.cfi_endproc
 664              	.LFE248:
 666              		.section	.text.get_block,"ax",%progbits
 667              		.align	1
 668              		.syntax unified
ARM GAS  /tmp/ccvuNOOV.s 			page 17


 669              		.thumb
 670              		.thumb_func
 672              	get_block:
 673              	.LVL65:
 674              	.LFB253:
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static size_t* memory_block_free_size_counter(struct haper2* haper, struct memory_block* block, siz
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (block == NULL) return 0;
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if(get_block_status(block,use_flag) == 0){
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		*size += get_block_size(block);
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return 1; //continue
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static size_t get_free_space(struct haper2* haper){
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (haper == NULL) return 0;
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	size_t i = 0;
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	memory_block_laterator(haper, memory_block_free_size_counter, &i);
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return i;
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static void* best_fit_alloc(struct haper2* haper, size_t size) {
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (haper == NULL || size == 0) return NULL;
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* best_block = (struct memory_block*)NULL;
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* curr = haper->start_addr;
 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	spin_lock(&haper->lock);
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	while (curr != NULL) {
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		if (get_block_status(curr,use_flag) == 0 && curr->block_size >= size) {
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			if (best_block == NULL || curr->block_size <= best_block->block_size) {
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 				best_block = curr;
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			}
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		}
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		curr = curr->next;
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (best_block == NULL) {
 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		spin_unlock(&haper->lock);
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		return NULL;
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (best_block->block_size >= size + sizeof(struct memory_block) + minimum_size){ 
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		incise_free_block(best_block, size);
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	set_block_status(best_block, use_flag);
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	spin_unlock(&haper->lock);
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return (void*)(best_block + 1);
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static void* first_fit_alloc(struct haper2* haper, size_t size) {
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (haper == NULL || size == 0) return NULL;
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* best_block = (struct memory_block*)NULL;
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* curr = haper->start_addr;
 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	spin_lock(&haper->lock);
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	while (curr != NULL) {
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		if (get_block_status(curr,use_flag) == 0 && curr->block_size >= size) {
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			if (best_block == NULL || curr->block_size < best_block->block_size) {
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 				best_block = curr;
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 				break;
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 			}
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		}
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		curr = curr->next;
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
ARM GAS  /tmp/ccvuNOOV.s 			page 18


 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (best_block == NULL) {
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		spin_unlock(&haper->lock);
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		return NULL;
 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (best_block->block_size >= size + sizeof(struct memory_block)){ 
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		incise_free_block(best_block, size);
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	set_block_status(best_block, use_flag);
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	spin_unlock(&haper->lock);
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return (void*)(best_block + 1);
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static struct get_block {
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h ****     void* addr;
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct memory_block* block;
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** };
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static int get_block(struct haper2* haper, struct memory_block* block, void* arg){ //ËØÜÂà´ÁõÆÊ†áÂÜ
 675              		.loc 4 222 82 is_stmt 1 view -0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		@ link register save eliminated.
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (block == NULL) return 0;
 680              		.loc 4 223 2 view .LVU179
 681              		.loc 4 223 5 is_stmt 0 view .LVU180
 682 0000 0846     		mov	r0, r1
 683              	.LVL66:
 684              		.loc 4 223 5 view .LVU181
 685 0002 49B1     		cbz	r1, .L48
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct get_block* get_block = (struct get_block*)arg;
 686              		.loc 4 224 2 is_stmt 1 view .LVU182
 687              	.LVL67:
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if ((void*)(block + 1) == get_block->addr) {
 688              		.loc 4 225 2 view .LVU183
 689              		.loc 4 225 20 is_stmt 0 view .LVU184
 690 0004 01F11403 		add	r3, r1, #20
 691              		.loc 4 225 37 view .LVU185
 692 0008 1168     		ldr	r1, [r2]
 693              	.LVL68:
 694              		.loc 4 225 5 view .LVU186
 695 000a 8B42     		cmp	r3, r1
 696 000c 01D0     		beq	.L50
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		get_block->block = block;
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		return 0; 
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return 1;
 697              		.loc 4 229 9 view .LVU187
 698 000e 0120     		movs	r0, #1
 699              	.LVL69:
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 700              		.loc 4 230 1 view .LVU188
 701 0010 7047     		bx	lr
 702              	.LVL70:
 703              	.L50:
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		get_block->block = block;
 704              		.loc 4 226 3 is_stmt 1 view .LVU189
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		get_block->block = block;
 705              		.loc 4 226 20 is_stmt 0 view .LVU190
ARM GAS  /tmp/ccvuNOOV.s 			page 19


 706 0012 5060     		str	r0, [r2, #4]
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 707              		.loc 4 227 3 is_stmt 1 view .LVU191
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 708              		.loc 4 227 10 is_stmt 0 view .LVU192
 709 0014 0020     		movs	r0, #0
 710              	.LVL71:
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	}
 711              		.loc 4 227 10 view .LVU193
 712 0016 7047     		bx	lr
 713              	.LVL72:
 714              	.L48:
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct get_block* get_block = (struct get_block*)arg;
 715              		.loc 4 223 28 discriminator 1 view .LVU194
 716 0018 0020     		movs	r0, #0
 717              	.LVL73:
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct get_block* get_block = (struct get_block*)arg;
 718              		.loc 4 223 28 discriminator 1 view .LVU195
 719 001a 7047     		bx	lr
 720              		.cfi_endproc
 721              	.LFE253:
 723              		.section	.text.__spin_lock,"ax",%progbits
 724              		.align	1
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 729              	__spin_lock:
 730              	.LVL74:
 731              	.LFB227:
  15:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
 732              		.loc 2 15 47 is_stmt 1 view -0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
  15:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
 736              		.loc 2 15 47 is_stmt 0 view .LVU197
 737 0000 38B5     		push	{r3, r4, r5, lr}
 738              	.LCFI7:
 739              		.cfi_def_cfa_offset 16
 740              		.cfi_offset 3, -16
 741              		.cfi_offset 4, -12
 742              		.cfi_offset 5, -8
 743              		.cfi_offset 14, -4
 744 0002 0446     		mov	r4, r0
  17:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     if(lock->flag == 0){
 745              		.loc 2 17 5 is_stmt 1 view .LVU198
 746 0004 FFF7FEFF 		bl	stop_all_scheduler
 747              	.LVL75:
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 748              		.loc 2 18 5 view .LVU199
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 749              		.loc 2 18 12 is_stmt 0 view .LVU200
 750 0008 2368     		ldr	r3, [r4]
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 751              		.loc 2 18 7 view .LVU201
 752 000a 2BB9     		cbnz	r3, .L52
  19:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
ARM GAS  /tmp/ccvuNOOV.s 			page 20


 753              		.loc 2 19 11 is_stmt 1 view .LVU202
  19:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
 754              		.loc 2 19 22 is_stmt 0 view .LVU203
 755 000c 0125     		movs	r5, #1
 756 000e 2560     		str	r5, [r4]
  20:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         return 1;
 757              		.loc 2 20 11 is_stmt 1 view .LVU204
 758 0010 FFF7FEFF 		bl	start_all_scheduler
 759              	.LVL76:
  21:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
 760              		.loc 2 21 9 view .LVU205
  21:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
 761              		.loc 2 21 16 is_stmt 0 view .LVU206
 762 0014 2846     		mov	r0, r5
 763              	.L51:
  28:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
 764              		.loc 2 28 1 view .LVU207
 765 0016 38BD     		pop	{r3, r4, r5, pc}
 766              	.LVL77:
 767              	.L52:
  25:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         return 0;
 768              		.loc 2 25 9 is_stmt 1 view .LVU208
 769 0018 FFF7FEFF 		bl	start_all_scheduler
 770              	.LVL78:
  26:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
 771              		.loc 2 26 9 view .LVU209
  26:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
 772              		.loc 2 26 16 is_stmt 0 view .LVU210
 773 001c 0020     		movs	r0, #0
 774 001e FAE7     		b	.L51
 775              		.cfi_endproc
 776              	.LFE227:
 778              		.section	.text.spin_lock,"ax",%progbits
 779              		.align	1
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 784              	spin_lock:
 785              	.LVL79:
 786              	.LFB230:
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     while (1)
 787              		.loc 3 15 1 is_stmt 1 view -0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     while (1)
 791              		.loc 3 15 1 is_stmt 0 view .LVU212
 792 0000 38B5     		push	{r3, r4, r5, lr}
 793              	.LCFI8:
 794              		.cfi_def_cfa_offset 16
 795              		.cfi_offset 3, -16
 796              		.cfi_offset 4, -12
 797              		.cfi_offset 5, -8
 798              		.cfi_offset 14, -4
 799 0002 0446     		mov	r4, r0
 800 0004 06E0     		b	.L58
 801              	.LVL80:
ARM GAS  /tmp/ccvuNOOV.s 			page 21


 802              	.L60:
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             break;
 803              		.loc 3 19 13 is_stmt 1 view .LVU213
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             break;
 804              		.loc 3 19 27 is_stmt 0 view .LVU214
 805 0006 FFF7FEFF 		bl	get_current_task
 806              	.LVL81:
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             break;
 807              		.loc 3 19 25 discriminator 1 view .LVU215
 808 000a 2060     		str	r0, [r4]
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
 809              		.loc 3 20 13 is_stmt 1 view .LVU216
 810              	.L55:
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
 811              		.loc 3 29 1 is_stmt 0 view .LVU217
 812 000c 38BD     		pop	{r3, r4, r5, pc}
 813              	.LVL82:
 814              	.L61:
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
 815              		.loc 3 26 13 is_stmt 1 view .LVU218
 816 000e 0520     		movs	r0, #5
 817 0010 FFF7FEFF 		bl	__delay
 818              	.LVL83:
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     {
 819              		.loc 3 16 11 view .LVU219
 820              	.L58:
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     {
 821              		.loc 3 16 5 view .LVU220
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             lock->owner = get_current_task();
 822              		.loc 3 18 9 view .LVU221
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             lock->owner = get_current_task();
 823              		.loc 3 18 12 is_stmt 0 view .LVU222
 824 0014 2046     		mov	r0, r4
 825 0016 FFF7FEFF 		bl	__spin_lock
 826              	.LVL84:
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             lock->owner = get_current_task();
 827              		.loc 3 18 11 discriminator 1 view .LVU223
 828 001a 0128     		cmp	r0, #1
 829 001c F3D0     		beq	.L60
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
 830              		.loc 3 22 15 is_stmt 1 view .LVU224
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
 831              		.loc 3 22 22 is_stmt 0 view .LVU225
 832 001e 2568     		ldr	r5, [r4]
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
 833              		.loc 3 22 33 view .LVU226
 834 0020 FFF7FEFF 		bl	get_current_task
 835              	.LVL85:
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
 836              		.loc 3 22 17 discriminator 1 view .LVU227
 837 0024 8542     		cmp	r5, r0
 838 0026 F2D1     		bne	.L61
 839 0028 F0E7     		b	.L55
 840              		.cfi_endproc
 841              	.LFE230:
 843              		.section	.text.free_haper_block,"ax",%progbits
 844              		.align	1
ARM GAS  /tmp/ccvuNOOV.s 			page 22


 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 849              	free_haper_block:
 850              	.LVL86:
 851              	.LFB254:
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static int free_haper_block(struct haper2* haper, void* ptr){ //ÂÆâÂÖ®Âú∞ÈáäÊîæÂÜÖÂ≠òÂùó
 852              		.loc 4 231 61 is_stmt 1 view -0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 8
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (ptr == NULL || haper == NULL) return -1;
 856              		.loc 4 232 2 view .LVU229
 857              		.loc 4 232 5 is_stmt 0 view .LVU230
 858 0000 09B3     		cbz	r1, .L65
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** static int free_haper_block(struct haper2* haper, void* ptr){ //ÂÆâÂÖ®Âú∞ÈáäÊîæÂÜÖÂ≠òÂùó
 859              		.loc 4 231 61 view .LVU231
 860 0002 30B5     		push	{r4, r5, lr}
 861              	.LCFI9:
 862              		.cfi_def_cfa_offset 12
 863              		.cfi_offset 4, -12
 864              		.cfi_offset 5, -8
 865              		.cfi_offset 14, -4
 866 0004 83B0     		sub	sp, sp, #12
 867              	.LCFI10:
 868              		.cfi_def_cfa_offset 24
 869 0006 0446     		mov	r4, r0
 870              		.loc 4 232 18 discriminator 2 view .LVU232
 871 0008 00B3     		cbz	r0, .L66
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct get_block block = {
 872              		.loc 4 233 2 is_stmt 1 view .LVU233
 873              		.loc 4 233 19 is_stmt 0 view .LVU234
 874 000a 0091     		str	r1, [sp]
 875 000c 0023     		movs	r3, #0
 876 000e 0193     		str	r3, [sp, #4]
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		.addr = ptr,
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 		.block = NULL
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	};
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	spin_lock(&haper->lock);
 877              		.loc 4 237 2 is_stmt 1 view .LVU235
 878 0010 00F10805 		add	r5, r0, #8
 879 0014 2846     		mov	r0, r5
 880              	.LVL87:
 881              		.loc 4 237 2 is_stmt 0 view .LVU236
 882 0016 FFF7FEFF 		bl	spin_lock
 883              	.LVL88:
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	memory_block_laterator(haper, get_block, &block);
 884              		.loc 4 238 2 is_stmt 1 view .LVU237
 885 001a 6A46     		mov	r2, sp
 886 001c 0D49     		ldr	r1, .L72
 887 001e 2046     		mov	r0, r4
 888 0020 FFF7FEFF 		bl	memory_block_laterator
 889              	.LVL89:
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	if (block.block == NULL){spin_unlock(&haper->lock);return -1;}
 890              		.loc 4 239 2 view .LVU238
 891              		.loc 4 239 11 is_stmt 0 view .LVU239
 892 0024 0199     		ldr	r1, [sp, #4]
ARM GAS  /tmp/ccvuNOOV.s 			page 23


 893              		.loc 4 239 5 view .LVU240
 894 0026 41B1     		cbz	r1, .L71
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	free_memory(haper, block.block);
 895              		.loc 4 240 2 is_stmt 1 view .LVU241
 896 0028 2046     		mov	r0, r4
 897 002a FFF7FEFF 		bl	free_memory
 898              	.LVL90:
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	spin_unlock(&haper->lock);
 899              		.loc 4 241 2 view .LVU242
 900 002e 2846     		mov	r0, r5
 901 0030 FFF7FEFF 		bl	spin_unlock
 902              	.LVL91:
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	return 0;
 903              		.loc 4 242 2 view .LVU243
 904              		.loc 4 242 9 is_stmt 0 view .LVU244
 905 0034 0020     		movs	r0, #0
 906              	.L62:
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** }
 907              		.loc 4 243 1 view .LVU245
 908 0036 03B0     		add	sp, sp, #12
 909              	.LCFI11:
 910              		.cfi_remember_state
 911              		.cfi_def_cfa_offset 12
 912              		@ sp needed
 913 0038 30BD     		pop	{r4, r5, pc}
 914              	.LVL92:
 915              	.L71:
 916              	.LCFI12:
 917              		.cfi_restore_state
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	free_memory(haper, block.block);
 918              		.loc 4 239 27 is_stmt 1 discriminator 1 view .LVU246
 919 003a 2846     		mov	r0, r5
 920 003c FFF7FEFF 		bl	spin_unlock
 921              	.LVL93:
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	free_memory(haper, block.block);
 922              		.loc 4 239 53 discriminator 1 view .LVU247
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	free_memory(haper, block.block);
 923              		.loc 4 239 60 is_stmt 0 discriminator 1 view .LVU248
 924 0040 4FF0FF30 		mov	r0, #-1
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	free_memory(haper, block.block);
 925              		.loc 4 239 60 view .LVU249
 926 0044 F7E7     		b	.L62
 927              	.LVL94:
 928              	.L65:
 929              	.LCFI13:
 930              		.cfi_def_cfa_offset 0
 931              		.cfi_restore 4
 932              		.cfi_restore 5
 933              		.cfi_restore 14
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct get_block block = {
 934              		.loc 4 232 43 discriminator 3 view .LVU250
 935 0046 4FF0FF30 		mov	r0, #-1
 936              	.LVL95:
 937              		.loc 4 243 1 view .LVU251
 938 004a 7047     		bx	lr
 939              	.LVL96:
 940              	.L66:
ARM GAS  /tmp/ccvuNOOV.s 			page 24


 941              	.LCFI14:
 942              		.cfi_def_cfa_offset 24
 943              		.cfi_offset 4, -12
 944              		.cfi_offset 5, -8
 945              		.cfi_offset 14, -4
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct get_block block = {
 946              		.loc 4 232 43 discriminator 3 view .LVU252
 947 004c 4FF0FF30 		mov	r0, #-1
 948              	.LVL97:
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h **** 	struct get_block block = {
 949              		.loc 4 232 43 discriminator 3 view .LVU253
 950 0050 F1E7     		b	.L62
 951              	.L73:
 952 0052 00BF     		.align	2
 953              	.L72:
 954 0054 00000000 		.word	get_block
 955              		.cfi_endproc
 956              	.LFE254:
 958              		.section	.text.haper_free,"ax",%progbits
 959              		.align	1
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 964              	haper_free:
 965              	.LVL98:
 966              	.LFB273:
   1:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** #include <linux/kernel.h>
   2:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** #include <linux/errno.h>
   3:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** #include <linux/mempool.h>
   4:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** #include <linux/slab.h>
   5:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** #include <linux/export.h>
   6:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** 
   7:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** 
   8:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** static void *haper_alloc(size_t size, struct haper2 *pool_data) {
   9:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     return fast_alloc(pool_data, size);
  10:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** }
  11:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** static void haper_free(void *obj, struct haper2 *pool_data) {
 967              		.loc 1 11 61 is_stmt 1 view -0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              		.loc 1 11 61 is_stmt 0 view .LVU255
 972 0000 08B5     		push	{r3, lr}
 973              	.LCFI15:
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 3, -8
 976              		.cfi_offset 14, -4
 977 0002 0B46     		mov	r3, r1
  12:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     free_haper_block(pool_data, obj);
 978              		.loc 1 12 5 is_stmt 1 view .LVU256
 979 0004 0146     		mov	r1, r0
 980              	.LVL99:
 981              		.loc 1 12 5 is_stmt 0 view .LVU257
 982 0006 1846     		mov	r0, r3
 983              	.LVL100:
 984              		.loc 1 12 5 view .LVU258
 985 0008 FFF7FEFF 		bl	free_haper_block
ARM GAS  /tmp/ccvuNOOV.s 			page 25


 986              	.LVL101:
  13:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** }
 987              		.loc 1 13 1 view .LVU259
 988 000c 08BD     		pop	{r3, pc}
 989              		.cfi_endproc
 990              	.LFE273:
 992              		.section	.text.haper_alloc,"ax",%progbits
 993              		.align	1
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 998              	haper_alloc:
 999              	.LVL102:
 1000              	.LFB272:
   8:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     return fast_alloc(pool_data, size);
 1001              		.loc 1 8 65 is_stmt 1 view -0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
   8:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     return fast_alloc(pool_data, size);
 1005              		.loc 1 8 65 is_stmt 0 view .LVU261
 1006 0000 08B5     		push	{r3, lr}
 1007              	.LCFI16:
 1008              		.cfi_def_cfa_offset 8
 1009              		.cfi_offset 3, -8
 1010              		.cfi_offset 14, -4
 1011 0002 0B46     		mov	r3, r1
   9:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** }
 1012              		.loc 1 9 5 is_stmt 1 view .LVU262
   9:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** }
 1013              		.loc 1 9 12 is_stmt 0 view .LVU263
 1014 0004 0146     		mov	r1, r0
 1015              	.LVL103:
   9:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** }
 1016              		.loc 1 9 12 view .LVU264
 1017 0006 1846     		mov	r0, r3
 1018              	.LVL104:
   9:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** }
 1019              		.loc 1 9 12 view .LVU265
 1020 0008 FFF7FEFF 		bl	fast_alloc
 1021              	.LVL105:
  10:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** static void haper_free(void *obj, struct haper2 *pool_data) {
 1022              		.loc 1 10 1 view .LVU266
 1023 000c 08BD     		pop	{r3, pc}
 1024              		.cfi_endproc
 1025              	.LFE272:
 1027              		.section	.text.mempool_create,"ax",%progbits
 1028              		.align	1
 1029              		.global	mempool_create
 1030              		.syntax unified
 1031              		.thumb
 1032              		.thumb_func
 1034              	mempool_create:
 1035              	.LVL106:
 1036              	.LFB274:
  14:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** 
  15:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** mempool_t *mempool_create(uint32_t min_nr, size_t obj_size,mempool_alloc_t alloc_fn, mempool_free_t
ARM GAS  /tmp/ccvuNOOV.s 			page 26


 1037              		.loc 1 15 127 is_stmt 1 view -0
 1038              		.cfi_startproc
 1039              		@ args = 4, pretend = 0, frame = 0
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 1041              		.loc 1 15 127 is_stmt 0 view .LVU268
 1042 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1043              	.LCFI17:
 1044              		.cfi_def_cfa_offset 32
 1045              		.cfi_offset 4, -32
 1046              		.cfi_offset 5, -28
 1047              		.cfi_offset 6, -24
 1048              		.cfi_offset 7, -20
 1049              		.cfi_offset 8, -16
 1050              		.cfi_offset 9, -12
 1051              		.cfi_offset 10, -8
 1052              		.cfi_offset 14, -4
 1053 0004 0646     		mov	r6, r0
 1054 0006 0F46     		mov	r7, r1
 1055 0008 9146     		mov	r9, r2
 1056 000a 9846     		mov	r8, r3
  16:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     // ÂàÜÈÖç mempool_t ÁªìÊûÑ
  17:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     mempool_t *pool = kmalloc(sizeof(mempool_t), GFP_KERNEL);
 1057              		.loc 1 17 5 is_stmt 1 view .LVU269
 1058              	.LVL107:
 1059              	.LBB29:
 1060              	.LBI29:
 1061              		.file 5 "/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Written by Mark Hemment, 1996 (markhe@nextd.demon.co.uk).
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * (C) SGI 2006, Christoph Lameter
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * 	Cleaned up and restructured to ease the addition of alternative
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * 	implementations of SLAB allocators.
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * (C) Linux Foundation 2008-2013
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *      Unified interface for all slab allocators
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifndef _LINUX_SLAB_H
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define	_LINUX_SLAB_H
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/cache.h>
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/overflow.h>
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/types.h>
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/raid/pq.h>
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/gfp_types.h>
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/numa.h>
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/reciprocal_div.h>
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/spinlock.h>
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** enum _slab_flag_bits {
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CONSISTENCY_CHECKS,
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_RED_ZONE,
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_POISON,
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_KMALLOC,
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_HWCACHE_ALIGN,
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CACHE_DMA,
ARM GAS  /tmp/ccvuNOOV.s 			page 27


  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CACHE_DMA32,
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_STORE_USER,
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_PANIC,
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_TYPESAFE_BY_RCU,
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_TRACE,
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_DEBUG_OBJECTS
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_DEBUG_OBJECTS,
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NOLEAKTRACE,
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NO_MERGE,
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_FAILSLAB
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_FAILSLAB,
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_MEMCG
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_ACCOUNT,
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KASAN_GENERIC
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_KASAN,
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NO_USER_FLAGS,
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KFENCE
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_SKIP_KFENCE,
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifndef CONFIG_SLUB_TINY
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_RECLAIM_ACCOUNT,
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_OBJECT_POISON,
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CMPXCHG_DOUBLE,
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLAB_OBJ_EXT
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NO_OBJ_EXT,
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_FLAGS_LAST_BIT
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** };
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define __SLAB_FLAG_BIT(nr)	((slab_flags_t __force)(1U << (nr)))
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define __SLAB_FLAG_UNUSED	((slab_flags_t __force)(0U))
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Flags to pass to kmem_cache_create().
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * The ones marked DEBUG need CONFIG_SLUB_DEBUG enabled, otherwise are no-op
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Perform (expensive) checks on alloc/free */
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_CONSISTENCY_CHECKS	__SLAB_FLAG_BIT(_SLAB_CONSISTENCY_CHECKS)
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Red zone objs in a cache */
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_RED_ZONE		__SLAB_FLAG_BIT(_SLAB_RED_ZONE)
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Poison objects */
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_POISON		__SLAB_FLAG_BIT(_SLAB_POISON)
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Indicate a kmalloc slab */
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_KMALLOC		__SLAB_FLAG_BIT(_SLAB_KMALLOC)
  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_HWCACHE_ALIGN - Align objects on cache line boundaries.
  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Sufficiently large objects are aligned on cache line boundary. For object
  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * size smaller than a half of cache line size, the alignment is on the half of
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * cache line size. In general, if object size is smaller than 1/2^n of cache
ARM GAS  /tmp/ccvuNOOV.s 			page 28


  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * line size, the alignment is adjusted to 1/2^n.
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * If explicit alignment is also requested by the respective
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * &struct kmem_cache_args field, the greater of both is alignments is applied.
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_HWCACHE_ALIGN	__SLAB_FLAG_BIT(_SLAB_HWCACHE_ALIGN)
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Use GFP_DMA memory */
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_CACHE_DMA		__SLAB_FLAG_BIT(_SLAB_CACHE_DMA)
  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Use GFP_DMA32 memory */
  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_CACHE_DMA32	__SLAB_FLAG_BIT(_SLAB_CACHE_DMA32)
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Store the last owner for bug hunting */
  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_STORE_USER		__SLAB_FLAG_BIT(_SLAB_STORE_USER)
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Panic if kmem_cache_create() fails */
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_PANIC		__SLAB_FLAG_BIT(_SLAB_PANIC)
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_TYPESAFE_BY_RCU - **WARNING** READ THIS!
 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * This delays freeing the SLAB page by a grace period, it does _NOT_
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * delay object freeing. This means that if you do kmem_cache_free()
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * that memory location is free to be reused at any time. Thus it may
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * be possible to see another object there in the same RCU grace period.
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * This feature only ensures the memory location backing the object
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * stays valid, the trick to using this is relying on an independent
 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * object validation pass. Something like:
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * ::
 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *  begin:
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   rcu_read_lock();
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   obj = lockless_lookup(key);
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   if (obj) {
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *     if (!try_get_ref(obj)) // might fail for free objects
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       rcu_read_unlock();
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       goto begin;
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *     if (obj->key != key) { // not the object we expected
 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       put_ref(obj);
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       rcu_read_unlock();
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       goto begin;
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *     }
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   }
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *  rcu_read_unlock();
 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * This is useful if we need to approach a kernel structure obliquely,
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * from its address obtained without the usual locking. We can lock
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * the structure to stabilize it and check it's still at the given address,
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * only if we can be sure that the memory has not been meanwhile reused
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * for some other kind of object (which our subsystem's lock might corrupt).
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * rcu_read_lock before reading the address, then rcu_read_unlock after
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * taking the spinlock within the structure expected at that address.
 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Note that it is not possible to acquire a lock within a structure
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * allocated with SLAB_TYPESAFE_BY_RCU without first acquiring a reference
 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * as described above.  The reason is that SLAB_TYPESAFE_BY_RCU pages
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * are not zeroed before being given to the slab, which means that any
ARM GAS  /tmp/ccvuNOOV.s 			page 29


 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * locks must be initialized after each and every kmem_struct_alloc().
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Alternatively, make the ctor passed to kmem_cache_create() initialize
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * the locks at page-allocation time, as is done in __i915_request_ctor(),
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * sighand_ctor(), and anon_vma_ctor().  Such a ctor permits readers
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * to safely acquire those ctor-initialized locks under rcu_read_lock()
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * protection.
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Note that SLAB_TYPESAFE_BY_RCU was originally named SLAB_DESTROY_BY_RCU.
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_TYPESAFE_BY_RCU	__SLAB_FLAG_BIT(_SLAB_TYPESAFE_BY_RCU)
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Trace allocations and frees */
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_TRACE		__SLAB_FLAG_BIT(_SLAB_TRACE)
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Flag to prevent checks on free */
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_DEBUG_OBJECTS
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_DEBUG_OBJECTS	__SLAB_FLAG_BIT(_SLAB_DEBUG_OBJECTS)
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_DEBUG_OBJECTS	__SLAB_FLAG_UNUSED
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Avoid kmemleak tracing */
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NOLEAKTRACE	__SLAB_FLAG_BIT(_SLAB_NOLEAKTRACE)
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Prevent merging with compatible kmem caches. This flag should be used
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * cautiously. Valid use cases:
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * - caches created for self-tests (e.g. kunit)
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * - general caches created and used by a subsystem, only when a
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   (subsystem-specific) debug option is enabled
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * - performance critical caches, should be very rare and consulted with slab
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   maintainers, and not used together with CONFIG_SLUB_TINY
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_MERGE		__SLAB_FLAG_BIT(_SLAB_NO_MERGE)
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Fault injection mark */
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_FAILSLAB
 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_FAILSLAB		__SLAB_FLAG_BIT(_SLAB_FAILSLAB)
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_FAILSLAB		__SLAB_FLAG_UNUSED
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_ACCOUNT - Account allocations to memcg.
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * All object allocations from this cache will be memcg accounted, regardless of
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * __GFP_ACCOUNT being or not being passed to individual allocations.
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_MEMCG
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_ACCOUNT		__SLAB_FLAG_BIT(_SLAB_ACCOUNT)
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_ACCOUNT		__SLAB_FLAG_UNUSED
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KASAN_GENERIC
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_KASAN		__SLAB_FLAG_BIT(_SLAB_KASAN)
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_KASAN		__SLAB_FLAG_UNUSED
ARM GAS  /tmp/ccvuNOOV.s 			page 30


 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Ignore user specified debugging flags.
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Intended for caches created for self-tests so they have only flags
 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * specified in the code and other flags are ignored.
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_USER_FLAGS	__SLAB_FLAG_BIT(_SLAB_NO_USER_FLAGS)
 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KFENCE
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_SKIP_KFENCE	__SLAB_FLAG_BIT(_SLAB_SKIP_KFENCE)
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_SKIP_KFENCE	__SLAB_FLAG_UNUSED
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* The following flags affect the page allocator grouping pages by mobility */
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_RECLAIM_ACCOUNT - Objects are reclaimable.
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Use this flag for caches that have an associated shrinker. As a result, slab
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * pages are allocated with __GFP_RECLAIMABLE, which affects grouping pages by
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * mobility, and are accounted in SReclaimable counter in /proc/meminfo
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifndef CONFIG_SLUB_TINY
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_RECLAIM_ACCOUNT	__SLAB_FLAG_BIT(_SLAB_RECLAIM_ACCOUNT)
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_RECLAIM_ACCOUNT	__SLAB_FLAG_UNUSED
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_TEMPORARY		SLAB_RECLAIM_ACCOUNT	/* Objects are short-lived */
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Slab created using create_boot_cache */
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLAB_OBJ_EXT
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_OBJ_EXT		__SLAB_FLAG_BIT(_SLAB_NO_OBJ_EXT)
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_OBJ_EXT		__SLAB_FLAG_UNUSED
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * freeptr_t represents a SLUB freelist pointer, which might be encoded
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * and not dereferenceable if CONFIG_SLAB_FREELIST_HARDENED is enabled.
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** typedef struct { unsigned long v; } freeptr_t;
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * ZERO_SIZE_PTR will be returned for zero sized kmalloc requests.
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Dereferencing ZERO_SIZE_PTR will lead to a distinct access fault.
 249:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 250:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * ZERO_SIZE_PTR can be passed to kfree though in the same way that NULL can.
 251:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Both make kfree a no-op.
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define ZERO_SIZE_PTR ((void *)16)
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 255:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define ZERO_OR_NULL_PTR(x) ((unsigned long)(x) <= \
 256:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 				(unsigned long)ZERO_SIZE_PTR)
 257:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
ARM GAS  /tmp/ccvuNOOV.s 			page 31


 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 261:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLUB_CPU_PARTIAL
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial(c)			((c)->partial)
 264:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_set_percpu_partial(c, p)		\
 266:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** ({						\
 267:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	slub_percpu_partial(c) = (p)->next;	\
 268:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** })
 269:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 270:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial_read_once(c)	READ_ONCE(slub_percpu_partial(c))
 271:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 272:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial(c)			NULL
 273:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 274:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_set_percpu_partial(c, p)
 275:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 276:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial_read_once(c)	NULL
 277:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 278:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 279:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif // CONFIG_SLUB_CPU_PARTIAL
 280:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 281:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 282:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	* Word size structure that can be atomically updated or read and that
 283:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	* contains both the order and the number of objects that a slab of the
 284:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	* given order would contain.
 285:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	*/				
 286:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** struct kmem_cache_order_objects {
 287:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	unsigned int x;
 288:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** };
 289:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 290:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** struct kmem_cache_node {
 291:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	spinlock_t list_lock;
 292:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	unsigned long nr_partial;
 293:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	struct list_head partial;
 294:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLUB_DEBUG
 295:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	atomic_long_t nr_slabs;
 296:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	atomic_long_t total_objects;
 297:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	struct list_head full;
 298:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 299:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** };
 300:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 301:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** struct kmem_cache {
 302:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifndef CONFIG_SLUB_TINY
 303:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	//	struct kmem_cache_cpu __percpu *cpu_slab;
 304:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 305:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Used for retrieving partial slabs, etc. */
 306:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		slab_flags_t flags;
 307:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned long min_partial;
 308:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int size;		/* Object size including metadata */
 309:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int object_size;	/* Object size without metadata */
 310:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct reciprocal_value reciprocal_size;
 311:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int offset;		/* Free pointer offset */
 312:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SLUB_CPU_PARTIAL
 313:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Number of per cpu partial objects to keep around */
 314:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int cpu_partial;
 315:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Number of per cpu partial slabs to keep around */
ARM GAS  /tmp/ccvuNOOV.s 			page 32


 316:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int cpu_partial_slabs;
 317:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 318:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kmem_cache_order_objects oo;
 319:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 320:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Allocation and freeing of slabs */
 321:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kmem_cache_order_objects min;
 322:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		gfp_t allocflags;		/* gfp flags to use on each alloc */
 323:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		int refcount;			/* Refcount for slab cache destroy */
 324:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		void (*ctor)(void *object);	/* Object constructor */
 325:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int inuse;		/* Offset to metadata */
 326:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int align;		/* Alignment */
 327:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int red_left_pad;	/* Left redzone padding size */
 328:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		const char *name;		/* Name (only for display!) */
 329:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct list_head list;		/* List of slab caches */
 330:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SYSFS
 331:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kobject kobj;		/* For sysfs */
 332:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 333:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SLAB_FREELIST_HARDENED
 334:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned long random;
 335:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 336:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 337:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_NUMA
 338:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/*
 339:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 			* Defragmentation by allocating from a remote node.
 340:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 			*/
 341:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int remote_node_defrag_ratio;
 342:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 343:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 344:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SLAB_FREELIST_RANDOM
 345:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int *random_seq;
 346:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 347:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 348:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_KASAN_GENERIC
 349:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kasan_cache kasan_info;
 350:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 351:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 352:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_HARDENED_USERCOPY
 353:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int useroffset;	/* Usercopy region offset */
 354:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int usersize;		/* Usercopy region size */
 355:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 356:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 357:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kmem_cache_node *node[MAX_NUMNODES];
 358:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	};
 359:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 					
 360:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 361:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 362:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 363:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 364:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define KMALLOC_WAIT 1
 365:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 366:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 367:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** extern void* __smalloc__(u32 size, gfp_t flags);
 368:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** extern void  __sfree__(void* addr);
 369:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 370:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 371:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline *vmalloc(unsigned long size){
 372:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__(size,GFP_TRANSHUGE_LIGHT);
ARM GAS  /tmp/ccvuNOOV.s 			page 33


 373:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 374:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 375:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline vfree(void *addr){
 376:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__(addr);
 377:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 378:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline *kmalloc(size_t size, gfp_t flags){
 1062              		.loc 5 379 21 view .LVU270
 1063              	.LBB30:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 1064              		.loc 5 380 2 view .LVU271
 1065              		.loc 5 380 9 is_stmt 0 view .LVU272
 1066 000c 4FF44C61 		mov	r1, #3264
 1067              	.LVL108:
 1068              		.loc 5 380 9 view .LVU273
 1069 0010 2020     		movs	r0, #32
 1070              	.LVL109:
 1071              		.loc 5 380 9 view .LVU274
 1072 0012 FFF7FEFF 		bl	__smalloc__
 1073              	.LVL110:
 1074              		.loc 5 380 9 view .LVU275
 1075              	.LBE30:
 1076              	.LBE29:
  18:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (!pool) return NULL;
 1077              		.loc 1 18 5 is_stmt 1 view .LVU276
 1078              		.loc 1 18 8 is_stmt 0 view .LVU277
 1079 0016 0446     		mov	r4, r0
 1080 0018 88B3     		cbz	r0, .L78
  19:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** 
  20:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     // ÂàÜÈÖç haper2 ÁªìÊûÑ
  21:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->haper = kmalloc(sizeof(struct haper2), GFP_KERNEL);
 1081              		.loc 1 21 5 is_stmt 1 view .LVU278
 1082              	.LVL111:
 1083              	.LBB31:
 1084              	.LBI31:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 1085              		.loc 5 379 21 view .LVU279
 1086              	.LBB32:
 1087              		.loc 5 380 2 view .LVU280
 1088              		.loc 5 380 9 is_stmt 0 view .LVU281
 1089 001a 4FF44C61 		mov	r1, #3264
 1090 001e 2020     		movs	r0, #32
 1091              	.LVL112:
 1092              		.loc 5 380 9 view .LVU282
 1093 0020 FFF7FEFF 		bl	__smalloc__
 1094              	.LVL113:
 1095 0024 0546     		mov	r5, r0
 1096              	.LVL114:
 1097              		.loc 5 380 9 view .LVU283
 1098              	.LBE32:
 1099              	.LBE31:
 1100              		.loc 1 21 17 discriminator 1 view .LVU284
 1101 0026 2060     		str	r0, [r4]
  22:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (!pool->haper) {
 1102              		.loc 1 22 5 is_stmt 1 view .LVU285
 1103              		.loc 1 22 8 is_stmt 0 view .LVU286
 1104 0028 28B3     		cbz	r0, .L91
ARM GAS  /tmp/ccvuNOOV.s 			page 34


  23:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     kfree(pool);
  24:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     return NULL;
  25:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
  26:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** 
  27:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     // ÂàÜÈÖç haper_data ÁºìÂÜ≤Âå∫
  28:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     size_t haper_size = min_nr * (obj_size+sizeof(struct memory_block)) ;  // ÂÅáËÆæÁºìÂÜ≤Âå∫Â§ßÂ∞è
 1105              		.loc 1 28 5 is_stmt 1 view .LVU287
 1106              		.loc 1 28 43 is_stmt 0 view .LVU288
 1107 002a 07F1140A 		add	r10, r7, #20
 1108              		.loc 1 28 12 view .LVU289
 1109 002e 06FB0AFA 		mul	r10, r6, r10
 1110              	.LVL115:
  29:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** 
  30:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->haper_data = kmalloc(haper_size, GFP_KERNEL);
 1111              		.loc 1 30 5 is_stmt 1 view .LVU290
 1112              	.LBB33:
 1113              	.LBI33:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 1114              		.loc 5 379 21 view .LVU291
 1115              	.LBB34:
 1116              		.loc 5 380 2 view .LVU292
 1117              		.loc 5 380 9 is_stmt 0 view .LVU293
 1118 0032 4FF44C61 		mov	r1, #3264
 1119 0036 5046     		mov	r0, r10
 1120 0038 FFF7FEFF 		bl	__smalloc__
 1121              	.LVL116:
 1122 003c 0546     		mov	r5, r0
 1123              	.LVL117:
 1124              		.loc 5 380 9 view .LVU294
 1125              	.LBE34:
 1126              	.LBE33:
 1127              		.loc 1 30 22 discriminator 1 view .LVU295
 1128 003e E061     		str	r0, [r4, #28]
  31:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (!pool->haper_data) {
 1129              		.loc 1 31 5 is_stmt 1 view .LVU296
 1130              		.loc 1 31 8 is_stmt 0 view .LVU297
 1131 0040 00B3     		cbz	r0, .L92
  32:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     kfree(pool->haper);
  33:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     kfree(pool);
  34:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     return NULL;
  35:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
  36:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** 
  37:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     // ÂàùÂßãÂåñ haper2
  38:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (haper2_init(pool->haper, pool->haper_data, haper_size, 0x00) < 0) {
 1132              		.loc 1 38 5 is_stmt 1 view .LVU298
 1133              		.loc 1 38 9 is_stmt 0 view .LVU299
 1134 0042 0023     		movs	r3, #0
 1135 0044 5246     		mov	r2, r10
 1136 0046 0146     		mov	r1, r0
 1137 0048 2068     		ldr	r0, [r4]
 1138 004a FFF7FEFF 		bl	haper2_init
 1139              	.LVL118:
 1140              		.loc 1 38 8 discriminator 1 view .LVU300
 1141 004e 0028     		cmp	r0, #0
 1142 0050 20DB     		blt	.L93
  39:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     kfree(pool->haper_data);
  40:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     kfree(pool->haper);
ARM GAS  /tmp/ccvuNOOV.s 			page 35


  41:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     kfree(pool);
  42:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     return NULL;
  43:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
  44:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** 
  45:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->obj_size = obj_size;
 1143              		.loc 1 45 5 is_stmt 1 view .LVU301
 1144              		.loc 1 45 20 is_stmt 0 view .LVU302
 1145 0052 6760     		str	r7, [r4, #4]
  46:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->min_nr = min_nr;
 1146              		.loc 1 46 5 is_stmt 1 view .LVU303
 1147              		.loc 1 46 18 is_stmt 0 view .LVU304
 1148 0054 A660     		str	r6, [r4, #8]
  47:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->curr_nr = 0;
 1149              		.loc 1 47 5 is_stmt 1 view .LVU305
 1150              		.loc 1 47 19 is_stmt 0 view .LVU306
 1151 0056 0023     		movs	r3, #0
 1152 0058 E360     		str	r3, [r4, #12]
  48:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->alloc = alloc_fn ? alloc_fn : haper_alloc;  // ÈªòËÆ§‰ΩøÁî® best_fit_alloc
 1153              		.loc 1 48 5 is_stmt 1 view .LVU307
 1154              		.loc 1 48 39 is_stmt 0 view .LVU308
 1155 005a B9F1000F 		cmp	r9, #0
 1156 005e 24D0     		beq	.L94
 1157              	.LVL119:
 1158              	.L83:
 1159              		.loc 1 48 17 discriminator 4 view .LVU309
 1160 0060 C4F81090 		str	r9, [r4, #16]
  49:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->free = free_fn ? free_fn : haper_free;      // ÈªòËÆ§‰ΩøÁî® free_haper_block
 1161              		.loc 1 49 5 is_stmt 1 view .LVU310
 1162              		.loc 1 49 36 is_stmt 0 view .LVU311
 1163 0064 B8F1000F 		cmp	r8, #0
 1164 0068 22D0     		beq	.L95
 1165              	.LVL120:
 1166              	.L84:
 1167              		.loc 1 49 16 discriminator 4 view .LVU312
 1168 006a C4F81480 		str	r8, [r4, #20]
  50:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->pool_data = pool->haper;  // Â∞Ü haper ‰Ωú‰∏∫ pool_data ‰º†ÈÄíÁªôÂõûË∞É
 1169              		.loc 1 50 5 is_stmt 1 view .LVU313
 1170              		.loc 1 50 27 is_stmt 0 view .LVU314
 1171 006e 2368     		ldr	r3, [r4]
 1172              		.loc 1 50 21 view .LVU315
 1173 0070 A361     		str	r3, [r4, #24]
  51:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** 
  52:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     // È¢ÑÂàÜÈÖç min_nr ‰∏™ÂØπË±°
  53:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     for (uint32_t i = 0; i < min_nr; i++) {
 1174              		.loc 1 53 5 is_stmt 1 view .LVU316
 1175              	.LBB35:
 1176              		.loc 1 53 10 view .LVU317
 1177              	.LVL121:
 1178              		.loc 1 53 19 is_stmt 0 view .LVU318
 1179 0072 0025     		movs	r5, #0
 1180              		.loc 1 53 5 view .LVU319
 1181 0074 20E0     		b	.L85
 1182              	.LVL122:
 1183              	.L91:
 1184              		.loc 1 53 5 view .LVU320
 1185              	.LBE35:
  23:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     return NULL;
ARM GAS  /tmp/ccvuNOOV.s 			page 36


 1186              		.loc 1 23 5 is_stmt 1 view .LVU321
 1187              	.LBB37:
 1188              	.LBI37:
 381:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 382:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline kfree(const void *ptr){
 1189              		.loc 5 383 20 view .LVU322
 1190              	.LBB38:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1191              		.loc 5 384 2 view .LVU323
 1192 0076 2046     		mov	r0, r4
 1193 0078 FFF7FEFF 		bl	__sfree__
 1194              	.LVL123:
 1195              		.loc 5 384 2 is_stmt 0 view .LVU324
 1196              	.LBE38:
 1197              	.LBE37:
  24:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
 1198              		.loc 1 24 5 is_stmt 1 view .LVU325
  24:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
 1199              		.loc 1 24 12 is_stmt 0 view .LVU326
 1200 007c 2C46     		mov	r4, r5
 1201              	.LVL124:
 1202              	.L78:
  54:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     void *obj = pool->alloc(obj_size, pool->pool_data);
  55:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (obj) {
  56:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->curr_nr++;
  57:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->free(obj, pool->pool_data);  // ÂΩíËøòÂà∞Ê±†‰∏≠
  58:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
  59:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** }
  60:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** 
  61:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** return pool;
  62:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** }
 1203              		.loc 1 62 1 view .LVU327
 1204 007e 2046     		mov	r0, r4
 1205 0080 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1206              	.LVL125:
 1207              	.L92:
  32:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     kfree(pool);
 1208              		.loc 1 32 5 is_stmt 1 view .LVU328
 1209              	.LBB39:
 1210              	.LBI39:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1211              		.loc 5 383 20 view .LVU329
 1212              	.LBB40:
 1213              		.loc 5 384 2 view .LVU330
 1214 0084 2068     		ldr	r0, [r4]
 1215 0086 FFF7FEFF 		bl	__sfree__
 1216              	.LVL126:
 1217              		.loc 5 384 2 is_stmt 0 view .LVU331
 1218              	.LBE40:
 1219              	.LBE39:
  33:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     return NULL;
 1220              		.loc 1 33 5 is_stmt 1 view .LVU332
 1221              	.LBB41:
 1222              	.LBI41:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1223              		.loc 5 383 20 view .LVU333
ARM GAS  /tmp/ccvuNOOV.s 			page 37


 1224              	.LBB42:
 1225              		.loc 5 384 2 view .LVU334
 1226 008a 2046     		mov	r0, r4
 1227 008c FFF7FEFF 		bl	__sfree__
 1228              	.LVL127:
 1229              		.loc 5 384 2 is_stmt 0 view .LVU335
 1230              	.LBE42:
 1231              	.LBE41:
  34:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
 1232              		.loc 1 34 5 is_stmt 1 view .LVU336
  34:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
 1233              		.loc 1 34 12 is_stmt 0 view .LVU337
 1234 0090 2C46     		mov	r4, r5
 1235              	.LVL128:
  34:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
 1236              		.loc 1 34 12 view .LVU338
 1237 0092 F4E7     		b	.L78
 1238              	.LVL129:
 1239              	.L93:
  39:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     kfree(pool->haper);
 1240              		.loc 1 39 5 is_stmt 1 view .LVU339
 1241              	.LBB43:
 1242              	.LBI43:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1243              		.loc 5 383 20 view .LVU340
 1244              	.LBB44:
 1245              		.loc 5 384 2 view .LVU341
 1246 0094 E069     		ldr	r0, [r4, #28]
 1247 0096 FFF7FEFF 		bl	__sfree__
 1248              	.LVL130:
 1249              		.loc 5 384 2 is_stmt 0 view .LVU342
 1250              	.LBE44:
 1251              	.LBE43:
  40:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     kfree(pool);
 1252              		.loc 1 40 5 is_stmt 1 view .LVU343
 1253              	.LBB45:
 1254              	.LBI45:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1255              		.loc 5 383 20 view .LVU344
 1256              	.LBB46:
 1257              		.loc 5 384 2 view .LVU345
 1258 009a 2068     		ldr	r0, [r4]
 1259 009c FFF7FEFF 		bl	__sfree__
 1260              	.LVL131:
 1261              		.loc 5 384 2 is_stmt 0 view .LVU346
 1262              	.LBE46:
 1263              	.LBE45:
  41:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     return NULL;
 1264              		.loc 1 41 5 is_stmt 1 view .LVU347
 1265              	.LBB47:
 1266              	.LBI47:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1267              		.loc 5 383 20 view .LVU348
 1268              	.LBB48:
 1269              		.loc 5 384 2 view .LVU349
 1270 00a0 2046     		mov	r0, r4
 1271 00a2 FFF7FEFF 		bl	__sfree__
ARM GAS  /tmp/ccvuNOOV.s 			page 38


 1272              	.LVL132:
 1273              		.loc 5 384 2 is_stmt 0 view .LVU350
 1274              	.LBE48:
 1275              	.LBE47:
  42:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
 1276              		.loc 1 42 5 is_stmt 1 view .LVU351
  42:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
 1277              		.loc 1 42 12 is_stmt 0 view .LVU352
 1278 00a6 0024     		movs	r4, #0
 1279              	.LVL133:
  42:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
 1280              		.loc 1 42 12 view .LVU353
 1281 00a8 E9E7     		b	.L78
 1282              	.LVL134:
 1283              	.L94:
  48:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->free = free_fn ? free_fn : haper_free;      // ÈªòËÆ§‰ΩøÁî® free_haper_block
 1284              		.loc 1 48 39 discriminator 2 view .LVU354
 1285 00aa DFF82C90 		ldr	r9, .L96
 1286              	.LVL135:
  48:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->free = free_fn ? free_fn : haper_free;      // ÈªòËÆ§‰ΩøÁî® free_haper_block
 1287              		.loc 1 48 39 discriminator 2 view .LVU355
 1288 00ae D7E7     		b	.L83
 1289              	.L95:
  49:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->pool_data = pool->haper;  // Â∞Ü haper ‰Ωú‰∏∫ pool_data ‰º†ÈÄíÁªôÂõûË∞É
 1290              		.loc 1 49 36 discriminator 2 view .LVU356
 1291 00b0 DFF82880 		ldr	r8, .L96+4
 1292              	.LVL136:
  49:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->pool_data = pool->haper;  // Â∞Ü haper ‰Ωú‰∏∫ pool_data ‰º†ÈÄíÁªôÂõûË∞É
 1293              		.loc 1 49 36 discriminator 2 view .LVU357
 1294 00b4 D9E7     		b	.L84
 1295              	.LVL137:
 1296              	.L86:
 1297              	.LBB49:
  53:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     void *obj = pool->alloc(obj_size, pool->pool_data);
 1298              		.loc 1 53 39 is_stmt 1 discriminator 2 view .LVU358
 1299 00b6 0135     		adds	r5, r5, #1
 1300              	.LVL138:
 1301              	.L85:
  53:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     void *obj = pool->alloc(obj_size, pool->pool_data);
 1302              		.loc 1 53 28 discriminator 1 view .LVU359
 1303 00b8 B542     		cmp	r5, r6
 1304 00ba E0D2     		bcs	.L78
 1305              	.LBB36:
  54:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (obj) {
 1306              		.loc 1 54 5 view .LVU360
  54:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (obj) {
 1307              		.loc 1 54 21 is_stmt 0 view .LVU361
 1308 00bc 2369     		ldr	r3, [r4, #16]
  54:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (obj) {
 1309              		.loc 1 54 17 view .LVU362
 1310 00be A169     		ldr	r1, [r4, #24]
 1311 00c0 3846     		mov	r0, r7
 1312 00c2 9847     		blx	r3
 1313              	.LVL139:
  55:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->curr_nr++;
 1314              		.loc 1 55 5 is_stmt 1 view .LVU363
  55:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->curr_nr++;
ARM GAS  /tmp/ccvuNOOV.s 			page 39


 1315              		.loc 1 55 8 is_stmt 0 view .LVU364
 1316 00c4 0028     		cmp	r0, #0
 1317 00c6 F6D0     		beq	.L86
  56:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->free(obj, pool->pool_data);  // ÂΩíËøòÂà∞Ê±†‰∏≠
 1318              		.loc 1 56 5 is_stmt 1 view .LVU365
  56:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->free(obj, pool->pool_data);  // ÂΩíËøòÂà∞Ê±†‰∏≠
 1319              		.loc 1 56 9 is_stmt 0 view .LVU366
 1320 00c8 E368     		ldr	r3, [r4, #12]
  56:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->free(obj, pool->pool_data);  // ÂΩíËøòÂà∞Ê±†‰∏≠
 1321              		.loc 1 56 18 view .LVU367
 1322 00ca 0133     		adds	r3, r3, #1
 1323 00cc E360     		str	r3, [r4, #12]
  57:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
 1324              		.loc 1 57 5 is_stmt 1 view .LVU368
  57:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
 1325              		.loc 1 57 9 is_stmt 0 view .LVU369
 1326 00ce 6369     		ldr	r3, [r4, #20]
  57:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
 1327              		.loc 1 57 5 view .LVU370
 1328 00d0 A169     		ldr	r1, [r4, #24]
 1329 00d2 9847     		blx	r3
 1330              	.LVL140:
  57:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     }
 1331              		.loc 1 57 5 view .LVU371
 1332 00d4 EFE7     		b	.L86
 1333              	.L97:
 1334 00d6 00BF     		.align	2
 1335              	.L96:
 1336 00d8 00000000 		.word	haper_alloc
 1337 00dc 00000000 		.word	haper_free
 1338              	.LBE36:
 1339              	.LBE49:
 1340              		.cfi_endproc
 1341              	.LFE274:
 1343              		.section	.text.mempool_destroy,"ax",%progbits
 1344              		.align	1
 1345              		.global	mempool_destroy
 1346              		.syntax unified
 1347              		.thumb
 1348              		.thumb_func
 1350              	mempool_destroy:
 1351              	.LVL141:
 1352              	.LFB275:
  63:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** 
  64:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** void mempool_destroy(mempool_t *pool) {
 1353              		.loc 1 64 39 is_stmt 1 view -0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 0, uses_anonymous_args = 0
  65:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (!pool) return;
 1357              		.loc 1 65 5 view .LVU373
 1358              		.loc 1 65 8 is_stmt 0 view .LVU374
 1359 0000 58B1     		cbz	r0, .L101
  64:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (!pool) return;
 1360              		.loc 1 64 39 view .LVU375
 1361 0002 10B5     		push	{r4, lr}
 1362              	.LCFI18:
ARM GAS  /tmp/ccvuNOOV.s 			page 40


 1363              		.cfi_def_cfa_offset 8
 1364              		.cfi_offset 4, -8
 1365              		.cfi_offset 14, -4
 1366 0004 0446     		mov	r4, r0
  66:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     kfree(pool->haper_data);  // ÈáäÊîæ haper_data ÁºìÂÜ≤Âå∫
 1367              		.loc 1 66 5 is_stmt 1 view .LVU376
 1368              	.LVL142:
 1369              	.LBB50:
 1370              	.LBI50:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1371              		.loc 5 383 20 view .LVU377
 1372              	.LBB51:
 1373              		.loc 5 384 2 view .LVU378
 1374 0006 C069     		ldr	r0, [r0, #28]
 1375              	.LVL143:
 1376              		.loc 5 384 2 is_stmt 0 view .LVU379
 1377 0008 FFF7FEFF 		bl	__sfree__
 1378              	.LVL144:
 1379              		.loc 5 384 2 view .LVU380
 1380              	.LBE51:
 1381              	.LBE50:
  67:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     kfree(pool->haper);       // ÈáäÊîæ haper2 ÁªìÊûÑ
 1382              		.loc 1 67 5 is_stmt 1 view .LVU381
 1383              	.LBB52:
 1384              	.LBI52:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1385              		.loc 5 383 20 view .LVU382
 1386              	.LBB53:
 1387              		.loc 5 384 2 view .LVU383
 1388 000c 2068     		ldr	r0, [r4]
 1389 000e FFF7FEFF 		bl	__sfree__
 1390              	.LVL145:
 1391              		.loc 5 384 2 is_stmt 0 view .LVU384
 1392              	.LBE53:
 1393              	.LBE52:
  68:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     kfree(pool);              // ÈáäÊîæ mempool_t ÁªìÊûÑ
 1394              		.loc 1 68 5 is_stmt 1 view .LVU385
 1395              	.LBB54:
 1396              	.LBI54:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1397              		.loc 5 383 20 view .LVU386
 1398              	.LBB55:
 1399              		.loc 5 384 2 view .LVU387
 1400 0012 2046     		mov	r0, r4
 1401 0014 FFF7FEFF 		bl	__sfree__
 1402              	.LVL146:
 1403              		.loc 5 384 2 is_stmt 0 view .LVU388
 1404              	.LBE55:
 1405              	.LBE54:
  69:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** }
 1406              		.loc 1 69 1 view .LVU389
 1407 0018 10BD     		pop	{r4, pc}
 1408              	.LVL147:
 1409              	.L101:
 1410              	.LCFI19:
 1411              		.cfi_def_cfa_offset 0
 1412              		.cfi_restore 4
ARM GAS  /tmp/ccvuNOOV.s 			page 41


 1413              		.cfi_restore 14
 1414              		.loc 1 69 1 view .LVU390
 1415 001a 7047     		bx	lr
 1416              		.cfi_endproc
 1417              	.LFE275:
 1419              		.section	.text.mempool_alloc,"ax",%progbits
 1420              		.align	1
 1421              		.global	mempool_alloc
 1422              		.syntax unified
 1423              		.thumb
 1424              		.thumb_func
 1426              	mempool_alloc:
 1427              	.LVL148:
 1428              	.LFB276:
  70:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** 
  71:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** void *mempool_alloc(mempool_t *pool, gfp_t flags) {
 1429              		.loc 1 71 51 is_stmt 1 view -0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433              		.loc 1 71 51 is_stmt 0 view .LVU392
 1434 0000 10B5     		push	{r4, lr}
 1435              	.LCFI20:
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 4, -8
 1438              		.cfi_offset 14, -4
  72:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (!pool) return NULL;
 1439              		.loc 1 72 5 is_stmt 1 view .LVU393
 1440              		.loc 1 72 8 is_stmt 0 view .LVU394
 1441 0002 0446     		mov	r4, r0
 1442 0004 38B1     		cbz	r0, .L104
  73:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     void *obj = pool->alloc(pool->obj_size, pool->pool_data);
 1443              		.loc 1 73 5 is_stmt 1 view .LVU395
 1444              		.loc 1 73 21 is_stmt 0 view .LVU396
 1445 0006 0369     		ldr	r3, [r0, #16]
 1446              		.loc 1 73 17 view .LVU397
 1447 0008 8169     		ldr	r1, [r0, #24]
 1448              	.LVL149:
 1449              		.loc 1 73 17 view .LVU398
 1450 000a 4068     		ldr	r0, [r0, #4]
 1451              	.LVL150:
 1452              		.loc 1 73 17 view .LVU399
 1453 000c 9847     		blx	r3
 1454              	.LVL151:
  74:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (obj) pool->curr_nr++;
 1455              		.loc 1 74 5 is_stmt 1 view .LVU400
 1456              		.loc 1 74 8 is_stmt 0 view .LVU401
 1457 000e 10B1     		cbz	r0, .L104
 1458              		.loc 1 74 14 is_stmt 1 discriminator 1 view .LVU402
 1459              		.loc 1 74 18 is_stmt 0 discriminator 1 view .LVU403
 1460 0010 E368     		ldr	r3, [r4, #12]
 1461              		.loc 1 74 27 discriminator 1 view .LVU404
 1462 0012 0133     		adds	r3, r3, #1
 1463 0014 E360     		str	r3, [r4, #12]
 1464              	.LVL152:
 1465              	.L104:
  75:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     return obj;
ARM GAS  /tmp/ccvuNOOV.s 			page 42


  76:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** }
 1466              		.loc 1 76 1 view .LVU405
 1467 0016 10BD     		pop	{r4, pc}
 1468              		.loc 1 76 1 view .LVU406
 1469              		.cfi_endproc
 1470              	.LFE276:
 1472              		.section	.text.mempool_free,"ax",%progbits
 1473              		.align	1
 1474              		.global	mempool_free
 1475              		.syntax unified
 1476              		.thumb
 1477              		.thumb_func
 1479              	mempool_free:
 1480              	.LVL153:
 1481              	.LFB277:
  77:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** void mempool_free(void *obj, mempool_t *pool) {
 1482              		.loc 1 77 47 is_stmt 1 view -0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 0
 1485              		@ frame_needed = 0, uses_anonymous_args = 0
  78:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (!pool || !obj) return;
 1486              		.loc 1 78 5 view .LVU408
 1487              		.loc 1 78 8 is_stmt 0 view .LVU409
 1488 0000 51B1     		cbz	r1, .L111
  77:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** void mempool_free(void *obj, mempool_t *pool) {
 1489              		.loc 1 77 47 view .LVU410
 1490 0002 10B5     		push	{r4, lr}
 1491              	.LCFI21:
 1492              		.cfi_def_cfa_offset 8
 1493              		.cfi_offset 4, -8
 1494              		.cfi_offset 14, -4
 1495 0004 0C46     		mov	r4, r1
 1496              		.loc 1 78 15 discriminator 2 view .LVU411
 1497 0006 30B1     		cbz	r0, .L108
  79:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     pool->free(obj, pool->pool_data);
 1498              		.loc 1 79 5 is_stmt 1 view .LVU412
 1499              		.loc 1 79 9 is_stmt 0 view .LVU413
 1500 0008 4B69     		ldr	r3, [r1, #20]
 1501              		.loc 1 79 5 view .LVU414
 1502 000a 8969     		ldr	r1, [r1, #24]
 1503              	.LVL154:
 1504              		.loc 1 79 5 view .LVU415
 1505 000c 9847     		blx	r3
 1506              	.LVL155:
  80:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c ****     if (pool->curr_nr > 0) pool->curr_nr--;
 1507              		.loc 1 80 5 is_stmt 1 view .LVU416
 1508              		.loc 1 80 13 is_stmt 0 view .LVU417
 1509 000e E368     		ldr	r3, [r4, #12]
 1510              		.loc 1 80 8 view .LVU418
 1511 0010 0BB1     		cbz	r3, .L108
 1512              		.loc 1 80 28 is_stmt 1 discriminator 1 view .LVU419
 1513              		.loc 1 80 41 is_stmt 0 discriminator 1 view .LVU420
 1514 0012 013B     		subs	r3, r3, #1
 1515 0014 E360     		str	r3, [r4, #12]
 1516              	.L108:
  81:/mnt/c/Users/31740/Desktop/newcore/lib/mempool.c **** }
 1517              		.loc 1 81 1 view .LVU421
ARM GAS  /tmp/ccvuNOOV.s 			page 43


 1518 0016 10BD     		pop	{r4, pc}
 1519              	.LVL156:
 1520              	.L111:
 1521              	.LCFI22:
 1522              		.cfi_def_cfa_offset 0
 1523              		.cfi_restore 4
 1524              		.cfi_restore 14
 1525              		.loc 1 81 1 view .LVU422
 1526 0018 7047     		bx	lr
 1527              		.cfi_endproc
 1528              	.LFE277:
 1530              		.text
 1531              	.Letext0:
 1532              		.file 6 "/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/int-l64.h"
 1533              		.file 7 "/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/posix_types.h"
 1534              		.file 8 "/mnt/c/Users/31740/Desktop/newcore/include/linux/types.h"
 1535              		.file 9 "/mnt/c/Users/31740/Desktop/newcore/include/linux/time64.h"
 1536              		.file 10 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/sched.h"
 1537              		.file 11 "/mnt/c/Users/31740/Desktop/newcore/include/linux/sched.h"
 1538              		.file 12 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock_types_raw.h"
 1539              		.file 13 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock_types.h"
 1540              		.file 14 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool.h"
 1541              		.file 15 "/mnt/c/Users/31740/Desktop/newcore/include/linux/gfp_types.h"
ARM GAS  /tmp/ccvuNOOV.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 mempool.c
     /tmp/ccvuNOOV.s:21     .text.__spin_init:00000000 $t
     /tmp/ccvuNOOV.s:26     .text.__spin_init:00000000 __spin_init
     /tmp/ccvuNOOV.s:46     .text.__spin_unlock:00000000 $t
     /tmp/ccvuNOOV.s:51     .text.__spin_unlock:00000000 __spin_unlock
     /tmp/ccvuNOOV.s:69     .text.spin_lock_init:00000000 $t
     /tmp/ccvuNOOV.s:74     .text.spin_lock_init:00000000 spin_lock_init
     /tmp/ccvuNOOV.s:97     .text.spin_unlock:00000000 $t
     /tmp/ccvuNOOV.s:102    .text.spin_unlock:00000000 spin_unlock
     /tmp/ccvuNOOV.s:124    .text.reset_block_status:00000000 $t
     /tmp/ccvuNOOV.s:129    .text.reset_block_status:00000000 reset_block_status
     /tmp/ccvuNOOV.s:156    .text.get_block_status:00000000 $t
     /tmp/ccvuNOOV.s:161    .text.get_block_status:00000000 get_block_status
     /tmp/ccvuNOOV.s:191    .text.get_next_block:00000000 $t
     /tmp/ccvuNOOV.s:196    .text.get_next_block:00000000 get_next_block
     /tmp/ccvuNOOV.s:214    .text.get_priv_block:00000000 $t
     /tmp/ccvuNOOV.s:219    .text.get_priv_block:00000000 get_priv_block
     /tmp/ccvuNOOV.s:237    .text.clean_block:00000000 $t
     /tmp/ccvuNOOV.s:242    .text.clean_block:00000000 clean_block
     /tmp/ccvuNOOV.s:292    .text.haper2_init:00000000 $t
     /tmp/ccvuNOOV.s:297    .text.haper2_init:00000000 haper2_init
     /tmp/ccvuNOOV.s:400    .text.free_block:00000000 $t
     /tmp/ccvuNOOV.s:405    .text.free_block:00000000 free_block
     /tmp/ccvuNOOV.s:538    .text.free_memory:00000000 $t
     /tmp/ccvuNOOV.s:543    .text.free_memory:00000000 free_memory
     /tmp/ccvuNOOV.s:595    .text.memory_block_laterator:00000000 $t
     /tmp/ccvuNOOV.s:600    .text.memory_block_laterator:00000000 memory_block_laterator
     /tmp/ccvuNOOV.s:667    .text.get_block:00000000 $t
     /tmp/ccvuNOOV.s:672    .text.get_block:00000000 get_block
     /tmp/ccvuNOOV.s:724    .text.__spin_lock:00000000 $t
     /tmp/ccvuNOOV.s:729    .text.__spin_lock:00000000 __spin_lock
     /tmp/ccvuNOOV.s:779    .text.spin_lock:00000000 $t
     /tmp/ccvuNOOV.s:784    .text.spin_lock:00000000 spin_lock
     /tmp/ccvuNOOV.s:844    .text.free_haper_block:00000000 $t
     /tmp/ccvuNOOV.s:849    .text.free_haper_block:00000000 free_haper_block
     /tmp/ccvuNOOV.s:954    .text.free_haper_block:00000054 $d
     /tmp/ccvuNOOV.s:959    .text.haper_free:00000000 $t
     /tmp/ccvuNOOV.s:964    .text.haper_free:00000000 haper_free
     /tmp/ccvuNOOV.s:993    .text.haper_alloc:00000000 $t
     /tmp/ccvuNOOV.s:998    .text.haper_alloc:00000000 haper_alloc
     /tmp/ccvuNOOV.s:1028   .text.mempool_create:00000000 $t
     /tmp/ccvuNOOV.s:1034   .text.mempool_create:00000000 mempool_create
     /tmp/ccvuNOOV.s:1336   .text.mempool_create:000000d8 $d
     /tmp/ccvuNOOV.s:1344   .text.mempool_destroy:00000000 $t
     /tmp/ccvuNOOV.s:1350   .text.mempool_destroy:00000000 mempool_destroy
     /tmp/ccvuNOOV.s:1420   .text.mempool_alloc:00000000 $t
     /tmp/ccvuNOOV.s:1426   .text.mempool_alloc:00000000 mempool_alloc
     /tmp/ccvuNOOV.s:1473   .text.mempool_free:00000000 $t
     /tmp/ccvuNOOV.s:1479   .text.mempool_free:00000000 mempool_free

UNDEFINED SYMBOLS
stop_all_scheduler
start_all_scheduler
get_current_task
__delay
fast_alloc
ARM GAS  /tmp/ccvuNOOV.s 			page 45


__smalloc__
__sfree__
