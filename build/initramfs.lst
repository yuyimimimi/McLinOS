ARM GAS  /tmp/cczxpjuQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"initramfs.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c"
  20              		.section	.text.__spin_init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__spin_init:
  27              	.LVL0:
  28              	.LFB850:
  29              		.file 2 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h"
   1:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** #ifndef __SPIN_LOCK_H_
   2:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** #define __SPIN_LOCK_H_
   3:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
   4:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** #include <linux/sched.h>
   5:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
   6:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** typedef struct { 
   7:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****      int flag; 
   8:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** } arch_spinlock_t;
   9:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  10:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** static int __spin_init(arch_spinlock_t *lock) 
  11:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** {
  30              		.loc 2 11 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  12:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     lock->flag = 0;
  35              		.loc 2 12 5 view .LVU1
  36              		.loc 2 12 16 is_stmt 0 view .LVU2
  37 0000 0023     		movs	r3, #0
  38 0002 0360     		str	r3, [r0]
  39              	.LVL1:
  13:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** }
  40              		.loc 2 13 1 view .LVU3
  41 0004 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE850:
  45              		.section	.text.__spin_unlock,"ax",%progbits
  46              		.align	1
ARM GAS  /tmp/cczxpjuQ.s 			page 2


  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	__spin_unlock:
  52              	.LVL2:
  53              	.LFB852:
  14:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  15:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** static int __spin_lock(arch_spinlock_t *lock) {
  16:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  17:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     stop_all_scheduler();
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     if(lock->flag == 0){
  19:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
  20:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
  21:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         return 1;
  22:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
  23:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     else
  24:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     {
  25:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         start_all_scheduler();
  26:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         return 0;
  27:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
  28:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** }
  29:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  30:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** static void  __spin_unlock( arch_spinlock_t *lock ){
  54              		.loc 2 30 52 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  31:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     lock->flag = 0;
  59              		.loc 2 31 5 view .LVU5
  60              		.loc 2 31 16 is_stmt 0 view .LVU6
  61 0000 0023     		movs	r3, #0
  62 0002 0360     		str	r3, [r0]
  32:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** }
  63              		.loc 2 32 1 view .LVU7
  64 0004 7047     		bx	lr
  65              		.cfi_endproc
  66              	.LFE852:
  68              		.section	.text.spin_lock_init,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	spin_lock_init:
  75              	.LVL3:
  76              	.LFB853:
  77              		.file 3 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #ifndef __SPINLOCK_H__
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #define __SPINLOCK_H__
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #include <linux/types.h>
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #include <linux/spinlock_types.h>
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #include <linux/sched.h>
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** static void spin_lock_init(spinlock_t* lock){
ARM GAS  /tmp/cczxpjuQ.s 			page 3


  78              		.loc 3 10 45 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		.loc 3 10 45 is_stmt 0 view .LVU9
  83 0000 08B5     		push	{r3, lr}
  84              	.LCFI0:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 3, -8
  87              		.cfi_offset 14, -4
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     __spin_init(&lock->rlock.raw_lock);
  88              		.loc 3 11 5 is_stmt 1 view .LVU10
  89 0002 FFF7FEFF 		bl	__spin_init
  90              	.LVL4:
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** }
  91              		.loc 3 12 1 is_stmt 0 view .LVU11
  92 0006 08BD     		pop	{r3, pc}
  93              		.cfi_endproc
  94              	.LFE853:
  96              		.section	.text.spin_unlock,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	spin_unlock:
 103              	.LVL5:
 104              	.LFB855:
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** static void spin_lock(spinlock_t* lock)
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** {  
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     while (1)
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     {
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         if(__spin_lock(&lock->rlock.raw_lock) == 1){
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             lock->owner = get_current_task();
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             break;
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         else  if(lock->owner == get_current_task()){  //Â¶ÇÊûúÂ∑≤ÁªèË¢´ÈîÅ‰Ωè‰ΩÜÊòØÈîÅÊòØËá™Â∑±ÁöÑÔ
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         else{
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             __delay(5); //‰∏ªÂä®ËÆ©Âá∫Êó∂Èó¥Áâá
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     }
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** }
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** static void spin_unlock(spinlock_t* lock)
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** {
 105              		.loc 3 32 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		.loc 3 32 1 is_stmt 0 view .LVU13
 110 0000 08B5     		push	{r3, lr}
 111              	.LCFI1:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 3, -8
 114              		.cfi_offset 14, -4
ARM GAS  /tmp/cczxpjuQ.s 			page 4


  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     __spin_unlock(&lock->rlock.raw_lock);
 115              		.loc 3 33 5 is_stmt 1 view .LVU14
 116 0002 FFF7FEFF 		bl	__spin_unlock
 117              	.LVL6:
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** }
 118              		.loc 3 34 1 is_stmt 0 view .LVU15
 119 0006 08BD     		pop	{r3, pc}
 120              		.cfi_endproc
 121              	.LFE855:
 123              		.section	.text.__kmap,"ax",%progbits
 124              		.align	1
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 129              	__kmap:
 130              	.LVL7:
 131              	.LFB920:
 132              		.file 4 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #ifndef _LINUX_MM_TYPES_H
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #define _LINUX_MM_TYPES_H
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #include <linux/list.h>
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #include <linux/spinlock.h>
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #include <linux/slab.h>
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #include <linux/atomic.h>
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #include <linux/errno.h>
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** struct page {
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	unsigned long flags;		/* Atomic flags, some possibly
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 					 * updated asynchronously */
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	/*
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 * Five words (20/40 bytes) are available in this union.
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 * WARNING: bit 0 of the first word is used for PageTail(). That
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 * means the other users of this union MUST NOT use the bit to
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 * avoid collision and false-positive PageTail().
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 */
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	union {
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		struct {	/* Page cache and anonymous pages */
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			/**
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * @lru: Pageout list, eg. active_list protected by
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * lruvec->lru_lock.  Sometimes used as a generic list
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * by the page owner.
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 */
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			union {
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 				struct list_head lru;
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 				/* Or, for the Unevictable "LRU list" slot */
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 				struct {
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 					/* Always even, to negate PageTail */
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 					void *__filler;
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 					/* Count page's or folio's mlocks */
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 					unsigned int mlock_count;
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 				};
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
ARM GAS  /tmp/cczxpjuQ.s 			page 5


  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 				/* Or, free page */
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 				struct list_head buddy_list;
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 				struct list_head pcp_list;
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			};
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			/* See page-flags.h for PAGE_MAPPING_FLAGS */
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			struct address_space *mapping;
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			union {
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 				pgoff_t index;		/* Our offset within mapping. */
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 				unsigned long share;	/* share count for fsdax */
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			};
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			/**
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * @private: Mapping-private opaque data.
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * Usually used for buffer_heads if PagePrivate.
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * Used for swp_entry_t if swapcache flag set.
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * Indicates order in the buddy system if PageBuddy.
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 */
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			unsigned long private;
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		};
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		struct {	/* page_pool used by netstack */
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			/**
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * @pp_magic: magic value to avoid recycling non
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * page_pool allocated pages.
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 */
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			unsigned long pp_magic;
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		//	struct page_pool *pp; 
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			unsigned long _pp_mapping_pad;
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			unsigned long dma_addr;
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		//	atomic_long_t pp_ref_count;
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		};
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		struct {	/* Tail pages of compound page */
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			unsigned long compound_head;	/* Bit zero is set */
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		};
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		struct {	/* ZONE_DEVICE pages */
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			/** @pgmap: Points to the hosting device page map. */
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			// struct dev_pagemap *pgmap;
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			void *zone_device_data;
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			/*
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * ZONE_DEVICE private pages are counted as being
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * mapped so the next 3 words hold the mapping, index,
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * and private fields from the source anonymous or
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * page cache page while the page is migrated to device
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * private memory.
  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * ZONE_DEVICE MEMORY_DEVICE_FS_DAX pages also
  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * use the mapping, index, and private fields when
  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 * pmem backed DAX files are mapped.
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 			 */
  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		};
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		/** @rcu_head: You can use this to free a page by RCU. */
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		struct rcu_head rcu_head;
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	};
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	union {		/* This union is 4 bytes in size. */
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		/*
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * For head pages of typed folios, the value stored here
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * allows for determining what this page is used for. The
  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * tail pages of typed folios will not store a type
ARM GAS  /tmp/cczxpjuQ.s 			page 6


  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * (page_type == _mapcount == -1).
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 *
  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * See page-flags.h for a list of page types which are currently
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * stored here.
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 *
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * Owners of typed folios may reuse the lower 16 bit of the
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * head page page_type field after setting the page type,
 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * but must reset these 16 bit to -1 before clearing the
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * page type.
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 */
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		unsigned int page_type;
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		/*
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * For pages that are part of non-typed folios for which mappings
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * are tracked via the RMAP, encodes the number of times this page
 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * is directly referenced by a page table.
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 *
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * Note that the mapcount is always initialized to -1, so that
 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * transitions both from it and to it can be tracked, using
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 * atomic_inc_and_test() and atomic_add_negative(-1).
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		 */
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		atomic_t _mapcount;
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	};
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	/* Usage count. *DO NOT USE DIRECTLY*. See page_ref.h */
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	atomic_t _refcount;
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #ifdef CONFIG_MEMCG
 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	unsigned long memcg_data;
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #elif defined(CONFIG_SLAB_OBJ_EXT)
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	unsigned long _unused_slab_obj_exts;
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #endif
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	/*
 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 * On machines where all RAM is mapped into kernel address space,
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 * we can simply calculate the virtual address. On machines with
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 * highmem some memory is mapped into kernel virtual memory
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 * dynamically, so we need a place to store that address.
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 * Note that this field could be 16 bits on x86 ... ;)
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 *
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 * Architectures with slow multiplication can define
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 * WANT_PAGE_VIRTUAL in asm/page.h
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 */
 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #if defined(WANT_PAGE_VIRTUAL)
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	void *virtual;			/* Kernel virtual address (NULL if
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 					   not kmapped, ie. highmem) */
 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #endif /* WANT_PAGE_VIRTUAL */
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #ifdef LAST_CPUPID_NOT_IN_PAGE_FLAGS
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	int _last_cpupid;
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #endif
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #ifdef CONFIG_KMSAN
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	/*
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 * KMSAN metadata for this page:
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 *  - shadow page: every bit indicates whether the corresponding
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 *    bit of the original page is initialized (0) or not (1);
ARM GAS  /tmp/cczxpjuQ.s 			page 7


 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 *  - origin page: every 4 bytes contain an id of the stack trace
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 *    where the uninitialized value was created.
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	 */
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	struct page *kmsan_shadow;
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	struct page *kmsan_origin;
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #endif
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** };
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #if CONFIG_MMU 
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****   #include <mm_page.h>
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #else
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #define PG_locked       (1 << 0)
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #define PG_referenced   (1 << 1)
 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #define PG_uptodate     (1 << 2)
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #define PG_dirty        (1 << 11)
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** #define PG_active       (1 << 12)
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline void __set_page_flag(struct page *page, unsigned long flag){
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page)
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         page->flags |= flag;
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline void __clear_page_flag(struct page *page, unsigned long flag){
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page)
 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         page->flags &= ~flag;
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline int __test_page_flag(struct page *page, unsigned long flag){
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     return (page && (page->flags & flag)) ? 1 : 0;
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline struct page *__page_create(gfp_t flags ){
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     struct page *page = (struct page *)kmalloc(sizeof(struct page), flags);
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page == NULL)
 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         return NULL;
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     page->flags = 0;
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     atomic_set(&page->_mapcount, 0);
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     atomic_set(&page->_refcount, 0); 
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     page->zone_device_data = NULL;
 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     return page;
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline void __page_destroy(struct page *page){
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page) 
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	{
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         kfree(page);
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		page = NULL;
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     }
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline void *__page_address(struct page *page){
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     return page ? page->zone_device_data : NULL; 
 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
ARM GAS  /tmp/cczxpjuQ.s 			page 8


 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline void __set_page_dirty(struct page *page){
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page)
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	__set_page_flag(page, PG_dirty);
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline void __clear_page_dirty(struct page *page){
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page)
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	__clear_page_flag(page, PG_dirty);
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline struct page *__alloc_pages( gfp_t flags , unsigned int order ){
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	struct page *page = __page_create(flags);
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	if(page == NULL)
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		return -ENOMEM ;
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	void *data = (void *)kmalloc(PAGE_SIZE, flags);
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	if(data == NULL){
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		__page_destroy(page);
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		return -ENOMEM ;
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	}
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	page->page_type = 1234;
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	page->zone_device_data = data;
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	return page;
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline void __free_pages(struct page *page, unsigned int order){
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page) {
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		if(page->page_type == 1234)
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		kfree(page->zone_device_data);
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         __page_destroy(page);
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     }
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline struct page *__pfn_to_page(unsigned long pfn){
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	struct page *page = __page_create(GFP_KERNEL);
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	if(page == NULL)
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		return -ENOMEM ;
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	page->zone_device_data = (void *)(pfn << 0 );
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	return page;
 249:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 250:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 251:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline void __get_page(struct page *page){
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page)
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         atomic_inc(&page->_refcount);
 255:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 256:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 257:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline void __put_page(struct page *page){
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page && atomic_dec_and_test(&page->_refcount) ) {
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         __free_pages(page, 0);
 261:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     }
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	else if(page->_refcount.counter < 0) {
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		__free_pages(page, 0);
 264:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	}
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 266:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 267:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static void* __kmap(struct page *page){
ARM GAS  /tmp/cczxpjuQ.s 			page 9


 133              		.loc 4 267 39 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 268:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	if (!page)
 138              		.loc 4 268 2 view .LVU17
 139              		.loc 4 268 5 is_stmt 0 view .LVU18
 140 0000 08B1     		cbz	r0, .L9
 269:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		return NULL;
 270:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	//__get_page(page);
 271:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	return page->zone_device_data;
 141              		.loc 4 271 2 is_stmt 1 view .LVU19
 142              		.loc 4 271 13 is_stmt 0 view .LVU20
 143 0002 4068     		ldr	r0, [r0, #4]
 144              	.LVL8:
 145              		.loc 4 271 13 view .LVU21
 146 0004 7047     		bx	lr
 147              	.LVL9:
 148              	.L9:
 272:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 149              		.loc 4 272 1 view .LVU22
 150 0006 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE920:
 154              		.section	.text.initramfs_open,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	initramfs_open:
 161              	.LVL10:
 162              	.LFB1036:
   1:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** #include <linux/kernel.h>
   2:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** #include <linux/uaccess.h>
   3:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** #include <linux/atomic.h>
   4:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** #include <linux/types.h>
   5:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** #include <linux/module.h>
   6:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** #include <linux/string.h>
   7:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** #include <linux/fs.h>
   8:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** #include <linux/slab.h>
   9:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** #include <linux/init.h>
  10:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** #include <linux/mm_type.h>
  11:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** #include <linux/initramfs.h>
  12:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  13:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  14:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  15:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  16:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  17:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** #define MAGIC 12345678
  18:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** struct initramfs_inode {
  19:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     int                     magic;
  20:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     uint32_t                i_mode;
  21:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     uint32_t                major;
  22:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     atomic_t                dentry_count;          //ÂºïÁî®ËÆ°Êï∞
  23:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct file_operations *i_fop;                
  24:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct list_head        list_node;             // ÊåÇÂú®superblockÁöÑinodeÈìæË°®
ARM GAS  /tmp/cczxpjuQ.s 			page 10


  25:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct list_head        dentry_list_head;      // Â¶ÇÊûúËøôÊòØÁõÆÂΩïÈ°πÔºåËøôÈáåÂ≠òÂÇ®inode‰∏ãÁ
  26:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spinlock_t              lock;
  27:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     uint8_t                 mode;
  28:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct block_initramice *binitram;
  29:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_superblock *sb;
  30:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct page *i_page;
  31:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     uint32_t                size;
  32:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** };
  33:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  34:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** struct initramfs_dentry {
  35:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     int                    magic;
  36:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     char *name;                             // ÂêçÂ≠ó
  37:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *target_inode;       // ËØ•dentryÊåáÂêëÁöÑÁõÆÊ†áinode
  38:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct list_head list_node;             // ÊåÇËΩΩÂà∞Áà∂ÁõÆÂΩïinode‰∏≠ÁöÑlisthead‰∏≠
  39:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** };
  40:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** struct initramfs_superblock {
  41:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     int                    magic;
  42:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spinlock_t             lock;
  43:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *rootinode;
  44:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct list_head inode_list_head;       // ËØ•superblock‰∏ãÁöÑinodeÈìæË°®Â§¥
  45:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** };
  46:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  47:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  48:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  49:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  50:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** void initram_fs_mount_file(struct inode *inode,__file_data *filedata)
  51:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
  52:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *init_ram_fs_inode = inode->i_private;
  53:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(init_ram_fs_inode->i_page != NULL){
  54:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         pr_info("can not mount file:%s file is using\n",filedata->path);
  55:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return;
  56:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
  57:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct page* file_data_page = virt_to_page(filedata->data);
  58:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(file_data_page == NULL){
  59:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         pr_info("can not mount file:%s no memory\n",filedata->path);
  60:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return;
  61:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
  62:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     get_page(file_data_page);
  63:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *p_inode = inode->i_private;
  64:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     p_inode->i_page = file_data_page;
  65:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     p_inode->size   = filedata->length;
  66:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     p_inode->mode   = READONLY;
  67:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_size   = filedata->length;
  68:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
  69:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  70:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  71:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_open(struct inode *inode, struct file *file){
 163              		.loc 1 71 66 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
  72:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 168              		.loc 1 72 5 view .LVU24
  73:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 169              		.loc 1 73 1 is_stmt 0 view .LVU25
 170 0000 0020     		movs	r0, #0
ARM GAS  /tmp/cczxpjuQ.s 			page 11


 171              	.LVL11:
 172              		.loc 1 73 1 view .LVU26
 173 0002 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE1036:
 177              		.section	.text.initramfs_release,"ax",%progbits
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 183              	initramfs_release:
 184              	.LVL12:
 185              	.LFB1037:
  74:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_release(struct inode *inode, struct file *file){
 186              		.loc 1 74 69 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
  75:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 191              		.loc 1 75 5 view .LVU28
  76:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 192              		.loc 1 76 1 is_stmt 0 view .LVU29
 193 0000 0020     		movs	r0, #0
 194              	.LVL13:
 195              		.loc 1 76 1 view .LVU30
 196 0002 7047     		bx	lr
 197              		.cfi_endproc
 198              	.LFE1037:
 200              		.section	.text.initramfs_statfs,"ax",%progbits
 201              		.align	1
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 206              	initramfs_statfs:
 207              	.LVL14:
 208              	.LFB1058:
  77:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_read(struct file *file, char __user * data, size_t size, loff_t *offset){
  78:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *p_inode = file->f_inode->i_private;
  79:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(p_inode->i_page == NULL) 
  80:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
  81:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(((loff_t)*offset + size) > p_inode->size) 
  82:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     {
  83:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         pr_info("read to many fata\n");
  84:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return 0;
  85:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
  86:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     char* page_data = kmap(p_inode->i_page);
  87:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (!page_data)
  88:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -ENOMEM;
  89:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     int ret = copy_to_user(data,page_data + (loff_t)*offset,size);
  90:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (ret)
  91:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -EFAULT;
  92:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     *offset += size;
  93:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return size;
  94:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
  95:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
  96:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_write(struct file *file, char __user * data, size_t size, loff_t *offset)
ARM GAS  /tmp/cczxpjuQ.s 			page 12


  97:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
  98:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *p_inode = file->f_inode->i_private;
  99:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(p_inode->mode = READONLY){
 100:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         pr_err("this file is read only\n");
 101:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return 0;
 102:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 103:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(p_inode->i_page == NULL){
 104:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         p_inode->i_page = alloc_page(GFP_KERNEL);
 105:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(IS_ERR(p_inode->i_page)){
 106:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             p_inode->i_page = NULL;
 107:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             return -ENOMEM;
 108:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }      
 109:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         p_inode->size = PAGE_SIZE;
 110:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         file->f_inode->i_bytes = PAGE_SIZE;
 111:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         get_page(p_inode->i_page);
 112:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 113:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(((loff_t)*offset + size) > PAGE_SIZE){
 114:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return 0;
 115:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 116:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     char* page_data = kmap(p_inode->i_page);
 117:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     int ret = copy_from_user(page_data + (loff_t)*offset ,data,size);
 118:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     kunmap(p_inode->i_page);
 119:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (ret)
 120:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return -EFAULT;
 121:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     *offset += size;
 122:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return size;
 123:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 124:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 125:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 126:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_iterate(struct file *file, struct dir_context *ctx)
 127:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 128:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *inode = file->private_data;
 129:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *pos;
 130:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     loff_t curr = 0;
 131:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if ((inode->i_mode & S_IFMT) != S_IFDIR)
 132:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -ENOTDIR;
 133:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 134:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_lock(&inode->lock);
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_for_each_entry(pos, &inode->dentry_list_head, list_node) {
 136:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
 137:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             continue;
 138:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 139:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (!dir_emit(ctx, pos->name, strlen(pos->name),
 140:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****                       curr,  // inode number ÂèØ‰∏∫ 0 Êàñ pos->target_inode->major
 141:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****                       (pos->target_inode->i_mode & S_IFDIR) ? DT_DIR : DT_REG)) {
 142:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             break;  // ÁºìÂÜ≤Âå∫Êª°‰∫Ü
 143:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 144:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         ctx->pos++;
 145:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 146:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_unlock(&inode->lock);
 147:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 148:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 149:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 150:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 151:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct file_operations initramfs_file_fops = {
 152:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .owner = THIS_MODULE,
 153:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .open = initramfs_open,
ARM GAS  /tmp/cczxpjuQ.s 			page 13


 154:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .release = initramfs_release,
 155:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .read  = initramfs_read,
 156:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .write = initramfs_write,
 157:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .iterate_shared = initramfs_iterate
 158:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** };
 159:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 160:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct initramfs_inode *initramfs_create_empty_inode(struct initramfs_superblock *sb,struct 
 161:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 162:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(fop == NULL) return NULL;
 163:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *initram_inode = kmalloc(sizeof(struct initramfs_inode),GFP_KERNEL);
 164:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(initram_inode == NULL) return NULL;
 165:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->magic = MAGIC;
 166:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->major = major;
 167:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->i_fop = fop;
 168:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->sb    = sb;
 169:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->i_mode = S_IFREG | 0755;
 170:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->i_page = NULL;
 171:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     atomic_set(&initram_inode->dentry_count,0);
 172:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_lock_init(&initram_inode->lock);
 173:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     INIT_LIST_HEAD(&initram_inode->list_node);
 174:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     INIT_LIST_HEAD(&initram_inode->dentry_list_head);
 175:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->mode = READABLE; //ÈªòËÆ§‰∏∫ÂèØÂÜôÔºåÂ¶ÇÊûúË¶ÅÊîπ‰∏∫Âè™ËØªÔºåËØ∑ÂêéÊúü‰øÆÊîπ
 176:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_lock(&sb->lock);
 177:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_add(&initram_inode->list_node,&sb->inode_list_head);
 178:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_unlock(&sb->lock);
 179:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return initram_inode;
 180:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 181:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 182:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static void initramfs_inode_put(struct initramfs_inode *node){
 183:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(node != NULL){
 184:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (node->i_page != NULL){
 185:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             put_page(node->i_page);
 186:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 187:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(node);
 188:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 189:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 190:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct initramfs_dentry* initramfs_create_dentry(struct initramfs_inode* parent_dentry_inode
 191:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 192:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(parent_dentry_inode == NULL || name == NULL || target_inode == NULL) return NULL;
 193:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 194:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* new_dentry =  kmalloc(sizeof(struct initramfs_dentry),GFP_KERNEL);
 195:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_dentry == NULL)return NULL;
 196:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     new_dentry->magic = MAGIC;
 197:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     new_dentry->name = NULL;
 198:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     new_dentry->name = kmalloc(strlen(name) + 1,GFP_KERNEL);
 199:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_dentry->name  == NULL) {
 200:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(new_dentry);
 201:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 202:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 203:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     strcpy(new_dentry->name,name);
 204:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     new_dentry->target_inode = target_inode;
 205:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     INIT_LIST_HEAD(&new_dentry->list_node);
 206:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 207:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     atomic_inc (&target_inode->dentry_count);      //Â¢ûÂä†ÂºïÁî®ËÆ°Êï∞
 208:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 209:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_lock   (&parent_dentry_inode->lock);
 210:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_add    (&new_dentry->list_node,&parent_dentry_inode->dentry_list_head);
ARM GAS  /tmp/cczxpjuQ.s 			page 14


 211:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_unlock(&parent_dentry_inode->lock);
 212:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return new_dentry;
 213:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 214:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct initramfs_dentry* initramfs_create_inode( struct initramfs_superblock *sb,struct init
 215:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 216:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode * new_inode = initramfs_create_empty_inode(sb,fop,major);
 217:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_inode == NULL){
 218:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 219:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }   
 220:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* new_dentry = initramfs_create_dentry(parent_dentry_inode,new_inode,nam
 221:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_dentry == NULL){
 222:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         spin_lock(&sb->lock);
 223:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         list_del(&new_inode->list_node);
 224:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         spin_unlock(&sb->lock);
 225:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         initramfs_inode_put(new_inode);
 226:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 227:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 228:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return new_dentry;
 229:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 230:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct initramfs_dentry* initramfs_create_file(struct initramfs_superblock *sb,struct initra
 231:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 232:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return initramfs_create_inode(sb,parent_dentry_inode,fop,major,name);
 233:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 234:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 235:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct initramfs_dentry* initramfs_create_dir(struct initramfs_superblock *sb,struct initram
 236:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 237:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* dentry =  initramfs_create_inode(sb,parent_dentry_inode,&initramfs_fil
 238:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry == NULL) return NULL;
 239:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->target_inode->i_mode = S_IFDIR | 0755;
 240:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return dentry;
 241:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 242:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static void dentry_put(struct initramfs_superblock *sb,struct initramfs_dentry* dentry)
 243:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 244:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry == NULL) return;
 245:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry->target_inode != NULL)
 246:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     {
 247:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         spin_lock(&sb->lock);
 248:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (atomic_dec_and_test(&dentry->target_inode->dentry_count)) //Ê£ÄÊµãinodeÂºïÁî®ËÆ°Êï∞ÊòØÂ
 249:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         {
 250:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             list_del(&dentry->target_inode->list_node);    
 251:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             initramfs_inode_put(dentry->target_inode);
 252:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 253:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         spin_unlock(&sb->lock);
 254:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 255:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     kfree(dentry->name);
 256:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     kfree(dentry);
 257:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 258:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static void initramfs_delete_dentry(struct initramfs_superblock *sb,struct initramfs_inode* parent_
 259:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(parent_dentry_inode != NULL) spin_lock(&parent_dentry_inode->lock);
 260:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 261:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if ((delete_dentry->target_inode->i_mode & S_IFMT) == S_IFDIR ){         //Â¶ÇÊûúÊòØÁõÆÂΩïÈ°πÈú
 262:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(!list_empty(&delete_dentry->target_inode->dentry_list_head)){      //Â¶ÇÊûúÁõÆÂΩï‰∏ãÁöÑi
 263:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             if(parent_dentry_inode != NULL) 
 264:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****                 spin_unlock(&parent_dentry_inode->lock);
 265:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             return;
 266:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 267:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
ARM GAS  /tmp/cczxpjuQ.s 			page 15


 268:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_del(&delete_dentry->list_node);                                     //Â∞Üdentry‰ªéÁà∂ÁõÆÂΩ
 269:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(parent_dentry_inode != NULL) spin_unlock(&parent_dentry_inode->lock);
 270:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry_put(sb,delete_dentry);
 271:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 272:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct initramfs_superblock* initramfs_superblock_create(void) //ÂàõÂª∫superblock
 273:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 274:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_superblock*d_sb = kmalloc(sizeof(struct initramfs_superblock),GFP_KERNEL);
 275:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(d_sb == NULL){
 276:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;        
 277:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 278:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     d_sb->magic = MAGIC;
 279:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_lock_init(&d_sb->lock);
 280:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     INIT_LIST_HEAD(&d_sb->inode_list_head);
 281:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode* root_inode = initramfs_create_empty_inode(d_sb ,&initramfs_file_fops,0)
 282:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(root_inode == NULL){
 283:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(d_sb);
 284:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 285:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 286:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     root_inode->i_mode = S_IFDIR | 0755;
 287:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     d_sb->rootinode = root_inode;
 288:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     root_inode->i_fop = &initramfs_file_fops;
 289:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     atomic_inc (&root_inode->dentry_count); 
 290:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     INIT_LIST_HEAD(&root_inode->dentry_list_head);
 291:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return d_sb;
 292:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** } 
 293:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static void initramfs_superblock_destory(struct initramfs_superblock* sb){
 294:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(sb!= NULL) {
 295:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         struct initramfs_inode * root_inode = sb->rootinode;
 296:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(!root_inode){
 297:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             kfree(root_inode);
 298:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 299:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(sb);
 300:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 301:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 302:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 303:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct initramfs_dentry* initramfs_lookup(struct initramfs_inode* dentry_inode,char *name)
 304:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 305:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry_inode == NULL) return NULL;
 306:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if ( (dentry_inode->i_mode & S_IFMT) != S_IFDIR ) return NULL;
 307:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* pos;
 308:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_lock(&dentry_inode->lock);
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_for_each_entry(pos, &dentry_inode->dentry_list_head,list_node ) {
 310:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
 311:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             spin_unlock(&dentry_inode->lock);
 312:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             return pos;
 313:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 314:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 315:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_unlock(&dentry_inode->lock);
 316:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return NULL;
 317:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 318:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 319:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 320:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 321:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct super_operations initramfs_super_operation;
 322:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct dentry_operations initramfs_dentry_operation;
 323:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct inode_operations initramfs_inode_operation;
 324:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
ARM GAS  /tmp/cczxpjuQ.s 			page 16


 325:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static void initramfs_kill_sb (struct super_block * sb);
 326:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct inode *initramfs_alloc_inode(struct super_block *sb);
 327:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static void  initramfs_destroy_inode(struct inode * node); //Êí§ÈîÄinitramfs_alloc_inodeÊâÄÂÅöÁöÑ‰∏
 328:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_statfs (struct dentry * dentry, struct kstatfs *star);
 329:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct dentry * initramfs_get_dentry(struct dentry * vdentry, struct initramfs_dentry *dentr
 330:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct super_block *initramfs_get_vfs_superblock(struct initramfs_superblock *sb);
 331:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct inode *  initramfs_get_inode(struct initramfs_inode *,struct super_block*);
 332:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct dentry *initramfs_mount(struct file_system_type *fs_type,
 333:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     int flags,
 334:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     const char *initram_name,
 335:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     void *data);
 336:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 337:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct file_system_type fs_type = {
 338:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .name     = "initramfs",
 339:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .fs_flags = 0,
 340:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .init_fs_context = NULL,
 341:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .kill_sb  = initramfs_kill_sb,
 342:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .mount    = initramfs_mount,
 343:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .owner    = THIS_MODULE,
 344:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** };
 345:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 346:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct dentry *initramfs_mount(struct file_system_type *fs_type,
 347:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     int flags,
 348:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     const char *initram_name,
 349:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     void *data)
 350:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 351:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_superblock *fs_superblock= initramfs_superblock_create();
 352:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (fs_superblock == NULL){
 353:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return ERR_PTR(-ENOMEM);        
 354:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 355:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct dentry * root = __d_alloc(NULL,"root");
 356:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(root == NULL){
 357:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****          initramfs_superblock_destory(fs_superblock);
 358:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return ERR_PTR(-ENOMEM);   
 359:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 360:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 361:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 362:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* dentry = kmalloc(sizeof(struct initramfs_dentry),GFP_KERNEL);
 363:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry == NULL){
 364:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****        
 365:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(root);
 366:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return ERR_PTR(-ENOMEM);        
 367:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 368:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->name = NULL;
 369:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->target_inode = fs_superblock->rootinode;
 370:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->magic =MAGIC;
 371:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     root->d_fsdata = dentry;
 372:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct inode * root_inode = initramfs_get_inode(dentry->target_inode,NULL);
 373:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(root_inode == NULL){
 374:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(dentry);
 375:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         initramfs_superblock_destory(fs_superblock);
 376:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(root);
 377:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return ERR_PTR(-ENOMEM);        
 378:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     } 
 379:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     root->d_inode = root_inode;
 380:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 381:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct super_block *sb =initramfs_get_vfs_superblock(fs_superblock);
ARM GAS  /tmp/cczxpjuQ.s 			page 17


 382:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(sb == NULL){
 383:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(root);
 384:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(dentry);
 385:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         inode_put(root_inode);
 386:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         initramfs_superblock_destory(fs_superblock);
 387:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return ERR_PTR(-ENOMEM);       
 388:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 389:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     sb->s_root = root;
 390:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     root->d_sb = sb;
 391:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 392:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return root;
 393:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 394:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 395:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 396:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 397:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct super_operations initramfs_super_operation = {
 398:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .alloc_inode   = initramfs_alloc_inode,
 399:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .destroy_inode = initramfs_destroy_inode, 
 400:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .free_inode    = NULL,         
 401:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .dirty_inode   = NULL,
 402:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .write_inode   = NULL,
 403:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .drop_inode    = NULL,
 404:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .put_super     = initramfs_kill_sb,
 405:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .sync_fs       = NULL,
 406:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .statfs        = initramfs_statfs,
 407:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** };
 408:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 409:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct super_block *initramfs_get_vfs_superblock(struct initramfs_superblock *sb) //Â∞ÜÊñá‰ª
 410:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 411:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(sb == NULL) return NULL;
 412:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct super_block * vsb  = alloc_super(NULL);                        //ÂàÜÈÖç‰∫Ü‰∏Ä‰∏™superblo
 413:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(vsb == NULL) return NULL;
 414:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     vsb->s_fs_info =   sb;
 415:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     vsb->s_d_op    =  &initramfs_dentry_operation;
 416:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     vsb->s_op      =  &initramfs_super_operation;    
 417:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return vsb;
 418:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 419:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 420:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 421:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static void initramfs_kill_sb (struct super_block * sb){                          //ÈáäÊîæÊñá‰ª∂Á≥ª
 422:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     put_super(sb);
 423:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 424:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 425:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct inode *  initramfs_get_inode(struct initramfs_inode * initram_node,struct super_block
 426:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 427:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(initram_node == NULL) return NULL;
 428:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct inode*inode  =  new_inode(sb); //Ê≠§Â§ÑÂä®ÊÄÅÂàõÂª∫‰∫Ü‰∏Ä‰∏™inode,ÈúÄË¶ÅÂêéÁª≠ÈáäÊîæ
 429:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(inode == NULL) return NULL;  
 430:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_mode    = initram_node->i_mode;
 431:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_fop     = initram_node->i_fop;
 432:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_op      = &initramfs_inode_operation;
 433:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_private = initram_node;
 434:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_size    = initram_node->size;
 435:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return inode;
 436:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 437:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 438:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct inode *initramfs_alloc_inode(struct super_block *sb) //ÂàõÂª∫‰∏Ä‰∏™inodeÔºåÂêåÊó∂ÂàõÂ
ARM GAS  /tmp/cczxpjuQ.s 			page 18


 439:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 440:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_superblock *supb = sb->s_fs_info;
 441:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(supb->magic != MAGIC) return NULL;
 442:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      struct initramfs_inode * inode = initramfs_create_empty_inode(supb,&initramfs_file_fops,10); /
 443:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      if(inode == NULL) return NULL;
 444:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      struct inode *out_inode = initramfs_get_inode(inode,sb);
 445:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      if(out_inode == NULL){
 446:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(inode);
 447:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 448:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      }
 449:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      return out_inode;
 450:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 451:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 452:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 453:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 454:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static void  initramfs_destroy_inode(struct inode * node) //Êí§ÈîÄinitramfs_alloc_inodeÊâÄÂÅöÁöÑ‰∏Ä
 455:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 456:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(node == NULL) return;
 457:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(node->i_private != NULL) {
 458:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         struct initramfs_inode * initram_node = node->i_private;
 459:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         list_del(&initram_node->list_node);
 460:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(initram_node);        
 461:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 462:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 463:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 464:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_statfs (struct dentry * dentry, struct kstatfs *star){
 209              		.loc 1 464 75 is_stmt 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 465:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry * initramfs_dentry = dentry->d_fsdata;
 214              		.loc 1 465 5 view .LVU32
 466:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode * initramfs_node = initramfs_dentry->target_inode;
 215              		.loc 1 466 5 view .LVU33
 467:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     star->f_type = MAGIC;
 216              		.loc 1 467 5 view .LVU34
 217              		.loc 1 467 18 is_stmt 0 view .LVU35
 218 0000 064B     		ldr	r3, .L13
 219 0002 0B60     		str	r3, [r1]
 220              	.LVL15:
 468:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     star->f_bsize  = 0;
 221              		.loc 1 468 5 is_stmt 1 view .LVU36
 222              		.loc 1 468 20 is_stmt 0 view .LVU37
 223 0004 0020     		movs	r0, #0
 224              	.LVL16:
 225              		.loc 1 468 20 view .LVU38
 226 0006 4860     		str	r0, [r1, #4]
 469:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     star->f_blocks = 1;
 227              		.loc 1 469 5 is_stmt 1 view .LVU39
 228              		.loc 1 469 20 is_stmt 0 view .LVU40
 229 0008 0123     		movs	r3, #1
 230 000a 8B60     		str	r3, [r1, #8]
 470:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     star->f_bfree  = 0;
 231              		.loc 1 470 5 is_stmt 1 view .LVU41
 232              		.loc 1 470 20 is_stmt 0 view .LVU42
 233 000c C860     		str	r0, [r1, #12]
ARM GAS  /tmp/cczxpjuQ.s 			page 19


 471:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     star->f_bavail = 0;
 234              		.loc 1 471 5 is_stmt 1 view .LVU43
 235              		.loc 1 471 20 is_stmt 0 view .LVU44
 236 000e 0861     		str	r0, [r1, #16]
 472:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     star->f_files  = 128;
 237              		.loc 1 472 5 is_stmt 1 view .LVU45
 238              		.loc 1 472 20 is_stmt 0 view .LVU46
 239 0010 8023     		movs	r3, #128
 240 0012 4B61     		str	r3, [r1, #20]
 473:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     star->f_ffree  = 127;
 241              		.loc 1 473 5 is_stmt 1 view .LVU47
 242              		.loc 1 473 20 is_stmt 0 view .LVU48
 243 0014 7F23     		movs	r3, #127
 244 0016 8B61     		str	r3, [r1, #24]
 474:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 245              		.loc 1 474 5 is_stmt 1 view .LVU49
 475:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 246              		.loc 1 475 1 is_stmt 0 view .LVU50
 247 0018 7047     		bx	lr
 248              	.L14:
 249 001a 00BF     		.align	2
 250              	.L13:
 251 001c 4E61BC00 		.word	12345678
 252              		.cfi_endproc
 253              	.LFE1058:
 255              		.section	.text.initramfs_get_dentry,"ax",%progbits
 256              		.align	1
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 261              	initramfs_get_dentry:
 262              	.LVL17:
 263              	.LFB1059:
 476:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 477:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 478:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 479:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_create(struct mnt_idmap * map, struct inode * dir,struct dentry * dentry,umode
 480:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct dentry *initramfs_vfs_lookup(struct inode *dir, struct dentry *dentry, unsigned int f
 481:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_link(struct dentry *old_dentry, struct inode *dir, struct dentry *dentry);
 482:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_unlink(struct inode *dir, struct dentry *dentry);
 483:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_mkdir(struct mnt_idmap *mnt, struct inode *dir, struct dentry *dentry, umode_t
 484:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_setattr(struct mnt_idmap *map, struct dentry *dentry, struct iattr *iattr);
 485:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int  initramfs_getattr (struct mnt_idmap *dmp, const struct path * path,struct kstat *stat, 
 486:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_rmdir(struct inode *	inode  ,struct dentry *dentry);
 487:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 488:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct inode_operations initramfs_inode_operation = {
 489:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .create = initramfs_create,
 490:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .lookup = initramfs_vfs_lookup,
 491:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .link   = initramfs_link,
 492:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .unlink = initramfs_unlink,
 493:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .mkdir  = initramfs_mkdir,
 494:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .rmdir  = initramfs_rmdir,
 495:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .setattr = initramfs_setattr,
 496:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .getattr = initramfs_getattr
 497:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** };
 498:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 499:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct dentry * initramfs_get_dentry(struct dentry * vdentry, struct initramfs_dentry *dentr
ARM GAS  /tmp/cczxpjuQ.s 			page 20


 500:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 264              		.loc 1 500 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 501:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry == NULL || vdentry == NULL) return NULL;
 269              		.loc 1 501 5 view .LVU52
 270              		.loc 1 501 7 is_stmt 0 view .LVU53
 271 0000 11B1     		cbz	r1, .L17
 272              		.loc 1 501 23 discriminator 2 view .LVU54
 273 0002 10B1     		cbz	r0, .L15
 502:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     vdentry->d_fsdata = dentry;
 274              		.loc 1 502 5 is_stmt 1 view .LVU55
 275              		.loc 1 502 23 is_stmt 0 view .LVU56
 276 0004 4165     		str	r1, [r0, #84]
 503:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return vdentry;
 277              		.loc 1 503 5 is_stmt 1 view .LVU57
 278              		.loc 1 503 12 is_stmt 0 view .LVU58
 279 0006 7047     		bx	lr
 280              	.L17:
 501:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry == NULL || vdentry == NULL) return NULL;
 281              		.loc 1 501 50 discriminator 3 view .LVU59
 282 0008 0846     		mov	r0, r1
 283              	.LVL18:
 284              	.L15:
 504:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 285              		.loc 1 504 1 view .LVU60
 286 000a 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE1059:
 290              		.section	.text.initramfs_setattr,"ax",%progbits
 291              		.align	1
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 296              	initramfs_setattr:
 297              	.LVL19:
 298              	.LFB1067:
 505:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 506:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 507:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_create(struct mnt_idmap * map, struct inode * dir,struct dentry * dentry,umode
 508:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 509:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     char *file_name = d_getname(dentry);
 510:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dinode = dir->i_private;
 511:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* file = initramfs_lookup(dinode,file_name);
 512:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(file == NULL){
 513:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         file =  initramfs_create_file(dinode->sb,dinode,&initramfs_file_fops,10,file_name);
 514:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 515:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (file == NULL){                               //Á°ÆÂÆöÊñá‰ª∂ÊòØÂê¶Ë¢´ÂàõÂª∫
 516:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -1;
 517:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 518:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     file->target_inode->i_mode = mode;
 519:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if( initramfs_get_dentry(dentry,file) == NULL){     //ÊûÑÂª∫dentry    
 520:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      return -1;
 521:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }    
 522:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct inode * new_file_inode = initramfs_get_inode(file->target_inode,dir->i_sb);
ARM GAS  /tmp/cczxpjuQ.s 			page 21


 523:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_file_inode == NULL)
 524:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -1;
 525:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 526:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     d_add(dentry,new_file_inode); //ÈÄöÁü•Êñá‰ª∂Á≥ªÁªüÂä†ÂÖ•ÁºìÂ≠òÔºåÂπ∂ËøõË°åËµÑÊ∫êÁªëÂÆö
 527:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 528:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** } 
 529:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 530:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct dentry *initramfs_vfs_lookup(struct inode *dir, struct dentry *dentry, unsigned int f
 531:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 532:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dir_inode = (struct initramfs_inode *)dir->i_private; //Ëé∑ÂèñÊñá‰ª∂Á≥ª
 533:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     char *name = dentry->d_name.name;                           
 534:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *pos;    
 535:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     pos = initramfs_lookup(dir_inode,name);       //Êü•ËØ¢Ëé∑Âæódentry
 536:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(pos == NULL) return NULL;
 537:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 538:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if( initramfs_get_dentry(dentry,pos) == NULL)
 539:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 540:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 541:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct inode * find_inode = initramfs_get_inode(pos->target_inode,dir->i_sb);
 542:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(find_inode == NULL)
 543:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 544:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 545:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return d_add(dentry,find_inode);
 546:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return NULL;
 547:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 548:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 549:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 550:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_link(struct dentry *old_dentry, struct inode *dir, struct dentry *dentry)
 551:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 552:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *old_inode = (struct initramfs_inode *)old_dentry->d_inode->i_private;
 553:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dir_inode = (struct initramfs_inode *)dir->i_private;
 554:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *new_dentry = initramfs_create_dentry(dir_inode, old_inode, dentry->d_n
 555:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (new_dentry == NULL) {
 556:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -ENOMEM;
 557:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 558:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initramfs_get_dentry(dentry,new_dentry);
 559:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->d_sb = dir->i_sb;
 560:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     d_add(dentry,dentry->d_inode);
 561:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 562:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 563:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 564:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_unlink(struct inode *dir, struct dentry *dentry)
 565:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 566:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *parent_inode = (struct initramfs_inode *)dir->i_private;
 567:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *delete_dentry = (struct initramfs_dentry *)dentry->d_fsdata;
 568:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initramfs_delete_dentry(parent_inode->sb, parent_inode, delete_dentry);
 569:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 570:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 571:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 572:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_mkdir(struct mnt_idmap *mnt, struct inode *dir, struct dentry *dentry, umode_t
 573:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 574:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     char *file_name = d_getname(dentry);
 575:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dinode = dir->i_private;
 576:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* file = initramfs_lookup(dinode,file_name);
 577:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(file == NULL){
 578:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         file =  initramfs_create_dir(dinode->sb,dinode,file_name);
 579:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
ARM GAS  /tmp/cczxpjuQ.s 			page 22


 580:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (file == NULL){                               //Á°ÆÂÆöÊñá‰ª∂ÊòØÂê¶Ë¢´ÂàõÂª∫
 581:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -1;
 582:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 583:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     file->target_inode->i_mode = S_IFREG | (mode & 0777);
 584:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 585:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if( initramfs_get_dentry(dentry,file) == NULL){     //ÊûÑÂª∫dentry    
 586:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      return -1;
 587:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }  
 588:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct inode * new_file_inode = initramfs_get_inode(dinode,dir->i_sb);
 589:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_file_inode == NULL)
 590:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -1;
 591:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 592:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     d_add(dentry,new_file_inode); //ÈÄöÁü•Êñá‰ª∂Á≥ªÁªüÂä†ÂÖ•ÁºìÂ≠òÔºåÂπ∂ËøõË°åËµÑÊ∫êÁªëÂÆö
 593:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****    return 0;
 594:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 595:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 596:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 597:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_release_dentry(struct dentry *dentry){
 598:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *fs_dentry = dentry->d_fsdata;
 599:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry_put(fs_dentry->target_inode->sb, fs_dentry);
 600:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 601:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_rmdir(struct inode *	dir  ,struct dentry *dentry){
 602:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initramfs_release_dentry(dentry);
 603:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return simple_unlink(dir,dentry);
 604:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 605:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 606:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_setattr(struct mnt_idmap *map, struct dentry *dentry, struct iattr *iattr)
 607:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 299              		.loc 1 607 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 608:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* file = dentry->d_fsdata;
 304              		.loc 1 608 5 view .LVU62
 305              		.loc 1 608 30 is_stmt 0 view .LVU63
 306 0000 4B6D     		ldr	r3, [r1, #84]
 307              	.LVL20:
 609:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     file->target_inode->i_mode = (iattr->ia_mode & S_IFMT) | iattr->ia_mode;
 308              		.loc 1 609 5 is_stmt 1 view .LVU64
 309              		.loc 1 609 40 is_stmt 0 view .LVU65
 310 0002 9288     		ldrh	r2, [r2, #4]
 311              	.LVL21:
 312              		.loc 1 609 9 view .LVU66
 313 0004 9B68     		ldr	r3, [r3, #8]
 314              	.LVL22:
 315              		.loc 1 609 32 view .LVU67
 316 0006 5A60     		str	r2, [r3, #4]
 317              	.LVL23:
 610:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 318              		.loc 1 610 5 is_stmt 1 view .LVU68
 611:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 319              		.loc 1 611 1 is_stmt 0 view .LVU69
 320 0008 0020     		movs	r0, #0
 321              	.LVL24:
 322              		.loc 1 611 1 view .LVU70
 323 000a 7047     		bx	lr
ARM GAS  /tmp/cczxpjuQ.s 			page 23


 324              		.cfi_endproc
 325              	.LFE1067:
 327              		.section	.text.__page_create,"ax",%progbits
 328              		.align	1
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 333              	__page_create:
 334              	.LVL25:
 335              	.LFB910:
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     struct page *page = (struct page *)kmalloc(sizeof(struct page), flags);
 336              		.loc 4 189 55 is_stmt 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     struct page *page = (struct page *)kmalloc(sizeof(struct page), flags);
 340              		.loc 4 189 55 is_stmt 0 view .LVU72
 341 0000 08B5     		push	{r3, lr}
 342              	.LCFI2:
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 3, -8
 345              		.cfi_offset 14, -4
 346 0002 0146     		mov	r1, r0
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page == NULL)
 347              		.loc 4 190 5 is_stmt 1 view .LVU73
 348              	.LVL26:
 349              	.LBB321:
 350              	.LBI321:
 351              		.file 5 "/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Written by Mark Hemment, 1996 (markhe@nextd.demon.co.uk).
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * (C) SGI 2006, Christoph Lameter
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * 	Cleaned up and restructured to ease the addition of alternative
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * 	implementations of SLAB allocators.
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * (C) Linux Foundation 2008-2013
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *      Unified interface for all slab allocators
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifndef _LINUX_SLAB_H
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define	_LINUX_SLAB_H
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/cache.h>
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/overflow.h>
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/types.h>
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/raid/pq.h>
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/gfp_types.h>
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/numa.h>
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/reciprocal_div.h>
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/spinlock.h>
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** enum _slab_flag_bits {
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CONSISTENCY_CHECKS,
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_RED_ZONE,
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_POISON,
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_KMALLOC,
ARM GAS  /tmp/cczxpjuQ.s 			page 24


  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_HWCACHE_ALIGN,
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CACHE_DMA,
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CACHE_DMA32,
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_STORE_USER,
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_PANIC,
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_TYPESAFE_BY_RCU,
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_TRACE,
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_DEBUG_OBJECTS
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_DEBUG_OBJECTS,
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NOLEAKTRACE,
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NO_MERGE,
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_FAILSLAB
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_FAILSLAB,
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_MEMCG
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_ACCOUNT,
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KASAN_GENERIC
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_KASAN,
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NO_USER_FLAGS,
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KFENCE
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_SKIP_KFENCE,
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifndef CONFIG_SLUB_TINY
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_RECLAIM_ACCOUNT,
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_OBJECT_POISON,
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CMPXCHG_DOUBLE,
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLAB_OBJ_EXT
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NO_OBJ_EXT,
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_FLAGS_LAST_BIT
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** };
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define __SLAB_FLAG_BIT(nr)	((slab_flags_t __force)(1U << (nr)))
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define __SLAB_FLAG_UNUSED	((slab_flags_t __force)(0U))
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Flags to pass to kmem_cache_create().
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * The ones marked DEBUG need CONFIG_SLUB_DEBUG enabled, otherwise are no-op
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Perform (expensive) checks on alloc/free */
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_CONSISTENCY_CHECKS	__SLAB_FLAG_BIT(_SLAB_CONSISTENCY_CHECKS)
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Red zone objs in a cache */
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_RED_ZONE		__SLAB_FLAG_BIT(_SLAB_RED_ZONE)
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Poison objects */
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_POISON		__SLAB_FLAG_BIT(_SLAB_POISON)
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Indicate a kmalloc slab */
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_KMALLOC		__SLAB_FLAG_BIT(_SLAB_KMALLOC)
  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_HWCACHE_ALIGN - Align objects on cache line boundaries.
  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Sufficiently large objects are aligned on cache line boundary. For object
ARM GAS  /tmp/cczxpjuQ.s 			page 25


  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * size smaller than a half of cache line size, the alignment is on the half of
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * cache line size. In general, if object size is smaller than 1/2^n of cache
  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * line size, the alignment is adjusted to 1/2^n.
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * If explicit alignment is also requested by the respective
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * &struct kmem_cache_args field, the greater of both is alignments is applied.
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_HWCACHE_ALIGN	__SLAB_FLAG_BIT(_SLAB_HWCACHE_ALIGN)
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Use GFP_DMA memory */
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_CACHE_DMA		__SLAB_FLAG_BIT(_SLAB_CACHE_DMA)
  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Use GFP_DMA32 memory */
  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_CACHE_DMA32	__SLAB_FLAG_BIT(_SLAB_CACHE_DMA32)
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Store the last owner for bug hunting */
  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_STORE_USER		__SLAB_FLAG_BIT(_SLAB_STORE_USER)
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Panic if kmem_cache_create() fails */
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_PANIC		__SLAB_FLAG_BIT(_SLAB_PANIC)
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_TYPESAFE_BY_RCU - **WARNING** READ THIS!
 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * This delays freeing the SLAB page by a grace period, it does _NOT_
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * delay object freeing. This means that if you do kmem_cache_free()
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * that memory location is free to be reused at any time. Thus it may
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * be possible to see another object there in the same RCU grace period.
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * This feature only ensures the memory location backing the object
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * stays valid, the trick to using this is relying on an independent
 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * object validation pass. Something like:
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * ::
 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *  begin:
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   rcu_read_lock();
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   obj = lockless_lookup(key);
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   if (obj) {
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *     if (!try_get_ref(obj)) // might fail for free objects
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       rcu_read_unlock();
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       goto begin;
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *     if (obj->key != key) { // not the object we expected
 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       put_ref(obj);
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       rcu_read_unlock();
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       goto begin;
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *     }
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   }
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *  rcu_read_unlock();
 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * This is useful if we need to approach a kernel structure obliquely,
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * from its address obtained without the usual locking. We can lock
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * the structure to stabilize it and check it's still at the given address,
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * only if we can be sure that the memory has not been meanwhile reused
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * for some other kind of object (which our subsystem's lock might corrupt).
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * rcu_read_lock before reading the address, then rcu_read_unlock after
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * taking the spinlock within the structure expected at that address.
 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Note that it is not possible to acquire a lock within a structure
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * allocated with SLAB_TYPESAFE_BY_RCU without first acquiring a reference
ARM GAS  /tmp/cczxpjuQ.s 			page 26


 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * as described above.  The reason is that SLAB_TYPESAFE_BY_RCU pages
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * are not zeroed before being given to the slab, which means that any
 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * locks must be initialized after each and every kmem_struct_alloc().
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Alternatively, make the ctor passed to kmem_cache_create() initialize
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * the locks at page-allocation time, as is done in __i915_request_ctor(),
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * sighand_ctor(), and anon_vma_ctor().  Such a ctor permits readers
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * to safely acquire those ctor-initialized locks under rcu_read_lock()
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * protection.
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Note that SLAB_TYPESAFE_BY_RCU was originally named SLAB_DESTROY_BY_RCU.
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_TYPESAFE_BY_RCU	__SLAB_FLAG_BIT(_SLAB_TYPESAFE_BY_RCU)
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Trace allocations and frees */
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_TRACE		__SLAB_FLAG_BIT(_SLAB_TRACE)
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Flag to prevent checks on free */
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_DEBUG_OBJECTS
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_DEBUG_OBJECTS	__SLAB_FLAG_BIT(_SLAB_DEBUG_OBJECTS)
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_DEBUG_OBJECTS	__SLAB_FLAG_UNUSED
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Avoid kmemleak tracing */
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NOLEAKTRACE	__SLAB_FLAG_BIT(_SLAB_NOLEAKTRACE)
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Prevent merging with compatible kmem caches. This flag should be used
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * cautiously. Valid use cases:
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * - caches created for self-tests (e.g. kunit)
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * - general caches created and used by a subsystem, only when a
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   (subsystem-specific) debug option is enabled
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * - performance critical caches, should be very rare and consulted with slab
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   maintainers, and not used together with CONFIG_SLUB_TINY
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_MERGE		__SLAB_FLAG_BIT(_SLAB_NO_MERGE)
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Fault injection mark */
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_FAILSLAB
 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_FAILSLAB		__SLAB_FLAG_BIT(_SLAB_FAILSLAB)
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_FAILSLAB		__SLAB_FLAG_UNUSED
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_ACCOUNT - Account allocations to memcg.
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * All object allocations from this cache will be memcg accounted, regardless of
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * __GFP_ACCOUNT being or not being passed to individual allocations.
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_MEMCG
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_ACCOUNT		__SLAB_FLAG_BIT(_SLAB_ACCOUNT)
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_ACCOUNT		__SLAB_FLAG_UNUSED
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KASAN_GENERIC
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_KASAN		__SLAB_FLAG_BIT(_SLAB_KASAN)
ARM GAS  /tmp/cczxpjuQ.s 			page 27


 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_KASAN		__SLAB_FLAG_UNUSED
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Ignore user specified debugging flags.
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Intended for caches created for self-tests so they have only flags
 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * specified in the code and other flags are ignored.
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_USER_FLAGS	__SLAB_FLAG_BIT(_SLAB_NO_USER_FLAGS)
 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KFENCE
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_SKIP_KFENCE	__SLAB_FLAG_BIT(_SLAB_SKIP_KFENCE)
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_SKIP_KFENCE	__SLAB_FLAG_UNUSED
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* The following flags affect the page allocator grouping pages by mobility */
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_RECLAIM_ACCOUNT - Objects are reclaimable.
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Use this flag for caches that have an associated shrinker. As a result, slab
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * pages are allocated with __GFP_RECLAIMABLE, which affects grouping pages by
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * mobility, and are accounted in SReclaimable counter in /proc/meminfo
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifndef CONFIG_SLUB_TINY
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_RECLAIM_ACCOUNT	__SLAB_FLAG_BIT(_SLAB_RECLAIM_ACCOUNT)
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_RECLAIM_ACCOUNT	__SLAB_FLAG_UNUSED
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_TEMPORARY		SLAB_RECLAIM_ACCOUNT	/* Objects are short-lived */
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Slab created using create_boot_cache */
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLAB_OBJ_EXT
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_OBJ_EXT		__SLAB_FLAG_BIT(_SLAB_NO_OBJ_EXT)
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_OBJ_EXT		__SLAB_FLAG_UNUSED
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * freeptr_t represents a SLUB freelist pointer, which might be encoded
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * and not dereferenceable if CONFIG_SLAB_FREELIST_HARDENED is enabled.
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** typedef struct { unsigned long v; } freeptr_t;
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * ZERO_SIZE_PTR will be returned for zero sized kmalloc requests.
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Dereferencing ZERO_SIZE_PTR will lead to a distinct access fault.
 249:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 250:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * ZERO_SIZE_PTR can be passed to kfree though in the same way that NULL can.
 251:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Both make kfree a no-op.
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define ZERO_SIZE_PTR ((void *)16)
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 255:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define ZERO_OR_NULL_PTR(x) ((unsigned long)(x) <= \
 256:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 				(unsigned long)ZERO_SIZE_PTR)
ARM GAS  /tmp/cczxpjuQ.s 			page 28


 257:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 261:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLUB_CPU_PARTIAL
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial(c)			((c)->partial)
 264:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_set_percpu_partial(c, p)		\
 266:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** ({						\
 267:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	slub_percpu_partial(c) = (p)->next;	\
 268:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** })
 269:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 270:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial_read_once(c)	READ_ONCE(slub_percpu_partial(c))
 271:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 272:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial(c)			NULL
 273:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 274:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_set_percpu_partial(c, p)
 275:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 276:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial_read_once(c)	NULL
 277:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 278:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 279:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif // CONFIG_SLUB_CPU_PARTIAL
 280:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 281:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 282:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	* Word size structure that can be atomically updated or read and that
 283:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	* contains both the order and the number of objects that a slab of the
 284:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	* given order would contain.
 285:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	*/				
 286:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** struct kmem_cache_order_objects {
 287:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	unsigned int x;
 288:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** };
 289:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 290:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** struct kmem_cache_node {
 291:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	spinlock_t list_lock;
 292:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	unsigned long nr_partial;
 293:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	struct list_head partial;
 294:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLUB_DEBUG
 295:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	atomic_long_t nr_slabs;
 296:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	atomic_long_t total_objects;
 297:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	struct list_head full;
 298:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 299:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** };
 300:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 301:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** struct kmem_cache {
 302:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifndef CONFIG_SLUB_TINY
 303:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	//	struct kmem_cache_cpu __percpu *cpu_slab;
 304:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 305:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Used for retrieving partial slabs, etc. */
 306:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		slab_flags_t flags;
 307:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned long min_partial;
 308:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int size;		/* Object size including metadata */
 309:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int object_size;	/* Object size without metadata */
 310:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct reciprocal_value reciprocal_size;
 311:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int offset;		/* Free pointer offset */
 312:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SLUB_CPU_PARTIAL
 313:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Number of per cpu partial objects to keep around */
ARM GAS  /tmp/cczxpjuQ.s 			page 29


 314:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int cpu_partial;
 315:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Number of per cpu partial slabs to keep around */
 316:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int cpu_partial_slabs;
 317:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 318:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kmem_cache_order_objects oo;
 319:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 320:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Allocation and freeing of slabs */
 321:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kmem_cache_order_objects min;
 322:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		gfp_t allocflags;		/* gfp flags to use on each alloc */
 323:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		int refcount;			/* Refcount for slab cache destroy */
 324:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		void (*ctor)(void *object);	/* Object constructor */
 325:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int inuse;		/* Offset to metadata */
 326:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int align;		/* Alignment */
 327:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int red_left_pad;	/* Left redzone padding size */
 328:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		const char *name;		/* Name (only for display!) */
 329:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct list_head list;		/* List of slab caches */
 330:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SYSFS
 331:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kobject kobj;		/* For sysfs */
 332:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 333:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SLAB_FREELIST_HARDENED
 334:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned long random;
 335:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 336:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 337:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_NUMA
 338:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/*
 339:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 			* Defragmentation by allocating from a remote node.
 340:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 			*/
 341:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int remote_node_defrag_ratio;
 342:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 343:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 344:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SLAB_FREELIST_RANDOM
 345:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int *random_seq;
 346:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 347:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 348:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_KASAN_GENERIC
 349:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kasan_cache kasan_info;
 350:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 351:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 352:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_HARDENED_USERCOPY
 353:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int useroffset;	/* Usercopy region offset */
 354:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int usersize;		/* Usercopy region size */
 355:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 356:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 357:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kmem_cache_node *node[MAX_NUMNODES];
 358:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	};
 359:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 					
 360:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 361:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 362:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 363:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 364:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define KMALLOC_WAIT 1
 365:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 366:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 367:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** extern void* __smalloc__(u32 size, gfp_t flags);
 368:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** extern void  __sfree__(void* addr);
 369:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 370:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
ARM GAS  /tmp/cczxpjuQ.s 			page 30


 371:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline *vmalloc(unsigned long size){
 372:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__(size,GFP_TRANSHUGE_LIGHT);
 373:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 374:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 375:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline vfree(void *addr){
 376:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__(addr);
 377:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 378:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline *kmalloc(size_t size, gfp_t flags){
 352              		.loc 5 379 21 view .LVU74
 353              	.LBB322:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 354              		.loc 5 380 2 view .LVU75
 355              		.loc 5 380 9 is_stmt 0 view .LVU76
 356 0004 2020     		movs	r0, #32
 357              	.LVL27:
 358              		.loc 5 380 9 view .LVU77
 359 0006 FFF7FEFF 		bl	__smalloc__
 360              	.LVL28:
 361              		.loc 5 380 9 view .LVU78
 362              	.LBE322:
 363              	.LBE321:
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         return NULL;
 364              		.loc 4 191 5 is_stmt 1 view .LVU79
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         return NULL;
 365              		.loc 4 191 8 is_stmt 0 view .LVU80
 366 000a 0346     		mov	r3, r0
 367 000c 20B1     		cbz	r0, .L20
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     atomic_set(&page->_mapcount, 0);
 368              		.loc 4 193 5 is_stmt 1 view .LVU81
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     atomic_set(&page->_mapcount, 0);
 369              		.loc 4 193 17 is_stmt 0 view .LVU82
 370 000e 0022     		movs	r2, #0
 371 0010 0260     		str	r2, [r0]
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     atomic_set(&page->_refcount, 0); 
 372              		.loc 4 194 5 is_stmt 1 view .LVU83
 373              	.LVL29:
 374              	.LBB323:
 375              	.LBI323:
 376              		.file 6 "/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** // SPDX-License-Identifier: GPL-2.0
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** // Generated by scripts/atomic/gen-atomic-instrumented.sh 
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** // DO NOT MODIFY THIS FILE DIRECTLY
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /*
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * This file provoides atomic operations with explicit instrumentation (e.g.
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * KASAN, KCSAN), which should be used unless it is necessary to avoid
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * instrumentation. Where it is necessary to aovid instrumenation, the
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * raw_atomic*() operations should be used.
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** #ifndef _LINUX_ATOMIC_INSTRUMENTED_H
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** #define _LINUX_ATOMIC_INSTRUMENTED_H
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** #include <linux/build_bug.h>
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** #include <linux/compiler.h>
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** #include <linux/instrumented.h>
ARM GAS  /tmp/cczxpjuQ.s 			page 31


  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_read() - atomic load with relaxed ordering
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically loads the value of @v with relaxed ordering.
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_read() there.
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The value loaded from @v.
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_read(const atomic_t *v)
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read(v, sizeof(*v));
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_read(v);
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_read_acquire() - atomic load with acquire ordering
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically loads the value of @v with acquire ordering.
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_read_acquire() there.
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The value loaded from @v.
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_read_acquire(const atomic_t *v)
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read(v, sizeof(*v));
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_read_acquire(v);
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_set() - atomic set with relaxed ordering
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to assign
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically sets @v to @i with relaxed ordering.
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_set() there.
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_set(atomic_t *v, int i)
 377              		.loc 6 65 1 view .LVU84
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_write(v, sizeof(*v));
 378              		.loc 6 67 2 view .LVU85
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_set(v, i);
 379              		.loc 6 68 2 view .LVU86
 380              	.LBB324:
 381              	.LBI324:
 382              		.file 7 "/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h"
ARM GAS  /tmp/cczxpjuQ.s 			page 32


   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** // SPDX-License-Identifier: GPL-2.0
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** // Generated by scripts/atomic/gen-atomic-fallback.sh
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** // DO NOT MODIFY THIS FILE DIRECTLY
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #ifndef _LINUX_ATOMIC_FALLBACK_H
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define _LINUX_ATOMIC_FALLBACK_H
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #include <linux/compiler.h>
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_xchg)
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg arch_xchg
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_xchg_relaxed)
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg(...) \
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_xchg, __VA_ARGS__)
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_xchg_not_implemented(void);
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg(...) raw_xchg_not_implemented()
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_xchg_acquire)
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_acquire arch_xchg_acquire
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_xchg_relaxed)
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_acquire(...) \
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_xchg, __VA_ARGS__)
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_xchg)
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_acquire arch_xchg
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_xchg_acquire_not_implemented(void);
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_acquire(...) raw_xchg_acquire_not_implemented()
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_xchg_release)
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_release arch_xchg_release
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_xchg_relaxed)
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_release(...) \
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_xchg, __VA_ARGS__)
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_xchg)
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_release arch_xchg
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_xchg_release_not_implemented(void);
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_release(...) raw_xchg_release_not_implemented()
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_xchg_relaxed)
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_relaxed arch_xchg_relaxed
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_xchg)
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_relaxed arch_xchg
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_xchg_relaxed_not_implemented(void);
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_relaxed(...) raw_xchg_relaxed_not_implemented()
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg)
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg arch_cmpxchg
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg_relaxed)
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg(...) \
ARM GAS  /tmp/cczxpjuQ.s 			page 33


  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_cmpxchg, __VA_ARGS__)
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg_not_implemented(void);
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg(...) raw_cmpxchg_not_implemented()
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg_acquire)
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_acquire arch_cmpxchg_acquire
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg_relaxed)
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_acquire(...) \
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_cmpxchg, __VA_ARGS__)
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg)
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_acquire arch_cmpxchg
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg_acquire_not_implemented(void);
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_acquire(...) raw_cmpxchg_acquire_not_implemented()
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg_release)
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_release arch_cmpxchg_release
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg_relaxed)
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_release(...) \
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_cmpxchg, __VA_ARGS__)
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg)
  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_release arch_cmpxchg
  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg_release_not_implemented(void);
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_release(...) raw_cmpxchg_release_not_implemented()
  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg_relaxed)
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_relaxed arch_cmpxchg_relaxed
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg)
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_relaxed arch_cmpxchg
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg_relaxed_not_implemented(void);
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_relaxed(...) raw_cmpxchg_relaxed_not_implemented()
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg64)
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64 arch_cmpxchg64
  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg64_relaxed)
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64(...) \
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_cmpxchg64, __VA_ARGS__)
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg64_not_implemented(void);
 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64(...) raw_cmpxchg64_not_implemented()
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg64_acquire)
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_acquire arch_cmpxchg64_acquire
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg64_relaxed)
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_acquire(...) \
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_cmpxchg64, __VA_ARGS__)
 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg64)
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_acquire arch_cmpxchg64
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
ARM GAS  /tmp/cczxpjuQ.s 			page 34


 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg64_acquire_not_implemented(void);
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_acquire(...) raw_cmpxchg64_acquire_not_implemented()
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg64_release)
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_release arch_cmpxchg64_release
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg64_relaxed)
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_release(...) \
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_cmpxchg64, __VA_ARGS__)
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg64)
 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_release arch_cmpxchg64
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg64_release_not_implemented(void);
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_release(...) raw_cmpxchg64_release_not_implemented()
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg64_relaxed)
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_relaxed arch_cmpxchg64_relaxed
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg64)
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_relaxed arch_cmpxchg64
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg64_relaxed_not_implemented(void);
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_relaxed(...) raw_cmpxchg64_relaxed_not_implemented()
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg128)
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128 arch_cmpxchg128
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg128_relaxed)
 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128(...) \
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_cmpxchg128, __VA_ARGS__)
 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg128_not_implemented(void);
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128(...) raw_cmpxchg128_not_implemented()
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg128_acquire)
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_acquire arch_cmpxchg128_acquire
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg128_relaxed)
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_acquire(...) \
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_cmpxchg128, __VA_ARGS__)
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg128)
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_acquire arch_cmpxchg128
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg128_acquire_not_implemented(void);
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_acquire(...) raw_cmpxchg128_acquire_not_implemented()
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg128_release)
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_release arch_cmpxchg128_release
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg128_relaxed)
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_release(...) \
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_cmpxchg128, __VA_ARGS__)
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg128)
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_release arch_cmpxchg128
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg128_release_not_implemented(void);
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_release(...) raw_cmpxchg128_release_not_implemented()
ARM GAS  /tmp/cczxpjuQ.s 			page 35


 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg128_relaxed)
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_relaxed arch_cmpxchg128_relaxed
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg128)
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_relaxed arch_cmpxchg128
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg128_relaxed_not_implemented(void);
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_relaxed(...) raw_cmpxchg128_relaxed_not_implemented()
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg)
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg arch_try_cmpxchg
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg_relaxed)
 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg(...) \
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_try_cmpxchg, __VA_ARGS__)
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg(_ptr, _oldp, _new) \
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg((_ptr), ___o, (_new)); \
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg_acquire)
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_acquire arch_try_cmpxchg_acquire
 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg_relaxed)
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_acquire(...) \
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_try_cmpxchg, __VA_ARGS__)
 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg)
 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_acquire arch_try_cmpxchg
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_acquire(_ptr, _oldp, _new) \
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg_acquire((_ptr), ___o, (_new)); \
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg_release)
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_release arch_try_cmpxchg_release
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg_relaxed)
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_release(...) \
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_try_cmpxchg, __VA_ARGS__)
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg)
ARM GAS  /tmp/cczxpjuQ.s 			page 36


 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_release arch_try_cmpxchg
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_release(_ptr, _oldp, _new) \
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg_release((_ptr), ___o, (_new)); \
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg_relaxed)
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_relaxed arch_try_cmpxchg_relaxed
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg)
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_relaxed arch_try_cmpxchg
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_relaxed(_ptr, _oldp, _new) \
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 249:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg_relaxed((_ptr), ___o, (_new)); \
 250:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 251:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 255:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 256:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg64)
 257:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64 arch_try_cmpxchg64
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg64_relaxed)
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64(...) \
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_try_cmpxchg64, __VA_ARGS__)
 261:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64(_ptr, _oldp, _new) \
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 264:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg64((_ptr), ___o, (_new)); \
 266:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 267:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 268:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 269:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 270:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 271:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 272:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg64_acquire)
 273:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_acquire arch_try_cmpxchg64_acquire
 274:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg64_relaxed)
 275:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_acquire(...) \
 276:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_try_cmpxchg64, __VA_ARGS__)
 277:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg64)
 278:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_acquire arch_try_cmpxchg64
 279:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 280:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_acquire(_ptr, _oldp, _new) \
 281:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 282:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 283:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg64_acquire((_ptr), ___o, (_new)); \
 284:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 285:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
ARM GAS  /tmp/cczxpjuQ.s 			page 37


 286:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 287:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 288:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 289:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 290:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg64_release)
 291:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_release arch_try_cmpxchg64_release
 292:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg64_relaxed)
 293:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_release(...) \
 294:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_try_cmpxchg64, __VA_ARGS__)
 295:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg64)
 296:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_release arch_try_cmpxchg64
 297:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 298:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_release(_ptr, _oldp, _new) \
 299:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 300:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 301:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg64_release((_ptr), ___o, (_new)); \
 302:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 303:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 304:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 305:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 306:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 307:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 308:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg64_relaxed)
 309:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_relaxed arch_try_cmpxchg64_relaxed
 310:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg64)
 311:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_relaxed arch_try_cmpxchg64
 312:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 313:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_relaxed(_ptr, _oldp, _new) \
 314:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 315:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 316:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg64_relaxed((_ptr), ___o, (_new)); \
 317:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 318:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 319:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 320:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 321:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 322:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 323:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg128)
 324:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128 arch_try_cmpxchg128
 325:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg128_relaxed)
 326:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128(...) \
 327:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_try_cmpxchg128, __VA_ARGS__)
 328:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 329:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128(_ptr, _oldp, _new) \
 330:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 331:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 332:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg128((_ptr), ___o, (_new)); \
 333:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 334:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 335:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 336:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 337:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 338:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 339:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg128_acquire)
 340:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_acquire arch_try_cmpxchg128_acquire
 341:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg128_relaxed)
 342:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_acquire(...) \
ARM GAS  /tmp/cczxpjuQ.s 			page 38


 343:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_try_cmpxchg128, __VA_ARGS__)
 344:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg128)
 345:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_acquire arch_try_cmpxchg128
 346:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 347:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_acquire(_ptr, _oldp, _new) \
 348:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 349:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 350:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg128_acquire((_ptr), ___o, (_new)); \
 351:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 352:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 353:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 354:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 355:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 356:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 357:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg128_release)
 358:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_release arch_try_cmpxchg128_release
 359:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg128_relaxed)
 360:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_release(...) \
 361:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_try_cmpxchg128, __VA_ARGS__)
 362:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg128)
 363:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_release arch_try_cmpxchg128
 364:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 365:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_release(_ptr, _oldp, _new) \
 366:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 367:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 368:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg128_release((_ptr), ___o, (_new)); \
 369:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 370:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 371:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 372:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 373:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 374:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 375:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg128_relaxed)
 376:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_relaxed arch_try_cmpxchg128_relaxed
 377:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg128)
 378:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_relaxed arch_try_cmpxchg128
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_relaxed(_ptr, _oldp, _new) \
 381:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 382:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg128_relaxed((_ptr), ___o, (_new)); \
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 385:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 386:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 387:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 388:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 389:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 390:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_local arch_cmpxchg_local
 391:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 392:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #ifdef arch_try_cmpxchg_local
 393:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_local arch_try_cmpxchg_local
 394:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 395:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_local(_ptr, _oldp, _new) \
 396:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 397:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 398:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg_local((_ptr), ___o, (_new)); \
 399:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
ARM GAS  /tmp/cczxpjuQ.s 			page 39


 400:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 401:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 402:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 403:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 404:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 405:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_local arch_cmpxchg64_local
 406:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 407:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #ifdef arch_try_cmpxchg64_local
 408:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_local arch_try_cmpxchg64_local
 409:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 410:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_local(_ptr, _oldp, _new) \
 411:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 412:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 413:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg64_local((_ptr), ___o, (_new)); \
 414:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 415:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 416:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 417:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 418:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 419:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 420:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_local arch_cmpxchg128_local
 421:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 422:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #ifdef arch_try_cmpxchg128_local
 423:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_local arch_try_cmpxchg128_local
 424:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 425:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_local(_ptr, _oldp, _new) \
 426:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 427:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 428:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg128_local((_ptr), ___o, (_new)); \
 429:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 430:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 431:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 432:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 433:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 434:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 435:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_sync_cmpxchg arch_sync_cmpxchg
 436:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 437:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #ifdef arch_sync_try_cmpxchg
 438:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_sync_try_cmpxchg arch_sync_try_cmpxchg
 439:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 440:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_sync_try_cmpxchg(_ptr, _oldp, _new) \
 441:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 442:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 443:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_sync_cmpxchg((_ptr), ___o, (_new)); \
 444:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 445:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 446:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 447:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 448:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 449:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 450:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 451:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_read() - atomic load with relaxed ordering
 452:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 453:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 454:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically loads the value of @v with relaxed ordering.
 455:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 456:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_read() elsewhere.
ARM GAS  /tmp/cczxpjuQ.s 			page 40


 457:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 458:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The value loaded from @v.
 459:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 460:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 461:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_read(const atomic_t *v)
 462:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_read(v);
 464:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 465:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 466:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 467:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_read_acquire() - atomic load with acquire ordering
 468:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 469:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 470:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically loads the value of @v with acquire ordering.
 471:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 472:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_read_acquire() elsewhere.
 473:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 474:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The value loaded from @v.
 475:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 476:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 477:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_read_acquire(const atomic_t *v)
 478:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 479:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_read_acquire)
 480:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_read_acquire(v);
 481:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 482:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
 483:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 484:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (__native_word(atomic_t)) {
 485:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		ret = smp_load_acquire(&(v)->counter);
 486:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	} else {
 487:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		ret = raw_atomic_read(v);
 488:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		__atomic_acquire_fence();
 489:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	}
 490:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 491:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 492:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 493:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 494:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 495:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 496:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_set() - atomic set with relaxed ordering
 497:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 498:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to assign
 499:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 500:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically sets @v to @i with relaxed ordering.
 501:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 502:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_set() elsewhere.
 503:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 504:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
 505:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 506:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
 507:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_set(atomic_t *v, int i)
 383              		.loc 7 507 1 view .LVU87
 384              	.LBB325:
 508:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 509:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_set(v, i);
 385              		.loc 7 509 2 view .LVU88
 386              		.loc 7 509 2 view .LVU89
ARM GAS  /tmp/cczxpjuQ.s 			page 41


 387              	.LBB326:
 388              		.loc 7 509 2 view .LVU90
 389              		.loc 7 509 2 view .LVU91
 390              	.LBE326:
 391              		.loc 7 509 2 discriminator 2 view .LVU92
 392              		.loc 7 509 2 discriminator 2 view .LVU93
 393              		.loc 7 509 2 discriminator 2 view .LVU94
 394 0012 8261     		str	r2, [r0, #24]
 395              		.loc 7 509 2 discriminator 2 view .LVU95
 396              		.loc 7 509 2 discriminator 2 view .LVU96
 397              	.LVL30:
 398              		.loc 7 509 2 is_stmt 0 discriminator 2 view .LVU97
 399              	.LBE325:
 400              	.LBE324:
 401              	.LBE323:
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     page->zone_device_data = NULL;
 402              		.loc 4 195 5 is_stmt 1 view .LVU98
 403              	.LBB327:
 404              	.LBI327:
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 405              		.loc 6 65 1 view .LVU99
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_set(v, i);
 406              		.loc 6 67 2 view .LVU100
 407              		.loc 6 68 2 view .LVU101
 408              	.LBB328:
 409              	.LBI328:
 507:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 410              		.loc 7 507 1 view .LVU102
 411              	.LBB329:
 412              		.loc 7 509 2 view .LVU103
 413              		.loc 7 509 2 view .LVU104
 414              	.LBB330:
 415              		.loc 7 509 2 view .LVU105
 416              		.loc 7 509 2 view .LVU106
 417              	.LBE330:
 418              		.loc 7 509 2 discriminator 2 view .LVU107
 419              		.loc 7 509 2 discriminator 2 view .LVU108
 420              		.loc 7 509 2 discriminator 2 view .LVU109
 421 0014 C261     		str	r2, [r0, #28]
 422              		.loc 7 509 2 discriminator 2 view .LVU110
 423              		.loc 7 509 2 discriminator 2 view .LVU111
 424              	.LVL31:
 425              		.loc 7 509 2 is_stmt 0 discriminator 2 view .LVU112
 426              	.LBE329:
 427              	.LBE328:
 428              	.LBE327:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     return page;
 429              		.loc 4 196 5 is_stmt 1 view .LVU113
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     return page;
 430              		.loc 4 196 28 is_stmt 0 view .LVU114
 431 0016 4260     		str	r2, [r0, #4]
 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 432              		.loc 4 197 5 is_stmt 1 view .LVU115
 433              	.L20:
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline void __page_destroy(struct page *page){
 434              		.loc 4 198 1 is_stmt 0 view .LVU116
 435 0018 1846     		mov	r0, r3
ARM GAS  /tmp/cczxpjuQ.s 			page 42


 436              	.LVL32:
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline void __page_destroy(struct page *page){
 437              		.loc 4 198 1 view .LVU117
 438 001a 08BD     		pop	{r3, pc}
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** static inline void __page_destroy(struct page *page){
 439              		.loc 4 198 1 view .LVU118
 440              		.cfi_endproc
 441              	.LFE910:
 443              		.section	.init.text,"ax",%progbits
 444              		.align	1
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 449              	initramfs_ops_init:
 450              	.LFB1069:
 612:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int  initramfs_getattr (struct mnt_idmap *dmp, const struct path * path,struct kstat *stat, 
 613:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** {
 614:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct dentry *d = path->dentry;
 615:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* file = d->d_fsdata;
 616:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *inode;
 617:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 618:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (!file || !(inode = file->target_inode))
 619:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return -ENOENT;
 620:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->mode = inode->i_mode;
 621:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->dev  = MKDEV(inode->major, 0);
 622:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->ino  = (unsigned long)inode;  
 623:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->nlink = atomic_read(&inode->dentry_count);
 624:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->size  = 0; 
 625:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->atime.tv_nsec = jiffies/HZ;
 626:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->atime.tv_sec  = jiffies%HZ;
 627:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->mtime = stat->atime;
 628:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->ctime = stat->atime;
 629:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->blksize = PAGE_SIZE;
 630:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->blocks  = 0;
 631:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 632:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 633:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 634:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct dentry_operations initramfs_dentry_operation = {
 635:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     .d_release = initramfs_release_dentry,
 636:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** };
 637:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** \
 638:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 639:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 640:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 641:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 642:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int __init initramfs_ops_init(void){
 451              		.loc 1 642 43 is_stmt 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455 0000 08B5     		push	{r3, lr}
 456              	.LCFI3:
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 3, -8
 459              		.cfi_offset 14, -4
 643:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     register_filesystem(&fs_type);
 460              		.loc 1 643 5 view .LVU120
ARM GAS  /tmp/cczxpjuQ.s 			page 43


 461 0002 0248     		ldr	r0, .L25
 462 0004 FFF7FEFF 		bl	register_filesystem
 463              	.LVL33:
 644:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 464              		.loc 1 644 5 view .LVU121
 645:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 465              		.loc 1 645 1 is_stmt 0 view .LVU122
 466 0008 0020     		movs	r0, #0
 467 000a 08BD     		pop	{r3, pc}
 468              	.L26:
 469              		.align	2
 470              	.L25:
 471 000c 00000000 		.word	fs_type
 472              		.cfi_endproc
 473              	.LFE1069:
 475              		.section	.text.initramfs_kill_sb,"ax",%progbits
 476              		.align	1
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 481              	initramfs_kill_sb:
 482              	.LVL34:
 483              	.LFB1054:
 421:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     put_super(sb);
 484              		.loc 1 421 56 is_stmt 1 view -0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 421:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     put_super(sb);
 488              		.loc 1 421 56 is_stmt 0 view .LVU124
 489 0000 08B5     		push	{r3, lr}
 490              	.LCFI4:
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 3, -8
 493              		.cfi_offset 14, -4
 422:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 494              		.loc 1 422 5 is_stmt 1 view .LVU125
 495 0002 FFF7FEFF 		bl	put_super
 496              	.LVL35:
 423:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 497              		.loc 1 423 1 is_stmt 0 view .LVU126
 498 0006 08BD     		pop	{r3, pc}
 499              		.cfi_endproc
 500              	.LFE1054:
 502              		.section	.text.__spin_lock,"ax",%progbits
 503              		.align	1
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 508              	__spin_lock:
 509              	.LVL36:
 510              	.LFB851:
  15:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
 511              		.loc 2 15 47 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cczxpjuQ.s 			page 44


  15:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
 515              		.loc 2 15 47 is_stmt 0 view .LVU128
 516 0000 38B5     		push	{r3, r4, r5, lr}
 517              	.LCFI5:
 518              		.cfi_def_cfa_offset 16
 519              		.cfi_offset 3, -16
 520              		.cfi_offset 4, -12
 521              		.cfi_offset 5, -8
 522              		.cfi_offset 14, -4
 523 0002 0446     		mov	r4, r0
  17:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     if(lock->flag == 0){
 524              		.loc 2 17 5 is_stmt 1 view .LVU129
 525 0004 FFF7FEFF 		bl	stop_all_scheduler
 526              	.LVL37:
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 527              		.loc 2 18 5 view .LVU130
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 528              		.loc 2 18 12 is_stmt 0 view .LVU131
 529 0008 2368     		ldr	r3, [r4]
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 530              		.loc 2 18 7 view .LVU132
 531 000a 2BB9     		cbnz	r3, .L30
  19:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
 532              		.loc 2 19 11 is_stmt 1 view .LVU133
  19:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
 533              		.loc 2 19 22 is_stmt 0 view .LVU134
 534 000c 0125     		movs	r5, #1
 535 000e 2560     		str	r5, [r4]
  20:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         return 1;
 536              		.loc 2 20 11 is_stmt 1 view .LVU135
 537 0010 FFF7FEFF 		bl	start_all_scheduler
 538              	.LVL38:
  21:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
 539              		.loc 2 21 9 view .LVU136
  21:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
 540              		.loc 2 21 16 is_stmt 0 view .LVU137
 541 0014 2846     		mov	r0, r5
 542              	.L29:
  28:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
 543              		.loc 2 28 1 view .LVU138
 544 0016 38BD     		pop	{r3, r4, r5, pc}
 545              	.LVL39:
 546              	.L30:
  25:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         return 0;
 547              		.loc 2 25 9 is_stmt 1 view .LVU139
 548 0018 FFF7FEFF 		bl	start_all_scheduler
 549              	.LVL40:
  26:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
 550              		.loc 2 26 9 view .LVU140
  26:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
 551              		.loc 2 26 16 is_stmt 0 view .LVU141
 552 001c 0020     		movs	r0, #0
 553 001e FAE7     		b	.L29
 554              		.cfi_endproc
 555              	.LFE851:
 557              		.section	.text.spin_lock,"ax",%progbits
 558              		.align	1
ARM GAS  /tmp/cczxpjuQ.s 			page 45


 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 563              	spin_lock:
 564              	.LVL41:
 565              	.LFB854:
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     while (1)
 566              		.loc 3 15 1 is_stmt 1 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     while (1)
 570              		.loc 3 15 1 is_stmt 0 view .LVU143
 571 0000 38B5     		push	{r3, r4, r5, lr}
 572              	.LCFI6:
 573              		.cfi_def_cfa_offset 16
 574              		.cfi_offset 3, -16
 575              		.cfi_offset 4, -12
 576              		.cfi_offset 5, -8
 577              		.cfi_offset 14, -4
 578 0002 0446     		mov	r4, r0
 579 0004 06E0     		b	.L36
 580              	.LVL42:
 581              	.L38:
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             break;
 582              		.loc 3 19 13 is_stmt 1 view .LVU144
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             break;
 583              		.loc 3 19 27 is_stmt 0 view .LVU145
 584 0006 FFF7FEFF 		bl	get_current_task
 585              	.LVL43:
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             break;
 586              		.loc 3 19 25 discriminator 1 view .LVU146
 587 000a 2060     		str	r0, [r4]
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
 588              		.loc 3 20 13 is_stmt 1 view .LVU147
 589              	.L33:
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
 590              		.loc 3 29 1 is_stmt 0 view .LVU148
 591 000c 38BD     		pop	{r3, r4, r5, pc}
 592              	.LVL44:
 593              	.L39:
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
 594              		.loc 3 26 13 is_stmt 1 view .LVU149
 595 000e 0520     		movs	r0, #5
 596 0010 FFF7FEFF 		bl	__delay
 597              	.LVL45:
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     {
 598              		.loc 3 16 11 view .LVU150
 599              	.L36:
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     {
 600              		.loc 3 16 5 view .LVU151
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             lock->owner = get_current_task();
 601              		.loc 3 18 9 view .LVU152
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             lock->owner = get_current_task();
 602              		.loc 3 18 12 is_stmt 0 view .LVU153
 603 0014 2046     		mov	r0, r4
 604 0016 FFF7FEFF 		bl	__spin_lock
ARM GAS  /tmp/cczxpjuQ.s 			page 46


 605              	.LVL46:
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             lock->owner = get_current_task();
 606              		.loc 3 18 11 discriminator 1 view .LVU154
 607 001a 0128     		cmp	r0, #1
 608 001c F3D0     		beq	.L38
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
 609              		.loc 3 22 15 is_stmt 1 view .LVU155
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
 610              		.loc 3 22 22 is_stmt 0 view .LVU156
 611 001e 2568     		ldr	r5, [r4]
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
 612              		.loc 3 22 33 view .LVU157
 613 0020 FFF7FEFF 		bl	get_current_task
 614              	.LVL47:
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
 615              		.loc 3 22 17 discriminator 1 view .LVU158
 616 0024 8542     		cmp	r5, r0
 617 0026 F2D1     		bne	.L39
 618 0028 F0E7     		b	.L33
 619              		.cfi_endproc
 620              	.LFE854:
 622              		.section	.text.initramfs_iterate,"ax",%progbits
 623              		.align	1
 624              		.syntax unified
 625              		.thumb
 626              		.thumb_func
 628              	initramfs_iterate:
 629              	.LVL48:
 630              	.LFB1040:
 127:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *inode = file->private_data;
 631              		.loc 1 127 1 is_stmt 1 view -0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 8
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 127:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *inode = file->private_data;
 635              		.loc 1 127 1 is_stmt 0 view .LVU160
 636 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 637              	.LCFI7:
 638              		.cfi_def_cfa_offset 36
 639              		.cfi_offset 4, -36
 640              		.cfi_offset 5, -32
 641              		.cfi_offset 6, -28
 642              		.cfi_offset 7, -24
 643              		.cfi_offset 8, -20
 644              		.cfi_offset 9, -16
 645              		.cfi_offset 10, -12
 646              		.cfi_offset 11, -8
 647              		.cfi_offset 14, -4
 648 0004 87B0     		sub	sp, sp, #28
 649              	.LCFI8:
 650              		.cfi_def_cfa_offset 64
 128:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *pos;
 651              		.loc 1 128 5 is_stmt 1 view .LVU161
 128:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *pos;
 652              		.loc 1 128 29 is_stmt 0 view .LVU162
 653 0006 D0F828B0 		ldr	fp, [r0, #40]
 654              	.LVL49:
ARM GAS  /tmp/cczxpjuQ.s 			page 47


 129:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     loff_t curr = 0;
 655              		.loc 1 129 5 is_stmt 1 view .LVU163
 130:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if ((inode->i_mode & S_IFMT) != S_IFDIR)
 656              		.loc 1 130 5 view .LVU164
 131:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -ENOTDIR;
 657              		.loc 1 131 5 view .LVU165
 131:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -ENOTDIR;
 658              		.loc 1 131 15 is_stmt 0 view .LVU166
 659 000a DBF80430 		ldr	r3, [fp, #4]
 131:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -ENOTDIR;
 660              		.loc 1 131 24 view .LVU167
 661 000e 03F47043 		and	r3, r3, #61440
 131:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -ENOTDIR;
 662              		.loc 1 131 8 view .LVU168
 663 0012 B3F5804F 		cmp	r3, #16384
 664 0016 45D1     		bne	.L47
 665 0018 0D46     		mov	r5, r1
 134:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_for_each_entry(pos, &inode->dentry_list_head, list_node) {
 666              		.loc 1 134 5 is_stmt 1 view .LVU169
 667 001a 0BF12403 		add	r3, fp, #36
 668 001e 0593     		str	r3, [sp, #20]
 669 0020 1846     		mov	r0, r3
 670              	.LVL50:
 134:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_for_each_entry(pos, &inode->dentry_list_head, list_node) {
 671              		.loc 1 134 5 is_stmt 0 view .LVU170
 672 0022 FFF7FEFF 		bl	spin_lock
 673              	.LVL51:
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
 674              		.loc 1 135 5 is_stmt 1 view .LVU171
 675              	.LBB331:
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
 676              		.loc 1 135 5 view .LVU172
 677 0026 DBF81C40 		ldr	r4, [fp, #28]
 678              	.LVL52:
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
 679              		.loc 1 135 5 view .LVU173
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
 680              		.loc 1 135 5 view .LVU174
 681 002a 0C3C     		subs	r4, r4, #12
 682              	.LVL53:
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
 683              		.loc 1 135 5 is_stmt 0 view .LVU175
 684              	.LBE331:
 130:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if ((inode->i_mode & S_IFMT) != S_IFDIR)
 685              		.loc 1 130 12 view .LVU176
 686 002c 0023     		movs	r3, #0
 687 002e 1946     		mov	r1, r3
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
 688              		.loc 1 135 5 view .LVU177
 689 0030 15E0     		b	.L42
 690              	.LVL54:
 691              	.L48:
 139:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****                       curr,  // inode number ÂèØ‰∏∫ 0 Êàñ pos->target_inode->major
 692              		.loc 1 139 14 discriminator 2 view .LVU178
 693 0032 0821     		movs	r1, #8
 694              	.L44:
 695              	.LVL55:
ARM GAS  /tmp/cczxpjuQ.s 			page 48


 696              	.LBB332:
 697              	.LBI332:
 698              		.file 8 "/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #ifndef _LINUX_FS_H
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define _LINUX_FS_H
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/types.h>
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/errseq.h> 
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/spinlock.h> 
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/list.h>
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/rbtree_types.h>  
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/uuid.h>  
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/uidgid_types.h>   
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/projid.h>       
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/time64.h> 
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/mnt_idmapping.h>  
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/mutex.h>         
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/uio.h>              
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/migrate_mode.h>  
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/raid/pq.h> 
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/lockdep_types.h>
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/wait.h>				
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/pipe_fs_i.h>
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/fcntl.h>
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/xarray.h>
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/blkdev.h>
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/dcache.h>
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/mm_type.h>
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/statfs.h>
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/stat.h>
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/path.h>
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #include <linux/fs_types.h>
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct dentry;
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct file;
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct inode;
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct kiocb;
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct file_operations;
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct inode_operations  ;
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct dentry_operations ;
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct writeback_control ;
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct address_space;
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct seq_file ;
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct shrink_control;
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct file_system_type;
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct buffer_head;
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct readahead_control;
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define MAY_EXEC		0x00000001
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define MAY_WRITE		0x00000002
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define MAY_READ		0x00000004
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define MAY_APPEND		0x00000008
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define MAY_ACCESS		0x00000010
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define MAY_OPEN		0x00000020
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define MAY_CHDIR		0x00000040
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* called from RCU mode, don't block */
ARM GAS  /tmp/cczxpjuQ.s 			page 49


  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define MAY_NOT_BLOCK		0x00000080
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /*
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * flags in file.f_mode.  Note that FMODE_READ and FMODE_WRITE must correspond
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * to O_WRONLY and O_RDWR via the strange trick in do_dentry_open()
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  */
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* file is open for reading */
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_READ		((__force fmode_t)(1 << 0))
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* file is open for writing */
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_WRITE		((__force fmode_t)(1 << 1))
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* file is seekable */
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_LSEEK		((__force fmode_t)(1 << 2))
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* file can be accessed using pread */
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_PREAD		((__force fmode_t)(1 << 3))
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* file can be accessed using pwrite */
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_PWRITE		((__force fmode_t)(1 << 4))
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* File is opened for execution with sys_execve / sys_uselib */
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_EXEC		((__force fmode_t)(1 << 5))
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* File writes are restricted (block device specific) */
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_WRITE_RESTRICTED	((__force fmode_t)(1 << 6))
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* File supports atomic writes */
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_CAN_ATOMIC_WRITE	((__force fmode_t)(1 << 7))
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* FMODE_* bit 8 */
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* 32bit hashes as llseek() offset (for directories) */
  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_32BITHASH         ((__force fmode_t)(1 << 9))
  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* 64bit hashes as llseek() offset (for directories) */
  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_64BITHASH         ((__force fmode_t)(1 << 10))
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /*
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * Don't update ctime and mtime.
  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  *
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * Currently a special hack for the XFS open_by_handle ioctl, but we'll
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * hopefully graduate it to a proper O_CMTIME flag supported by open(2) soon.
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  */
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_NOCMTIME		((__force fmode_t)(1 << 11))
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* Expect random access pattern */
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_RANDOM		((__force fmode_t)(1 << 12))
  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* FMODE_* bit 13 */
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* File is opened with O_PATH; almost nothing can be done with it */
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_PATH		((__force fmode_t)(1 << 14))
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* File needs atomic accesses to f_pos */
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_ATOMIC_POS	((__force fmode_t)(1 << 15))
 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* Write access to underlying fs */
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_WRITER		((__force fmode_t)(1 << 16))
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* Has read method(s) */
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_CAN_READ          ((__force fmode_t)(1 << 17))
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* Has write method(s) */
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_CAN_WRITE         ((__force fmode_t)(1 << 18))
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_OPENED		((__force fmode_t)(1 << 19))
ARM GAS  /tmp/cczxpjuQ.s 			page 50


 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_CREATED		((__force fmode_t)(1 << 20))
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* File is stream-like */
 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_STREAM		((__force fmode_t)(1 << 21))
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* File supports DIRECT IO */
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define	FMODE_CAN_ODIRECT	((__force fmode_t)(1 << 22))
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define	FMODE_NOREUSE		((__force fmode_t)(1 << 23))
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* FMODE_* bit 24 */
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* File is embedded in backing_file object */
 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_BACKING		((__force fmode_t)(1 << 25))
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* File was opened by fanotify and shouldn't generate fanotify events */
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_NONOTIFY		((__force fmode_t)(1 << 26))
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* File is capable of returning -EAGAIN if I/O will block */
 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_NOWAIT		((__force fmode_t)(1 << 27))
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* File represents mount that needs unmounting */
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_NEED_UNMOUNT	((__force fmode_t)(1 << 28))
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /* File does not contribute to nr_files count */
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define FMODE_NOACCOUNT		((__force fmode_t)(1 << 29))
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /*
 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * Attribute flags.  These should be or-ed together to figure out what
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * has been changed!
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  */
 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_MODE	(1 << 0)
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_UID	(1 << 1)
 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_GID	(1 << 2)
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_SIZE	(1 << 3)
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_ATIME	(1 << 4)
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_MTIME	(1 << 5)
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_CTIME	(1 << 6)
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_ATIME_SET	(1 << 7)
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_MTIME_SET	(1 << 8)
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_FORCE	(1 << 9) /* Not a change, but a change it */
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_KILL_SUID	(1 << 11)
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_KILL_SGID	(1 << 12)
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_FILE	(1 << 13)
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_KILL_PRIV	(1 << 14)
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_OPEN	(1 << 15) /* Truncating from open(O_TRUNC) */
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_TIMES_SET	(1 << 16)
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_TOUCH	(1 << 17)
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define ATTR_DELEG	(1 << 18) /* Delegated attrs. Don't break write delegations */
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /*
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * Whiteout is represented by a char device.  The following constants define the
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * mode and device number to use.
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  */
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define WHITEOUT_MODE 0
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define WHITEOUT_DEV 0
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
ARM GAS  /tmp/cczxpjuQ.s 			page 51


 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /********************************************************
 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * 														*
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * 			   		     iattr  						*
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  *														* 
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** *********************************************************/
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct iattr {
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	unsigned int	ia_valid;
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	umode_t		ia_mode;
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	union {
 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		kuid_t		ia_uid;
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		vfsuid_t	ia_vfsuid;
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	};
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	union {
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		kgid_t		ia_gid;
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		vfsgid_t	ia_vfsgid;
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	};
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	loff_t		ia_size;
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct timespec64 ia_atime;
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct timespec64 ia_mtime;
 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct timespec64 ia_ctime;
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct file	*ia_file;
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /********************************************************
 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * 														*
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * 			     address_space  						*
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  *														* 
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** *********************************************************/
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct file_ra_state {
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	pgoff_t start;
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	unsigned int size;
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	unsigned int async_size;
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	unsigned int ra_pages;
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	unsigned int mmap_miss;
 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	loff_t prev_pos;
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct iov_iter {
 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	u8 iter_type;
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	bool nofault;
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	bool data_source;
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	size_t iov_offset;
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	/*
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	 * Hack alert: overlay ubuf_iovec with iovec + count, so
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	 * that the members resolve correctly regardless of the type
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	 * of iterator used. This means that you can use:
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	 *
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	 * &iter->__ubuf_iovec or iter->__iov
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	 *
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	 * interchangably for the user_backed cases, hence simplifying
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	 * some of the cases that need to deal with both.
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	 */
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	union {
ARM GAS  /tmp/cczxpjuQ.s 			page 52


 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		/*
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		 * This really should be a const, but we cannot do that without
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		 * also modifying any of the zero-filling iter init functions.
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		 * Leave it non-const for now, but it should be treated as such.
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		 */
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		struct iovec __ubuf_iovec;
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		struct {
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 			union {
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 				/* use iter_iov() to get the current vec */
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 				const struct iovec *__iov;
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 				const struct kvec *kvec;
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 				const struct bio_vec *bvec;
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 				const struct folio_queue *folioq;
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 				struct xarray *xarray;
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 				void __user *ubuf;
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 			};
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 			size_t count;
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		};
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	};
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	union {
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		unsigned long nr_segs;
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		u8 folioq_slot;
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		loff_t xarray_start;
 249:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	};
 250:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 251:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct address_space_operations {
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int (*writepage)(struct page *page, struct writeback_control *wbc);
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int (*read_folio)(struct file *, struct folio *);
 255:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 256:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	/* Write back some dirty pages from this mapping. */
 257:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int (*writepages)(struct address_space *, struct writeback_control *);
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	/* Mark a folio dirty.  Return true if this dirtied it */
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	bool (*dirty_folio)(struct address_space *, struct folio *);
 261:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	void (*readahead)(struct readahead_control *);
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 264:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int (*write_begin)(struct file *, struct address_space *mapping,
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 				loff_t pos, unsigned len,
 266:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 				struct folio **foliop, void **fsdata);
 267:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int (*write_end)(struct file *, struct address_space *mapping,
 268:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 				loff_t pos, unsigned len, unsigned copied,
 269:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 				struct folio *folio, void *fsdata);
 270:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 271:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	/* Unfortunately this kludge is needed for FIBMAP. Don't use it */
 272:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	sector_t (*bmap)(struct address_space *, sector_t);
 273:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	void (*invalidate_folio) (struct folio *, size_t offset, size_t len);
 274:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	bool (*release_folio)(struct folio *, gfp_t);
 275:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	void (*free_folio)(struct folio *folio);
 276:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *iter);
 277:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	/*
 278:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	 * migrate the contents of a folio to the specified target. If
 279:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	 * migrate_mode is MIGRATE_ASYNC, it must not block.
 280:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	 */
 281:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int (*migrate_folio)(struct address_space *, struct folio *dst,
 282:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 			struct folio *src, enum migrate_mode);
ARM GAS  /tmp/cczxpjuQ.s 			page 53


 283:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int (*launder_folio)(struct folio *);
 284:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	bool (*is_partially_uptodate) (struct folio *, size_t from,
 285:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 			size_t count);
 286:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	void (*is_dirty_writeback) (struct folio *, bool *dirty, bool *wb);
 287:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int (*error_remove_folio)(struct address_space *, struct folio *);
 288:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 289:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	/* swapfile support */
 290:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	// int (*swap_activate)(struct swap_info_struct *sis, struct file *file,
 291:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	// 			sector_t *span);
 292:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	// void (*swap_deactivate)(struct file *file);
 293:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	// int (*swap_rw)(struct kiocb *iocb, struct iov_iter *iter);
 294:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 295:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 296:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  struct address_space {
 297:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct inode		*host;
 298:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct xarray		i_pages;
 299:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	gfp_t			gfp_mask;
 300:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	atomic_t		i_mmap_writable;
 301:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #ifdef CONFIG_READ_ONLY_THP_FOR_FS
 302:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	/* number of thp, only for non-shmem files */
 303:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	atomic_t		nr_thps;
 304:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #endif
 305:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct rb_root_cached	i_mmap;
 306:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	unsigned long		nrpages;
 307:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	pgoff_t			writeback_index;
 308:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	const struct address_space_operations *a_ops;
 309:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	unsigned long		flags;
 310:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	errseq_t		wb_err;
 311:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	spinlock_t		i_private_lock;
 312:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct list_head	i_private_list;
 313:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	void *			i_private_data;
 314:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** } __attribute__((aligned(sizeof(long)))) __randomize_layout;
 315:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 316:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /********************************************************
 317:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * 														*
 318:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * 			   		  file struct						*
 319:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  *														* 
 320:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** *********************************************************/
 321:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 322:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct io_uring {
 323:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	uint8_t 	magic;
 324:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 325:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct io_uring_cmd {
 326:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	uint8_t 	magic;
 327:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 328:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct fs_context {
 329:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	uint8_t 	magic;
 330:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 331:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct file_lease{
 332:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	uint8_t 	magic;
 333:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 334:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct file_lock {
 335:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	uint8_t 	magic;
 336:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 337:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct vm_area_struct{
 338:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	uint8_t 	magic;
 339:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
ARM GAS  /tmp/cczxpjuQ.s 			page 54


 340:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct pipe_inode_info{
 341:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	uint8_t 	magic;
 342:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 343:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct readahead_control{
 344:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	uint8_t 	magic;
 345:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 346:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 347:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct fileattr {
 348:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	uint8_t 	magic;
 349:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 350:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct fiemap_extent_info {
 351:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	uint8_t 	magic;
 352:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 353:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct delayed_call {
 354:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	uint8_t 	magic;
 355:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 356:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 357:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 358:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 359:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 360:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 361:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 362:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 363:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 364:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 365:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 366:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct file {
 367:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct mutex					f_ref;
 368:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct mutex					f_lock;
 369:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	fmode_t							f_mode;
 370:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	const struct file_operations	*f_op;                            
 371:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	//	struct address_space			*f_mapping;
 372:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	void							*private_data;
 373:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct inode					*f_inode;
 374:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	unsigned int					f_flags;
 375:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	unsigned int					f_iocb_flags;
 376:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	char *						    f_path;
 377:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	union {
 378:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		struct mutex				f_pos_lock;
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		u64							f_pipe;
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	};
 381:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	loff_t							f_pos;   //Áî®‰∫éÁõÆÂΩïÈÅçÂéÜ
 382:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	void *							f_private;
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	spinlock_t                      f_slock;
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** }__attribute__((aligned(sizeof(long)))) __randomize_layout;	
 385:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 386:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 387:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /********************************************************
 388:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * 														*
 389:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * 			   		  inode struct						*
 390:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  *														* 
 391:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** *********************************************************/
 392:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 393:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define IOP_FASTPERM	0x0001
 394:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define IOP_LOOKUP	0x0002
 395:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define IOP_NOFOLLOW	0x0004
 396:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define IOP_XATTR	0x0008
ARM GAS  /tmp/cczxpjuQ.s 			page 55


 397:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define IOP_DEFAULT_READLINK	0x0010
 398:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** #define IOP_MGTIME	0x0020
 399:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 400:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /*
 401:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * Keep mostly read-only and often accessed (especially for
 402:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * the RCU path lookup and 'stat' data) fields at the beginning
 403:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * of the 'struct inode'
 404:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  */
 405:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 406:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct inode {
 407:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	umode_t            i_mode;   
 408:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 409:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	unsigned short     		i_opflags;     /* inode Êìç‰ΩúÊ†áÂøóÂØπÂ∫îIOPÂÆè */
 410:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	kuid_t             i_uid;         /* Êñá‰ª∂ÊâÄÊúâËÄÖÁî®Êà∑ID */
 411:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	kgid_t             i_gid;         /* Êñá‰ª∂ÊâÄÊúâËÄÖÁªÑID */
 412:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 413:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	unsigned int       i_flags;    
 414:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	const struct inode_operations *i_op;     
 415:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct super_block            *i_sb;       
 416:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct address_space	      *i_mapping;   
 417:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	dev_t             i_rdev;       
 418:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	loff_t            i_size;        
 419:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	time64_t          i_atime_sec;   
 420:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	time64_t          i_mtime_sec;   
 421:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	time64_t          i_ctime_sec;    
 422:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	u32               i_atime_nsec;   
 423:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	u32               i_mtime_nsec;   
 424:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	u32               i_ctime_nsec;  
 425:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	unsigned short    i_bytes;
 426:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	u32			i_state;
 427:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct hlist_node	i_hash;
 428:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct list_head	i_io_list;	/* backing dev IO list */
 429:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	spinlock_t	        i_lock;	/* i_blocks, i_bytes, maybe i_size */
 430:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct list_head	i_sb_list;
 431:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct list_head	i_dentry;
 432:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	atomic_t		i_count;
 433:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	const struct file_operations	*i_fop;	/* former ->i_op->default_file_ops */
 434:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	void (*free_inode)(struct inode *);
 435:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	void			*i_private; /* fs or device private pointer */
 436:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** }__attribute__((aligned(sizeof(long)))) __randomize_layout;
 437:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 438:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /********************************************************
 439:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * 														*
 440:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * 			   inode inode_operations					*
 441:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  *														* 
 442:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** *********************************************************/
 443:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 444:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct mnt_idmap {void * no_data;};
 445:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 446:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct inode_operations {
 447:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct dentry  	 *(*lookup) 	   (struct inode *    ,struct dentry *, unsigned int);
 448:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	const char 	     *(*get_link) 	   (struct dentry *   , struct inode *, struct delayed_call *);
 449:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*permission)    (struct mnt_idmap *, struct inode *, int);
 450:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct posix_acl *(*get_inode_acl) (struct inode *	  , int, bool);
 451:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*readlink) 	   (struct dentry *   , char __user * ,int);
 452:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*create) 	   (struct mnt_idmap *, struct inode *,struct dentry *,umode_t, bool);
 453:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*link) 		   (struct dentry *   ,struct inode * ,struct dentry *);
ARM GAS  /tmp/cczxpjuQ.s 			page 56


 454:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*unlink) 	   (struct inode *	  ,struct dentry * );
 455:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*symlink) 	   (struct mnt_idmap *, struct inode *,struct dentry *,const char *);
 456:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*mkdir) 		   (struct mnt_idmap *, struct inode *,struct dentry *,umode_t);
 457:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*rmdir)		   (struct inode *	  ,struct dentry * );
 458:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*mknod) 		   (struct mnt_idmap *, struct inode *,struct dentry *,umode_t,dev_t);
 459:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*rename) 	   (struct mnt_idmap *, struct inode *, struct dentry *,struct inode *, struct
 460:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*setattr)	   (struct mnt_idmap *, struct dentry*, struct iattr *);
 461:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*getattr) 	   (struct mnt_idmap *, const struct path *,struct kstat *, u32, unsigned int
 462:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	ssize_t 		  (*listxattr) 	   (struct dentry *	  , char *		  , size_t);
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*fiemap)		   (struct inode *	  , struct fiemap_extent_info *, u64 start,u64 len);
 464:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*update_time)   (struct inode *    , int);
 465:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*atomic_open)   (struct inode *    , struct dentry*,struct file *, unsigned open_flag,um
 466:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*tmpfile)	   (struct mnt_idmap *, struct inode *,struct file *, umode_t);
 467:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct posix_acl *(*get_acl)	   (struct mnt_idmap *, struct dentry*,int);
 468:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*set_acl)	   (struct mnt_idmap *, struct dentry*,struct posix_acl *, int);
 469:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*fileattr_set)  (struct mnt_idmap *idmap,struct dentry *dentry, struct fileattr *fa);
 470:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int 			  (*fileattr_get)  (struct dentry *dentry  , struct fileattr *fa);
 471:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct offset_ctx*(*get_offset_ctx)(struct inode *inode);
 472:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 473:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 474:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** /********************************************************
 475:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * 														*
 476:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  * 			       file_operations						*
 477:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h ****  *														* 
 478:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** *********************************************************/
 479:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 480:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct kiocb {
 481:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	struct file		*ki_filp;
 482:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	loff_t			ki_pos;
 483:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	void (*ki_complete)(struct kiocb *iocb, long ret);
 484:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	void			*private;
 485:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	int			ki_flags;
 486:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	u16			ki_ioprio; /* See linux/ioprio.h */
 487:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	union {
 488:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	//	struct wait_page_queue	*ki_waitq;
 489:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 		ssize_t (*dio_complete)(void *data);
 490:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	};
 491:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 492:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 493:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct dir_context;
 494:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** typedef bool (*filldir_t)(struct dir_context *, const char *, int, loff_t, u64,
 495:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 			 unsigned);
 496:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 497:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** struct dir_context {
 498:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	filldir_t actor;
 499:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	loff_t pos;
 500:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** };
 501:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 502:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 
 503:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** static inline bool dir_emit(struct dir_context *ctx,
 699              		.loc 8 503 20 is_stmt 1 view .LVU179
 700              	.LBB333:
 504:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 			    const char *name, int namelen,
 505:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 			    u64 ino, unsigned type)
 506:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** {
 507:/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h **** 	return ctx->actor(ctx, name, namelen, ctx->pos, ino, type);
 701              		.loc 8 507 2 view .LVU180
ARM GAS  /tmp/cczxpjuQ.s 			page 57


 702              		.loc 8 507 12 is_stmt 0 view .LVU181
 703 0034 2B68     		ldr	r3, [r5]
 704              		.loc 8 507 9 view .LVU182
 705 0036 0391     		str	r1, [sp, #12]
 706 0038 CDF80880 		str	r8, [sp, #8]
 707 003c 0097     		str	r7, [sp]
 708 003e 0196     		str	r6, [sp, #4]
 709 0040 4946     		mov	r1, r9
 710              	.LVL56:
 711              		.loc 8 507 9 view .LVU183
 712 0042 2846     		mov	r0, r5
 713              	.LVL57:
 714              		.loc 8 507 9 view .LVU184
 715 0044 9847     		blx	r3
 716              	.LVL58:
 717              		.loc 8 507 9 view .LVU185
 718              	.LBE333:
 719              	.LBE332:
 139:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****                       curr,  // inode number ÂèØ‰∏∫ 0 Êàñ pos->target_inode->major
 720              		.loc 1 139 12 discriminator 1 view .LVU186
 721 0046 30B3     		cbz	r0, .L45
 144:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 722              		.loc 1 144 9 is_stmt 1 view .LVU187
 144:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 723              		.loc 1 144 12 is_stmt 0 view .LVU188
 724 0048 AB68     		ldr	r3, [r5, #8]
 725 004a EA68     		ldr	r2, [r5, #12]
 144:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 726              		.loc 1 144 17 view .LVU189
 727 004c 0133     		adds	r3, r3, #1
 728 004e 42F10002 		adc	r2, r2, #0
 729 0052 AB60     		str	r3, [r5, #8]
 730 0054 EA60     		str	r2, [r5, #12]
 731              	.L43:
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
 732              		.loc 1 135 5 is_stmt 1 discriminator 2 view .LVU190
 733              	.LBB334:
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
 734              		.loc 1 135 5 discriminator 2 view .LVU191
 735 0056 E468     		ldr	r4, [r4, #12]
 736              	.LVL59:
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
 737              		.loc 1 135 5 discriminator 2 view .LVU192
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
 738              		.loc 1 135 5 discriminator 2 view .LVU193
 739 0058 0C3C     		subs	r4, r4, #12
 740              	.LVL60:
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
 741              		.loc 1 135 5 is_stmt 0 discriminator 2 view .LVU194
 742              	.LBE334:
 136:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             continue;
 743              		.loc 1 136 17 view .LVU195
 744 005a 4346     		mov	r3, r8
 745 005c 5146     		mov	r1, r10
 746              	.LVL61:
 747              	.L42:
 135:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (curr++ < ctx->pos)
ARM GAS  /tmp/cczxpjuQ.s 			page 58


 748              		.loc 1 135 5 is_stmt 1 discriminator 1 view .LVU196
 749 005e 04F10C02 		add	r2, r4, #12
 750 0062 0BF11C00 		add	r0, fp, #28
 751 0066 8242     		cmp	r2, r0
 752 0068 15D0     		beq	.L45
 136:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             continue;
 753              		.loc 1 136 9 view .LVU197
 136:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             continue;
 754              		.loc 1 136 17 is_stmt 0 view .LVU198
 755 006a 13F10108 		adds	r8, r3, #1
 756 006e 41F1000A 		adc	r10, r1, #0
 757              	.LVL62:
 136:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             continue;
 758              		.loc 1 136 25 view .LVU199
 759 0072 AF68     		ldr	r7, [r5, #8]
 760 0074 EE68     		ldr	r6, [r5, #12]
 136:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             continue;
 761              		.loc 1 136 12 view .LVU200
 762 0076 BB42     		cmp	r3, r7
 763 0078 B141     		sbcs	r1, r1, r6
 764 007a ECDB     		blt	.L43
 139:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****                       curr,  // inode number ÂèØ‰∏∫ 0 Êàñ pos->target_inode->major
 765              		.loc 1 139 9 is_stmt 1 view .LVU201
 139:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****                       curr,  // inode number ÂèØ‰∏∫ 0 Êàñ pos->target_inode->major
 766              		.loc 1 139 31 is_stmt 0 view .LVU202
 767 007c D4F80490 		ldr	r9, [r4, #4]
 139:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****                       curr,  // inode number ÂèØ‰∏∫ 0 Êàñ pos->target_inode->major
 768              		.loc 1 139 39 view .LVU203
 769 0080 4846     		mov	r0, r9
 770 0082 FFF7FEFF 		bl	strlen
 771              	.LVL63:
 772 0086 0246     		mov	r2, r0
 141:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             break;  // ÁºìÂÜ≤Âå∫Êª°‰∫Ü
 773              		.loc 1 141 27 view .LVU204
 774 0088 A368     		ldr	r3, [r4, #8]
 141:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             break;  // ÁºìÂÜ≤Âå∫Êª°‰∫Ü
 775              		.loc 1 141 41 view .LVU205
 776 008a 5B68     		ldr	r3, [r3, #4]
 139:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****                       curr,  // inode number ÂèØ‰∏∫ 0 Êàñ pos->target_inode->major
 777              		.loc 1 139 14 view .LVU206
 778 008c 13F4804F 		tst	r3, #16384
 779 0090 CFD0     		beq	.L48
 139:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****                       curr,  // inode number ÂèØ‰∏∫ 0 Êàñ pos->target_inode->major
 780              		.loc 1 139 14 discriminator 1 view .LVU207
 781 0092 0421     		movs	r1, #4
 782 0094 CEE7     		b	.L44
 783              	.LVL64:
 784              	.L45:
 146:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 785              		.loc 1 146 5 is_stmt 1 view .LVU208
 786 0096 0598     		ldr	r0, [sp, #20]
 787 0098 FFF7FEFF 		bl	spin_unlock
 788              	.LVL65:
 147:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 789              		.loc 1 147 5 view .LVU209
 147:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 790              		.loc 1 147 12 is_stmt 0 view .LVU210
ARM GAS  /tmp/cczxpjuQ.s 			page 59


 791 009c 0020     		movs	r0, #0
 792              	.LVL66:
 793              	.L40:
 148:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 794              		.loc 1 148 1 view .LVU211
 795 009e 07B0     		add	sp, sp, #28
 796              	.LCFI9:
 797              		.cfi_remember_state
 798              		.cfi_def_cfa_offset 36
 799              		@ sp needed
 800 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 801              	.LVL67:
 802              	.L47:
 803              	.LCFI10:
 804              		.cfi_restore_state
 132:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 805              		.loc 1 132 16 view .LVU212
 806 00a4 6FF01300 		mvn	r0, #19
 807              	.LVL68:
 132:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 808              		.loc 1 132 16 view .LVU213
 809 00a8 F9E7     		b	.L40
 810              		.cfi_endproc
 811              	.LFE1040:
 813              		.section	.text.initramfs_create_empty_inode,"ax",%progbits
 814              		.align	1
 815              		.syntax unified
 816              		.thumb
 817              		.thumb_func
 819              	initramfs_create_empty_inode:
 820              	.LVL69:
 821              	.LFB1041:
 161:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(fop == NULL) return NULL;
 822              		.loc 1 161 1 is_stmt 1 view -0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 0, uses_anonymous_args = 0
 161:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(fop == NULL) return NULL;
 826              		.loc 1 161 1 is_stmt 0 view .LVU215
 827 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 828              	.LCFI11:
 829              		.cfi_def_cfa_offset 24
 830              		.cfi_offset 3, -24
 831              		.cfi_offset 4, -20
 832              		.cfi_offset 5, -16
 833              		.cfi_offset 6, -12
 834              		.cfi_offset 7, -8
 835              		.cfi_offset 14, -4
 162:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *initram_inode = kmalloc(sizeof(struct initramfs_inode),GFP_KERNEL);
 836              		.loc 1 162 5 is_stmt 1 view .LVU216
 162:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *initram_inode = kmalloc(sizeof(struct initramfs_inode),GFP_KERNEL);
 837              		.loc 1 162 7 is_stmt 0 view .LVU217
 838 0002 0F46     		mov	r7, r1
 839 0004 0029     		cmp	r1, #0
 840 0006 31D0     		beq	.L52
 841 0008 0546     		mov	r5, r0
 842 000a 1646     		mov	r6, r2
ARM GAS  /tmp/cczxpjuQ.s 			page 60


 163:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(initram_inode == NULL) return NULL;
 843              		.loc 1 163 5 is_stmt 1 view .LVU218
 844              	.LVL70:
 845              	.LBB335:
 846              	.LBI335:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 847              		.loc 5 379 21 view .LVU219
 848              	.LBB336:
 849              		.loc 5 380 2 view .LVU220
 850              		.loc 5 380 9 is_stmt 0 view .LVU221
 851 000c 4FF44C61 		mov	r1, #3264
 852              	.LVL71:
 853              		.loc 5 380 9 view .LVU222
 854 0010 4820     		movs	r0, #72
 855              	.LVL72:
 856              		.loc 5 380 9 view .LVU223
 857 0012 FFF7FEFF 		bl	__smalloc__
 858              	.LVL73:
 859              		.loc 5 380 9 view .LVU224
 860              	.LBE336:
 861              	.LBE335:
 164:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->magic = MAGIC;
 862              		.loc 1 164 5 is_stmt 1 view .LVU225
 164:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->magic = MAGIC;
 863              		.loc 1 164 7 is_stmt 0 view .LVU226
 864 0016 0446     		mov	r4, r0
 865 0018 30B3     		cbz	r0, .L50
 165:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->major = major;
 866              		.loc 1 165 5 is_stmt 1 view .LVU227
 165:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->major = major;
 867              		.loc 1 165 26 is_stmt 0 view .LVU228
 868 001a 154B     		ldr	r3, .L54
 869 001c 0360     		str	r3, [r0]
 166:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->i_fop = fop;
 870              		.loc 1 166 5 is_stmt 1 view .LVU229
 166:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->i_fop = fop;
 871              		.loc 1 166 26 is_stmt 0 view .LVU230
 872 001e 8660     		str	r6, [r0, #8]
 167:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->sb    = sb;
 873              		.loc 1 167 5 is_stmt 1 view .LVU231
 167:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->sb    = sb;
 874              		.loc 1 167 26 is_stmt 0 view .LVU232
 875 0020 0761     		str	r7, [r0, #16]
 168:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->i_mode = S_IFREG | 0755;
 876              		.loc 1 168 5 is_stmt 1 view .LVU233
 168:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->i_mode = S_IFREG | 0755;
 877              		.loc 1 168 26 is_stmt 0 view .LVU234
 878 0022 C563     		str	r5, [r0, #60]
 169:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->i_page = NULL;
 879              		.loc 1 169 5 is_stmt 1 view .LVU235
 169:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->i_page = NULL;
 880              		.loc 1 169 27 is_stmt 0 view .LVU236
 881 0024 48F2ED13 		movw	r3, #33261
 882 0028 4360     		str	r3, [r0, #4]
 170:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     atomic_set(&initram_inode->dentry_count,0);
 883              		.loc 1 170 5 is_stmt 1 view .LVU237
 170:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     atomic_set(&initram_inode->dentry_count,0);
ARM GAS  /tmp/cczxpjuQ.s 			page 61


 884              		.loc 1 170 27 is_stmt 0 view .LVU238
 885 002a 0023     		movs	r3, #0
 886 002c 0364     		str	r3, [r0, #64]
 171:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_lock_init(&initram_inode->lock);
 887              		.loc 1 171 5 is_stmt 1 view .LVU239
 888              	.LVL74:
 889              	.LBB337:
 890              	.LBI337:
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 891              		.loc 6 65 1 view .LVU240
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_set(v, i);
 892              		.loc 6 67 2 view .LVU241
 893              		.loc 6 68 2 view .LVU242
 894              	.LBB338:
 895              	.LBI338:
 507:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 896              		.loc 7 507 1 view .LVU243
 897              	.LBB339:
 898              		.loc 7 509 2 view .LVU244
 899              		.loc 7 509 2 view .LVU245
 900              	.LBB340:
 901              		.loc 7 509 2 view .LVU246
 902              		.loc 7 509 2 view .LVU247
 903              	.LBE340:
 904              		.loc 7 509 2 discriminator 2 view .LVU248
 905              		.loc 7 509 2 discriminator 2 view .LVU249
 906              		.loc 7 509 2 discriminator 2 view .LVU250
 907 002e C360     		str	r3, [r0, #12]
 908              		.loc 7 509 2 discriminator 2 view .LVU251
 909              		.loc 7 509 2 discriminator 2 view .LVU252
 910              	.LVL75:
 911              		.loc 7 509 2 is_stmt 0 discriminator 2 view .LVU253
 912              	.LBE339:
 913              	.LBE338:
 914              	.LBE337:
 172:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     INIT_LIST_HEAD(&initram_inode->list_node);
 915              		.loc 1 172 5 is_stmt 1 view .LVU254
 916 0030 2430     		adds	r0, r0, #36
 917              	.LVL76:
 172:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     INIT_LIST_HEAD(&initram_inode->list_node);
 918              		.loc 1 172 5 is_stmt 0 view .LVU255
 919 0032 FFF7FEFF 		bl	spin_lock_init
 920              	.LVL77:
 173:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     INIT_LIST_HEAD(&initram_inode->dentry_list_head);
 921              		.loc 1 173 5 is_stmt 1 view .LVU256
 922 0036 04F11406 		add	r6, r4, #20
 923              	.LVL78:
 924              	.LBB341:
 925              	.LBI341:
 926              		.file 9 "/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #ifndef _LINUX_LIST_H
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #define _LINUX_LIST_H
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <linux/container_of.h>
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <linux/types.h>
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <linux/stddef.h>
ARM GAS  /tmp/cczxpjuQ.s 			page 62


   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <linux/poison.h>
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <linux/const.h>
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <asm/barrier.h>
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <linux/rwonce.h>
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Circular doubly linked list implementation.
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Some of the internal functions ("__xxx") are useful when
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * manipulating whole lists rather than single entries, as
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * sometimes we already know the next/prev entries and we can
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * generate better code by using them directly rather than
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * using the generic single-entry routines.
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #define LIST_HEAD_INIT(name) { &(name), &(name) }
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #define LIST_HEAD(name) \
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	struct list_head name = LIST_HEAD_INIT(name)
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * INIT_LIST_HEAD - Initialize a list_head structure
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @list: list_head structure to be initialized.
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Initializes the list_head to point to itself.  If it is a list header,
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * the result is an empty list.
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void INIT_LIST_HEAD(struct list_head *list)
 927              		.loc 9 35 20 view .LVU257
 928              	.LBB342:
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->next, list);
 929              		.loc 9 37 2 view .LVU258
 930              		.loc 9 37 2 view .LVU259
 931              	.LBB343:
 932              		.loc 9 37 2 view .LVU260
 933              		.loc 9 37 2 view .LVU261
 934              	.LBE343:
 935              		.loc 9 37 2 discriminator 2 view .LVU262
 936              		.loc 9 37 2 discriminator 2 view .LVU263
 937              		.loc 9 37 2 discriminator 2 view .LVU264
 938 003a 6661     		str	r6, [r4, #20]
 939              		.loc 9 37 2 discriminator 2 view .LVU265
 940              		.loc 9 37 2 discriminator 2 view .LVU266
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 941              		.loc 9 38 2 view .LVU267
 942              		.loc 9 38 2 view .LVU268
 943              	.LBB344:
 944              		.loc 9 38 2 view .LVU269
 945              		.loc 9 38 2 view .LVU270
 946              	.LBE344:
 947              		.loc 9 38 2 discriminator 2 view .LVU271
 948              		.loc 9 38 2 discriminator 2 view .LVU272
 949              		.loc 9 38 2 discriminator 2 view .LVU273
 950 003c A661     		str	r6, [r4, #24]
 951              		.loc 9 38 2 discriminator 2 view .LVU274
 952              		.loc 9 38 2 discriminator 2 view .LVU275
ARM GAS  /tmp/cczxpjuQ.s 			page 63


 953              	.LVL79:
 954              		.loc 9 38 2 is_stmt 0 discriminator 2 view .LVU276
 955              	.LBE342:
 956              	.LBE341:
 174:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initram_inode->mode = READABLE; //ÈªòËÆ§‰∏∫ÂèØÂÜôÔºåÂ¶ÇÊûúË¶ÅÊîπ‰∏∫Âè™ËØªÔºåËØ∑ÂêéÊúü‰øÆÊîπ
 957              		.loc 1 174 5 is_stmt 1 view .LVU277
 958 003e 04F11C03 		add	r3, r4, #28
 959              	.LVL80:
 960              	.LBB345:
 961              	.LBI345:
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 962              		.loc 9 35 20 view .LVU278
 963              	.LBB346:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 964              		.loc 9 37 2 view .LVU279
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 965              		.loc 9 37 2 view .LVU280
 966              	.LBB347:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 967              		.loc 9 37 2 view .LVU281
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 968              		.loc 9 37 2 view .LVU282
 969              	.LBE347:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 970              		.loc 9 37 2 discriminator 2 view .LVU283
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 971              		.loc 9 37 2 discriminator 2 view .LVU284
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 972              		.loc 9 37 2 discriminator 2 view .LVU285
 973 0042 E361     		str	r3, [r4, #28]
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 974              		.loc 9 37 2 discriminator 2 view .LVU286
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 975              		.loc 9 37 2 discriminator 2 view .LVU287
 976              		.loc 9 38 2 view .LVU288
 977              		.loc 9 38 2 view .LVU289
 978              	.LBB348:
 979              		.loc 9 38 2 view .LVU290
 980              		.loc 9 38 2 view .LVU291
 981              	.LBE348:
 982              		.loc 9 38 2 discriminator 2 view .LVU292
 983              		.loc 9 38 2 discriminator 2 view .LVU293
 984              		.loc 9 38 2 discriminator 2 view .LVU294
 985 0044 2362     		str	r3, [r4, #32]
 986              		.loc 9 38 2 discriminator 2 view .LVU295
 987              		.loc 9 38 2 discriminator 2 view .LVU296
 988              	.LVL81:
 989              		.loc 9 38 2 is_stmt 0 discriminator 2 view .LVU297
 990              	.LBE346:
 991              	.LBE345:
 175:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_lock(&sb->lock);
 992              		.loc 1 175 5 is_stmt 1 view .LVU298
 175:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_lock(&sb->lock);
 993              		.loc 1 175 25 is_stmt 0 view .LVU299
 994 0046 0123     		movs	r3, #1
 995 0048 84F83430 		strb	r3, [r4, #52]
 176:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_add(&initram_inode->list_node,&sb->inode_list_head);
ARM GAS  /tmp/cczxpjuQ.s 			page 64


 996              		.loc 1 176 5 is_stmt 1 view .LVU300
 997 004c 2F1D     		adds	r7, r5, #4
 998              	.LVL82:
 176:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_add(&initram_inode->list_node,&sb->inode_list_head);
 999              		.loc 1 176 5 is_stmt 0 view .LVU301
 1000 004e 3846     		mov	r0, r7
 1001 0050 FFF7FEFF 		bl	spin_lock
 1002              	.LVL83:
 177:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_unlock(&sb->lock);
 1003              		.loc 1 177 5 is_stmt 1 view .LVU302
 1004 0054 05F11802 		add	r2, r5, #24
 1005              	.LVL84:
 1006              	.LBB349:
 1007              	.LBI349:
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #ifdef CONFIG_LIST_HARDENED
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #ifdef CONFIG_DEBUG_LIST
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** # define __list_valid_slowpath
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #else
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** # define __list_valid_slowpath __cold __preserve_most
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #endif
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Performs the full set of list corruption checks before __list_add().
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * On list corruption reports a warning, and returns false.
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** extern bool __list_valid_slowpath __list_add_valid_or_report(struct list_head *new,
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 							     struct list_head *prev,
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 							     struct list_head *next);
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Performs list corruption checks before __list_add(). Returns false if a
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * corruption is detected, true otherwise.
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * With CONFIG_LIST_HARDENED only, performs minimal list integrity checking
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * inline to catch non-faulting corruptions, and only if a corruption is
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * detected calls the reporting function __list_add_valid_or_report().
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static __always_inline bool __list_add_valid(struct list_head *new,
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 					     struct list_head *prev,
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 					     struct list_head *next)
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	bool ret = true;
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	if (!IS_ENABLED(CONFIG_DEBUG_LIST)) {
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		/*
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * With the hardening version, elide checking if next and prev
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * are NULL, since the immediate dereference of them below would
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * result in a fault if NULL.
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 *
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * With the reduced set of checks, we can afford to inline the
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * checks, which also gives the compiler a chance to elide some
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * of them completely if they can be proven at compile-time. If
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * one of the pre-conditions does not hold, the slow-path will
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * show a report which pre-condition failed.
ARM GAS  /tmp/cczxpjuQ.s 			page 65


  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 */
  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		if (likely(next->prev == prev && prev->next == next && new != prev && new != next))
  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			return true;
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		ret = false;
  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	}
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	ret &= __list_add_valid_or_report(new, prev, next);
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return ret;
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Performs the full set of list corruption checks before __list_del_entry().
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * On list corruption reports a warning, and returns false.
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** extern bool __list_valid_slowpath __list_del_entry_valid_or_report(struct list_head *entry);
  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Performs list corruption checks before __list_del_entry(). Returns false if a
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * corruption is detected, true otherwise.
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * With CONFIG_LIST_HARDENED only, performs minimal list integrity checking
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * inline to catch non-faulting corruptions, and only if a corruption is
 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * detected calls the reporting function __list_del_entry_valid_or_report().
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static __always_inline bool __list_del_entry_valid(struct list_head *entry)
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	bool ret = true;
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	if (!IS_ENABLED(CONFIG_DEBUG_LIST)) {
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		struct list_head *prev = entry->prev;
 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		struct list_head *next = entry->next;
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		/*
 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * With the hardening version, elide checking if next and prev
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * are NULL, LIST_POISON1 or LIST_POISON2, since the immediate
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * dereference of them below would result in a fault.
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 */
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		if (likely(prev->next == entry && next->prev == entry))
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			return true;
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		ret = false;
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	}
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	ret &= __list_del_entry_valid_or_report(entry);
 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return ret;
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #else
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline bool __list_add_valid(struct list_head *new,
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				struct list_head *prev,
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				struct list_head *next)
 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return true;
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline bool __list_del_entry_valid(struct list_head *entry)
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return true;
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #endif
ARM GAS  /tmp/cczxpjuQ.s 			page 66


 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Insert a new entry between two known consecutive entries.
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * This is only for internal list manipulation where we know
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * the prev/next entries already!
 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void __list_add(struct list_head *new,
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			      struct list_head *prev,
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			      struct list_head *next)
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	if (!__list_add_valid(new, prev, next))
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	next->prev = new;
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next = next;
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev = prev;
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, new);
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_add - add a new entry
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @new: new entry to be added
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: list head to add it after
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Insert a new entry after the specified head.
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * This is good for implementing stacks.
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_add(struct list_head *new, struct list_head *head)
 1008              		.loc 9 167 20 view .LVU303
 1009              	.LBB350:
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_add(new, head, head->next);
 1010              		.loc 9 169 2 view .LVU304
 1011 0058 AB69     		ldr	r3, [r5, #24]
 1012              	.LVL85:
 1013              	.LBB351:
 1014              	.LBI351:
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			      struct list_head *prev,
 1015              		.loc 9 146 20 view .LVU305
 1016              	.LBB352:
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 1017              		.loc 9 150 2 view .LVU306
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next = next;
 1018              		.loc 9 153 2 view .LVU307
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next = next;
 1019              		.loc 9 153 13 is_stmt 0 view .LVU308
 1020 005a 5E60     		str	r6, [r3, #4]
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev = prev;
 1021              		.loc 9 154 2 is_stmt 1 view .LVU309
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev = prev;
 1022              		.loc 9 154 12 is_stmt 0 view .LVU310
 1023 005c 6361     		str	r3, [r4, #20]
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, new);
 1024              		.loc 9 155 2 is_stmt 1 view .LVU311
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, new);
 1025              		.loc 9 155 12 is_stmt 0 view .LVU312
ARM GAS  /tmp/cczxpjuQ.s 			page 67


 1026 005e A261     		str	r2, [r4, #24]
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1027              		.loc 9 156 2 is_stmt 1 view .LVU313
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1028              		.loc 9 156 2 view .LVU314
 1029              	.LBB353:
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1030              		.loc 9 156 2 view .LVU315
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1031              		.loc 9 156 2 view .LVU316
 1032              	.LBE353:
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1033              		.loc 9 156 2 discriminator 2 view .LVU317
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1034              		.loc 9 156 2 discriminator 2 view .LVU318
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1035              		.loc 9 156 2 discriminator 2 view .LVU319
 1036 0060 AE61     		str	r6, [r5, #24]
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1037              		.loc 9 156 2 discriminator 3 view .LVU320
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1038              		.loc 9 156 2 discriminator 3 view .LVU321
 1039              	.LVL86:
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1040              		.loc 9 156 2 is_stmt 0 discriminator 3 view .LVU322
 1041              	.LBE352:
 1042              	.LBE351:
 1043              	.LBE350:
 1044              	.LBE349:
 178:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return initram_inode;
 1045              		.loc 1 178 5 is_stmt 1 view .LVU323
 1046 0062 3846     		mov	r0, r7
 1047 0064 FFF7FEFF 		bl	spin_unlock
 1048              	.LVL87:
 179:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 1049              		.loc 1 179 5 view .LVU324
 1050              	.L50:
 180:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1051              		.loc 1 180 1 is_stmt 0 view .LVU325
 1052 0068 2046     		mov	r0, r4
 1053 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1054              	.LVL88:
 1055              	.L52:
 162:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *initram_inode = kmalloc(sizeof(struct initramfs_inode),GFP_KERNEL);
 1056              		.loc 1 162 28 discriminator 1 view .LVU326
 1057 006c 0C46     		mov	r4, r1
 1058 006e FBE7     		b	.L50
 1059              	.L55:
 1060              		.align	2
 1061              	.L54:
 1062 0070 4E61BC00 		.word	12345678
 1063              		.cfi_endproc
 1064              	.LFE1041:
 1066              		.section	.rodata.initramfs_read.str1.4,"aMS",%progbits,1
 1067              		.align	2
 1068              	.LC0:
 1069 0000 72656164 		.ascii	"read to many fata\012\000"
ARM GAS  /tmp/cczxpjuQ.s 			page 68


 1069      20746F20 
 1069      6D616E79 
 1069      20666174 
 1069      610A00
 1070              		.section	.text.initramfs_read,"ax",%progbits
 1071              		.align	1
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1076              	initramfs_read:
 1077              	.LVL89:
 1078              	.LFB1038:
  77:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *p_inode = file->f_inode->i_private;
 1079              		.loc 1 77 94 is_stmt 1 view -0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
  77:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *p_inode = file->f_inode->i_private;
 1083              		.loc 1 77 94 is_stmt 0 view .LVU328
 1084 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1085              	.LCFI12:
 1086              		.cfi_def_cfa_offset 24
 1087              		.cfi_offset 4, -24
 1088              		.cfi_offset 5, -20
 1089              		.cfi_offset 6, -16
 1090              		.cfi_offset 7, -12
 1091              		.cfi_offset 8, -8
 1092              		.cfi_offset 14, -4
 1093 0004 1446     		mov	r4, r2
 1094 0006 1D46     		mov	r5, r3
  78:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(p_inode->i_page == NULL) 
 1095              		.loc 1 78 5 is_stmt 1 view .LVU329
  78:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(p_inode->i_page == NULL) 
 1096              		.loc 1 78 43 is_stmt 0 view .LVU330
 1097 0008 C36A     		ldr	r3, [r0, #44]
 1098              	.LVL90:
  78:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(p_inode->i_page == NULL) 
 1099              		.loc 1 78 29 view .LVU331
 1100 000a D3F88420 		ldr	r2, [r3, #132]
 1101              	.LVL91:
  79:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 1102              		.loc 1 79 5 is_stmt 1 view .LVU332
  79:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 1103              		.loc 1 79 15 is_stmt 0 view .LVU333
 1104 000e 106C     		ldr	r0, [r2, #64]
 1105              	.LVL92:
  79:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 1106              		.loc 1 79 7 view .LVU334
 1107 0010 20B3     		cbz	r0, .L59
 1108 0012 8846     		mov	r8, r1
  81:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     {
 1109              		.loc 1 81 5 is_stmt 1 view .LVU335
  81:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     {
 1110              		.loc 1 81 9 is_stmt 0 view .LVU336
 1111 0014 2F68     		ldr	r7, [r5]
 1112 0016 6B68     		ldr	r3, [r5, #4]
  81:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     {
ARM GAS  /tmp/cczxpjuQ.s 			page 69


 1113              		.loc 1 81 25 view .LVU337
 1114 0018 3919     		adds	r1, r7, r4
 1115              	.LVL93:
  81:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     {
 1116              		.loc 1 81 25 view .LVU338
 1117 001a 43F10003 		adc	r3, r3, #0
  81:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     {
 1118              		.loc 1 81 42 view .LVU339
 1119 001e 526C     		ldr	r2, [r2, #68]
 1120              	.LVL94:
  81:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     {
 1121              		.loc 1 81 7 view .LVU340
 1122 0020 8A42     		cmp	r2, r1
 1123 0022 4FF00002 		mov	r2, #0
 1124 0026 9A41     		sbcs	r2, r2, r3
 1125 0028 12DB     		blt	.L62
  86:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (!page_data)
 1126              		.loc 1 86 5 is_stmt 1 view .LVU341
  86:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (!page_data)
 1127              		.loc 1 86 23 is_stmt 0 view .LVU342
 1128 002a FFF7FEFF 		bl	__kmap
 1129              	.LVL95:
  87:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -ENOMEM;
 1130              		.loc 1 87 5 is_stmt 1 view .LVU343
  87:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -ENOMEM;
 1131              		.loc 1 87 8 is_stmt 0 view .LVU344
 1132 002e 0146     		mov	r1, r0
 1133 0030 B0B1     		cbz	r0, .L60
  89:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (ret)
 1134              		.loc 1 89 5 is_stmt 1 view .LVU345
 1135              	.LVL96:
 1136              	.LBB354:
 1137              	.LBI354:
 1138              		.file 10 "/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** #ifndef _UACCESS_H
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** #define _UACCESS_H
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** 
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** #include <linux/compiler.h>
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** #include <linux/types.h>
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** #include <linux/string.h>
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** 
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** static inline int copy_from_user(void *to, const void __user *from, size_t n) //Áî®‰∫éË£∏Êú∫ÁéØÂ¢É‰
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** {
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h ****     memcpy(to, (void *)from, n);
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h ****     return 0;
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** }
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** static inline int copy_to_user(void __user *to, const void *from, size_t n) //Áî®‰∫éË£∏Êú∫ÁéØÂ¢É‰∏≠
 1139              		.loc 10 13 19 view .LVU346
 1140              	.LBB355:
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** {
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h ****     memcpy((void *)to, from, n);
 1141              		.loc 10 15 5 view .LVU347
 1142 0032 2246     		mov	r2, r4
 1143 0034 3944     		add	r1, r1, r7
 1144              	.LVL97:
 1145              		.loc 10 15 5 is_stmt 0 view .LVU348
 1146 0036 4046     		mov	r0, r8
ARM GAS  /tmp/cczxpjuQ.s 			page 70


 1147              	.LVL98:
 1148              		.loc 10 15 5 view .LVU349
 1149 0038 FFF7FEFF 		bl	memcpy
 1150              	.LVL99:
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h ****     return 0;
 1151              		.loc 10 16 5 is_stmt 1 view .LVU350
 1152              		.loc 10 16 5 is_stmt 0 view .LVU351
 1153              	.LBE355:
 1154              	.LBE354:
  90:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -EFAULT;
 1155              		.loc 1 90 5 is_stmt 1 view .LVU352
  92:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return size;
 1156              		.loc 1 92 5 view .LVU353
 1157 003c 2A68     		ldr	r2, [r5]
 1158 003e 6B68     		ldr	r3, [r5, #4]
  92:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return size;
 1159              		.loc 1 92 13 is_stmt 0 view .LVU354
 1160 0040 A618     		adds	r6, r4, r2
 1161 0042 43F10003 		adc	r3, r3, #0
 1162 0046 2E60     		str	r6, [r5]
 1163 0048 6B60     		str	r3, [r5, #4]
  93:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 1164              		.loc 1 93 5 is_stmt 1 view .LVU355
  93:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 1165              		.loc 1 93 12 is_stmt 0 view .LVU356
 1166 004a 2046     		mov	r0, r4
 1167              	.LVL100:
 1168              	.L56:
  94:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1169              		.loc 1 94 1 view .LVU357
 1170 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1171              	.LVL101:
 1172              	.L62:
  83:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return 0;
 1173              		.loc 1 83 9 is_stmt 1 view .LVU358
 1174 0050 0549     		ldr	r1, .L63
 1175 0052 0620     		movs	r0, #6
 1176 0054 FFF7FEFF 		bl	printk
 1177              	.LVL102:
  84:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 1178              		.loc 1 84 9 view .LVU359
  84:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 1179              		.loc 1 84 16 is_stmt 0 view .LVU360
 1180 0058 0020     		movs	r0, #0
 1181 005a F7E7     		b	.L56
 1182              	.LVL103:
 1183              	.L59:
  80:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(((loff_t)*offset + size) > p_inode->size) 
 1184              		.loc 1 80 12 view .LVU361
 1185 005c 0020     		movs	r0, #0
 1186 005e F5E7     		b	.L56
 1187              	.LVL104:
 1188              	.L60:
  88:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     int ret = copy_to_user(data,page_data + (loff_t)*offset,size);
 1189              		.loc 1 88 16 view .LVU362
 1190 0060 6FF00B00 		mvn	r0, #11
 1191              	.LVL105:
ARM GAS  /tmp/cczxpjuQ.s 			page 71


  88:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     int ret = copy_to_user(data,page_data + (loff_t)*offset,size);
 1192              		.loc 1 88 16 view .LVU363
 1193 0064 F2E7     		b	.L56
 1194              	.L64:
 1195 0066 00BF     		.align	2
 1196              	.L63:
 1197 0068 00000000 		.word	.LC0
 1198              		.cfi_endproc
 1199              	.LFE1038:
 1201              		.section	.text.initramfs_get_inode,"ax",%progbits
 1202              		.align	1
 1203              		.syntax unified
 1204              		.thumb
 1205              		.thumb_func
 1207              	initramfs_get_inode:
 1208              	.LVL106:
 1209              	.LFB1055:
 426:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(initram_node == NULL) return NULL;
 1210              		.loc 1 426 1 is_stmt 1 view -0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 426:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(initram_node == NULL) return NULL;
 1214              		.loc 1 426 1 is_stmt 0 view .LVU365
 1215 0000 10B5     		push	{r4, lr}
 1216              	.LCFI13:
 1217              		.cfi_def_cfa_offset 8
 1218              		.cfi_offset 4, -8
 1219              		.cfi_offset 14, -4
 427:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct inode*inode  =  new_inode(sb); //Ê≠§Â§ÑÂä®ÊÄÅÂàõÂª∫‰∫Ü‰∏Ä‰∏™inode,ÈúÄË¶ÅÂêéÁª≠ÈáäÊîæ
 1220              		.loc 1 427 5 is_stmt 1 view .LVU366
 427:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct inode*inode  =  new_inode(sb); //Ê≠§Â§ÑÂä®ÊÄÅÂàõÂª∫‰∫Ü‰∏Ä‰∏™inode,ÈúÄË¶ÅÂêéÁª≠ÈáäÊîæ
 1221              		.loc 1 427 7 is_stmt 0 view .LVU367
 1222 0002 0446     		mov	r4, r0
 1223 0004 78B1     		cbz	r0, .L65
 428:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(inode == NULL) return NULL;  
 1224              		.loc 1 428 5 is_stmt 1 view .LVU368
 428:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(inode == NULL) return NULL;  
 1225              		.loc 1 428 28 is_stmt 0 view .LVU369
 1226 0006 0846     		mov	r0, r1
 1227              	.LVL107:
 428:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(inode == NULL) return NULL;  
 1228              		.loc 1 428 28 view .LVU370
 1229 0008 FFF7FEFF 		bl	new_inode
 1230              	.LVL108:
 429:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_mode    = initram_node->i_mode;
 1231              		.loc 1 429 5 is_stmt 1 view .LVU371
 429:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_mode    = initram_node->i_mode;
 1232              		.loc 1 429 7 is_stmt 0 view .LVU372
 1233 000c 58B1     		cbz	r0, .L65
 430:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_fop     = initram_node->i_fop;
 1234              		.loc 1 430 5 is_stmt 1 view .LVU373
 430:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_fop     = initram_node->i_fop;
 1235              		.loc 1 430 36 is_stmt 0 view .LVU374
 1236 000e 6368     		ldr	r3, [r4, #4]
 430:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_fop     = initram_node->i_fop;
 1237              		.loc 1 430 22 view .LVU375
ARM GAS  /tmp/cczxpjuQ.s 			page 72


 1238 0010 0380     		strh	r3, [r0]	@ movhi
 431:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_op      = &initramfs_inode_operation;
 1239              		.loc 1 431 5 is_stmt 1 view .LVU376
 431:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_op      = &initramfs_inode_operation;
 1240              		.loc 1 431 36 is_stmt 0 view .LVU377
 1241 0012 2369     		ldr	r3, [r4, #16]
 431:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_op      = &initramfs_inode_operation;
 1242              		.loc 1 431 22 view .LVU378
 1243 0014 C367     		str	r3, [r0, #124]
 432:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_private = initram_node;
 1244              		.loc 1 432 5 is_stmt 1 view .LVU379
 432:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_private = initram_node;
 1245              		.loc 1 432 22 is_stmt 0 view .LVU380
 1246 0016 044B     		ldr	r3, .L69
 1247 0018 0361     		str	r3, [r0, #16]
 433:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_size    = initram_node->size;
 1248              		.loc 1 433 5 is_stmt 1 view .LVU381
 433:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_size    = initram_node->size;
 1249              		.loc 1 433 22 is_stmt 0 view .LVU382
 1250 001a C0F88440 		str	r4, [r0, #132]
 434:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return inode;
 1251              		.loc 1 434 5 is_stmt 1 view .LVU383
 434:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return inode;
 1252              		.loc 1 434 36 is_stmt 0 view .LVU384
 1253 001e 636C     		ldr	r3, [r4, #68]
 434:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return inode;
 1254              		.loc 1 434 22 view .LVU385
 1255 0020 0362     		str	r3, [r0, #32]
 1256 0022 0023     		movs	r3, #0
 1257 0024 4362     		str	r3, [r0, #36]
 435:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 1258              		.loc 1 435 5 is_stmt 1 view .LVU386
 1259              	.LVL109:
 1260              	.L65:
 436:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1261              		.loc 1 436 1 is_stmt 0 view .LVU387
 1262 0026 10BD     		pop	{r4, pc}
 1263              	.LVL110:
 1264              	.L70:
 436:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1265              		.loc 1 436 1 view .LVU388
 1266              		.align	2
 1267              	.L69:
 1268 0028 00000000 		.word	initramfs_inode_operation
 1269              		.cfi_endproc
 1270              	.LFE1055:
 1272              		.section	.text.initramfs_getattr,"ax",%progbits
 1273              		.align	1
 1274              		.syntax unified
 1275              		.thumb
 1276              		.thumb_func
 1278              	initramfs_getattr:
 1279              	.LVL111:
 1280              	.LFB1068:
 613:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct dentry *d = path->dentry;
 1281              		.loc 1 613 1 is_stmt 1 view -0
 1282              		.cfi_startproc
ARM GAS  /tmp/cczxpjuQ.s 			page 73


 1283              		@ args = 4, pretend = 0, frame = 0
 1284              		@ frame_needed = 0, uses_anonymous_args = 0
 613:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct dentry *d = path->dentry;
 1285              		.loc 1 613 1 is_stmt 0 view .LVU390
 1286 0000 38B5     		push	{r3, r4, r5, lr}
 1287              	.LCFI14:
 1288              		.cfi_def_cfa_offset 16
 1289              		.cfi_offset 3, -16
 1290              		.cfi_offset 4, -12
 1291              		.cfi_offset 5, -8
 1292              		.cfi_offset 14, -4
 614:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* file = d->d_fsdata;
 1293              		.loc 1 614 5 is_stmt 1 view .LVU391
 614:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* file = d->d_fsdata;
 1294              		.loc 1 614 20 is_stmt 0 view .LVU392
 1295 0002 4B68     		ldr	r3, [r1, #4]
 1296              	.LVL112:
 615:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *inode;
 1297              		.loc 1 615 5 is_stmt 1 view .LVU393
 615:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *inode;
 1298              		.loc 1 615 30 is_stmt 0 view .LVU394
 1299 0004 5B6D     		ldr	r3, [r3, #84]
 1300              	.LVL113:
 616:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1301              		.loc 1 616 5 is_stmt 1 view .LVU395
 618:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return -ENOENT;
 1302              		.loc 1 618 5 view .LVU396
 618:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return -ENOENT;
 1303              		.loc 1 618 8 is_stmt 0 view .LVU397
 1304 0006 002B     		cmp	r3, #0
 1305 0008 31D0     		beq	.L73
 1306 000a 1446     		mov	r4, r2
 618:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return -ENOENT;
 1307              		.loc 1 618 26 discriminator 1 view .LVU398
 1308 000c 9B68     		ldr	r3, [r3, #8]
 1309              	.LVL114:
 618:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return -ENOENT;
 1310              		.loc 1 618 15 discriminator 1 view .LVU399
 1311 000e 8BB3     		cbz	r3, .L74
 620:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->dev  = MKDEV(inode->major, 0);
 1312              		.loc 1 620 5 is_stmt 1 view .LVU400
 620:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->dev  = MKDEV(inode->major, 0);
 1313              		.loc 1 620 23 is_stmt 0 view .LVU401
 1314 0010 5A68     		ldr	r2, [r3, #4]
 1315              	.LVL115:
 620:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->dev  = MKDEV(inode->major, 0);
 1316              		.loc 1 620 16 view .LVU402
 1317 0012 A280     		strh	r2, [r4, #4]	@ movhi
 1318              	.LVL116:
 621:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->ino  = (unsigned long)inode;  
 1319              		.loc 1 621 5 is_stmt 1 view .LVU403
 621:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->ino  = (unsigned long)inode;  
 1320              		.loc 1 621 18 is_stmt 0 view .LVU404
 1321 0014 9A68     		ldr	r2, [r3, #8]
 1322 0016 1205     		lsls	r2, r2, #20
 621:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->ino  = (unsigned long)inode;  
 1323              		.loc 1 621 16 view .LVU405
ARM GAS  /tmp/cczxpjuQ.s 			page 74


 1324 0018 E261     		str	r2, [r4, #28]
 622:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->nlink = atomic_read(&inode->dentry_count);
 1325              		.loc 1 622 5 is_stmt 1 view .LVU406
 622:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->nlink = atomic_read(&inode->dentry_count);
 1326              		.loc 1 622 16 is_stmt 0 view .LVU407
 1327 001a A361     		str	r3, [r4, #24]
 623:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->size  = 0; 
 1328              		.loc 1 623 5 is_stmt 1 view .LVU408
 1329              	.LVL117:
 1330              	.LBB356:
 1331              	.LBI356:
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 1332              		.loc 6 30 1 view .LVU409
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_read(v);
 1333              		.loc 6 32 2 view .LVU410
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 1334              		.loc 6 33 2 view .LVU411
 1335              	.LBB357:
 1336              	.LBI357:
 461:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 1337              		.loc 7 461 1 view .LVU412
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 1338              		.loc 7 463 2 view .LVU413
 1339              	.LBB358:
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 1340              		.loc 7 463 9 view .LVU414
 1341              	.LBB359:
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 1342              		.loc 7 463 9 view .LVU415
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 1343              		.loc 7 463 9 view .LVU416
 1344              	.LBE359:
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 1345              		.loc 7 463 9 discriminator 2 view .LVU417
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 1346              		.loc 7 463 9 discriminator 2 view .LVU418
 1347 001c DB68     		ldr	r3, [r3, #12]
 1348              	.LVL118:
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 1349              		.loc 7 463 9 is_stmt 0 discriminator 2 view .LVU419
 1350              	.LBE358:
 1351              	.LBE357:
 1352              	.LBE356:
 623:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->size  = 0; 
 1353              		.loc 1 623 17 discriminator 1 view .LVU420
 1354 001e A360     		str	r3, [r4, #8]
 624:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->atime.tv_nsec = jiffies/HZ;
 1355              		.loc 1 624 5 is_stmt 1 view .LVU421
 624:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->atime.tv_nsec = jiffies/HZ;
 1356              		.loc 1 624 17 is_stmt 0 view .LVU422
 1357 0020 0022     		movs	r2, #0
 1358 0022 0023     		movs	r3, #0
 1359 0024 C4E90C23 		strd	r2, [r4, #48]
 625:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->atime.tv_sec  = jiffies%HZ;
 1360              		.loc 1 625 5 is_stmt 1 view .LVU423
 625:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->atime.tv_sec  = jiffies%HZ;
 1361              		.loc 1 625 27 is_stmt 0 view .LVU424
ARM GAS  /tmp/cczxpjuQ.s 			page 75


 1362 0028 FFF7FEFF 		bl	ktime_get
 1363              	.LVL119:
 625:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->atime.tv_sec  = jiffies%HZ;
 1364              		.loc 1 625 34 discriminator 1 view .LVU425
 1365 002c 134D     		ldr	r5, .L76
 1366 002e 2B68     		ldr	r3, [r5]
 1367 0030 B0FBF3F0 		udiv	r0, r0, r3
 625:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->atime.tv_sec  = jiffies%HZ;
 1368              		.loc 1 625 25 discriminator 1 view .LVU426
 1369 0034 E063     		str	r0, [r4, #60]
 626:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->mtime = stat->atime;
 1370              		.loc 1 626 5 is_stmt 1 view .LVU427
 626:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->mtime = stat->atime;
 1371              		.loc 1 626 27 is_stmt 0 view .LVU428
 1372 0036 FFF7FEFF 		bl	ktime_get
 1373              	.LVL120:
 626:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->mtime = stat->atime;
 1374              		.loc 1 626 34 discriminator 1 view .LVU429
 1375 003a 2B68     		ldr	r3, [r5]
 1376 003c B0FBF3F2 		udiv	r2, r0, r3
 1377 0040 03FB1200 		mls	r0, r3, r2, r0
 626:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->mtime = stat->atime;
 1378              		.loc 1 626 25 discriminator 1 view .LVU430
 1379 0044 A063     		str	r0, [r4, #56]
 627:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->ctime = stat->atime;
 1380              		.loc 1 627 5 is_stmt 1 view .LVU431
 627:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->ctime = stat->atime;
 1381              		.loc 1 627 17 is_stmt 0 view .LVU432
 1382 0046 04F14002 		add	r2, r4, #64
 1383 004a 04F13803 		add	r3, r4, #56
 1384 004e 93E80300 		ldm	r3, {r0, r1}
 1385 0052 82E80300 		stm	r2, {r0, r1}
 628:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->blksize = PAGE_SIZE;
 1386              		.loc 1 628 5 is_stmt 1 view .LVU433
 628:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->blksize = PAGE_SIZE;
 1387              		.loc 1 628 17 is_stmt 0 view .LVU434
 1388 0056 04F14802 		add	r2, r4, #72
 1389 005a 93E80300 		ldm	r3, {r0, r1}
 1390 005e 82E80300 		stm	r2, {r0, r1}
 629:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->blocks  = 0;
 1391              		.loc 1 629 5 is_stmt 1 view .LVU435
 629:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->blocks  = 0;
 1392              		.loc 1 629 19 is_stmt 0 view .LVU436
 1393 0062 4FF48053 		mov	r3, #4096
 1394 0066 E360     		str	r3, [r4, #12]
 630:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 1395              		.loc 1 630 5 is_stmt 1 view .LVU437
 630:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 1396              		.loc 1 630 19 is_stmt 0 view .LVU438
 1397 0068 0020     		movs	r0, #0
 1398 006a A065     		str	r0, [r4, #88]
 631:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 1399              		.loc 1 631 5 is_stmt 1 view .LVU439
 1400              	.LVL121:
 1401              	.L71:
 632:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1402              		.loc 1 632 1 is_stmt 0 view .LVU440
ARM GAS  /tmp/cczxpjuQ.s 			page 76


 1403 006c 38BD     		pop	{r3, r4, r5, pc}
 1404              	.LVL122:
 1405              	.L73:
 619:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->mode = inode->i_mode;
 1406              		.loc 1 619 12 view .LVU441
 1407 006e 6FF00100 		mvn	r0, #1
 1408              	.LVL123:
 619:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->mode = inode->i_mode;
 1409              		.loc 1 619 12 view .LVU442
 1410 0072 FBE7     		b	.L71
 1411              	.LVL124:
 1412              	.L74:
 619:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->mode = inode->i_mode;
 1413              		.loc 1 619 12 view .LVU443
 1414 0074 6FF00100 		mvn	r0, #1
 1415              	.LVL125:
 619:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     stat->mode = inode->i_mode;
 1416              		.loc 1 619 12 view .LVU444
 1417 0078 F8E7     		b	.L71
 1418              	.L77:
 1419 007a 00BF     		.align	2
 1420              	.L76:
 1421 007c 00000000 		.word	HZ
 1422              		.cfi_endproc
 1423              	.LFE1068:
 1425              		.section	.text.initramfs_lookup,"ax",%progbits
 1426              		.align	1
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1431              	initramfs_lookup:
 1432              	.LVL126:
 1433              	.LFB1051:
 304:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry_inode == NULL) return NULL;
 1434              		.loc 1 304 1 is_stmt 1 view -0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 304:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry_inode == NULL) return NULL;
 1438              		.loc 1 304 1 is_stmt 0 view .LVU446
 1439 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1440              	.LCFI15:
 1441              		.cfi_def_cfa_offset 24
 1442              		.cfi_offset 3, -24
 1443              		.cfi_offset 4, -20
 1444              		.cfi_offset 5, -16
 1445              		.cfi_offset 6, -12
 1446              		.cfi_offset 7, -8
 1447              		.cfi_offset 14, -4
 305:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if ( (dentry_inode->i_mode & S_IFMT) != S_IFDIR ) return NULL;
 1448              		.loc 1 305 5 is_stmt 1 view .LVU447
 305:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if ( (dentry_inode->i_mode & S_IFMT) != S_IFDIR ) return NULL;
 1449              		.loc 1 305 7 is_stmt 0 view .LVU448
 1450 0002 0546     		mov	r5, r0
 1451 0004 20B3     		cbz	r0, .L83
 1452 0006 0E46     		mov	r6, r1
 306:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* pos;
ARM GAS  /tmp/cczxpjuQ.s 			page 77


 1453              		.loc 1 306 5 is_stmt 1 view .LVU449
 306:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* pos;
 1454              		.loc 1 306 23 is_stmt 0 view .LVU450
 1455 0008 4368     		ldr	r3, [r0, #4]
 306:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* pos;
 1456              		.loc 1 306 32 view .LVU451
 1457 000a 03F47043 		and	r3, r3, #61440
 306:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* pos;
 1458              		.loc 1 306 8 view .LVU452
 1459 000e B3F5804F 		cmp	r3, #16384
 1460 0012 1FD1     		bne	.L84
 307:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_lock(&dentry_inode->lock);
 1461              		.loc 1 307 5 is_stmt 1 view .LVU453
 308:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_for_each_entry(pos, &dentry_inode->dentry_list_head,list_node ) {
 1462              		.loc 1 308 5 view .LVU454
 1463 0014 00F12407 		add	r7, r0, #36
 1464 0018 3846     		mov	r0, r7
 1465              	.LVL127:
 308:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_for_each_entry(pos, &dentry_inode->dentry_list_head,list_node ) {
 1466              		.loc 1 308 5 is_stmt 0 view .LVU455
 1467 001a FFF7FEFF 		bl	spin_lock
 1468              	.LVL128:
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
 1469              		.loc 1 309 5 is_stmt 1 view .LVU456
 1470              	.LBB360:
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
 1471              		.loc 1 309 5 view .LVU457
 1472 001e EC69     		ldr	r4, [r5, #28]
 1473              	.LVL129:
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
 1474              		.loc 1 309 5 view .LVU458
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
 1475              		.loc 1 309 5 view .LVU459
 1476 0020 0C3C     		subs	r4, r4, #12
 1477              	.LVL130:
 1478              	.L80:
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
 1479              		.loc 1 309 5 is_stmt 0 view .LVU460
 1480              	.LBE360:
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
 1481              		.loc 1 309 5 is_stmt 1 discriminator 1 view .LVU461
 1482 0022 04F10C03 		add	r3, r4, #12
 1483 0026 05F11C02 		add	r2, r5, #28
 1484 002a 9342     		cmp	r3, r2
 1485 002c 0BD0     		beq	.L86
 310:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             spin_unlock(&dentry_inode->lock);
 1486              		.loc 1 310 9 view .LVU462
 310:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             spin_unlock(&dentry_inode->lock);
 1487              		.loc 1 310 13 is_stmt 0 view .LVU463
 1488 002e 3146     		mov	r1, r6
 1489 0030 6068     		ldr	r0, [r4, #4]
 1490 0032 FFF7FEFF 		bl	strcmp
 1491              	.LVL131:
 310:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             spin_unlock(&dentry_inode->lock);
 1492              		.loc 1 310 12 discriminator 1 view .LVU464
 1493 0036 10B1     		cbz	r0, .L87
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
ARM GAS  /tmp/cczxpjuQ.s 			page 78


 1494              		.loc 1 309 5 is_stmt 1 discriminator 2 view .LVU465
 1495              	.LBB361:
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
 1496              		.loc 1 309 5 discriminator 2 view .LVU466
 1497 0038 E468     		ldr	r4, [r4, #12]
 1498              	.LVL132:
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
 1499              		.loc 1 309 5 discriminator 2 view .LVU467
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
 1500              		.loc 1 309 5 discriminator 2 view .LVU468
 1501 003a 0C3C     		subs	r4, r4, #12
 1502              	.LVL133:
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
 1503              		.loc 1 309 5 is_stmt 0 discriminator 2 view .LVU469
 1504 003c F1E7     		b	.L80
 1505              	.LVL134:
 1506              	.L87:
 309:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (strcmp(pos->name, name) == 0) {
 1507              		.loc 1 309 5 discriminator 2 view .LVU470
 1508              	.LBE361:
 311:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             return pos;
 1509              		.loc 1 311 13 is_stmt 1 view .LVU471
 1510 003e 3846     		mov	r0, r7
 1511 0040 FFF7FEFF 		bl	spin_unlock
 1512              	.LVL135:
 312:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 1513              		.loc 1 312 13 view .LVU472
 312:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 1514              		.loc 1 312 20 is_stmt 0 view .LVU473
 1515 0044 07E0     		b	.L78
 1516              	.L86:
 315:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return NULL;
 1517              		.loc 1 315 5 is_stmt 1 view .LVU474
 1518 0046 3846     		mov	r0, r7
 1519 0048 FFF7FEFF 		bl	spin_unlock
 1520              	.LVL136:
 316:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 1521              		.loc 1 316 5 view .LVU475
 316:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 1522              		.loc 1 316 12 is_stmt 0 view .LVU476
 1523 004c 0024     		movs	r4, #0
 1524              	.LVL137:
 316:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 1525              		.loc 1 316 12 view .LVU477
 1526 004e 02E0     		b	.L78
 1527              	.LVL138:
 1528              	.L83:
 305:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if ( (dentry_inode->i_mode & S_IFMT) != S_IFDIR ) return NULL;
 1529              		.loc 1 305 37 discriminator 1 view .LVU478
 1530 0050 0446     		mov	r4, r0
 1531 0052 00E0     		b	.L78
 1532              	.L84:
 306:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* pos;
 1533              		.loc 1 306 62 discriminator 1 view .LVU479
 1534 0054 0024     		movs	r4, #0
 1535              	.LVL139:
 1536              	.L78:
ARM GAS  /tmp/cczxpjuQ.s 			page 79


 317:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1537              		.loc 1 317 1 view .LVU480
 1538 0056 2046     		mov	r0, r4
 1539 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 317:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1540              		.loc 1 317 1 view .LVU481
 1541              		.cfi_endproc
 1542              	.LFE1051:
 1544              		.section	.text.initramfs_vfs_lookup,"ax",%progbits
 1545              		.align	1
 1546              		.syntax unified
 1547              		.thumb
 1548              		.thumb_func
 1550              	initramfs_vfs_lookup:
 1551              	.LVL140:
 1552              	.LFB1061:
 530:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 1553              		.loc 1 530 105 is_stmt 1 view -0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 530:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 1557              		.loc 1 530 105 is_stmt 0 view .LVU483
 1558 0000 70B5     		push	{r4, r5, r6, lr}
 1559              	.LCFI16:
 1560              		.cfi_def_cfa_offset 16
 1561              		.cfi_offset 4, -16
 1562              		.cfi_offset 5, -12
 1563              		.cfi_offset 6, -8
 1564              		.cfi_offset 14, -4
 1565 0002 0646     		mov	r6, r0
 1566 0004 0D46     		mov	r5, r1
 532:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     char *name = dentry->d_name.name;                           
 1567              		.loc 1 532 5 is_stmt 1 view .LVU484
 1568              	.LVL141:
 533:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *pos;    
 1569              		.loc 1 533 5 view .LVU485
 534:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     pos = initramfs_lookup(dir_inode,name);       //Êü•ËØ¢Ëé∑Âæódentry
 1570              		.loc 1 534 5 view .LVU486
 535:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(pos == NULL) return NULL;
 1571              		.loc 1 535 5 view .LVU487
 535:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(pos == NULL) return NULL;
 1572              		.loc 1 535 11 is_stmt 0 view .LVU488
 1573 0006 8969     		ldr	r1, [r1, #24]
 1574              	.LVL142:
 535:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(pos == NULL) return NULL;
 1575              		.loc 1 535 11 view .LVU489
 1576 0008 D0F88400 		ldr	r0, [r0, #132]
 1577              	.LVL143:
 535:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(pos == NULL) return NULL;
 1578              		.loc 1 535 11 view .LVU490
 1579 000c FFF7FEFF 		bl	initramfs_lookup
 1580              	.LVL144:
 536:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1581              		.loc 1 536 5 is_stmt 1 view .LVU491
 536:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1582              		.loc 1 536 7 is_stmt 0 view .LVU492
ARM GAS  /tmp/cczxpjuQ.s 			page 80


 1583 0010 0446     		mov	r4, r0
 1584 0012 78B1     		cbz	r0, .L88
 538:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 1585              		.loc 1 538 5 is_stmt 1 view .LVU493
 538:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 1586              		.loc 1 538 9 is_stmt 0 view .LVU494
 1587 0014 0146     		mov	r1, r0
 1588 0016 2846     		mov	r0, r5
 1589              	.LVL145:
 538:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 1590              		.loc 1 538 9 view .LVU495
 1591 0018 FFF7FEFF 		bl	initramfs_get_dentry
 1592              	.LVL146:
 538:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 1593              		.loc 1 538 7 discriminator 1 view .LVU496
 1594 001c 60B1     		cbz	r0, .L90
 541:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(find_inode == NULL)
 1595              		.loc 1 541 5 is_stmt 1 view .LVU497
 541:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(find_inode == NULL)
 1596              		.loc 1 541 33 is_stmt 0 view .LVU498
 1597 001e 7169     		ldr	r1, [r6, #20]
 1598 0020 A068     		ldr	r0, [r4, #8]
 1599 0022 FFF7FEFF 		bl	initramfs_get_inode
 1600              	.LVL147:
 542:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 1601              		.loc 1 542 5 is_stmt 1 view .LVU499
 542:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 1602              		.loc 1 542 7 is_stmt 0 view .LVU500
 1603 0026 0446     		mov	r4, r0
 1604              	.LVL148:
 542:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 1605              		.loc 1 542 7 view .LVU501
 1606 0028 20B1     		cbz	r0, .L88
 545:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return NULL;
 1607              		.loc 1 545 5 is_stmt 1 view .LVU502
 545:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return NULL;
 1608              		.loc 1 545 12 is_stmt 0 view .LVU503
 1609 002a 0146     		mov	r1, r0
 1610 002c 2846     		mov	r0, r5
 1611              	.LVL149:
 545:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return NULL;
 1612              		.loc 1 545 12 view .LVU504
 1613 002e FFF7FEFF 		bl	d_add
 1614              	.LVL150:
 545:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return NULL;
 1615              		.loc 1 545 12 view .LVU505
 1616 0032 0446     		mov	r4, r0
 1617              	.LVL151:
 1618              	.L88:
 547:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1619              		.loc 1 547 1 view .LVU506
 1620 0034 2046     		mov	r0, r4
 1621 0036 70BD     		pop	{r4, r5, r6, pc}
 1622              	.LVL152:
 1623              	.L90:
 539:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1624              		.loc 1 539 16 view .LVU507
ARM GAS  /tmp/cczxpjuQ.s 			page 81


 1625 0038 0446     		mov	r4, r0
 1626              	.LVL153:
 539:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1627              		.loc 1 539 16 view .LVU508
 1628 003a FBE7     		b	.L88
 1629              		.cfi_endproc
 1630              	.LFE1061:
 1632              		.section	.text.initramfs_get_vfs_superblock,"ax",%progbits
 1633              		.align	1
 1634              		.syntax unified
 1635              		.thumb
 1636              		.thumb_func
 1638              	initramfs_get_vfs_superblock:
 1639              	.LVL154:
 1640              	.LFB1053:
 410:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(sb == NULL) return NULL;
 1641              		.loc 1 410 1 is_stmt 1 view -0
 1642              		.cfi_startproc
 1643              		@ args = 0, pretend = 0, frame = 0
 1644              		@ frame_needed = 0, uses_anonymous_args = 0
 410:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(sb == NULL) return NULL;
 1645              		.loc 1 410 1 is_stmt 0 view .LVU510
 1646 0000 10B5     		push	{r4, lr}
 1647              	.LCFI17:
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 4, -8
 1650              		.cfi_offset 14, -4
 411:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct super_block * vsb  = alloc_super(NULL);                        //ÂàÜÈÖç‰∫Ü‰∏Ä‰∏™superblo
 1651              		.loc 1 411 5 is_stmt 1 view .LVU511
 411:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct super_block * vsb  = alloc_super(NULL);                        //ÂàÜÈÖç‰∫Ü‰∏Ä‰∏™superblo
 1652              		.loc 1 411 7 is_stmt 0 view .LVU512
 1653 0002 0446     		mov	r4, r0
 1654 0004 40B1     		cbz	r0, .L92
 412:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(vsb == NULL) return NULL;
 1655              		.loc 1 412 5 is_stmt 1 view .LVU513
 412:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(vsb == NULL) return NULL;
 1656              		.loc 1 412 33 is_stmt 0 view .LVU514
 1657 0006 0020     		movs	r0, #0
 1658              	.LVL155:
 412:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(vsb == NULL) return NULL;
 1659              		.loc 1 412 33 view .LVU515
 1660 0008 FFF7FEFF 		bl	alloc_super
 1661              	.LVL156:
 413:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     vsb->s_fs_info =   sb;
 1662              		.loc 1 413 5 is_stmt 1 view .LVU516
 413:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     vsb->s_fs_info =   sb;
 1663              		.loc 1 413 7 is_stmt 0 view .LVU517
 1664 000c 20B1     		cbz	r0, .L92
 414:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     vsb->s_d_op    =  &initramfs_dentry_operation;
 1665              		.loc 1 414 5 is_stmt 1 view .LVU518
 414:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     vsb->s_d_op    =  &initramfs_dentry_operation;
 1666              		.loc 1 414 20 is_stmt 0 view .LVU519
 1667 000e 0463     		str	r4, [r0, #48]
 415:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     vsb->s_op      =  &initramfs_super_operation;    
 1668              		.loc 1 415 5 is_stmt 1 view .LVU520
 415:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     vsb->s_op      =  &initramfs_super_operation;    
 1669              		.loc 1 415 20 is_stmt 0 view .LVU521
ARM GAS  /tmp/cczxpjuQ.s 			page 82


 1670 0010 024B     		ldr	r3, .L96
 1671 0012 0367     		str	r3, [r0, #112]
 416:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return vsb;
 1672              		.loc 1 416 5 is_stmt 1 view .LVU522
 416:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return vsb;
 1673              		.loc 1 416 20 is_stmt 0 view .LVU523
 1674 0014 024B     		ldr	r3, .L96+4
 1675 0016 0361     		str	r3, [r0, #16]
 417:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 1676              		.loc 1 417 5 is_stmt 1 view .LVU524
 1677              	.LVL157:
 1678              	.L92:
 418:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1679              		.loc 1 418 1 is_stmt 0 view .LVU525
 1680 0018 10BD     		pop	{r4, pc}
 1681              	.LVL158:
 1682              	.L97:
 418:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 1683              		.loc 1 418 1 view .LVU526
 1684 001a 00BF     		.align	2
 1685              	.L96:
 1686 001c 00000000 		.word	initramfs_dentry_operation
 1687 0020 00000000 		.word	initramfs_super_operation
 1688              		.cfi_endproc
 1689              	.LFE1053:
 1691              		.section	.text.initramfs_superblock_create,"ax",%progbits
 1692              		.align	1
 1693              		.syntax unified
 1694              		.thumb
 1695              		.thumb_func
 1697              	initramfs_superblock_create:
 1698              	.LFB1049:
 273:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_superblock*d_sb = kmalloc(sizeof(struct initramfs_superblock),GFP_KERNEL);
 1699              		.loc 1 273 1 is_stmt 1 view -0
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 0
 1702              		@ frame_needed = 0, uses_anonymous_args = 0
 1703 0000 38B5     		push	{r3, r4, r5, lr}
 1704              	.LCFI18:
 1705              		.cfi_def_cfa_offset 16
 1706              		.cfi_offset 3, -16
 1707              		.cfi_offset 4, -12
 1708              		.cfi_offset 5, -8
 1709              		.cfi_offset 14, -4
 274:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(d_sb == NULL){
 1710              		.loc 1 274 5 view .LVU528
 1711              	.LVL159:
 1712              	.LBB362:
 1713              	.LBI362:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 1714              		.loc 5 379 21 view .LVU529
 1715              	.LBB363:
 1716              		.loc 5 380 2 view .LVU530
 1717              		.loc 5 380 9 is_stmt 0 view .LVU531
 1718 0002 4FF44C61 		mov	r1, #3264
 1719 0006 2020     		movs	r0, #32
 1720 0008 FFF7FEFF 		bl	__smalloc__
ARM GAS  /tmp/cczxpjuQ.s 			page 83


 1721              	.LVL160:
 1722              		.loc 5 380 9 view .LVU532
 1723              	.LBE363:
 1724              	.LBE362:
 275:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;        
 1725              		.loc 1 275 5 is_stmt 1 view .LVU533
 275:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;        
 1726              		.loc 1 275 7 is_stmt 0 view .LVU534
 1727 000c 0446     		mov	r4, r0
 1728 000e 20B3     		cbz	r0, .L98
 278:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_lock_init(&d_sb->lock);
 1729              		.loc 1 278 5 is_stmt 1 view .LVU535
 278:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_lock_init(&d_sb->lock);
 1730              		.loc 1 278 17 is_stmt 0 view .LVU536
 1731 0010 154B     		ldr	r3, .L103
 1732 0012 40F8043B 		str	r3, [r0], #4
 1733              	.LVL161:
 279:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     INIT_LIST_HEAD(&d_sb->inode_list_head);
 1734              		.loc 1 279 5 is_stmt 1 view .LVU537
 1735 0016 FFF7FEFF 		bl	spin_lock_init
 1736              	.LVL162:
 280:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode* root_inode = initramfs_create_empty_inode(d_sb ,&initramfs_file_fops,0)
 1737              		.loc 1 280 5 view .LVU538
 1738 001a 04F11803 		add	r3, r4, #24
 1739              	.LVL163:
 1740              	.LBB364:
 1741              	.LBI364:
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 1742              		.loc 9 35 20 view .LVU539
 1743              	.LBB365:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1744              		.loc 9 37 2 view .LVU540
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1745              		.loc 9 37 2 view .LVU541
 1746              	.LBB366:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1747              		.loc 9 37 2 view .LVU542
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1748              		.loc 9 37 2 view .LVU543
 1749              	.LBE366:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1750              		.loc 9 37 2 discriminator 2 view .LVU544
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1751              		.loc 9 37 2 discriminator 2 view .LVU545
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1752              		.loc 9 37 2 discriminator 2 view .LVU546
 1753 001e A361     		str	r3, [r4, #24]
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1754              		.loc 9 37 2 discriminator 2 view .LVU547
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1755              		.loc 9 37 2 discriminator 2 view .LVU548
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1756              		.loc 9 38 2 view .LVU549
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1757              		.loc 9 38 2 view .LVU550
 1758              	.LBB367:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
ARM GAS  /tmp/cczxpjuQ.s 			page 84


 1759              		.loc 9 38 2 view .LVU551
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1760              		.loc 9 38 2 view .LVU552
 1761              	.LBE367:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1762              		.loc 9 38 2 discriminator 2 view .LVU553
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1763              		.loc 9 38 2 discriminator 2 view .LVU554
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1764              		.loc 9 38 2 discriminator 2 view .LVU555
 1765 0020 E361     		str	r3, [r4, #28]
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1766              		.loc 9 38 2 discriminator 2 view .LVU556
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1767              		.loc 9 38 2 discriminator 2 view .LVU557
 1768              	.LVL164:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1769              		.loc 9 38 2 is_stmt 0 discriminator 2 view .LVU558
 1770              	.LBE365:
 1771              	.LBE364:
 281:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(root_inode == NULL){
 1772              		.loc 1 281 5 is_stmt 1 view .LVU559
 281:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(root_inode == NULL){
 1773              		.loc 1 281 42 is_stmt 0 view .LVU560
 1774 0022 0022     		movs	r2, #0
 1775 0024 1149     		ldr	r1, .L103+4
 1776 0026 2046     		mov	r0, r4
 1777 0028 FFF7FEFF 		bl	initramfs_create_empty_inode
 1778              	.LVL165:
 282:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(d_sb);
 1779              		.loc 1 282 5 is_stmt 1 view .LVU561
 282:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(d_sb);
 1780              		.loc 1 282 7 is_stmt 0 view .LVU562
 1781 002c 0546     		mov	r5, r0
 1782 002e B0B1     		cbz	r0, .L102
 286:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     d_sb->rootinode = root_inode;
 1783              		.loc 1 286 5 is_stmt 1 view .LVU563
 286:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     d_sb->rootinode = root_inode;
 1784              		.loc 1 286 24 is_stmt 0 view .LVU564
 1785 0030 44F2ED13 		movw	r3, #16877
 1786 0034 4360     		str	r3, [r0, #4]
 287:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     root_inode->i_fop = &initramfs_file_fops;
 1787              		.loc 1 287 5 is_stmt 1 view .LVU565
 287:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     root_inode->i_fop = &initramfs_file_fops;
 1788              		.loc 1 287 21 is_stmt 0 view .LVU566
 1789 0036 6061     		str	r0, [r4, #20]
 288:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     atomic_inc (&root_inode->dentry_count); 
 1790              		.loc 1 288 5 is_stmt 1 view .LVU567
 288:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     atomic_inc (&root_inode->dentry_count); 
 1791              		.loc 1 288 23 is_stmt 0 view .LVU568
 1792 0038 0C4B     		ldr	r3, .L103+4
 1793 003a 0361     		str	r3, [r0, #16]
 289:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     INIT_LIST_HEAD(&root_inode->dentry_list_head);
 1794              		.loc 1 289 5 is_stmt 1 view .LVU569
 1795 003c 00F10C03 		add	r3, r0, #12
 1796              	.LVL166:
 1797              	.LBB368:
ARM GAS  /tmp/cczxpjuQ.s 			page 85


 1798              	.LBI368:
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_set_release() - atomic set with release ordering
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to assign
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically sets @v to @i with release ordering.
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_set_release() there.
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_set_release(atomic_t *v, int i)
  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_write(v, sizeof(*v));
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_set_release(v, i);
  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_add() - atomic add with relaxed ordering
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with relaxed ordering.
  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_add() there.
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_add(int i, atomic_t *v)
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_add(i, v);
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_add_return() - atomic add with full ordering
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with full ordering.
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_add_return() there.
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_add_return(int i, atomic_t *v)
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_add_return(i, v);
ARM GAS  /tmp/cczxpjuQ.s 			page 86


 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_add_return_acquire() - atomic add with acquire ordering
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with acquire ordering.
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_add_return_acquire() there.
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_add_return_acquire(int i, atomic_t *v)
 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_add_return_acquire(i, v);
 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_add_return_release() - atomic add with release ordering
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with release ordering.
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_add_return_release() there.
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_add_return_release(int i, atomic_t *v)
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_add_return_release(i, v);
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_add_return_relaxed() - atomic add with relaxed ordering
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with relaxed ordering.
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_add_return_relaxed() there.
 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_add_return_relaxed(int i, atomic_t *v)
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_add_return_relaxed(i, v);
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
ARM GAS  /tmp/cczxpjuQ.s 			page 87


 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_add() - atomic add with full ordering
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with full ordering.
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_add() there.
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_add(int i, atomic_t *v)
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_add(i, v);
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_add_acquire() - atomic add with acquire ordering
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with acquire ordering.
 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_add_acquire() there.
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_add_acquire(int i, atomic_t *v)
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_add_acquire(i, v);
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_add_release() - atomic add with release ordering
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with release ordering.
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_add_release() there.
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_add_release(int i, atomic_t *v)
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_add_release(i, v);
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
ARM GAS  /tmp/cczxpjuQ.s 			page 88


 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_add_relaxed() - atomic add with relaxed ordering
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with relaxed ordering.
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_add_relaxed() there.
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 249:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 250:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_add_relaxed(int i, atomic_t *v)
 251:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_add_relaxed(i, v);
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 255:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 256:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 257:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_sub() - atomic subtract with relaxed ordering
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 261:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with relaxed ordering.
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_sub() there.
 264:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 266:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 267:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 268:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_sub(int i, atomic_t *v)
 269:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 270:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 271:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_sub(i, v);
 272:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 273:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 274:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 275:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_sub_return() - atomic subtract with full ordering
 276:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 277:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 278:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 279:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with full ordering.
 280:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 281:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_sub_return() there.
 282:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 283:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 284:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 285:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 286:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_sub_return(int i, atomic_t *v)
 287:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 288:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 289:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 290:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_sub_return(i, v);
 291:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 292:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 293:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 294:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_sub_return_acquire() - atomic subtract with acquire ordering
 295:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
ARM GAS  /tmp/cczxpjuQ.s 			page 89


 296:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 297:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 298:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with acquire ordering.
 299:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 300:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_sub_return_acquire() there.
 301:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 302:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 303:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 304:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 305:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_sub_return_acquire(int i, atomic_t *v)
 306:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 307:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 308:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_sub_return_acquire(i, v);
 309:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 310:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 311:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 312:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_sub_return_release() - atomic subtract with release ordering
 313:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 314:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 315:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 316:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with release ordering.
 317:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 318:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_sub_return_release() there.
 319:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 320:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 321:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 322:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 323:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_sub_return_release(int i, atomic_t *v)
 324:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 325:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 326:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 327:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_sub_return_release(i, v);
 328:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 329:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 330:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 331:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_sub_return_relaxed() - atomic subtract with relaxed ordering
 332:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 333:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 334:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 335:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with relaxed ordering.
 336:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 337:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_sub_return_relaxed() there.
 338:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 339:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 340:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 341:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 342:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_sub_return_relaxed(int i, atomic_t *v)
 343:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 344:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 345:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_sub_return_relaxed(i, v);
 346:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 347:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 348:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 349:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_sub() - atomic subtract with full ordering
 350:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 351:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 352:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
ARM GAS  /tmp/cczxpjuQ.s 			page 90


 353:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with full ordering.
 354:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 355:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_sub() there.
 356:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 357:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 358:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 359:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 360:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_sub(int i, atomic_t *v)
 361:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 362:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 363:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 364:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_sub(i, v);
 365:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 366:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 367:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 368:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_sub_acquire() - atomic subtract with acquire ordering
 369:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 370:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 371:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 372:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with acquire ordering.
 373:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 374:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_sub_acquire() there.
 375:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 376:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 377:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 378:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_sub_acquire(int i, atomic_t *v)
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 381:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 382:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_sub_acquire(i, v);
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 385:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 386:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_sub_release() - atomic subtract with release ordering
 387:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 388:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 389:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 390:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with release ordering.
 391:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 392:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_sub_release() there.
 393:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 394:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 395:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 396:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 397:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_sub_release(int i, atomic_t *v)
 398:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 399:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 400:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 401:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_sub_release(i, v);
 402:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 403:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 404:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 405:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_sub_relaxed() - atomic subtract with relaxed ordering
 406:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 407:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 408:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 409:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with relaxed ordering.
ARM GAS  /tmp/cczxpjuQ.s 			page 91


 410:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 411:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_sub_relaxed() there.
 412:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 413:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 414:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 415:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 416:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_sub_relaxed(int i, atomic_t *v)
 417:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 418:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 419:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_sub_relaxed(i, v);
 420:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 421:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 422:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 423:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_inc() - atomic increment with relaxed ordering
 424:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 425:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 426:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with relaxed ordering.
 427:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 428:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_inc() there.
 429:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 430:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 431:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 432:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 433:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_inc(atomic_t *v)
 1799              		.loc 6 433 1 view .LVU570
 434:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 435:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 1800              		.loc 6 435 2 view .LVU571
 436:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_inc(v);
 1801              		.loc 6 436 2 view .LVU572
 1802              	.LBB369:
 1803              	.LBI369:
 510:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 511:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 512:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 513:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_set_release() - atomic set with release ordering
 514:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 515:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to assign
 516:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 517:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically sets @v to @i with release ordering.
 518:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 519:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_set_release() elsewhere.
 520:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 521:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
 522:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 523:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
 524:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_set_release(atomic_t *v, int i)
 525:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 526:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_set_release)
 527:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_set_release(v, i);
 528:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 529:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (__native_word(atomic_t)) {
 530:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		smp_store_release(&(v)->counter, i);
 531:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	} else {
 532:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		__atomic_release_fence();
 533:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		raw_atomic_set(v, i);
 534:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	}
ARM GAS  /tmp/cczxpjuQ.s 			page 92


 535:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 536:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 537:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 538:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 539:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_add() - atomic add with relaxed ordering
 540:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 541:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 542:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 543:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with relaxed ordering.
 544:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 545:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_add() elsewhere.
 546:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 547:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
 548:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 549:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
 550:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_add(int i, atomic_t *v)
 551:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 552:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_add(i, v);
 553:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 554:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 555:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 556:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_add_return() - atomic add with full ordering
 557:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 558:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 559:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 560:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with full ordering.
 561:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 562:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_add_return() elsewhere.
 563:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 564:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 565:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 566:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 567:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_add_return(int i, atomic_t *v)
 568:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 569:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_add_return)
 570:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return(i, v);
 571:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_add_return_relaxed)
 572:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
 573:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
 574:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_add_return_relaxed(i, v);
 575:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
 576:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 577:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 578:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_add_return"
 579:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 580:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 581:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 582:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 583:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_add_return_acquire() - atomic add with acquire ordering
 584:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 585:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 586:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 587:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with acquire ordering.
 588:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 589:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_add_return_acquire() elsewhere.
 590:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 591:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
ARM GAS  /tmp/cczxpjuQ.s 			page 93


 592:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 593:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 594:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_add_return_acquire(int i, atomic_t *v)
 595:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 596:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_add_return_acquire)
 597:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return_acquire(i, v);
 598:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_add_return_relaxed)
 599:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_add_return_relaxed(i, v);
 600:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
 601:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 602:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_add_return)
 603:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return(i, v);
 604:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 605:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_add_return_acquire"
 606:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 607:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 608:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 609:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 610:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_add_return_release() - atomic add with release ordering
 611:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 612:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 613:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 614:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with release ordering.
 615:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 616:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_add_return_release() elsewhere.
 617:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 618:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 619:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 620:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 621:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_add_return_release(int i, atomic_t *v)
 622:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 623:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_add_return_release)
 624:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return_release(i, v);
 625:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_add_return_relaxed)
 626:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
 627:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return_relaxed(i, v);
 628:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_add_return)
 629:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return(i, v);
 630:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 631:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_add_return_release"
 632:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 633:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 634:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 635:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 636:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_add_return_relaxed() - atomic add with relaxed ordering
 637:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 638:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 639:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 640:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with relaxed ordering.
 641:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 642:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_add_return_relaxed() elsewhere.
 643:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 644:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 645:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 646:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 647:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_add_return_relaxed(int i, atomic_t *v)
 648:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
ARM GAS  /tmp/cczxpjuQ.s 			page 94


 649:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_add_return_relaxed)
 650:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return_relaxed(i, v);
 651:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_add_return)
 652:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return(i, v);
 653:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 654:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_add_return_relaxed"
 655:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 656:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 657:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 658:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 659:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_add() - atomic add with full ordering
 660:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 661:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 662:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 663:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with full ordering.
 664:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 665:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_add() elsewhere.
 666:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 667:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 668:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 669:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 670:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_add(int i, atomic_t *v)
 671:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 672:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_add)
 673:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add(i, v);
 674:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_add_relaxed)
 675:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
 676:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
 677:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_add_relaxed(i, v);
 678:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
 679:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 680:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 681:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_add"
 682:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 683:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 684:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 685:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 686:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_add_acquire() - atomic add with acquire ordering
 687:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 688:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 689:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 690:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with acquire ordering.
 691:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 692:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_add_acquire() elsewhere.
 693:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 694:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 695:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 696:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 697:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_add_acquire(int i, atomic_t *v)
 698:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 699:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_add_acquire)
 700:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add_acquire(i, v);
 701:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_add_relaxed)
 702:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_add_relaxed(i, v);
 703:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
 704:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 705:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_add)
ARM GAS  /tmp/cczxpjuQ.s 			page 95


 706:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add(i, v);
 707:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 708:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_add_acquire"
 709:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 710:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 711:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 712:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 713:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_add_release() - atomic add with release ordering
 714:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 715:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 716:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 717:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with release ordering.
 718:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 719:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_add_release() elsewhere.
 720:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 721:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 722:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 723:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 724:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_add_release(int i, atomic_t *v)
 725:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 726:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_add_release)
 727:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add_release(i, v);
 728:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_add_relaxed)
 729:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
 730:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add_relaxed(i, v);
 731:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_add)
 732:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add(i, v);
 733:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 734:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_add_release"
 735:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 736:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 737:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 738:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 739:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_add_relaxed() - atomic add with relaxed ordering
 740:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 741:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 742:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 743:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with relaxed ordering.
 744:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 745:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_add_relaxed() elsewhere.
 746:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 747:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 748:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 749:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 750:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_add_relaxed(int i, atomic_t *v)
 751:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 752:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_add_relaxed)
 753:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add_relaxed(i, v);
 754:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_add)
 755:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add(i, v);
 756:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 757:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_add_relaxed"
 758:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 759:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 760:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 761:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 762:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_sub() - atomic subtract with relaxed ordering
ARM GAS  /tmp/cczxpjuQ.s 			page 96


 763:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 764:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 765:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 766:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with relaxed ordering.
 767:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 768:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_sub() elsewhere.
 769:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 770:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
 771:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 772:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
 773:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_sub(int i, atomic_t *v)
 774:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 775:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_sub(i, v);
 776:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 777:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 778:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 779:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_sub_return() - atomic subtract with full ordering
 780:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 781:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 782:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 783:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with full ordering.
 784:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 785:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_sub_return() elsewhere.
 786:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 787:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 788:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 789:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 790:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_sub_return(int i, atomic_t *v)
 791:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 792:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_sub_return)
 793:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return(i, v);
 794:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_sub_return_relaxed)
 795:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
 796:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
 797:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_sub_return_relaxed(i, v);
 798:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
 799:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 800:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 801:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	volatile int *p = (volatile int *)&v->counter;
 802:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = *p;
 803:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	*p -= i;
 804:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 805:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 806:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 807:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 808:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 809:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 810:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_sub_return_acquire() - atomic subtract with acquire ordering
 811:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 812:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 813:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 814:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with acquire ordering.
 815:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 816:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_sub_return_acquire() elsewhere.
 817:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 818:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 819:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
ARM GAS  /tmp/cczxpjuQ.s 			page 97


 820:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 821:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_sub_return_acquire(int i, atomic_t *v)
 822:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 823:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_sub_return_acquire)
 824:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return_acquire(i, v);
 825:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_sub_return_relaxed)
 826:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_sub_return_relaxed(i, v);
 827:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
 828:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 829:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_sub_return)
 830:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return(i, v);
 831:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 832:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_sub_return_acquire"
 833:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 834:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 835:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 836:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 837:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_sub_return_release() - atomic subtract with release ordering
 838:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 839:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 840:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 841:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with release ordering.
 842:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 843:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_sub_return_release() elsewhere.
 844:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 845:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 846:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 847:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 848:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_sub_return_release(int i, atomic_t *v)
 849:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 850:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_sub_return_release)
 851:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return_release(i, v);
 852:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_sub_return_relaxed)
 853:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
 854:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return_relaxed(i, v);
 855:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_sub_return)
 856:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return(i, v);
 857:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 858:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_sub_return_release"
 859:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 860:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 861:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 862:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 863:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_sub_return_relaxed() - atomic subtract with relaxed ordering
 864:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 865:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 866:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 867:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with relaxed ordering.
 868:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 869:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_sub_return_relaxed() elsewhere.
 870:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 871:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 872:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 873:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 874:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_sub_return_relaxed(int i, atomic_t *v)
 875:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 876:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_sub_return_relaxed)
ARM GAS  /tmp/cczxpjuQ.s 			page 98


 877:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return_relaxed(i, v);
 878:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_sub_return)
 879:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return(i, v);
 880:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 881:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_sub_return_relaxed"
 882:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 883:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 884:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 885:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 886:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_sub() - atomic subtract with full ordering
 887:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 888:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 889:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 890:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with full ordering.
 891:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 892:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_sub() elsewhere.
 893:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 894:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 895:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 896:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 897:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_sub(int i, atomic_t *v)
 898:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 899:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_sub)
 900:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub(i, v);
 901:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_sub_relaxed)
 902:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
 903:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
 904:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_sub_relaxed(i, v);
 905:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
 906:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 907:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 908:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_sub"
 909:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 910:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 911:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 912:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 913:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_sub_acquire() - atomic subtract with acquire ordering
 914:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 915:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 916:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 917:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with acquire ordering.
 918:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 919:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_sub_acquire() elsewhere.
 920:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 921:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 922:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 923:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 924:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_sub_acquire(int i, atomic_t *v)
 925:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 926:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_sub_acquire)
 927:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub_acquire(i, v);
 928:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_sub_relaxed)
 929:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_sub_relaxed(i, v);
 930:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
 931:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 932:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_sub)
 933:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub(i, v);
ARM GAS  /tmp/cczxpjuQ.s 			page 99


 934:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 935:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_sub_acquire"
 936:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 937:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 938:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 939:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 940:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_sub_release() - atomic subtract with release ordering
 941:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 942:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 943:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 944:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with release ordering.
 945:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 946:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_sub_release() elsewhere.
 947:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 948:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 949:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 950:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 951:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_sub_release(int i, atomic_t *v)
 952:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 953:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_sub_release)
 954:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub_release(i, v);
 955:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_sub_relaxed)
 956:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
 957:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub_relaxed(i, v);
 958:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_sub)
 959:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub(i, v);
 960:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 961:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_sub_release"
 962:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 963:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 964:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 965:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 966:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_sub_relaxed() - atomic subtract with relaxed ordering
 967:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 968:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 969:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 970:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with relaxed ordering.
 971:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 972:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_sub_relaxed() elsewhere.
 973:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 974:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 975:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 976:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 977:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_sub_relaxed(int i, atomic_t *v)
 978:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 979:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_sub_relaxed)
 980:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub_relaxed(i, v);
 981:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_sub)
 982:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub(i, v);
 983:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 984:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_sub_relaxed"
 985:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 986:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 987:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 988:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 989:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_inc() - atomic increment with relaxed ordering
 990:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
ARM GAS  /tmp/cczxpjuQ.s 			page 100


 991:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 992:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with relaxed ordering.
 993:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 994:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_inc() elsewhere.
 995:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 996:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
 997:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 998:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
 999:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_inc(atomic_t *v)
 1804              		.loc 7 999 1 view .LVU573
1000:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1001:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_inc)
1002:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_inc(v);
1003:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1004:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	raw_atomic_add(1, v);
 1805              		.loc 7 1004 2 view .LVU574
 1806              	.LBB370:
 1807              	.LBI370:
 550:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 1808              		.loc 7 550 1 view .LVU575
 552:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 1809              		.loc 7 552 2 view .LVU576
 1810              	.LBB371:
 1811              	.LBI371:
 1812              		.file 11 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h"
   1:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** /* SPDX-License-Identifier: GPL-2.0-only */
   2:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** /*
   3:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * arch/arm/include/asm/atomic.h
   4:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  *
   5:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * Copyright (C) 1996 Russell King.
   6:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * Copyright (C) 2002 Deep Blue Solutions Ltd.
   7:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * Modified for uClinux on STM32F407
   8:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  */
   9:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #ifndef __ASM_ARM_ATOMIC_H
  10:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define __ASM_ARM_ATOMIC_H
  11:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  12:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #include <linux/compiler.h> /* Available */
  13:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #include <linux/types.h>    /* Available */
  14:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #include <asm/barrier.h>    /* Available */
  15:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  16:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** /* Include architecture-specific configuration */
  17:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  19:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #ifdef __KERNEL__
  20:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  21:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  22:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  23:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  24:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  25:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** // typedef struct {
  26:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** //     volatile int counter;
  27:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** // } atomic_t;
  28:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  29:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define ATOMIC_INIT(i) { (i) }
  30:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  31:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** /*
  32:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * On ARMv7-M, ordinary assignment (str instruction) doesn't clear the local
ARM GAS  /tmp/cczxpjuQ.s 			page 101


  33:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * strex/ldrex monitor on some implementations. The reason we can use it for
  34:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * atomic_set() is the clrex or dummy strex done on every exception return.
  35:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  */
  36:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_read(v) READ_ONCE((v)->counter)
  37:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_set(v,i)    WRITE_ONCE(((v)->counter), (i))
  38:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  39:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** /*
  40:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * ARMv6 UP and SMP safe atomic ops.  We use load exclusive and
  41:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * store exclusive to ensure that these are atomic.  We may loop
  42:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * to ensure that the update happens.
  43:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  *
  44:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * For STM32F407 (Cortex-M4, ARMv7-M), these instructions are available.
  45:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  */
  46:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  47:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define ATOMIC_OP(op, c_op, asm_op)                     \
  48:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** static inline void arch_atomic_##op(int i, atomic_t *v)         \
  49:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** {                                       \
  50:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     unsigned long tmp;                          \
  51:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     int result;                                 \
  52:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****                                         \
  53:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     /* prefetchw(&v->counter); - prefetch not available */ \
  54:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     __asm__ __volatile__("@ atomic_" #op "\n"           \
  55:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "1: ldrex   %0, [%3]\n"                      \
  56:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   " #asm_op " %0, %0, %4\n"                \
  57:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   strex   %1, %0, [%3]\n"                      \
  58:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   teq %1, #0\n"                         \
  59:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   bne 1b"                                \
  60:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "=&r" (result), "=&r" (tmp), "+Qo" (v->counter)     \
  61:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "r" (&v->counter), "Ir" (i)                 \
  62:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "cc");                                   \
  63:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** }
  64:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  65:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define ATOMIC_OP_RETURN(op, c_op, asm_op)                  \
  66:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** static inline int arch_atomic_##op##_return_relaxed(int i, atomic_t *v) \
  67:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** {                                       \
  68:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     unsigned long tmp;                          \
  69:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     int result;                                 \
  70:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****                                         \
  71:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     /* prefetchw(&v->counter); - prefetch not available */ \
  72:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     __asm__ __volatile__("@ atomic_" #op "_return\n"        \
  73:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "1: ldrex   %0, [%3]\n"                      \
  74:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   " #asm_op " %0, %0, %4\n"                \
  75:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   strex   %1, %0, [%3]\n"                      \
  76:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   teq %1, #0\n"                         \
  77:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   bne 1b"                                \
  78:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "=&r" (result), "=&r" (tmp), "+Qo" (v->counter)     \
  79:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "r" (&v->counter), "Ir" (i)                 \
  80:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "cc");                                   \
  81:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****                                         \
  82:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     return result;                              \
  83:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** }
  84:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  85:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define ATOMIC_FETCH_OP(op, c_op, asm_op)                   \
  86:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** static inline int arch_atomic_fetch_##op##_relaxed(int i, atomic_t *v)  \
  87:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** {                                       \
  88:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     unsigned long tmp;                          \
  89:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     int result, val;                             \
ARM GAS  /tmp/cczxpjuQ.s 			page 102


  90:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****                                         \
  91:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     /* prefetchw(&v->counter); - prefetch not available */ \
  92:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     __asm__ __volatile__("@ atomic_fetch_" #op "\n"       \
  93:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "1: ldrex   %0, [%4]\n"                      \
  94:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   " #asm_op " %1, %0, %5\n"                \
  95:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   strex   %2, %1, [%4]\n"                      \
  96:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   teq %2, #0\n"                         \
  97:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   bne 1b"                                \
  98:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "=&r" (result), "=&r" (val), "=&r" (tmp), "+Qo" (v->counter) \
  99:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "r" (&v->counter), "Ir" (i)                 \
 100:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "cc");                                   \
 101:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****                                         \
 102:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     return result;                              \
 103:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** }
 104:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 105:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_add_return_relaxed       arch_atomic_add_return_relaxed
 106:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_sub_return_relaxed       arch_atomic_sub_return_relaxed
 107:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_add_relaxed        arch_atomic_fetch_add_relaxed
 108:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_sub_relaxed        arch_atomic_fetch_sub_relaxed
 109:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 110:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_and_relaxed        arch_atomic_fetch_and_relaxed
 111:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_andnot_relaxed     arch_atomic_fetch_andnot_relaxed
 112:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_or_relaxed         arch_atomic_fetch_or_relaxed
 113:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_xor_relaxed        arch_atomic_fetch_xor_relaxed
 114:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 115:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** static inline int arch_atomic_cmpxchg_relaxed(atomic_t *ptr, int old, int new)
 116:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** {
 117:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     int oldval;
 118:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     unsigned long res;
 119:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 120:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     /* prefetchw(&ptr->counter); - prefetch not available */
 121:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 122:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     do {
 123:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****         __asm__ __volatile__("@ atomic_cmpxchg\n"
 124:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   ldrex   %1, [%3]\n"
 125:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   mov     %0, #0\n"
 126:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   teq     %1, %4\n"
 127:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   strexeq %0, %5, [%3]\n"
 128:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****         : "=&r" (res), "=&r" (oldval), "+Qo" (ptr->counter)
 129:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****         : "r" (&ptr->counter), "Ir" (old), "r" (new)
 130:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****         : "cc");
 131:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     } while (res);
 132:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 133:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     return oldval;
 134:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** }
 135:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_cmpxchg_relaxed        arch_atomic_cmpxchg_relaxed
 136:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 137:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** static inline int arch_atomic_fetch_add_unless(atomic_t *v, int a, int u)
 138:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** {
 139:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     int oldval, newval;
 140:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     unsigned long tmp;
 141:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 142:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     /* smp_mb(); - Memory barriers might need specific implementation */
 143:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     /* prefetchw(&v->counter); - prefetch not available */
 144:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 145:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     __asm__ __volatile__ ("@ atomic_add_unless\n"
 146:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "1: ldrex   %0, [%4]\n"
ARM GAS  /tmp/cczxpjuQ.s 			page 103


 147:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   teq %0, %5\n"
 148:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   beq 2f\n"
 149:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   add %1, %0, %6\n"
 150:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   strex   %2, %1, [%4]\n"
 151:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   teq %2, #0\n"
 152:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   bne 1b\n"
 153:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "2:"
 154:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "=&r" (oldval), "=&r" (newval), "=&r" (tmp), "+Qo" (v->counter)
 155:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "r" (&v->counter), "r" (u), "r" (a)
 156:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "cc");
 157:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 158:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     if (oldval != u)
 159:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****         ; /* smp_mb(); - Memory barriers might need specific implementation */
 160:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 161:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     return oldval;
 162:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** }
 163:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_add_unless         arch_atomic_fetch_add_unless
 164:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 165:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define ATOMIC_OPS(op, c_op, asm_op)                    \
 166:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     ATOMIC_OP(op, c_op, asm_op)                     \
 167:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     ATOMIC_OP_RETURN(op, c_op, asm_op)                  \
 168:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     ATOMIC_FETCH_OP(op, c_op, asm_op)
 169:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(add, +=, add)
 1813              		.loc 11 170 1 view .LVU577
 1814              	.LBB372:
 1815              		.loc 11 170 1 view .LVU578
 1816              		.loc 11 170 1 view .LVU579
 1817              		.loc 11 170 1 view .LVU580
 1818              		.syntax unified
 1819              	@ 170 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h" 1
 1820              		@ atomic_add
 1821 0040 53E8002F 	1: ldrex   r2, [r3]
 1822 0044 02F10102 	   add r2, r2, #1
 1823 0048 43E80021 	   strex   r1, r2, [r3]
 1824 004c 91F0000F 	   teq r1, #0
 1825 0050 F6D1     	   bne 1b
 1826              	@ 0 "" 2
 1827              	.LVL167:
 1828              		.loc 11 170 1 is_stmt 0 view .LVU581
 1829              		.thumb
 1830              		.syntax unified
 1831              	.LBE372:
 1832              	.LBE371:
 1833              	.LBE370:
 1834              	.LBE369:
 1835              	.LBE368:
 290:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return d_sb;
 1836              		.loc 1 290 5 is_stmt 1 view .LVU582
 1837 0052 00F11C03 		add	r3, r0, #28
 1838              	.LVL168:
 1839              	.LBB373:
 1840              	.LBI373:
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 1841              		.loc 9 35 20 view .LVU583
 1842              	.LBB374:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
ARM GAS  /tmp/cczxpjuQ.s 			page 104


 1843              		.loc 9 37 2 view .LVU584
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1844              		.loc 9 37 2 view .LVU585
 1845              	.LBB375:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1846              		.loc 9 37 2 view .LVU586
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1847              		.loc 9 37 2 view .LVU587
 1848              	.LBE375:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1849              		.loc 9 37 2 discriminator 2 view .LVU588
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1850              		.loc 9 37 2 discriminator 2 view .LVU589
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1851              		.loc 9 37 2 discriminator 2 view .LVU590
 1852 0056 C361     		str	r3, [r0, #28]
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1853              		.loc 9 37 2 discriminator 2 view .LVU591
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1854              		.loc 9 37 2 discriminator 2 view .LVU592
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1855              		.loc 9 38 2 view .LVU593
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1856              		.loc 9 38 2 view .LVU594
 1857              	.LBB376:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1858              		.loc 9 38 2 view .LVU595
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1859              		.loc 9 38 2 view .LVU596
 1860              	.LBE376:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1861              		.loc 9 38 2 discriminator 2 view .LVU597
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1862              		.loc 9 38 2 discriminator 2 view .LVU598
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1863              		.loc 9 38 2 discriminator 2 view .LVU599
 1864 0058 0362     		str	r3, [r0, #32]
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1865              		.loc 9 38 2 discriminator 2 view .LVU600
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1866              		.loc 9 38 2 discriminator 2 view .LVU601
 1867              	.LVL169:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1868              		.loc 9 38 2 is_stmt 0 discriminator 2 view .LVU602
 1869              	.LBE374:
 1870              	.LBE373:
 291:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** } 
 1871              		.loc 1 291 5 is_stmt 1 view .LVU603
 1872              	.L98:
 292:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static void initramfs_superblock_destory(struct initramfs_superblock* sb){
 1873              		.loc 1 292 1 is_stmt 0 view .LVU604
 1874 005a 2046     		mov	r0, r4
 1875 005c 38BD     		pop	{r3, r4, r5, pc}
 1876              	.LVL170:
 1877              	.L102:
 283:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 1878              		.loc 1 283 9 is_stmt 1 view .LVU605
ARM GAS  /tmp/cczxpjuQ.s 			page 105


 1879              	.LBB377:
 1880              	.LBI377:
 381:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 382:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline kfree(const void *ptr){
 1881              		.loc 5 383 20 view .LVU606
 1882              	.LBB378:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1883              		.loc 5 384 2 view .LVU607
 1884 005e 2046     		mov	r0, r4
 1885              	.LVL171:
 1886              		.loc 5 384 2 is_stmt 0 view .LVU608
 1887 0060 FFF7FEFF 		bl	__sfree__
 1888              	.LVL172:
 1889              		.loc 5 384 2 view .LVU609
 1890              	.LBE378:
 1891              	.LBE377:
 284:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 1892              		.loc 1 284 9 is_stmt 1 view .LVU610
 284:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 1893              		.loc 1 284 16 is_stmt 0 view .LVU611
 1894 0064 2C46     		mov	r4, r5
 1895              	.LVL173:
 284:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 1896              		.loc 1 284 16 view .LVU612
 1897 0066 F8E7     		b	.L98
 1898              	.L104:
 1899              		.align	2
 1900              	.L103:
 1901 0068 4E61BC00 		.word	12345678
 1902 006c 00000000 		.word	initramfs_file_fops
 1903              		.cfi_endproc
 1904              	.LFE1049:
 1906              		.section	.text.__alloc_pages,"ax",%progbits
 1907              		.align	1
 1908              		.syntax unified
 1909              		.thumb
 1910              		.thumb_func
 1912              	__alloc_pages:
 1913              	.LVL174:
 1914              	.LFB915:
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	struct page *page = __page_create(flags);
 1915              		.loc 4 221 77 is_stmt 1 view -0
 1916              		.cfi_startproc
 1917              		@ args = 0, pretend = 0, frame = 0
 1918              		@ frame_needed = 0, uses_anonymous_args = 0
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	struct page *page = __page_create(flags);
 1919              		.loc 4 221 77 is_stmt 0 view .LVU614
 1920 0000 38B5     		push	{r3, r4, r5, lr}
 1921              	.LCFI19:
 1922              		.cfi_def_cfa_offset 16
 1923              		.cfi_offset 3, -16
 1924              		.cfi_offset 4, -12
 1925              		.cfi_offset 5, -8
 1926              		.cfi_offset 14, -4
 1927 0002 0446     		mov	r4, r0
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	if(page == NULL)
ARM GAS  /tmp/cczxpjuQ.s 			page 106


 1928              		.loc 4 222 2 is_stmt 1 view .LVU615
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	if(page == NULL)
 1929              		.loc 4 222 22 is_stmt 0 view .LVU616
 1930 0004 FFF7FEFF 		bl	__page_create
 1931              	.LVL175:
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		return -ENOMEM ;
 1932              		.loc 4 223 2 is_stmt 1 view .LVU617
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		return -ENOMEM ;
 1933              		.loc 4 223 4 is_stmt 0 view .LVU618
 1934 0008 90B1     		cbz	r0, .L108
 1935 000a 0546     		mov	r5, r0
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	if(data == NULL){
 1936              		.loc 4 225 2 is_stmt 1 view .LVU619
 1937              	.LVL176:
 1938              	.LBB379:
 1939              	.LBI379:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 1940              		.loc 5 379 21 view .LVU620
 1941              	.LBB380:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 1942              		.loc 5 380 2 view .LVU621
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 1943              		.loc 5 380 9 is_stmt 0 view .LVU622
 1944 000c 2146     		mov	r1, r4
 1945 000e 4FF48050 		mov	r0, #4096
 1946              	.LVL177:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 1947              		.loc 5 380 9 view .LVU623
 1948 0012 FFF7FEFF 		bl	__smalloc__
 1949              	.LVL178:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 1950              		.loc 5 380 9 view .LVU624
 1951              	.LBE380:
 1952              	.LBE379:
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		__page_destroy(page);
 1953              		.loc 4 226 2 is_stmt 1 view .LVU625
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		__page_destroy(page);
 1954              		.loc 4 226 4 is_stmt 0 view .LVU626
 1955 0016 28B1     		cbz	r0, .L110
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	page->zone_device_data = data;
 1956              		.loc 4 230 2 is_stmt 1 view .LVU627
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	page->zone_device_data = data;
 1957              		.loc 4 230 18 is_stmt 0 view .LVU628
 1958 0018 40F2D242 		movw	r2, #1234
 1959 001c AA61     		str	r2, [r5, #24]
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	return page;
 1960              		.loc 4 231 2 is_stmt 1 view .LVU629
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	return page;
 1961              		.loc 4 231 25 is_stmt 0 view .LVU630
 1962 001e 6860     		str	r0, [r5, #4]
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 1963              		.loc 4 232 2 is_stmt 1 view .LVU631
 1964              	.LVL179:
 1965              	.L105:
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 1966              		.loc 4 233 1 is_stmt 0 view .LVU632
 1967 0020 2846     		mov	r0, r5
ARM GAS  /tmp/cczxpjuQ.s 			page 107


 1968 0022 38BD     		pop	{r3, r4, r5, pc}
 1969              	.LVL180:
 1970              	.L110:
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		return -ENOMEM ;
 1971              		.loc 4 227 3 is_stmt 1 view .LVU633
 1972              	.LBB381:
 1973              	.LBI381:
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page) 
 1974              		.loc 4 199 20 view .LVU634
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	{
 1975              		.loc 4 200 5 view .LVU635
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		page = NULL;
 1976              		.loc 4 202 9 view .LVU636
 1977              	.LBB382:
 1978              	.LBI382:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1979              		.loc 5 383 20 view .LVU637
 1980              	.LBB383:
 1981              		.loc 5 384 2 view .LVU638
 1982 0024 2846     		mov	r0, r5
 1983              	.LVL181:
 1984              		.loc 5 384 2 is_stmt 0 view .LVU639
 1985 0026 FFF7FEFF 		bl	__sfree__
 1986              	.LVL182:
 1987              		.loc 5 384 2 view .LVU640
 1988              	.LBE383:
 1989              	.LBE382:
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     }
 1990              		.loc 4 203 3 is_stmt 1 view .LVU641
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     }
 1991              		.loc 4 203 3 is_stmt 0 view .LVU642
 1992              	.LBE381:
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	}
 1993              		.loc 4 228 3 is_stmt 1 view .LVU643
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	}
 1994              		.loc 4 228 10 is_stmt 0 view .LVU644
 1995 002a 6FF00B05 		mvn	r5, #11
 1996              	.LVL183:
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	}
 1997              		.loc 4 228 10 view .LVU645
 1998 002e F7E7     		b	.L105
 1999              	.LVL184:
 2000              	.L108:
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	void *data = (void *)kmalloc(PAGE_SIZE, flags);
 2001              		.loc 4 224 10 view .LVU646
 2002 0030 6FF00B05 		mvn	r5, #11
 2003 0034 F4E7     		b	.L105
 2004              		.cfi_endproc
 2005              	.LFE915:
 2007              		.section	.text.initramfs_write,"ax",%progbits
 2008              		.align	1
 2009              		.syntax unified
 2010              		.thumb
 2011              		.thumb_func
 2013              	initramfs_write:
 2014              	.LVL185:
 2015              	.LFB1039:
ARM GAS  /tmp/cczxpjuQ.s 			page 108


  97:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *p_inode = file->f_inode->i_private;
 2016              		.loc 1 97 1 is_stmt 1 view -0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
  97:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *p_inode = file->f_inode->i_private;
 2020              		.loc 1 97 1 is_stmt 0 view .LVU648
 2021 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2022              	.LCFI20:
 2023              		.cfi_def_cfa_offset 32
 2024              		.cfi_offset 3, -32
 2025              		.cfi_offset 4, -28
 2026              		.cfi_offset 5, -24
 2027              		.cfi_offset 6, -20
 2028              		.cfi_offset 7, -16
 2029              		.cfi_offset 8, -12
 2030              		.cfi_offset 9, -8
 2031              		.cfi_offset 14, -4
 2032 0004 8846     		mov	r8, r1
 2033 0006 1446     		mov	r4, r2
 2034 0008 1D46     		mov	r5, r3
  98:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(p_inode->mode = READONLY){
 2035              		.loc 1 98 5 is_stmt 1 view .LVU649
  98:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(p_inode->mode = READONLY){
 2036              		.loc 1 98 43 is_stmt 0 view .LVU650
 2037 000a C36A     		ldr	r3, [r0, #44]
 2038              	.LVL186:
  98:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(p_inode->mode = READONLY){
 2039              		.loc 1 98 29 view .LVU651
 2040 000c D3F88470 		ldr	r7, [r3, #132]
 2041              	.LVL187:
  99:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         pr_err("this file is read only\n");
 2042              		.loc 1 99 5 is_stmt 1 view .LVU652
  99:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         pr_err("this file is read only\n");
 2043              		.loc 1 99 22 is_stmt 0 view .LVU653
 2044 0010 0023     		movs	r3, #0
 2045 0012 87F83430 		strb	r3, [r7, #52]
 103:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         p_inode->i_page = alloc_page(GFP_KERNEL);
 2046              		.loc 1 103 5 is_stmt 1 view .LVU654
 103:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         p_inode->i_page = alloc_page(GFP_KERNEL);
 2047              		.loc 1 103 15 is_stmt 0 view .LVU655
 2048 0016 3B6C     		ldr	r3, [r7, #64]
 103:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         p_inode->i_page = alloc_page(GFP_KERNEL);
 2049              		.loc 1 103 7 view .LVU656
 2050 0018 6BB1     		cbz	r3, .L117
 2051              	.LVL188:
 2052              	.L112:
 113:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return 0;
 2053              		.loc 1 113 5 is_stmt 1 view .LVU657
 113:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return 0;
 2054              		.loc 1 113 9 is_stmt 0 view .LVU658
 2055 001a 2E68     		ldr	r6, [r5]
 2056 001c 6B68     		ldr	r3, [r5, #4]
 113:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return 0;
 2057              		.loc 1 113 25 view .LVU659
 2058 001e 3119     		adds	r1, r6, r4
 2059 0020 43F10003 		adc	r3, r3, #0
ARM GAS  /tmp/cczxpjuQ.s 			page 109


 113:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return 0;
 2060              		.loc 1 113 7 view .LVU660
 2061 0024 41F20102 		movw	r2, #4097
 2062 0028 9142     		cmp	r1, r2
 2063 002a 73F10003 		sbcs	r3, r3, #0
 2064 002e 25DB     		blt	.L118
 114:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 2065              		.loc 1 114 16 view .LVU661
 2066 0030 0020     		movs	r0, #0
 2067              	.L111:
 123:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 2068              		.loc 1 123 1 view .LVU662
 2069 0032 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2070              	.LVL189:
 2071              	.L117:
 123:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 2072              		.loc 1 123 1 view .LVU663
 2073 0036 0646     		mov	r6, r0
 104:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(IS_ERR(p_inode->i_page)){
 2074              		.loc 1 104 9 is_stmt 1 view .LVU664
 104:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(IS_ERR(p_inode->i_page)){
 2075              		.loc 1 104 27 is_stmt 0 view .LVU665
 2076 0038 0021     		movs	r1, #0
 2077              	.LVL190:
 104:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(IS_ERR(p_inode->i_page)){
 2078              		.loc 1 104 27 view .LVU666
 2079 003a 4FF44C60 		mov	r0, #3264
 2080              	.LVL191:
 104:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(IS_ERR(p_inode->i_page)){
 2081              		.loc 1 104 27 view .LVU667
 2082 003e FFF7FEFF 		bl	__alloc_pages
 2083              	.LVL192:
 104:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(IS_ERR(p_inode->i_page)){
 2084              		.loc 1 104 25 discriminator 1 view .LVU668
 2085 0042 3864     		str	r0, [r7, #64]
 105:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             p_inode->i_page = NULL;
 2086              		.loc 1 105 9 is_stmt 1 view .LVU669
 2087              	.LVL193:
 2088              	.LBB384:
 2089              	.LBI384:
 2090              		.file 12 "/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #ifndef _LINUX_ERR_H
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define _LINUX_ERR_H
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #include <linux/compiler_attributes.h>
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #include <linux/compiler.h>
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #include <linux/types.h>
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #include <asm/errno.h>
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /*
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Kernel pointers have redundant information, so we can use a
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * scheme where we can return either an error code or a normal
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * pointer with the same return value.
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  *
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * This should be a per-architecture thing, to allow different
ARM GAS  /tmp/cczxpjuQ.s 			page 110


  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * error and pointer decisions.
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define MAX_ERRNO	4095
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #ifndef __ASSEMBLY__
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /**
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * IS_ERR_VALUE - Detect an error pointer.
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * @x: The pointer to check.
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  *
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Like IS_ERR(), but does not generate a compiler warning if result is unused.
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #ifndef unlikely
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #  define unlikely(x) __builtin_expect(!!(x), 0)
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #endif
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #ifndef likely
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #  define likely(x) __builtin_expect(!!(x), 1)
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #endif
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define IS_ERR_VALUE(x) unlikely((unsigned long)(void *)(x) >= (unsigned long)-MAX_ERRNO)
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /**
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * ERR_PTR - Create an error pointer.
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * @error: A negative error code.
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  *
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Encodes @error into a pointer value. Users should consider the result
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * opaque and not assume anything about how the error is encoded.
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  *
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Return: A pointer with @error encoded within its value.
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** static inline void * __must_check ERR_PTR(long error)
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** {
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 	return (void *) error;
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** }
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /* Return the pointer in the percpu address space. */
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define ERR_PTR_PCPU(error) ((void __percpu *)(unsigned long)ERR_PTR(error))
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /**
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * PTR_ERR - Extract the error code from an error pointer.
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * @ptr: An error pointer.
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Return: The error code within @ptr.
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** static inline long __must_check PTR_ERR(__force const void *ptr)
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** {
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 	return (long) ptr;
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** }
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /* Read an error pointer from the percpu address space. */
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define PTR_ERR_PCPU(ptr) (PTR_ERR((const void *)(__force const unsigned long)(ptr)))
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /**
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * IS_ERR - Detect an error pointer.
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * @ptr: The pointer to check.
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Return: true if @ptr is an error pointer, false otherwise.
ARM GAS  /tmp/cczxpjuQ.s 			page 111


  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** static inline bool __must_check IS_ERR(__force const void *ptr)
 2091              		.loc 12 75 33 view .LVU670
 2092              	.LBB385:
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** {
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 	return IS_ERR_VALUE((unsigned long)ptr);
 2093              		.loc 12 77 2 view .LVU671
 2094              		.loc 12 77 2 is_stmt 0 view .LVU672
 2095              	.LBE385:
 2096              	.LBE384:
 105:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             p_inode->i_page = NULL;
 2097              		.loc 1 105 11 discriminator 1 view .LVU673
 2098 0044 10F5805F 		cmn	r0, #4096
 2099 0048 13D8     		bhi	.L119
 109:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         file->f_inode->i_bytes = PAGE_SIZE;
 2100              		.loc 1 109 9 is_stmt 1 view .LVU674
 109:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         file->f_inode->i_bytes = PAGE_SIZE;
 2101              		.loc 1 109 23 is_stmt 0 view .LVU675
 2102 004a 4FF48053 		mov	r3, #4096
 2103 004e 7B64     		str	r3, [r7, #68]
 110:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         get_page(p_inode->i_page);
 2104              		.loc 1 110 9 is_stmt 1 view .LVU676
 110:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         get_page(p_inode->i_page);
 2105              		.loc 1 110 13 is_stmt 0 view .LVU677
 2106 0050 F26A     		ldr	r2, [r6, #44]
 110:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         get_page(p_inode->i_page);
 2107              		.loc 1 110 32 view .LVU678
 2108 0052 A2F84030 		strh	r3, [r2, #64]	@ movhi
 111:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 2109              		.loc 1 111 9 is_stmt 1 view .LVU679
 2110 0056 3B6C     		ldr	r3, [r7, #64]
 2111              	.LVL194:
 2112              	.LBB386:
 2113              	.LBI386:
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page)
 2114              		.loc 4 252 20 view .LVU680
 2115              	.LBB387:
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         atomic_inc(&page->_refcount);
 2116              		.loc 4 253 5 view .LVU681
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         atomic_inc(&page->_refcount);
 2117              		.loc 4 253 8 is_stmt 0 view .LVU682
 2118 0058 002B     		cmp	r3, #0
 2119 005a DED0     		beq	.L112
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 2120              		.loc 4 254 9 is_stmt 1 view .LVU683
 2121 005c 1C33     		adds	r3, r3, #28
 2122              	.LVL195:
 2123              	.LBB388:
 2124              	.LBI388:
 433:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 2125              		.loc 6 433 1 view .LVU684
 435:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_inc(v);
 2126              		.loc 6 435 2 view .LVU685
 2127              		.loc 6 436 2 view .LVU686
 2128              	.LBB389:
 2129              	.LBI389:
 999:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
ARM GAS  /tmp/cczxpjuQ.s 			page 112


 2130              		.loc 7 999 1 view .LVU687
 2131              		.loc 7 1004 2 view .LVU688
 2132              	.LBB390:
 2133              	.LBI390:
 550:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 2134              		.loc 7 550 1 view .LVU689
 552:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 2135              		.loc 7 552 2 view .LVU690
 2136              	.LBB391:
 2137              	.LBI391:
 2138              		.loc 11 170 1 view .LVU691
 2139              	.LBB392:
 2140              		.loc 11 170 1 view .LVU692
 2141              		.loc 11 170 1 view .LVU693
 2142              		.loc 11 170 1 view .LVU694
 2143              		.syntax unified
 2144              	@ 170 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h" 1
 2145              		@ atomic_add
 2146 005e 53E8002F 	1: ldrex   r2, [r3]
 2147 0062 02F10102 	   add r2, r2, #1
 2148 0066 43E80021 	   strex   r1, r2, [r3]
 2149 006a 91F0000F 	   teq r1, #0
 2150 006e F6D1     	   bne 1b
 2151              	@ 0 "" 2
 2152              	.LVL196:
 2153              		.loc 11 170 1 is_stmt 0 view .LVU695
 2154              		.thumb
 2155              		.syntax unified
 2156 0070 D3E7     		b	.L112
 2157              	.LVL197:
 2158              	.L119:
 2159              		.loc 11 170 1 view .LVU696
 2160              	.LBE392:
 2161              	.LBE391:
 2162              	.LBE390:
 2163              	.LBE389:
 2164              	.LBE388:
 2165              	.LBE387:
 2166              	.LBE386:
 106:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             return -ENOMEM;
 2167              		.loc 1 106 13 is_stmt 1 view .LVU697
 106:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             return -ENOMEM;
 2168              		.loc 1 106 29 is_stmt 0 view .LVU698
 2169 0072 0023     		movs	r3, #0
 2170 0074 3B64     		str	r3, [r7, #64]
 107:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }      
 2171              		.loc 1 107 13 is_stmt 1 view .LVU699
 107:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }      
 2172              		.loc 1 107 20 is_stmt 0 view .LVU700
 2173 0076 6FF00B00 		mvn	r0, #11
 2174 007a DAE7     		b	.L111
 2175              	.LVL198:
 2176              	.L118:
 116:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     int ret = copy_from_user(page_data + (loff_t)*offset ,data,size);
 2177              		.loc 1 116 5 is_stmt 1 view .LVU701
 116:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     int ret = copy_from_user(page_data + (loff_t)*offset ,data,size);
 2178              		.loc 1 116 23 is_stmt 0 view .LVU702
ARM GAS  /tmp/cczxpjuQ.s 			page 113


 2179 007c 386C     		ldr	r0, [r7, #64]
 2180 007e FFF7FEFF 		bl	__kmap
 2181              	.LVL199:
 117:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     kunmap(p_inode->i_page);
 2182              		.loc 1 117 5 is_stmt 1 view .LVU703
 2183              	.LBB393:
 2184              	.LBI393:
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** {
 2185              		.loc 10 8 19 view .LVU704
 2186              	.LBB394:
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h ****     return 0;
 2187              		.loc 10 10 5 view .LVU705
 2188 0082 2246     		mov	r2, r4
 2189 0084 4146     		mov	r1, r8
 2190 0086 3044     		add	r0, r0, r6
 2191              	.LVL200:
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h ****     return 0;
 2192              		.loc 10 10 5 is_stmt 0 view .LVU706
 2193 0088 FFF7FEFF 		bl	memcpy
 2194              	.LVL201:
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** }
 2195              		.loc 10 11 5 is_stmt 1 view .LVU707
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/uaccess.h **** }
 2196              		.loc 10 11 5 is_stmt 0 view .LVU708
 2197              	.LBE394:
 2198              	.LBE393:
 118:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (ret)
 2199              		.loc 1 118 5 is_stmt 1 view .LVU709
 119:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return -EFAULT;
 2200              		.loc 1 119 5 view .LVU710
 121:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return size;
 2201              		.loc 1 121 5 view .LVU711
 2202 008c 2B68     		ldr	r3, [r5]
 2203 008e 6A68     		ldr	r2, [r5, #4]
 121:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return size;
 2204              		.loc 1 121 13 is_stmt 0 view .LVU712
 2205 0090 E318     		adds	r3, r4, r3
 2206 0092 42F10002 		adc	r2, r2, #0
 2207 0096 2B60     		str	r3, [r5]
 2208 0098 6A60     		str	r2, [r5, #4]
 122:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 2209              		.loc 1 122 5 is_stmt 1 view .LVU713
 122:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 2210              		.loc 1 122 12 is_stmt 0 view .LVU714
 2211 009a 2046     		mov	r0, r4
 2212 009c C9E7     		b	.L111
 2213              		.cfi_endproc
 2214              	.LFE1039:
 2216              		.section	.text.__free_pages,"ax",%progbits
 2217              		.align	1
 2218              		.syntax unified
 2219              		.thumb
 2220              		.thumb_func
 2222              	__free_pages:
 2223              	.LVL202:
 2224              	.LFB916:
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page) {
ARM GAS  /tmp/cczxpjuQ.s 			page 114


 2225              		.loc 4 235 71 is_stmt 1 view -0
 2226              		.cfi_startproc
 2227              		@ args = 0, pretend = 0, frame = 0
 2228              		@ frame_needed = 0, uses_anonymous_args = 0
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		if(page->page_type == 1234)
 2229              		.loc 4 236 5 view .LVU716
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		if(page->page_type == 1234)
 2230              		.loc 4 236 8 is_stmt 0 view .LVU717
 2231 0000 70B1     		cbz	r0, .L124
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page) {
 2232              		.loc 4 235 71 view .LVU718
 2233 0002 10B5     		push	{r4, lr}
 2234              	.LCFI21:
 2235              		.cfi_def_cfa_offset 8
 2236              		.cfi_offset 4, -8
 2237              		.cfi_offset 14, -4
 2238 0004 0446     		mov	r4, r0
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		kfree(page->zone_device_data);
 2239              		.loc 4 237 3 is_stmt 1 view .LVU719
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		kfree(page->zone_device_data);
 2240              		.loc 4 237 10 is_stmt 0 view .LVU720
 2241 0006 8269     		ldr	r2, [r0, #24]
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		kfree(page->zone_device_data);
 2242              		.loc 4 237 5 view .LVU721
 2243 0008 40F2D243 		movw	r3, #1234
 2244 000c 9A42     		cmp	r2, r3
 2245 000e 03D0     		beq	.L127
 2246              	.LVL203:
 2247              	.L122:
 2248              	.LBB395:
 2249              	.LBB396:
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		page = NULL;
 2250              		.loc 4 202 9 is_stmt 1 view .LVU722
 2251              	.LBB397:
 2252              	.LBI397:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 2253              		.loc 5 383 20 view .LVU723
 2254              	.LBB398:
 2255              		.loc 5 384 2 view .LVU724
 2256 0010 2046     		mov	r0, r4
 2257 0012 FFF7FEFF 		bl	__sfree__
 2258              	.LVL204:
 2259              		.loc 5 384 2 is_stmt 0 view .LVU725
 2260              	.LBE398:
 2261              	.LBE397:
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     }
 2262              		.loc 4 203 3 is_stmt 1 view .LVU726
 2263              	.LBE396:
 2264              	.LBE395:
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 2265              		.loc 4 241 1 is_stmt 0 view .LVU727
 2266 0016 10BD     		pop	{r4, pc}
 2267              	.LVL205:
 2268              	.L127:
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         __page_destroy(page);
 2269              		.loc 4 238 3 is_stmt 1 view .LVU728
 2270              	.LBB400:
ARM GAS  /tmp/cczxpjuQ.s 			page 115


 2271              	.LBI400:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 2272              		.loc 5 383 20 view .LVU729
 2273              	.LBB401:
 2274              		.loc 5 384 2 view .LVU730
 2275 0018 4068     		ldr	r0, [r0, #4]
 2276              	.LVL206:
 2277              		.loc 5 384 2 is_stmt 0 view .LVU731
 2278 001a FFF7FEFF 		bl	__sfree__
 2279              	.LVL207:
 2280              		.loc 5 384 2 view .LVU732
 2281              	.LBE401:
 2282              	.LBE400:
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     }
 2283              		.loc 4 239 9 is_stmt 1 view .LVU733
 2284              	.LBB402:
 2285              	.LBI395:
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page) 
 2286              		.loc 4 199 20 view .LVU734
 2287              	.LBB399:
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	{
 2288              		.loc 4 200 5 view .LVU735
 2289 001e F7E7     		b	.L122
 2290              	.LVL208:
 2291              	.L124:
 2292              	.LCFI22:
 2293              		.cfi_def_cfa_offset 0
 2294              		.cfi_restore 4
 2295              		.cfi_restore 14
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	{
 2296              		.loc 4 200 5 is_stmt 0 view .LVU736
 2297 0020 7047     		bx	lr
 2298              	.LBE399:
 2299              	.LBE402:
 2300              		.cfi_endproc
 2301              	.LFE916:
 2303              		.section	.text.__put_page,"ax",%progbits
 2304              		.align	1
 2305              		.syntax unified
 2306              		.thumb
 2307              		.thumb_func
 2309              	__put_page:
 2310              	.LVL209:
 2311              	.LFB919:
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page && atomic_dec_and_test(&page->_refcount) ) {
 2312              		.loc 4 258 49 is_stmt 1 view -0
 2313              		.cfi_startproc
 2314              		@ args = 0, pretend = 0, frame = 0
 2315              		@ frame_needed = 0, uses_anonymous_args = 0
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page && atomic_dec_and_test(&page->_refcount) ) {
 2316              		.loc 4 258 49 is_stmt 0 view .LVU738
 2317 0000 08B5     		push	{r3, lr}
 2318              	.LCFI23:
 2319              		.cfi_def_cfa_offset 8
 2320              		.cfi_offset 3, -8
 2321              		.cfi_offset 14, -4
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         __free_pages(page, 0);
ARM GAS  /tmp/cczxpjuQ.s 			page 116


 2322              		.loc 4 259 5 is_stmt 1 view .LVU739
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         __free_pages(page, 0);
 2323              		.loc 4 259 8 is_stmt 0 view .LVU740
 2324 0002 0246     		mov	r2, r0
 2325 0004 58B1     		cbz	r0, .L129
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         __free_pages(page, 0);
 2326              		.loc 4 259 17 discriminator 1 view .LVU741
 2327 0006 00F11C03 		add	r3, r0, #28
 2328              	.LBB403:
 2329              	.LBI403:
 437:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 438:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 439:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 440:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_inc_return() - atomic increment with full ordering
 441:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 442:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 443:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with full ordering.
 444:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 445:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_inc_return() there.
 446:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 447:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 448:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 449:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 450:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_inc_return(atomic_t *v)
 451:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 452:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 453:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 454:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_inc_return(v);
 455:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 456:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 457:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 458:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_inc_return_acquire() - atomic increment with acquire ordering
 459:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 460:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 461:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with acquire ordering.
 462:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_inc_return_acquire() there.
 464:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 465:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 466:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 467:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 468:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_inc_return_acquire(atomic_t *v)
 469:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 470:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 471:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_inc_return_acquire(v);
 472:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 473:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 474:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 475:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_inc_return_release() - atomic increment with release ordering
 476:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 477:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 478:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with release ordering.
 479:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 480:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_inc_return_release() there.
 481:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 482:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 483:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
ARM GAS  /tmp/cczxpjuQ.s 			page 117


 484:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 485:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_inc_return_release(atomic_t *v)
 486:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 487:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 488:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 489:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_inc_return_release(v);
 490:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 491:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 492:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 493:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_inc_return_relaxed() - atomic increment with relaxed ordering
 494:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 495:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 496:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with relaxed ordering.
 497:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 498:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_inc_return_relaxed() there.
 499:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 500:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 501:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 502:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 503:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_inc_return_relaxed(atomic_t *v)
 504:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 505:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 506:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_inc_return_relaxed(v);
 507:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 508:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 509:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 510:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_inc() - atomic increment with full ordering
 511:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 512:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 513:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with full ordering.
 514:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 515:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_inc() there.
 516:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 517:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 518:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 519:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 520:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_inc(atomic_t *v)
 521:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 522:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 523:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 524:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_inc(v);
 525:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 526:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 527:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 528:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_inc_acquire() - atomic increment with acquire ordering
 529:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 530:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 531:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with acquire ordering.
 532:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 533:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_inc_acquire() there.
 534:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 535:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 536:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 537:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 538:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_inc_acquire(atomic_t *v)
 539:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 540:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
ARM GAS  /tmp/cczxpjuQ.s 			page 118


 541:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_inc_acquire(v);
 542:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 543:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 544:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 545:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_inc_release() - atomic increment with release ordering
 546:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 547:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 548:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with release ordering.
 549:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 550:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_inc_release() there.
 551:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 552:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 553:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 554:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 555:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_inc_release(atomic_t *v)
 556:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 557:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 558:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 559:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_inc_release(v);
 560:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 561:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 562:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 563:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_inc_relaxed() - atomic increment with relaxed ordering
 564:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 565:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 566:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with relaxed ordering.
 567:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 568:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_inc_relaxed() there.
 569:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 570:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 571:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 572:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 573:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_inc_relaxed(atomic_t *v)
 574:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 575:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 576:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_inc_relaxed(v);
 577:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 578:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 579:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 580:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_dec() - atomic decrement with relaxed ordering
 581:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 582:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 583:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with relaxed ordering.
 584:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 585:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_dec() there.
 586:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 587:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 588:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 589:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 590:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_dec(atomic_t *v)
 591:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 592:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 593:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_dec(v);
 594:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 595:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 596:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 597:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_dec_return() - atomic decrement with full ordering
ARM GAS  /tmp/cczxpjuQ.s 			page 119


 598:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 599:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 600:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with full ordering.
 601:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 602:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_dec_return() there.
 603:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 604:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 605:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 606:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 607:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_dec_return(atomic_t *v)
 608:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 609:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 610:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 611:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_dec_return(v);
 612:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 613:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 614:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 615:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_dec_return_acquire() - atomic decrement with acquire ordering
 616:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 617:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 618:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with acquire ordering.
 619:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 620:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_dec_return_acquire() there.
 621:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 622:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 623:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 624:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 625:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_dec_return_acquire(atomic_t *v)
 626:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 627:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 628:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_dec_return_acquire(v);
 629:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 630:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 631:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 632:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_dec_return_release() - atomic decrement with release ordering
 633:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 634:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 635:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with release ordering.
 636:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 637:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_dec_return_release() there.
 638:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 639:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 640:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 641:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 642:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_dec_return_release(atomic_t *v)
 643:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 644:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 645:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 646:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_dec_return_release(v);
 647:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 648:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 649:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 650:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_dec_return_relaxed() - atomic decrement with relaxed ordering
 651:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 652:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 653:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with relaxed ordering.
 654:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
ARM GAS  /tmp/cczxpjuQ.s 			page 120


 655:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_dec_return_relaxed() there.
 656:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 657:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 658:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 659:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 660:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_dec_return_relaxed(atomic_t *v)
 661:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 662:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 663:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_dec_return_relaxed(v);
 664:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 665:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 666:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 667:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_dec() - atomic decrement with full ordering
 668:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 669:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 670:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with full ordering.
 671:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 672:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_dec() there.
 673:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 674:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 675:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 676:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 677:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_dec(atomic_t *v)
 678:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 679:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 680:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 681:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_dec(v);
 682:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 683:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 684:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 685:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_dec_acquire() - atomic decrement with acquire ordering
 686:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 687:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 688:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with acquire ordering.
 689:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 690:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_dec_acquire() there.
 691:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 692:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 693:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 694:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 695:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_dec_acquire(atomic_t *v)
 696:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 697:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 698:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_dec_acquire(v);
 699:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 700:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 701:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 702:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_dec_release() - atomic decrement with release ordering
 703:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 704:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 705:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with release ordering.
 706:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 707:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_dec_release() there.
 708:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 709:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 710:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 711:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
ARM GAS  /tmp/cczxpjuQ.s 			page 121


 712:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_dec_release(atomic_t *v)
 713:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 714:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 715:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 716:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_dec_release(v);
 717:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 718:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 719:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 720:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_dec_relaxed() - atomic decrement with relaxed ordering
 721:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 722:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 723:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with relaxed ordering.
 724:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 725:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_dec_relaxed() there.
 726:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 727:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 728:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 729:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 730:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_dec_relaxed(atomic_t *v)
 731:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 732:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 733:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_dec_relaxed(v);
 734:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 735:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 736:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 737:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_and() - atomic bitwise AND with relaxed ordering
 738:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 739:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 740:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 741:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & @i) with relaxed ordering.
 742:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 743:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_and() there.
 744:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 745:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 746:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 747:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 748:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_and(int i, atomic_t *v)
 749:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 750:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 751:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_and(i, v);
 752:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 753:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 754:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 755:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_and() - atomic bitwise AND with full ordering
 756:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 757:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 758:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 759:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & @i) with full ordering.
 760:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 761:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_and() there.
 762:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 763:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 764:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 765:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 766:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_and(int i, atomic_t *v)
 767:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 768:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
ARM GAS  /tmp/cczxpjuQ.s 			page 122


 769:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 770:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_and(i, v);
 771:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 772:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 773:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 774:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_and_acquire() - atomic bitwise AND with acquire ordering
 775:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 776:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 777:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 778:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & @i) with acquire ordering.
 779:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 780:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_and_acquire() there.
 781:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 782:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 783:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 784:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 785:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_and_acquire(int i, atomic_t *v)
 786:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 787:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 788:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_and_acquire(i, v);
 789:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 790:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 791:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 792:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_and_release() - atomic bitwise AND with release ordering
 793:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 794:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 795:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 796:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & @i) with release ordering.
 797:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 798:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_and_release() there.
 799:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 800:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 801:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 802:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 803:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_and_release(int i, atomic_t *v)
 804:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 805:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 806:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 807:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_and_release(i, v);
 808:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 809:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 810:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 811:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_and_relaxed() - atomic bitwise AND with relaxed ordering
 812:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 813:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 814:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 815:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & @i) with relaxed ordering.
 816:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 817:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_and_relaxed() there.
 818:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 819:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 820:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 821:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 822:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_and_relaxed(int i, atomic_t *v)
 823:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 824:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 825:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_and_relaxed(i, v);
ARM GAS  /tmp/cczxpjuQ.s 			page 123


 826:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 827:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 828:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 829:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_andnot() - atomic bitwise AND NOT with relaxed ordering
 830:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 831:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 832:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 833:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & ~@i) with relaxed ordering.
 834:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 835:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_andnot() there.
 836:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 837:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 838:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 839:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 840:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_andnot(int i, atomic_t *v)
 841:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 842:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 843:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_andnot(i, v);
 844:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 845:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 846:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 847:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_andnot() - atomic bitwise AND NOT with full ordering
 848:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 849:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 850:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 851:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & ~@i) with full ordering.
 852:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 853:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_andnot() there.
 854:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 855:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 856:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 857:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 858:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_andnot(int i, atomic_t *v)
 859:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 860:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 861:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 862:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_andnot(i, v);
 863:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 864:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 865:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 866:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_andnot_acquire() - atomic bitwise AND NOT with acquire ordering
 867:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 868:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 869:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 870:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & ~@i) with acquire ordering.
 871:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 872:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_andnot_acquire() there.
 873:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 874:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 875:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 876:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 877:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_andnot_acquire(int i, atomic_t *v)
 878:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 879:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 880:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_andnot_acquire(i, v);
 881:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 882:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
ARM GAS  /tmp/cczxpjuQ.s 			page 124


 883:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 884:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_andnot_release() - atomic bitwise AND NOT with release ordering
 885:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 886:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 887:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 888:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & ~@i) with release ordering.
 889:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 890:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_andnot_release() there.
 891:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 892:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 893:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 894:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 895:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_andnot_release(int i, atomic_t *v)
 896:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 897:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 898:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 899:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_andnot_release(i, v);
 900:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 901:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 902:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 903:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_andnot_relaxed() - atomic bitwise AND NOT with relaxed ordering
 904:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 905:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 906:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 907:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & ~@i) with relaxed ordering.
 908:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 909:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_andnot_relaxed() there.
 910:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 911:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 912:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 913:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 914:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_andnot_relaxed(int i, atomic_t *v)
 915:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 916:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 917:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_andnot_relaxed(i, v);
 918:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 919:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 920:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 921:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_or() - atomic bitwise OR with relaxed ordering
 922:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 923:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 924:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 925:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v | @i) with relaxed ordering.
 926:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 927:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_or() there.
 928:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 929:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 930:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 931:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 932:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_or(int i, atomic_t *v)
 933:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 934:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 935:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_or(i, v);
 936:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 937:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 938:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 939:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_or() - atomic bitwise OR with full ordering
ARM GAS  /tmp/cczxpjuQ.s 			page 125


 940:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 941:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 942:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 943:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v | @i) with full ordering.
 944:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 945:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_or() there.
 946:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 947:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 948:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 949:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 950:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_or(int i, atomic_t *v)
 951:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 952:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 953:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 954:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_or(i, v);
 955:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 956:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 957:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 958:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_or_acquire() - atomic bitwise OR with acquire ordering
 959:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 960:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 961:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 962:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v | @i) with acquire ordering.
 963:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 964:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_or_acquire() there.
 965:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 966:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 967:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 968:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 969:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_or_acquire(int i, atomic_t *v)
 970:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 971:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 972:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_or_acquire(i, v);
 973:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 974:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 975:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 976:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_or_release() - atomic bitwise OR with release ordering
 977:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 978:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 979:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 980:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v | @i) with release ordering.
 981:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 982:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_or_release() there.
 983:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 984:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 985:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 986:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 987:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_or_release(int i, atomic_t *v)
 988:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 989:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 990:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 991:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_or_release(i, v);
 992:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 993:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 994:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 995:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_or_relaxed() - atomic bitwise OR with relaxed ordering
 996:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
ARM GAS  /tmp/cczxpjuQ.s 			page 126


 997:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 998:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 999:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v | @i) with relaxed ordering.
1000:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1001:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_or_relaxed() there.
1002:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1003:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1004:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1005:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1006:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_or_relaxed(int i, atomic_t *v)
1007:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1008:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1009:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_or_relaxed(i, v);
1010:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1011:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1012:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1013:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_xor() - atomic bitwise XOR with relaxed ordering
1014:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
1015:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1016:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1017:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v ^ @i) with relaxed ordering.
1018:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1019:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_xor() there.
1020:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1021:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
1022:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1023:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
1024:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_xor(int i, atomic_t *v)
1025:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1026:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1027:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_xor(i, v);
1028:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1029:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1030:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1031:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_xor() - atomic bitwise XOR with full ordering
1032:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
1033:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1034:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1035:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v ^ @i) with full ordering.
1036:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1037:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_xor() there.
1038:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1039:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1040:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1041:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1042:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_xor(int i, atomic_t *v)
1043:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1044:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
1045:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1046:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_xor(i, v);
1047:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1048:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1049:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1050:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_xor_acquire() - atomic bitwise XOR with acquire ordering
1051:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
1052:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1053:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
ARM GAS  /tmp/cczxpjuQ.s 			page 127


1054:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v ^ @i) with acquire ordering.
1055:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1056:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_xor_acquire() there.
1057:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1058:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1059:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1060:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1061:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_xor_acquire(int i, atomic_t *v)
1062:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1063:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1064:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_xor_acquire(i, v);
1065:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1066:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1067:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1068:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_xor_release() - atomic bitwise XOR with release ordering
1069:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
1070:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1071:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1072:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v ^ @i) with release ordering.
1073:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1074:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_xor_release() there.
1075:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1076:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1077:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1078:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1079:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_xor_release(int i, atomic_t *v)
1080:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1081:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
1082:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1083:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_xor_release(i, v);
1084:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1085:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1086:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1087:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_xor_relaxed() - atomic bitwise XOR with relaxed ordering
1088:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
1089:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1090:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1091:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v ^ @i) with relaxed ordering.
1092:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1093:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_xor_relaxed() there.
1094:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1095:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1096:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1097:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1098:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_xor_relaxed(int i, atomic_t *v)
1099:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1100:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1101:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_xor_relaxed(i, v);
1102:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1103:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1104:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1105:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_xchg() - atomic exchange with full ordering
1106:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1107:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1108:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1109:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to @new with full ordering.
1110:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
ARM GAS  /tmp/cczxpjuQ.s 			page 128


1111:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_xchg() there.
1112:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1113:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1114:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1115:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1116:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_xchg(atomic_t *v, int new)
1117:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1118:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
1119:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1120:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_xchg(v, new);
1121:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1122:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1123:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1124:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_xchg_acquire() - atomic exchange with acquire ordering
1125:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1126:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1127:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1128:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to @new with acquire ordering.
1129:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1130:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_xchg_acquire() there.
1131:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1132:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1133:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1134:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1135:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_xchg_acquire(atomic_t *v, int new)
1136:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1137:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1138:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_xchg_acquire(v, new);
1139:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1140:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1141:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1142:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_xchg_release() - atomic exchange with release ordering
1143:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1144:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1145:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1146:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to @new with release ordering.
1147:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1148:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_xchg_release() there.
1149:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1150:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1151:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1152:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1153:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_xchg_release(atomic_t *v, int new)
1154:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1155:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
1156:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1157:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_xchg_release(v, new);
1158:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1159:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1160:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1161:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_xchg_relaxed() - atomic exchange with relaxed ordering
1162:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1163:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1164:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1165:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to @new with relaxed ordering.
1166:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1167:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_xchg_relaxed() there.
ARM GAS  /tmp/cczxpjuQ.s 			page 129


1168:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1169:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1170:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1171:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1172:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_xchg_relaxed(atomic_t *v, int new)
1173:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1174:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1175:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_xchg_relaxed(v, new);
1176:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1177:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1178:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1179:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_cmpxchg() - atomic compare and exchange with full ordering
1180:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1181:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: int value to compare with
1182:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1183:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1184:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with full ordering.
1185:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
1186:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1187:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_cmpxchg() there.
1188:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1189:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1190:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1191:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1192:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_cmpxchg(atomic_t *v, int old, int new)
1193:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1194:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
1195:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1196:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_cmpxchg(v, old, new);
1197:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1198:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1199:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1200:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_cmpxchg_acquire() - atomic compare and exchange with acquire ordering
1201:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1202:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: int value to compare with
1203:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1204:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1205:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with acquire ordering.
1206:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
1207:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1208:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_cmpxchg_acquire() there.
1209:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1210:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1211:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1212:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1213:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_cmpxchg_acquire(atomic_t *v, int old, int new)
1214:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1215:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1216:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_cmpxchg_acquire(v, old, new);
1217:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1218:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1219:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1220:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_cmpxchg_release() - atomic compare and exchange with release ordering
1221:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1222:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: int value to compare with
1223:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1224:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
ARM GAS  /tmp/cczxpjuQ.s 			page 130


1225:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with release ordering.
1226:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
1227:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1228:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_cmpxchg_release() there.
1229:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1230:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1231:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1232:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1233:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_cmpxchg_release(atomic_t *v, int old, int new)
1234:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1235:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
1236:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_cmpxchg_release(v, old, new);
1238:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1239:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1240:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1241:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_cmpxchg_relaxed() - atomic compare and exchange with relaxed ordering
1242:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1243:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: int value to compare with
1244:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1245:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1246:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with relaxed ordering.
1247:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
1248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1249:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_cmpxchg_relaxed() there.
1250:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1251:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1252:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1253:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1254:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_cmpxchg_relaxed(atomic_t *v, int old, int new)
1255:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1256:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1257:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_cmpxchg_relaxed(v, old, new);
1258:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1259:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1260:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1261:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_try_cmpxchg() - atomic compare and exchange with full ordering
1262:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1263:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: pointer to int value to compare with
1264:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1265:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1266:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with full ordering.
1267:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
1268:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * and relaxed ordering is provided.
1269:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1270:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_try_cmpxchg() there.
1271:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1272:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: @true if the exchange occured, @false otherwise.
1273:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1274:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline bool
1275:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_try_cmpxchg(atomic_t *v, int *old, int new)
1276:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1277:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
1278:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1279:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(old, sizeof(*old));
1280:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_try_cmpxchg(v, old, new);
1281:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
ARM GAS  /tmp/cczxpjuQ.s 			page 131


1282:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1283:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1284:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_try_cmpxchg_acquire() - atomic compare and exchange with acquire ordering
1285:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1286:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: pointer to int value to compare with
1287:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1288:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1289:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with acquire ordering.
1290:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
1291:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * and relaxed ordering is provided.
1292:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1293:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_try_cmpxchg_acquire() there.
1294:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1295:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: @true if the exchange occured, @false otherwise.
1296:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1297:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline bool
1298:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_try_cmpxchg_acquire(atomic_t *v, int *old, int new)
1299:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1300:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1301:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(old, sizeof(*old));
1302:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_try_cmpxchg_acquire(v, old, new);
1303:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1304:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1305:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1306:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_try_cmpxchg_release() - atomic compare and exchange with release ordering
1307:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1308:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: pointer to int value to compare with
1309:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1310:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1311:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with release ordering.
1312:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
1313:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * and relaxed ordering is provided.
1314:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1315:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_try_cmpxchg_release() there.
1316:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1317:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: @true if the exchange occured, @false otherwise.
1318:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1319:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline bool
1320:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_try_cmpxchg_release(atomic_t *v, int *old, int new)
1321:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1322:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
1323:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1324:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(old, sizeof(*old));
1325:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_try_cmpxchg_release(v, old, new);
1326:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1327:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1328:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1329:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_try_cmpxchg_relaxed() - atomic compare and exchange with relaxed ordering
1330:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1331:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: pointer to int value to compare with
1332:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1333:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1334:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with relaxed ordering.
1335:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
1336:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * and relaxed ordering is provided.
1337:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1338:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_try_cmpxchg_relaxed() there.
ARM GAS  /tmp/cczxpjuQ.s 			page 132


1339:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1340:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: @true if the exchange occured, @false otherwise.
1341:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1342:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline bool
1343:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_try_cmpxchg_relaxed(atomic_t *v, int *old, int new)
1344:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1345:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1346:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(old, sizeof(*old));
1347:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_try_cmpxchg_relaxed(v, old, new);
1348:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1349:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1350:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1351:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_sub_and_test() - atomic subtract and test if zero with full ordering
1352:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
1353:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1354:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1355:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with full ordering.
1356:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1357:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_sub_and_test() there.
1358:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1359:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: @true if the resulting value of @v is zero, @false otherwise.
1360:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1361:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline bool
1362:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_sub_and_test(int i, atomic_t *v)
1363:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1364:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
1365:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1366:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_sub_and_test(i, v);
1367:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1368:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1369:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1370:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_dec_and_test() - atomic decrement and test if zero with full ordering
1371:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1372:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1373:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with full ordering.
1374:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1375:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_dec_and_test() there.
1376:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1377:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: @true if the resulting value of @v is zero, @false otherwise.
1378:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1379:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline bool
1380:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_dec_and_test(atomic_t *v)
 2330              		.loc 6 1380 1 is_stmt 1 view .LVU742
1381:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1382:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 2331              		.loc 6 1382 2 view .LVU743
 2332              		.loc 6 1382 2 view .LVU744
 2333              		.loc 6 1382 2 view .LVU745
1383:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 2334              		.loc 6 1383 2 view .LVU746
1384:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_dec_and_test(v);
 2335              		.loc 6 1384 2 view .LVU747
 2336              	.LBB404:
 2337              	.LBI404:
1005:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1006:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1007:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
ARM GAS  /tmp/cczxpjuQ.s 			page 133


1008:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1009:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_inc_return() - atomic increment with full ordering
1010:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1011:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1012:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with full ordering.
1013:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1014:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_inc_return() elsewhere.
1015:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1016:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1017:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1018:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1019:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_inc_return(atomic_t *v)
1020:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1021:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_inc_return)
1022:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return(v);
1023:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_inc_return_relaxed)
1024:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1025:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1026:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_inc_return_relaxed(v);
1027:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1028:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1029:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1030:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_add_return(1, v);
1031:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1032:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1033:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1034:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1035:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_inc_return_acquire() - atomic increment with acquire ordering
1036:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1037:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1038:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with acquire ordering.
1039:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1040:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_inc_return_acquire() elsewhere.
1041:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1042:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1043:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1044:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1045:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_inc_return_acquire(atomic_t *v)
1046:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1047:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_inc_return_acquire)
1048:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return_acquire(v);
1049:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_inc_return_relaxed)
1050:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_inc_return_relaxed(v);
1051:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1052:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1053:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_inc_return)
1054:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return(v);
1055:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1056:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_add_return_acquire(1, v);
1057:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1058:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1059:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1060:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1061:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_inc_return_release() - atomic increment with release ordering
1062:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1063:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1064:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with release ordering.
ARM GAS  /tmp/cczxpjuQ.s 			page 134


1065:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1066:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_inc_return_release() elsewhere.
1067:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1068:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1069:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1070:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1071:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_inc_return_release(atomic_t *v)
1072:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1073:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_inc_return_release)
1074:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return_release(v);
1075:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_inc_return_relaxed)
1076:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1077:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return_relaxed(v);
1078:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_inc_return)
1079:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return(v);
1080:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1081:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_add_return_release(1, v);
1082:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1083:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1084:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1085:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1086:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_inc_return_relaxed() - atomic increment with relaxed ordering
1087:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1088:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1089:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with relaxed ordering.
1090:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1091:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_inc_return_relaxed() elsewhere.
1092:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1093:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1094:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1095:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1096:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_inc_return_relaxed(atomic_t *v)
1097:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1098:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_inc_return_relaxed)
1099:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return_relaxed(v);
1100:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_inc_return)
1101:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return(v);
1102:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1103:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_add_return_relaxed(1, v);
1104:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1105:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1106:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1107:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1108:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_inc() - atomic increment with full ordering
1109:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1110:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1111:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with full ordering.
1112:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1113:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_inc() elsewhere.
1114:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1115:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1116:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1117:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1118:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_inc(atomic_t *v)
1119:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1120:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_inc)
1121:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc(v);
ARM GAS  /tmp/cczxpjuQ.s 			page 135


1122:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_inc_relaxed)
1123:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1124:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1125:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_inc_relaxed(v);
1126:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1127:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1128:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1129:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_add(1, v);
1130:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1131:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1132:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1133:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1134:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_inc_acquire() - atomic increment with acquire ordering
1135:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1136:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1137:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with acquire ordering.
1138:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1139:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_inc_acquire() elsewhere.
1140:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1141:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1142:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1143:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1144:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_inc_acquire(atomic_t *v)
1145:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1146:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_inc_acquire)
1147:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc_acquire(v);
1148:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_inc_relaxed)
1149:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_inc_relaxed(v);
1150:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1151:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1152:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_inc)
1153:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc(v);
1154:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1155:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_add_acquire(1, v);
1156:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1157:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1158:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1159:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1160:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_inc_release() - atomic increment with release ordering
1161:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1162:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1163:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with release ordering.
1164:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1165:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_inc_release() elsewhere.
1166:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1167:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1168:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1169:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1170:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_inc_release(atomic_t *v)
1171:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1172:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_inc_release)
1173:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc_release(v);
1174:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_inc_relaxed)
1175:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1176:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc_relaxed(v);
1177:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_inc)
1178:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc(v);
ARM GAS  /tmp/cczxpjuQ.s 			page 136


1179:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1180:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_add_release(1, v);
1181:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1182:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1183:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1184:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1185:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_inc_relaxed() - atomic increment with relaxed ordering
1186:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1187:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1188:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with relaxed ordering.
1189:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1190:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_inc_relaxed() elsewhere.
1191:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1192:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1193:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1194:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1195:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_inc_relaxed(atomic_t *v)
1196:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1197:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_inc_relaxed)
1198:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc_relaxed(v);
1199:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_inc)
1200:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc(v);
1201:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1202:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_add_relaxed(1, v);
1203:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1204:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1205:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1206:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1207:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_dec() - atomic decrement with relaxed ordering
1208:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1209:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1210:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with relaxed ordering.
1211:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1212:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_dec() elsewhere.
1213:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1214:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
1215:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1216:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
1217:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_dec(atomic_t *v)
1218:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1219:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_dec)
1220:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_dec(v);
1221:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1222:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	raw_atomic_sub(1, v);
1223:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1224:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1225:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1226:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1227:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_dec_return() - atomic decrement with full ordering
1228:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1229:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1230:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with full ordering.
1231:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1232:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_dec_return() elsewhere.
1233:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1234:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1235:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
ARM GAS  /tmp/cczxpjuQ.s 			page 137


1236:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_dec_return(atomic_t *v)
1238:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1239:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_dec_return)
1240:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return(v);
1241:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_dec_return_relaxed)
1242:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1243:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1244:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_dec_return_relaxed(v);
1245:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1246:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1247:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_sub_return(1, v);
1249:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1250:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1251:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1252:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1253:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_dec_return_acquire() - atomic decrement with acquire ordering
1254:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1255:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1256:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with acquire ordering.
1257:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1258:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_dec_return_acquire() elsewhere.
1259:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1260:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1261:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1262:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1263:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_dec_return_acquire(atomic_t *v)
1264:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1265:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_dec_return_acquire)
1266:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return_acquire(v);
1267:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_dec_return_relaxed)
1268:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_dec_return_relaxed(v);
1269:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1270:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1271:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_dec_return)
1272:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return(v);
1273:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1274:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_sub_return_acquire(1, v);
1275:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1276:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1277:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1278:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1279:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_dec_return_release() - atomic decrement with release ordering
1280:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1281:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1282:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with release ordering.
1283:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1284:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_dec_return_release() elsewhere.
1285:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1286:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1287:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1288:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1289:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_dec_return_release(atomic_t *v)
1290:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1291:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_dec_return_release)
1292:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return_release(v);
ARM GAS  /tmp/cczxpjuQ.s 			page 138


1293:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_dec_return_relaxed)
1294:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1295:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return_relaxed(v);
1296:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_dec_return)
1297:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return(v);
1298:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1299:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_sub_return_release(1, v);
1300:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1301:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1302:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1303:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1304:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_dec_return_relaxed() - atomic decrement with relaxed ordering
1305:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1306:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1307:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with relaxed ordering.
1308:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1309:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_dec_return_relaxed() elsewhere.
1310:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1311:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1312:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1313:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1314:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_dec_return_relaxed(atomic_t *v)
1315:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1316:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_dec_return_relaxed)
1317:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return_relaxed(v);
1318:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_dec_return)
1319:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return(v);
1320:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1321:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_sub_return_relaxed(1, v);
1322:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1323:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1324:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1325:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1326:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_dec() - atomic decrement with full ordering
1327:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1328:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1329:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with full ordering.
1330:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1331:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_dec() elsewhere.
1332:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1333:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1334:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1335:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1336:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_dec(atomic_t *v)
1337:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1338:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_dec)
1339:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec(v);
1340:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_dec_relaxed)
1341:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1342:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1343:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_dec_relaxed(v);
1344:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1345:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1346:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1347:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_sub(1, v);
1348:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1349:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
ARM GAS  /tmp/cczxpjuQ.s 			page 139


1350:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1351:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1352:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_dec_acquire() - atomic decrement with acquire ordering
1353:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1354:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1355:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with acquire ordering.
1356:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1357:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_dec_acquire() elsewhere.
1358:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1359:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1360:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1361:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1362:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_dec_acquire(atomic_t *v)
1363:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1364:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_dec_acquire)
1365:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec_acquire(v);
1366:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_dec_relaxed)
1367:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_dec_relaxed(v);
1368:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1369:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1370:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_dec)
1371:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec(v);
1372:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1373:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_sub_acquire(1, v);
1374:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1375:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1376:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1377:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1378:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_dec_release() - atomic decrement with release ordering
1379:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1380:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1381:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with release ordering.
1382:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1383:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_dec_release() elsewhere.
1384:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1385:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1386:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1387:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1388:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_dec_release(atomic_t *v)
1389:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1390:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_dec_release)
1391:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec_release(v);
1392:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_dec_relaxed)
1393:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1394:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec_relaxed(v);
1395:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_dec)
1396:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec(v);
1397:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1398:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_sub_release(1, v);
1399:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1400:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1401:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1402:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1403:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_dec_relaxed() - atomic decrement with relaxed ordering
1404:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1405:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1406:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with relaxed ordering.
ARM GAS  /tmp/cczxpjuQ.s 			page 140


1407:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1408:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_dec_relaxed() elsewhere.
1409:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1410:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1411:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1412:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1413:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_dec_relaxed(atomic_t *v)
1414:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1415:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_dec_relaxed)
1416:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec_relaxed(v);
1417:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_dec)
1418:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec(v);
1419:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1420:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_sub_relaxed(1, v);
1421:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1422:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1423:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1424:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1425:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_and() - atomic bitwise AND with relaxed ordering
1426:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1427:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1428:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1429:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & @i) with relaxed ordering.
1430:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1431:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_and() elsewhere.
1432:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1433:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
1434:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1435:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
1436:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_and(int i, atomic_t *v)
1437:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1438:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_and(i, v);
1439:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1440:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1441:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1442:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_and() - atomic bitwise AND with full ordering
1443:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1444:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1445:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1446:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & @i) with full ordering.
1447:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1448:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_and() elsewhere.
1449:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1450:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1451:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1452:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1453:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_and(int i, atomic_t *v)
1454:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1455:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_and)
1456:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and(i, v);
1457:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_and_relaxed)
1458:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1459:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1460:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_and_relaxed(i, v);
1461:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1462:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
ARM GAS  /tmp/cczxpjuQ.s 			page 141


1464:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_and"
1465:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1466:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1467:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1468:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1469:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_and_acquire() - atomic bitwise AND with acquire ordering
1470:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1471:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1472:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1473:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & @i) with acquire ordering.
1474:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1475:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_and_acquire() elsewhere.
1476:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1477:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1478:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1479:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1480:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_and_acquire(int i, atomic_t *v)
1481:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1482:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_and_acquire)
1483:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and_acquire(i, v);
1484:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_and_relaxed)
1485:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_and_relaxed(i, v);
1486:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1487:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1488:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_and)
1489:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and(i, v);
1490:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1491:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_and_acquire"
1492:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1493:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1494:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1495:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1496:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_and_release() - atomic bitwise AND with release ordering
1497:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1498:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1499:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1500:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & @i) with release ordering.
1501:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1502:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_and_release() elsewhere.
1503:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1504:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1505:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1506:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1507:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_and_release(int i, atomic_t *v)
1508:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1509:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_and_release)
1510:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and_release(i, v);
1511:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_and_relaxed)
1512:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1513:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and_relaxed(i, v);
1514:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_and)
1515:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and(i, v);
1516:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1517:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_and_release"
1518:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1519:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1520:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
ARM GAS  /tmp/cczxpjuQ.s 			page 142


1521:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1522:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_and_relaxed() - atomic bitwise AND with relaxed ordering
1523:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1524:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1525:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1526:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & @i) with relaxed ordering.
1527:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1528:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_and_relaxed() elsewhere.
1529:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1530:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1531:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1532:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1533:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_and_relaxed(int i, atomic_t *v)
1534:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1535:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_and_relaxed)
1536:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and_relaxed(i, v);
1537:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_and)
1538:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and(i, v);
1539:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1540:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_and_relaxed"
1541:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1542:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1543:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1544:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1545:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_andnot() - atomic bitwise AND NOT with relaxed ordering
1546:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1547:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1548:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1549:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & ~@i) with relaxed ordering.
1550:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1551:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_andnot() elsewhere.
1552:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1553:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
1554:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1555:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
1556:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_andnot(int i, atomic_t *v)
1557:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1558:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_andnot)
1559:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_andnot(i, v);
1560:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1561:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	raw_atomic_and(~i, v);
1562:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1563:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1564:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1565:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1566:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_andnot() - atomic bitwise AND NOT with full ordering
1567:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1568:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1569:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1570:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & ~@i) with full ordering.
1571:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1572:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_andnot() elsewhere.
1573:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1574:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1575:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1576:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1577:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_andnot(int i, atomic_t *v)
ARM GAS  /tmp/cczxpjuQ.s 			page 143


1578:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1579:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_andnot)
1580:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot(i, v);
1581:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_andnot_relaxed)
1582:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1583:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1584:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_andnot_relaxed(i, v);
1585:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1586:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1587:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1588:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_and(~i, v);
1589:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1590:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1591:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1592:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1593:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_andnot_acquire() - atomic bitwise AND NOT with acquire ordering
1594:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1595:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1596:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1597:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & ~@i) with acquire ordering.
1598:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1599:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_andnot_acquire() elsewhere.
1600:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1601:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1602:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1603:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1604:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_andnot_acquire(int i, atomic_t *v)
1605:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1606:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_andnot_acquire)
1607:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot_acquire(i, v);
1608:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_andnot_relaxed)
1609:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_andnot_relaxed(i, v);
1610:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1611:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1612:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_andnot)
1613:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot(i, v);
1614:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1615:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_and_acquire(~i, v);
1616:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1617:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1618:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1619:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1620:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_andnot_release() - atomic bitwise AND NOT with release ordering
1621:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1622:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1623:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1624:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & ~@i) with release ordering.
1625:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1626:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_andnot_release() elsewhere.
1627:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1628:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1629:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1630:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1631:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_andnot_release(int i, atomic_t *v)
1632:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1633:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_andnot_release)
1634:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot_release(i, v);
ARM GAS  /tmp/cczxpjuQ.s 			page 144


1635:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_andnot_relaxed)
1636:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1637:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot_relaxed(i, v);
1638:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_andnot)
1639:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot(i, v);
1640:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1641:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_and_release(~i, v);
1642:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1643:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1644:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1645:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1646:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_andnot_relaxed() - atomic bitwise AND NOT with relaxed ordering
1647:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1648:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1649:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1650:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & ~@i) with relaxed ordering.
1651:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1652:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_andnot_relaxed() elsewhere.
1653:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1654:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1655:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1656:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1657:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_andnot_relaxed(int i, atomic_t *v)
1658:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1659:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_andnot_relaxed)
1660:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot_relaxed(i, v);
1661:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_andnot)
1662:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot(i, v);
1663:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1664:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_and_relaxed(~i, v);
1665:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1666:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1667:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1668:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1669:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_or() - atomic bitwise OR with relaxed ordering
1670:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1671:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1672:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1673:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v | @i) with relaxed ordering.
1674:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1675:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_or() elsewhere.
1676:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1677:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
1678:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1679:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
1680:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_or(int i, atomic_t *v)
1681:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1682:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_or(i, v);
1683:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1684:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1685:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1686:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_or() - atomic bitwise OR with full ordering
1687:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1688:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1689:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1690:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v | @i) with full ordering.
1691:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
ARM GAS  /tmp/cczxpjuQ.s 			page 145


1692:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_or() elsewhere.
1693:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1694:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1695:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1696:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1697:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_or(int i, atomic_t *v)
1698:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1699:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_or)
1700:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or(i, v);
1701:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_or_relaxed)
1702:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1703:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1704:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_or_relaxed(i, v);
1705:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1706:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1707:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1708:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_or"
1709:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1710:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1711:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1712:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1713:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_or_acquire() - atomic bitwise OR with acquire ordering
1714:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1715:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1716:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1717:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v | @i) with acquire ordering.
1718:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1719:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_or_acquire() elsewhere.
1720:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1721:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1722:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1723:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1724:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_or_acquire(int i, atomic_t *v)
1725:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1726:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_or_acquire)
1727:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or_acquire(i, v);
1728:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_or_relaxed)
1729:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_or_relaxed(i, v);
1730:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1731:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1732:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_or)
1733:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or(i, v);
1734:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1735:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_or_acquire"
1736:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1737:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1738:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1739:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1740:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_or_release() - atomic bitwise OR with release ordering
1741:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1742:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1743:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1744:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v | @i) with release ordering.
1745:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1746:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_or_release() elsewhere.
1747:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1748:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
ARM GAS  /tmp/cczxpjuQ.s 			page 146


1749:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1750:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1751:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_or_release(int i, atomic_t *v)
1752:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1753:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_or_release)
1754:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or_release(i, v);
1755:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_or_relaxed)
1756:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1757:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or_relaxed(i, v);
1758:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_or)
1759:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or(i, v);
1760:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1761:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_or_release"
1762:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1763:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1764:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1765:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1766:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_or_relaxed() - atomic bitwise OR with relaxed ordering
1767:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1768:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1769:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1770:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v | @i) with relaxed ordering.
1771:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1772:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_or_relaxed() elsewhere.
1773:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1774:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1775:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1776:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1777:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_or_relaxed(int i, atomic_t *v)
1778:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1779:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_or_relaxed)
1780:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or_relaxed(i, v);
1781:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_or)
1782:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or(i, v);
1783:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1784:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_or_relaxed"
1785:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1786:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1787:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1788:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1789:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_xor() - atomic bitwise XOR with relaxed ordering
1790:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1791:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1792:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1793:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v ^ @i) with relaxed ordering.
1794:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1795:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_xor() elsewhere.
1796:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1797:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
1798:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1799:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
1800:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_xor(int i, atomic_t *v)
1801:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1802:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_xor(i, v);
1803:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1804:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1805:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
ARM GAS  /tmp/cczxpjuQ.s 			page 147


1806:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_xor() - atomic bitwise XOR with full ordering
1807:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1808:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1809:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1810:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v ^ @i) with full ordering.
1811:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1812:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_xor() elsewhere.
1813:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1814:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1815:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1816:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1817:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_xor(int i, atomic_t *v)
1818:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1819:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_xor)
1820:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor(i, v);
1821:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_xor_relaxed)
1822:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1823:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1824:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_xor_relaxed(i, v);
1825:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1826:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1827:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1828:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_xor"
1829:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1830:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1831:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1832:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1833:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_xor_acquire() - atomic bitwise XOR with acquire ordering
1834:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1835:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1836:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1837:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v ^ @i) with acquire ordering.
1838:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1839:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_xor_acquire() elsewhere.
1840:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1841:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1842:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1843:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1844:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_xor_acquire(int i, atomic_t *v)
1845:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1846:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_xor_acquire)
1847:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor_acquire(i, v);
1848:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_xor_relaxed)
1849:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_xor_relaxed(i, v);
1850:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1851:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1852:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_xor)
1853:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor(i, v);
1854:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1855:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_xor_acquire"
1856:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1857:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1858:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1859:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1860:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_xor_release() - atomic bitwise XOR with release ordering
1861:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1862:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
ARM GAS  /tmp/cczxpjuQ.s 			page 148


1863:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1864:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v ^ @i) with release ordering.
1865:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1866:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_xor_release() elsewhere.
1867:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1868:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1869:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1870:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1871:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_xor_release(int i, atomic_t *v)
1872:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1873:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_xor_release)
1874:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor_release(i, v);
1875:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_xor_relaxed)
1876:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1877:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor_relaxed(i, v);
1878:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_xor)
1879:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor(i, v);
1880:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1881:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_xor_release"
1882:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1883:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1884:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1885:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1886:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_xor_relaxed() - atomic bitwise XOR with relaxed ordering
1887:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1888:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1889:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1890:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v ^ @i) with relaxed ordering.
1891:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1892:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_xor_relaxed() elsewhere.
1893:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1894:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1895:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1896:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1897:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_xor_relaxed(int i, atomic_t *v)
1898:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1899:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_xor_relaxed)
1900:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor_relaxed(i, v);
1901:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_xor)
1902:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor(i, v);
1903:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1904:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_xor_relaxed"
1905:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1906:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1907:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1908:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1909:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_xchg() - atomic exchange with full ordering
1910:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1911:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
1912:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1913:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to @new with full ordering.
1914:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1915:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_xchg() elsewhere.
1916:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1917:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1918:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1919:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
ARM GAS  /tmp/cczxpjuQ.s 			page 149


1920:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_xchg(atomic_t *v, int new)
1921:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1922:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_xchg)
1923:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg(v, new);
1924:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_xchg_relaxed)
1925:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1926:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1927:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_xchg_relaxed(v, new);
1928:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1929:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1930:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1931:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_xchg(&v->counter, new);
1932:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1933:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1934:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1935:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1936:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_xchg_acquire() - atomic exchange with acquire ordering
1937:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1938:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
1939:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1940:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to @new with acquire ordering.
1941:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1942:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_xchg_acquire() elsewhere.
1943:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1944:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1945:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1946:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1947:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_xchg_acquire(atomic_t *v, int new)
1948:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1949:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_xchg_acquire)
1950:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg_acquire(v, new);
1951:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_xchg_relaxed)
1952:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_xchg_relaxed(v, new);
1953:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1954:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1955:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_xchg)
1956:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg(v, new);
1957:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1958:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_xchg_acquire(&v->counter, new);
1959:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1960:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1961:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1962:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1963:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_xchg_release() - atomic exchange with release ordering
1964:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1965:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
1966:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1967:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to @new with release ordering.
1968:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1969:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_xchg_release() elsewhere.
1970:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1971:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1972:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1973:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1974:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_xchg_release(atomic_t *v, int new)
1975:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1976:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_xchg_release)
ARM GAS  /tmp/cczxpjuQ.s 			page 150


1977:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg_release(v, new);
1978:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_xchg_relaxed)
1979:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1980:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg_relaxed(v, new);
1981:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_xchg)
1982:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg(v, new);
1983:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1984:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_xchg_release(&v->counter, new);
1985:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1986:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1987:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1988:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1989:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_xchg_relaxed() - atomic exchange with relaxed ordering
1990:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1991:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
1992:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1993:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to @new with relaxed ordering.
1994:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1995:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_xchg_relaxed() elsewhere.
1996:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1997:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1998:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1999:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
2000:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_xchg_relaxed(atomic_t *v, int new)
2001:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2002:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_xchg_relaxed)
2003:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg_relaxed(v, new);
2004:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_xchg)
2005:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg(v, new);
2006:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2007:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_xchg_relaxed(&v->counter, new);
2008:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2009:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2010:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2011:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2012:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_cmpxchg() - atomic compare and exchange with full ordering
2013:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2014:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: int value to compare with
2015:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2016:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2017:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with full ordering.
2018:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
2019:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2020:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_cmpxchg() elsewhere.
2021:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2022:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
2023:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2024:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
2025:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_cmpxchg(atomic_t *v, int old, int new)
2026:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2027:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_cmpxchg)
2028:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg(v, old, new);
2029:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_cmpxchg_relaxed)
2030:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
2031:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
2032:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_cmpxchg_relaxed(v, old, new);
2033:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
ARM GAS  /tmp/cczxpjuQ.s 			page 151


2034:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
2035:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2036:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_cmpxchg(&v->counter, old, new);
2037:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2038:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2039:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2040:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2041:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_cmpxchg_acquire() - atomic compare and exchange with acquire ordering
2042:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2043:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: int value to compare with
2044:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2045:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2046:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with acquire ordering.
2047:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
2048:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2049:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_cmpxchg_acquire() elsewhere.
2050:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2051:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
2052:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2053:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
2054:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_cmpxchg_acquire(atomic_t *v, int old, int new)
2055:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2056:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_cmpxchg_acquire)
2057:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg_acquire(v, old, new);
2058:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_cmpxchg_relaxed)
2059:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_cmpxchg_relaxed(v, old, new);
2060:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
2061:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
2062:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_cmpxchg)
2063:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg(v, old, new);
2064:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2065:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_cmpxchg_acquire(&v->counter, old, new);
2066:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2067:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2068:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2069:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2070:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_cmpxchg_release() - atomic compare and exchange with release ordering
2071:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2072:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: int value to compare with
2073:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2074:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2075:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with release ordering.
2076:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
2077:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2078:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_cmpxchg_release() elsewhere.
2079:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2080:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
2081:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2082:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
2083:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_cmpxchg_release(atomic_t *v, int old, int new)
2084:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2085:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_cmpxchg_release)
2086:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg_release(v, old, new);
2087:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_cmpxchg_relaxed)
2088:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
2089:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg_relaxed(v, old, new);
2090:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_cmpxchg)
ARM GAS  /tmp/cczxpjuQ.s 			page 152


2091:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg(v, old, new);
2092:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2093:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_cmpxchg_release(&v->counter, old, new);
2094:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2095:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2096:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2097:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2098:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_cmpxchg_relaxed() - atomic compare and exchange with relaxed ordering
2099:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2100:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: int value to compare with
2101:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2102:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2103:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with relaxed ordering.
2104:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
2105:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2106:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_cmpxchg_relaxed() elsewhere.
2107:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2108:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
2109:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2110:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
2111:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_cmpxchg_relaxed(atomic_t *v, int old, int new)
2112:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2113:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_cmpxchg_relaxed)
2114:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg_relaxed(v, old, new);
2115:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_cmpxchg)
2116:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg(v, old, new);
2117:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2118:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_cmpxchg_relaxed(&v->counter, old, new);
2119:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2120:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2121:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2122:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2123:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_try_cmpxchg() - atomic compare and exchange with full ordering
2124:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2125:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: pointer to int value to compare with
2126:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2127:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2128:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with full ordering.
2129:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
2130:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * and relaxed ordering is provided.
2131:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2132:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_try_cmpxchg() elsewhere.
2133:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2134:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: @true if the exchange occured, @false otherwise.
2135:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2136:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline bool
2137:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_try_cmpxchg(atomic_t *v, int *old, int new)
2138:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2139:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_try_cmpxchg)
2140:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg(v, old, new);
2141:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_try_cmpxchg_relaxed)
2142:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	bool ret;
2143:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
2144:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_try_cmpxchg_relaxed(v, old, new);
2145:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
2146:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
2147:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
ARM GAS  /tmp/cczxpjuQ.s 			page 153


2148:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int r, o = *old;
2149:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	r = raw_atomic_cmpxchg(v, o, new);
2150:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(r != o))
2151:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*old = r;
2152:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return likely(r == o);
2153:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2154:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2155:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2156:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2157:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_try_cmpxchg_acquire() - atomic compare and exchange with acquire ordering
2158:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2159:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: pointer to int value to compare with
2160:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2161:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2162:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with acquire ordering.
2163:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
2164:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * and relaxed ordering is provided.
2165:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2166:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_try_cmpxchg_acquire() elsewhere.
2167:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2168:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: @true if the exchange occured, @false otherwise.
2169:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2170:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline bool
2171:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_try_cmpxchg_acquire(atomic_t *v, int *old, int new)
2172:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2173:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_try_cmpxchg_acquire)
2174:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg_acquire(v, old, new);
2175:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_try_cmpxchg_relaxed)
2176:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	bool ret = arch_atomic_try_cmpxchg_relaxed(v, old, new);
2177:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
2178:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
2179:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_try_cmpxchg)
2180:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg(v, old, new);
2181:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2182:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int r, o = *old;
2183:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	r = raw_atomic_cmpxchg_acquire(v, o, new);
2184:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(r != o))
2185:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*old = r;
2186:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return likely(r == o);
2187:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2188:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2189:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2190:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2191:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_try_cmpxchg_release() - atomic compare and exchange with release ordering
2192:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2193:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: pointer to int value to compare with
2194:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2195:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2196:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with release ordering.
2197:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
2198:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * and relaxed ordering is provided.
2199:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2200:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_try_cmpxchg_release() elsewhere.
2201:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2202:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: @true if the exchange occured, @false otherwise.
2203:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2204:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline bool
ARM GAS  /tmp/cczxpjuQ.s 			page 154


2205:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_try_cmpxchg_release(atomic_t *v, int *old, int new)
2206:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2207:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_try_cmpxchg_release)
2208:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg_release(v, old, new);
2209:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_try_cmpxchg_relaxed)
2210:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
2211:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg_relaxed(v, old, new);
2212:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_try_cmpxchg)
2213:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg(v, old, new);
2214:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2215:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int r, o = *old;
2216:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	r = raw_atomic_cmpxchg_release(v, o, new);
2217:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(r != o))
2218:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*old = r;
2219:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return likely(r == o);
2220:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2221:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2222:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2223:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2224:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_try_cmpxchg_relaxed() - atomic compare and exchange with relaxed ordering
2225:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2226:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: pointer to int value to compare with
2227:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2228:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2229:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with relaxed ordering.
2230:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
2231:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * and relaxed ordering is provided.
2232:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2233:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_try_cmpxchg_relaxed() elsewhere.
2234:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2235:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: @true if the exchange occured, @false otherwise.
2236:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline bool
2238:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_try_cmpxchg_relaxed(atomic_t *v, int *old, int new)
2239:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2240:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_try_cmpxchg_relaxed)
2241:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg_relaxed(v, old, new);
2242:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_try_cmpxchg)
2243:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg(v, old, new);
2244:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2245:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int r, o = *old;
2246:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	r = raw_atomic_cmpxchg_relaxed(v, o, new);
2247:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(r != o))
2248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*old = r;
2249:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return likely(r == o);
2250:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2251:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2252:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2253:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2254:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_sub_and_test() - atomic subtract and test if zero with full ordering
2255:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
2256:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2257:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2258:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with full ordering.
2259:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2260:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_sub_and_test() elsewhere.
2261:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
ARM GAS  /tmp/cczxpjuQ.s 			page 155


2262:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: @true if the resulting value of @v is zero, @false otherwise.
2263:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2264:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline bool
2265:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_sub_and_test(int i, atomic_t *v)
2266:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2267:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_sub_and_test)
2268:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_and_test(i, v);
2269:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2270:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_sub_return(i, v) == 0;
2271:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2272:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2273:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2274:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2275:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_dec_and_test() - atomic decrement and test if zero with full ordering
2276:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2277:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2278:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with full ordering.
2279:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2280:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_dec_and_test() elsewhere.
2281:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2282:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: @true if the resulting value of @v is zero, @false otherwise.
2283:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2284:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline bool
2285:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_dec_and_test(atomic_t *v)
 2338              		.loc 7 2285 1 view .LVU748
2286:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2287:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_dec_and_test)
2288:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_and_test(v);
2289:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2290:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_dec_return(v) == 0;
 2339              		.loc 7 2290 2 view .LVU749
 2340              	.LBB405:
 2341              	.LBI405:
1237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 2342              		.loc 7 1237 1 view .LVU750
1248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 2343              		.loc 7 1248 2 view .LVU751
 2344              	.LVL210:
 2345              	.LBB406:
 2346              	.LBI406:
 790:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 2347              		.loc 7 790 1 view .LVU752
 2348              	.LBB407:
 795:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
 2349              		.loc 7 795 2 view .LVU753
 796:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_sub_return_relaxed(i, v);
 2350              		.loc 7 796 2 view .LVU754
 2351              	.LBB408:
 2352              	.LBI408:
 2353              		.file 13 "/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** /* SPDX-License-Identifier: GPL-2.0-or-later */
   2:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** /*
   3:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  * Generic barrier definitions.
   4:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  *
   5:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  * It should be possible to use these on really simple architectures,
   6:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  * but it serves more as a starting point for new ports.
   7:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  *
ARM GAS  /tmp/cczxpjuQ.s 			page 156


   8:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  * Copyright (C) 2007 Red Hat, Inc. All Rights Reserved.
   9:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  * Written by David Howells (dhowells@redhat.com)
  10:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  */
  11:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 
  12:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** #include <linux/rwonce.h>
  13:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 
  14:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** static inline void sync(void)
  15:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** {
  16:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 	asm volatile("sync" : : : "memory");
  17:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** }
  18:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 
  19:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** static inline void eieio(void)
  20:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** {
  21:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 	asm volatile("eieio" : : : "memory");
  22:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** }
  23:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 
  24:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** static inline void barrier(void)
 2354              		.loc 13 24 20 view .LVU755
 2355              	.LBB409:
  25:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** {
  26:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 	asm volatile("" : : : "memory");
 2356              		.loc 13 26 2 view .LVU756
 2357              	.LBE409:
 2358              	.LBE408:
 797:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
 2359              		.loc 7 797 2 view .LVU757
 2360              	.LVL211:
 2361              	.LBB410:
 2362              	.LBI410:
 171:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 2363              		.loc 11 171 1 view .LVU758
 2364              	.LBB411:
 2365              		.loc 11 171 1 view .LVU759
 2366              		.loc 11 171 1 view .LVU760
 2367              		.loc 11 171 1 view .LVU761
 2368              		.syntax unified
 2369              	@ 171 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h" 1
 2370              		@ atomic_sub_return
 2371 000a 53E8001F 	1: ldrex   r1, [r3]
 2372 000e A1F10101 	   sub r1, r1, #1
 2373 0012 43E80010 	   strex   r0, r1, [r3]
 2374 0016 90F0000F 	   teq r0, #0
 2375 001a F6D1     	   bne 1b
 2376              	@ 0 "" 2
 2377              	.LVL212:
 2378              		.loc 11 171 1 view .LVU762
 2379              		.loc 11 171 1 is_stmt 0 view .LVU763
 2380              		.thumb
 2381              		.syntax unified
 2382              	.LBE411:
 2383              	.LBE410:
 798:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 2384              		.loc 7 798 2 is_stmt 1 view .LVU764
 2385              	.LBB412:
 2386              	.LBI412:
  24:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** {
 2387              		.loc 13 24 20 view .LVU765
ARM GAS  /tmp/cczxpjuQ.s 			page 157


 2388              	.LBB413:
 2389              		.loc 13 26 2 view .LVU766
 2390              	.LBE413:
 2391              	.LBE412:
 799:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 2392              		.loc 7 799 2 view .LVU767
 2393              	.LVL213:
 799:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 2394              		.loc 7 799 2 is_stmt 0 view .LVU768
 2395              	.LBE407:
 2396              	.LBE406:
 2397              	.LBE405:
 2398              	.LBE404:
 2399              	.LBE403:
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         __free_pages(page, 0);
 2400              		.loc 4 259 14 discriminator 1 view .LVU769
 2401 001c 19B1     		cbz	r1, .L132
 2402              	.L129:
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		__free_pages(page, 0);
 2403              		.loc 4 262 7 is_stmt 1 view .LVU770
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		__free_pages(page, 0);
 2404              		.loc 4 262 25 is_stmt 0 view .LVU771
 2405 001e D369     		ldr	r3, [r2, #28]
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		__free_pages(page, 0);
 2406              		.loc 4 262 9 view .LVU772
 2407 0020 002B     		cmp	r3, #0
 2408 0022 04DB     		blt	.L133
 2409              	.LVL214:
 2410              	.L128:
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 2411              		.loc 4 265 1 view .LVU773
 2412 0024 08BD     		pop	{r3, pc}
 2413              	.LVL215:
 2414              	.L132:
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     }
 2415              		.loc 4 260 9 is_stmt 1 view .LVU774
 2416 0026 1046     		mov	r0, r2
 2417 0028 FFF7FEFF 		bl	__free_pages
 2418              	.LVL216:
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     }
 2419              		.loc 4 260 9 is_stmt 0 view .LVU775
 2420 002c FAE7     		b	.L128
 2421              	.LVL217:
 2422              	.L133:
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	}
 2423              		.loc 4 263 3 is_stmt 1 view .LVU776
 2424 002e 0021     		movs	r1, #0
 2425 0030 1046     		mov	r0, r2
 2426 0032 FFF7FEFF 		bl	__free_pages
 2427              	.LVL218:
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 
 2428              		.loc 4 265 1 is_stmt 0 view .LVU777
 2429 0036 F5E7     		b	.L128
 2430              		.cfi_endproc
 2431              	.LFE919:
 2433              		.section	.text.initramfs_inode_put,"ax",%progbits
 2434              		.align	1
ARM GAS  /tmp/cczxpjuQ.s 			page 158


 2435              		.syntax unified
 2436              		.thumb
 2437              		.thumb_func
 2439              	initramfs_inode_put:
 2440              	.LVL219:
 2441              	.LFB1042:
 182:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(node != NULL){
 2442              		.loc 1 182 62 is_stmt 1 view -0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 0
 2445              		@ frame_needed = 0, uses_anonymous_args = 0
 183:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (node->i_page != NULL){
 2446              		.loc 1 183 5 view .LVU779
 183:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (node->i_page != NULL){
 2447              		.loc 1 183 7 is_stmt 0 view .LVU780
 2448 0000 48B1     		cbz	r0, .L138
 182:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(node != NULL){
 2449              		.loc 1 182 62 view .LVU781
 2450 0002 10B5     		push	{r4, lr}
 2451              	.LCFI24:
 2452              		.cfi_def_cfa_offset 8
 2453              		.cfi_offset 4, -8
 2454              		.cfi_offset 14, -4
 2455 0004 0446     		mov	r4, r0
 184:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             put_page(node->i_page);
 2456              		.loc 1 184 9 is_stmt 1 view .LVU782
 184:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             put_page(node->i_page);
 2457              		.loc 1 184 17 is_stmt 0 view .LVU783
 2458 0006 006C     		ldr	r0, [r0, #64]
 2459              	.LVL220:
 184:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             put_page(node->i_page);
 2460              		.loc 1 184 12 view .LVU784
 2461 0008 08B1     		cbz	r0, .L136
 185:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 2462              		.loc 1 185 13 is_stmt 1 view .LVU785
 2463 000a FFF7FEFF 		bl	__put_page
 2464              	.LVL221:
 2465              	.L136:
 187:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 2466              		.loc 1 187 9 view .LVU786
 2467              	.LBB414:
 2468              	.LBI414:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 2469              		.loc 5 383 20 view .LVU787
 2470              	.LBB415:
 2471              		.loc 5 384 2 view .LVU788
 2472 000e 2046     		mov	r0, r4
 2473 0010 FFF7FEFF 		bl	__sfree__
 2474              	.LVL222:
 2475              		.loc 5 384 2 is_stmt 0 view .LVU789
 2476              	.LBE415:
 2477              	.LBE414:
 189:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct initramfs_dentry* initramfs_create_dentry(struct initramfs_inode* parent_dentry_inode
 2478              		.loc 1 189 1 view .LVU790
 2479 0014 10BD     		pop	{r4, pc}
 2480              	.LVL223:
 2481              	.L138:
ARM GAS  /tmp/cczxpjuQ.s 			page 159


 2482              	.LCFI25:
 2483              		.cfi_def_cfa_offset 0
 2484              		.cfi_restore 4
 2485              		.cfi_restore 14
 189:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct initramfs_dentry* initramfs_create_dentry(struct initramfs_inode* parent_dentry_inode
 2486              		.loc 1 189 1 view .LVU791
 2487 0016 7047     		bx	lr
 2488              		.cfi_endproc
 2489              	.LFE1042:
 2491              		.section	.text.dentry_put,"ax",%progbits
 2492              		.align	1
 2493              		.syntax unified
 2494              		.thumb
 2495              		.thumb_func
 2497              	dentry_put:
 2498              	.LVL224:
 2499              	.LFB1047:
 243:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry == NULL) return;
 2500              		.loc 1 243 1 is_stmt 1 view -0
 2501              		.cfi_startproc
 2502              		@ args = 0, pretend = 0, frame = 0
 2503              		@ frame_needed = 0, uses_anonymous_args = 0
 244:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry->target_inode != NULL)
 2504              		.loc 1 244 5 view .LVU793
 244:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry->target_inode != NULL)
 2505              		.loc 1 244 7 is_stmt 0 view .LVU794
 2506 0000 61B3     		cbz	r1, .L146
 243:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry == NULL) return;
 2507              		.loc 1 243 1 view .LVU795
 2508 0002 38B5     		push	{r3, r4, r5, lr}
 2509              	.LCFI26:
 2510              		.cfi_def_cfa_offset 16
 2511              		.cfi_offset 3, -16
 2512              		.cfi_offset 4, -12
 2513              		.cfi_offset 5, -8
 2514              		.cfi_offset 14, -4
 2515 0004 0D46     		mov	r5, r1
 245:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     {
 2516              		.loc 1 245 5 is_stmt 1 view .LVU796
 245:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     {
 2517              		.loc 1 245 14 is_stmt 0 view .LVU797
 2518 0006 8B68     		ldr	r3, [r1, #8]
 245:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     {
 2519              		.loc 1 245 7 view .LVU798
 2520 0008 93B1     		cbz	r3, .L143
 247:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (atomic_dec_and_test(&dentry->target_inode->dentry_count)) //Ê£ÄÊµãinodeÂºïÁî®ËÆ°Êï∞ÊòØÂ
 2521              		.loc 1 247 9 is_stmt 1 view .LVU799
 2522 000a 041D     		adds	r4, r0, #4
 2523 000c 2046     		mov	r0, r4
 2524              	.LVL225:
 247:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if (atomic_dec_and_test(&dentry->target_inode->dentry_count)) //Ê£ÄÊµãinodeÂºïÁî®ËÆ°Êï∞ÊòØÂ
 2525              		.loc 1 247 9 is_stmt 0 view .LVU800
 2526 000e FFF7FEFF 		bl	spin_lock
 2527              	.LVL226:
 248:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         {
 2528              		.loc 1 248 9 is_stmt 1 view .LVU801
 248:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         {
ARM GAS  /tmp/cczxpjuQ.s 			page 160


 2529              		.loc 1 248 40 is_stmt 0 view .LVU802
 2530 0012 AB68     		ldr	r3, [r5, #8]
 248:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         {
 2531              		.loc 1 248 13 view .LVU803
 2532 0014 0C33     		adds	r3, r3, #12
 2533              	.LVL227:
 2534              	.LBB416:
 2535              	.LBI416:
1380:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 2536              		.loc 6 1380 1 is_stmt 1 view .LVU804
1382:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 2537              		.loc 6 1382 2 view .LVU805
1382:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 2538              		.loc 6 1382 2 view .LVU806
1382:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 2539              		.loc 6 1382 2 view .LVU807
1383:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_dec_and_test(v);
 2540              		.loc 6 1383 2 view .LVU808
 2541              		.loc 6 1384 2 view .LVU809
 2542              	.LBB417:
 2543              	.LBI417:
2285:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 2544              		.loc 7 2285 1 view .LVU810
 2545              		.loc 7 2290 2 view .LVU811
 2546              	.LBB418:
 2547              	.LBI418:
1237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 2548              		.loc 7 1237 1 view .LVU812
1248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 2549              		.loc 7 1248 2 view .LVU813
 2550              	.LBB419:
 2551              	.LBI419:
 790:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 2552              		.loc 7 790 1 view .LVU814
 2553              	.LBB420:
 795:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
 2554              		.loc 7 795 2 view .LVU815
 796:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_sub_return_relaxed(i, v);
 2555              		.loc 7 796 2 view .LVU816
 2556              	.LBB421:
 2557              	.LBI421:
  24:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** {
 2558              		.loc 13 24 20 view .LVU817
 2559              	.LBB422:
 2560              		.loc 13 26 2 view .LVU818
 2561              	.LBE422:
 2562              	.LBE421:
 797:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
 2563              		.loc 7 797 2 view .LVU819
 2564              	.LVL228:
 2565              	.LBB423:
 2566              	.LBI423:
 2567              		.loc 11 171 1 view .LVU820
 2568              	.LBB424:
 2569              		.loc 11 171 1 view .LVU821
 2570              		.loc 11 171 1 view .LVU822
 2571              		.loc 11 171 1 view .LVU823
ARM GAS  /tmp/cczxpjuQ.s 			page 161


 2572              		.syntax unified
 2573              	@ 171 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h" 1
 2574              		@ atomic_sub_return
 2575 0016 53E8002F 	1: ldrex   r2, [r3]
 2576 001a A2F10102 	   sub r2, r2, #1
 2577 001e 43E80021 	   strex   r1, r2, [r3]
 2578 0022 91F0000F 	   teq r1, #0
 2579 0026 F6D1     	   bne 1b
 2580              	@ 0 "" 2
 2581              	.LVL229:
 2582              		.loc 11 171 1 view .LVU824
 2583              		.loc 11 171 1 is_stmt 0 view .LVU825
 2584              		.thumb
 2585              		.syntax unified
 2586              	.LBE424:
 2587              	.LBE423:
 798:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 2588              		.loc 7 798 2 is_stmt 1 view .LVU826
 2589              	.LBB425:
 2590              	.LBI425:
  24:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** {
 2591              		.loc 13 24 20 view .LVU827
 2592              	.LBB426:
 2593              		.loc 13 26 2 view .LVU828
 2594              	.LBE426:
 2595              	.LBE425:
 799:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 2596              		.loc 7 799 2 view .LVU829
 2597              	.LVL230:
 799:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 2598              		.loc 7 799 2 is_stmt 0 view .LVU830
 2599              	.LBE420:
 2600              	.LBE419:
 2601              	.LBE418:
 2602              	.LBE417:
 2603              	.LBE416:
 248:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         {
 2604              		.loc 1 248 12 discriminator 1 view .LVU831
 2605 0028 4AB1     		cbz	r2, .L149
 2606              	.L144:
 253:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 2607              		.loc 1 253 9 is_stmt 1 view .LVU832
 2608 002a 2046     		mov	r0, r4
 2609 002c FFF7FEFF 		bl	spin_unlock
 2610              	.LVL231:
 2611              	.L143:
 255:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     kfree(dentry);
 2612              		.loc 1 255 5 view .LVU833
 2613              	.LBB427:
 2614              	.LBI427:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 2615              		.loc 5 383 20 view .LVU834
 2616              	.LBB428:
 2617              		.loc 5 384 2 view .LVU835
 2618 0030 6868     		ldr	r0, [r5, #4]
 2619 0032 FFF7FEFF 		bl	__sfree__
 2620              	.LVL232:
ARM GAS  /tmp/cczxpjuQ.s 			page 162


 2621              		.loc 5 384 2 is_stmt 0 view .LVU836
 2622              	.LBE428:
 2623              	.LBE427:
 256:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 2624              		.loc 1 256 5 is_stmt 1 view .LVU837
 2625              	.LBB429:
 2626              	.LBI429:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 2627              		.loc 5 383 20 view .LVU838
 2628              	.LBB430:
 2629              		.loc 5 384 2 view .LVU839
 2630 0036 2846     		mov	r0, r5
 2631 0038 FFF7FEFF 		bl	__sfree__
 2632              	.LVL233:
 2633              		.loc 5 384 2 is_stmt 0 view .LVU840
 2634              	.LBE430:
 2635              	.LBE429:
 257:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static void initramfs_delete_dentry(struct initramfs_superblock *sb,struct initramfs_inode* parent_
 2636              		.loc 1 257 1 view .LVU841
 2637 003c 38BD     		pop	{r3, r4, r5, pc}
 2638              	.LVL234:
 2639              	.L149:
 250:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             initramfs_inode_put(dentry->target_inode);
 2640              		.loc 1 250 13 is_stmt 1 view .LVU842
 250:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             initramfs_inode_put(dentry->target_inode);
 2641              		.loc 1 250 29 is_stmt 0 view .LVU843
 2642 003e AB68     		ldr	r3, [r5, #8]
 2643              	.LVL235:
 2644              	.LBB431:
 2645              	.LBI431:
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_add_tail - add a new entry
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @new: new entry to be added
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: list head to add it before
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Insert a new entry before the specified head.
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * This is useful for implementing queues.
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_add_tail(struct list_head *new, struct list_head *head)
 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_add(new, head->prev, head);
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Delete a list entry by making the prev/next entries
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * point to each other.
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * This is only for internal list manipulation where we know
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * the prev/next entries already!
 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void __list_del(struct list_head * prev, struct list_head * next)
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	next->prev = prev;
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
ARM GAS  /tmp/cczxpjuQ.s 			page 163


 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Delete a list entry and clear the 'prev' pointer.
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * This is a special-purpose list clearing method used in the networking code
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * for lists allocated as per-cpu, where we don't want to incur the extra
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * WRITE_ONCE() overhead of a regular list_del_init(). The code that uses this
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * needs to check the node 'prev' pointer instead of calling list_empty().
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void __list_del_clearprev(struct list_head *entry)
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_del(entry->prev, entry->next);
 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = NULL;
 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void __list_del_entry(struct list_head *entry)
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	if (!__list_del_entry_valid(entry))
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_del(entry->prev, entry->next);
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_del - deletes entry from list.
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @entry: the element to delete from the list.
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Note: list_empty() on entry does not return true after this, the entry is
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * in an undefined state.
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_del(struct list_head *entry)
 2646              		.loc 9 227 20 is_stmt 1 view .LVU844
 2647              	.LBB432:
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_del_entry(entry);
 2648              		.loc 9 229 2 view .LVU845
 2649              	.LBB433:
 2650              	.LBI433:
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2651              		.loc 9 213 20 view .LVU846
 2652              	.LBB434:
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 2653              		.loc 9 215 2 view .LVU847
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2654              		.loc 9 218 2 view .LVU848
 2655 0040 9A69     		ldr	r2, [r3, #24]
 2656 0042 5969     		ldr	r1, [r3, #20]
 2657              	.LVL236:
 2658              	.LBB435:
 2659              	.LBI435:
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2660              		.loc 9 193 20 view .LVU849
 2661              	.LBB436:
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 2662              		.loc 9 195 2 view .LVU850
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 2663              		.loc 9 195 13 is_stmt 0 view .LVU851
ARM GAS  /tmp/cczxpjuQ.s 			page 164


 2664 0044 4A60     		str	r2, [r1, #4]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2665              		.loc 9 196 2 is_stmt 1 view .LVU852
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2666              		.loc 9 196 2 view .LVU853
 2667              	.LBB437:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2668              		.loc 9 196 2 view .LVU854
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2669              		.loc 9 196 2 view .LVU855
 2670              	.LBE437:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2671              		.loc 9 196 2 discriminator 2 view .LVU856
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2672              		.loc 9 196 2 discriminator 2 view .LVU857
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2673              		.loc 9 196 2 discriminator 2 view .LVU858
 2674 0046 1160     		str	r1, [r2]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2675              		.loc 9 196 2 discriminator 2 view .LVU859
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2676              		.loc 9 196 2 discriminator 2 view .LVU860
 2677              	.LVL237:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2678              		.loc 9 196 2 is_stmt 0 discriminator 2 view .LVU861
 2679              	.LBE436:
 2680              	.LBE435:
 2681              	.LBE434:
 2682              	.LBE433:
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->next = LIST_POISON1;
 2683              		.loc 9 230 2 is_stmt 1 view .LVU862
 2684              		.loc 9 230 14 is_stmt 0 view .LVU863
 2685 0048 4FF48072 		mov	r2, #256
 2686 004c 5A61     		str	r2, [r3, #20]
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 2687              		.loc 9 231 2 is_stmt 1 view .LVU864
 2688              		.loc 9 231 14 is_stmt 0 view .LVU865
 2689 004e 4FF49172 		mov	r2, #290
 2690 0052 9A61     		str	r2, [r3, #24]
 2691              	.LVL238:
 2692              		.loc 9 231 14 view .LVU866
 2693              	.LBE432:
 2694              	.LBE431:
 251:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 2695              		.loc 1 251 13 is_stmt 1 view .LVU867
 2696 0054 A868     		ldr	r0, [r5, #8]
 2697 0056 FFF7FEFF 		bl	initramfs_inode_put
 2698              	.LVL239:
 2699 005a E6E7     		b	.L144
 2700              	.LVL240:
 2701              	.L146:
 2702              	.LCFI27:
 2703              		.cfi_def_cfa_offset 0
 2704              		.cfi_restore 3
 2705              		.cfi_restore 4
 2706              		.cfi_restore 5
 2707              		.cfi_restore 14
ARM GAS  /tmp/cczxpjuQ.s 			page 165


 251:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 2708              		.loc 1 251 13 is_stmt 0 view .LVU868
 2709 005c 7047     		bx	lr
 2710              		.cfi_endproc
 2711              	.LFE1047:
 2713              		.section	.text.initramfs_release_dentry,"ax",%progbits
 2714              		.align	1
 2715              		.syntax unified
 2716              		.thumb
 2717              		.thumb_func
 2719              	initramfs_release_dentry:
 2720              	.LVL241:
 2721              	.LFB1065:
 597:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *fs_dentry = dentry->d_fsdata;
 2722              		.loc 1 597 59 is_stmt 1 view -0
 2723              		.cfi_startproc
 2724              		@ args = 0, pretend = 0, frame = 0
 2725              		@ frame_needed = 0, uses_anonymous_args = 0
 597:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *fs_dentry = dentry->d_fsdata;
 2726              		.loc 1 597 59 is_stmt 0 view .LVU870
 2727 0000 08B5     		push	{r3, lr}
 2728              	.LCFI28:
 2729              		.cfi_def_cfa_offset 8
 2730              		.cfi_offset 3, -8
 2731              		.cfi_offset 14, -4
 598:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry_put(fs_dentry->target_inode->sb, fs_dentry);
 2732              		.loc 1 598 5 is_stmt 1 view .LVU871
 598:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry_put(fs_dentry->target_inode->sb, fs_dentry);
 2733              		.loc 1 598 30 is_stmt 0 view .LVU872
 2734 0002 416D     		ldr	r1, [r0, #84]
 2735              	.LVL242:
 599:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 2736              		.loc 1 599 5 is_stmt 1 view .LVU873
 599:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 2737              		.loc 1 599 25 is_stmt 0 view .LVU874
 2738 0004 8B68     		ldr	r3, [r1, #8]
 599:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 2739              		.loc 1 599 5 view .LVU875
 2740 0006 D86B     		ldr	r0, [r3, #60]
 2741              	.LVL243:
 599:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 2742              		.loc 1 599 5 view .LVU876
 2743 0008 FFF7FEFF 		bl	dentry_put
 2744              	.LVL244:
 600:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static int initramfs_rmdir(struct inode *	dir  ,struct dentry *dentry){
 2745              		.loc 1 600 1 view .LVU877
 2746 000c 08BD     		pop	{r3, pc}
 2747              		.cfi_endproc
 2748              	.LFE1065:
 2750              		.section	.text.initramfs_rmdir,"ax",%progbits
 2751              		.align	1
 2752              		.syntax unified
 2753              		.thumb
 2754              		.thumb_func
 2756              	initramfs_rmdir:
 2757              	.LVL245:
 2758              	.LFB1066:
ARM GAS  /tmp/cczxpjuQ.s 			page 166


 601:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initramfs_release_dentry(dentry);
 2759              		.loc 1 601 71 is_stmt 1 view -0
 2760              		.cfi_startproc
 2761              		@ args = 0, pretend = 0, frame = 0
 2762              		@ frame_needed = 0, uses_anonymous_args = 0
 601:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initramfs_release_dentry(dentry);
 2763              		.loc 1 601 71 is_stmt 0 view .LVU879
 2764 0000 38B5     		push	{r3, r4, r5, lr}
 2765              	.LCFI29:
 2766              		.cfi_def_cfa_offset 16
 2767              		.cfi_offset 3, -16
 2768              		.cfi_offset 4, -12
 2769              		.cfi_offset 5, -8
 2770              		.cfi_offset 14, -4
 2771 0002 0546     		mov	r5, r0
 2772 0004 0C46     		mov	r4, r1
 602:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return simple_unlink(dir,dentry);
 2773              		.loc 1 602 5 is_stmt 1 view .LVU880
 2774 0006 0846     		mov	r0, r1
 2775              	.LVL246:
 602:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return simple_unlink(dir,dentry);
 2776              		.loc 1 602 5 is_stmt 0 view .LVU881
 2777 0008 FFF7FEFF 		bl	initramfs_release_dentry
 2778              	.LVL247:
 603:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 2779              		.loc 1 603 5 is_stmt 1 view .LVU882
 603:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 2780              		.loc 1 603 12 is_stmt 0 view .LVU883
 2781 000c 2146     		mov	r1, r4
 2782 000e 2846     		mov	r0, r5
 2783 0010 FFF7FEFF 		bl	simple_unlink
 2784              	.LVL248:
 604:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 2785              		.loc 1 604 1 view .LVU884
 2786 0014 38BD     		pop	{r3, r4, r5, pc}
 604:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 2787              		.loc 1 604 1 view .LVU885
 2788              		.cfi_endproc
 2789              	.LFE1066:
 2791              		.section	.text.initramfs_delete_dentry,"ax",%progbits
 2792              		.align	1
 2793              		.syntax unified
 2794              		.thumb
 2795              		.thumb_func
 2797              	initramfs_delete_dentry:
 2798              	.LVL249:
 2799              	.LFB1048:
 258:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(parent_dentry_inode != NULL) spin_lock(&parent_dentry_inode->lock);
 2800              		.loc 1 258 152 is_stmt 1 view -0
 2801              		.cfi_startproc
 2802              		@ args = 0, pretend = 0, frame = 0
 2803              		@ frame_needed = 0, uses_anonymous_args = 0
 258:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(parent_dentry_inode != NULL) spin_lock(&parent_dentry_inode->lock);
 2804              		.loc 1 258 152 is_stmt 0 view .LVU887
 2805 0000 70B5     		push	{r4, r5, r6, lr}
 2806              	.LCFI30:
 2807              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cczxpjuQ.s 			page 167


 2808              		.cfi_offset 4, -16
 2809              		.cfi_offset 5, -12
 2810              		.cfi_offset 6, -8
 2811              		.cfi_offset 14, -4
 2812 0002 0546     		mov	r5, r0
 2813 0004 1446     		mov	r4, r2
 259:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 2814              		.loc 1 259 5 is_stmt 1 view .LVU888
 259:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 2815              		.loc 1 259 7 is_stmt 0 view .LVU889
 2816 0006 0E46     		mov	r6, r1
 2817 0008 19B1     		cbz	r1, .L155
 259:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 2818              		.loc 1 259 37 is_stmt 1 discriminator 1 view .LVU890
 2819 000a 01F12400 		add	r0, r1, #36
 2820              	.LVL250:
 259:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 2821              		.loc 1 259 37 is_stmt 0 discriminator 1 view .LVU891
 2822 000e FFF7FEFF 		bl	spin_lock
 2823              	.LVL251:
 2824              	.L155:
 261:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(!list_empty(&delete_dentry->target_inode->dentry_list_head)){      //Â¶ÇÊûúÁõÆÂΩï‰∏ãÁöÑi
 2825              		.loc 1 261 5 is_stmt 1 view .LVU892
 261:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(!list_empty(&delete_dentry->target_inode->dentry_list_head)){      //Â¶ÇÊûúÁõÆÂΩï‰∏ãÁöÑi
 2826              		.loc 1 261 23 is_stmt 0 view .LVU893
 2827 0012 A268     		ldr	r2, [r4, #8]
 261:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(!list_empty(&delete_dentry->target_inode->dentry_list_head)){      //Â¶ÇÊûúÁõÆÂΩï‰∏ãÁöÑi
 2828              		.loc 1 261 37 view .LVU894
 2829 0014 5368     		ldr	r3, [r2, #4]
 261:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(!list_empty(&delete_dentry->target_inode->dentry_list_head)){      //Â¶ÇÊûúÁõÆÂΩï‰∏ãÁöÑi
 2830              		.loc 1 261 46 view .LVU895
 2831 0016 03F47043 		and	r3, r3, #61440
 261:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(!list_empty(&delete_dentry->target_inode->dentry_list_head)){      //Â¶ÇÊûúÁõÆÂΩï‰∏ãÁöÑi
 2832              		.loc 1 261 8 view .LVU896
 2833 001a B3F5804F 		cmp	r3, #16384
 2834 001e 13D0     		beq	.L161
 2835              	.L156:
 268:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(parent_dentry_inode != NULL) spin_unlock(&parent_dentry_inode->lock);
 2836              		.loc 1 268 5 is_stmt 1 view .LVU897
 2837              	.LVL252:
 2838              	.LBB438:
 2839              	.LBI438:
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2840              		.loc 9 227 20 view .LVU898
 2841              	.LBB439:
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->next = LIST_POISON1;
 2842              		.loc 9 229 2 view .LVU899
 2843              	.LBB440:
 2844              	.LBI440:
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2845              		.loc 9 213 20 view .LVU900
 2846              	.LBB441:
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 2847              		.loc 9 215 2 view .LVU901
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2848              		.loc 9 218 2 view .LVU902
 2849 0020 2369     		ldr	r3, [r4, #16]
ARM GAS  /tmp/cczxpjuQ.s 			page 168


 2850 0022 E268     		ldr	r2, [r4, #12]
 2851              	.LVL253:
 2852              	.LBB442:
 2853              	.LBI442:
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2854              		.loc 9 193 20 view .LVU903
 2855              	.LBB443:
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 2856              		.loc 9 195 2 view .LVU904
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 2857              		.loc 9 195 13 is_stmt 0 view .LVU905
 2858 0024 5360     		str	r3, [r2, #4]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2859              		.loc 9 196 2 is_stmt 1 view .LVU906
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2860              		.loc 9 196 2 view .LVU907
 2861              	.LBB444:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2862              		.loc 9 196 2 view .LVU908
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2863              		.loc 9 196 2 view .LVU909
 2864              	.LBE444:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2865              		.loc 9 196 2 discriminator 2 view .LVU910
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2866              		.loc 9 196 2 discriminator 2 view .LVU911
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2867              		.loc 9 196 2 discriminator 2 view .LVU912
 2868 0026 1A60     		str	r2, [r3]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2869              		.loc 9 196 2 discriminator 2 view .LVU913
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2870              		.loc 9 196 2 discriminator 2 view .LVU914
 2871              	.LVL254:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2872              		.loc 9 196 2 is_stmt 0 discriminator 2 view .LVU915
 2873              	.LBE443:
 2874              	.LBE442:
 2875              	.LBE441:
 2876              	.LBE440:
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 2877              		.loc 9 230 2 is_stmt 1 view .LVU916
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 2878              		.loc 9 230 14 is_stmt 0 view .LVU917
 2879 0028 4FF48073 		mov	r3, #256
 2880 002c E360     		str	r3, [r4, #12]
 2881              		.loc 9 231 2 is_stmt 1 view .LVU918
 2882              		.loc 9 231 14 is_stmt 0 view .LVU919
 2883 002e 4FF49173 		mov	r3, #290
 2884 0032 2361     		str	r3, [r4, #16]
 2885              	.LVL255:
 2886              		.loc 9 231 14 view .LVU920
 2887              	.LBE439:
 2888              	.LBE438:
 269:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry_put(sb,delete_dentry);
 2889              		.loc 1 269 5 is_stmt 1 view .LVU921
 269:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry_put(sb,delete_dentry);
ARM GAS  /tmp/cczxpjuQ.s 			page 169


 2890              		.loc 1 269 7 is_stmt 0 view .LVU922
 2891 0034 1EB1     		cbz	r6, .L159
 269:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry_put(sb,delete_dentry);
 2892              		.loc 1 269 37 is_stmt 1 discriminator 1 view .LVU923
 2893 0036 06F12400 		add	r0, r6, #36
 2894 003a FFF7FEFF 		bl	spin_unlock
 2895              	.LVL256:
 2896              	.L159:
 270:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 2897              		.loc 1 270 5 view .LVU924
 2898 003e 2146     		mov	r1, r4
 2899 0040 2846     		mov	r0, r5
 2900 0042 FFF7FEFF 		bl	dentry_put
 2901              	.LVL257:
 2902              	.L154:
 271:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct initramfs_superblock* initramfs_superblock_create(void) //ÂàõÂª∫superblock
 2903              		.loc 1 271 1 is_stmt 0 view .LVU925
 2904 0046 70BD     		pop	{r4, r5, r6, pc}
 2905              	.LVL258:
 2906              	.L161:
 262:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             if(parent_dentry_inode != NULL) 
 2907              		.loc 1 262 9 is_stmt 1 view .LVU926
 262:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             if(parent_dentry_inode != NULL) 
 2908              		.loc 1 262 24 is_stmt 0 view .LVU927
 2909 0048 02F11C01 		add	r1, r2, #28
 2910              	.LVL259:
 2911              	.LBB445:
 2912              	.LBI445:
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_replace - replace old entry by new one
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @old : the element to be replaced
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @new : the new element to insert
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * If @old was empty, it will be overwritten.
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_replace(struct list_head *old,
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				struct list_head *new)
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next = old->next;
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next->prev = new;
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev = old->prev;
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev->next = new;
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 249:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 250:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 251:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_replace_init - replace old entry by new one and initialize the old one
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @old : the element to be replaced
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @new : the new element to insert
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 255:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * If @old was empty, it will be overwritten.
 256:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 257:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_replace_init(struct list_head *old,
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				     struct list_head *new)
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	list_replace(old, new);
ARM GAS  /tmp/cczxpjuQ.s 			page 170


 261:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	INIT_LIST_HEAD(old);
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 264:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_swap - replace entry1 with entry2 and re-add entry1 at entry2's position
 266:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @entry1: the location to place entry2
 267:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @entry2: the location to place entry1
 268:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 269:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_swap(struct list_head *entry1,
 270:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			     struct list_head *entry2)
 271:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 272:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	struct list_head *pos = entry2->prev;
 273:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 274:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	list_del(entry2);
 275:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	list_replace(entry1, entry2);
 276:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	if (pos == entry1)
 277:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		pos = entry2;
 278:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	list_add(entry1, pos);
 279:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 280:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 281:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 282:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_del_init - deletes entry from list and reinitialize it.
 283:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @entry: the element to delete from the list.
 284:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 285:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_del_init(struct list_head *entry)
 286:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 287:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_del_entry(entry);
 288:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	INIT_LIST_HEAD(entry);
 289:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 290:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 291:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 292:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_move - delete from one list and add as another's head
 293:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @list: the entry to move
 294:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the head that will precede our entry
 295:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 296:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_move(struct list_head *list, struct list_head *head)
 297:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 298:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_del_entry(list);
 299:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	list_add(list, head);
 300:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 301:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 302:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 303:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_move_tail - delete from one list and add as another's tail
 304:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @list: the entry to move
 305:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the head that will follow our entry
 306:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 307:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_move_tail(struct list_head *list,
 308:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				  struct list_head *head)
 309:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 310:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_del_entry(list);
 311:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	list_add_tail(list, head);
 312:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 313:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 314:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 315:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_bulk_move_tail - move a subsection of a list to its tail
 316:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the head that will follow our entry
 317:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @first: first entry to move
ARM GAS  /tmp/cczxpjuQ.s 			page 171


 318:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @last: last entry to move, can be the same as first
 319:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 320:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Move all entries between @first and including @last before @head.
 321:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * All three entries must belong to the same linked list.
 322:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 323:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_bulk_move_tail(struct list_head *head,
 324:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				       struct list_head *first,
 325:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				       struct list_head *last)
 326:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 327:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	first->prev->next = last->next;
 328:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	last->next->prev = first->prev;
 329:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 330:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	head->prev->next = first;
 331:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	first->prev = head->prev;
 332:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 333:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	last->next = head;
 334:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	head->prev = last;
 335:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 336:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 337:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 338:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_is_first -- tests whether @list is the first entry in list @head
 339:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @list: the entry to test
 340:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the head of the list
 341:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 342:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline int list_is_first(const struct list_head *list, const struct list_head *head)
 343:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 344:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return list->prev == head;
 345:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 346:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 347:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 348:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_is_last - tests whether @list is the last entry in list @head
 349:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @list: the entry to test
 350:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the head of the list
 351:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 352:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline int list_is_last(const struct list_head *list, const struct list_head *head)
 353:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 354:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return list->next == head;
 355:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 356:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 357:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 358:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_is_head - tests whether @list is the list @head
 359:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @list: the entry to test
 360:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the head of the list
 361:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 362:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline int list_is_head(const struct list_head *list, const struct list_head *head)
 363:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 364:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return list == head;
 365:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 366:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 367:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 368:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_empty - tests whether a list is empty
 369:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the list to test.
 370:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 371:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline int list_empty(const struct list_head *head)
 2913              		.loc 9 371 19 is_stmt 1 view .LVU928
 372:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 373:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return READ_ONCE(head->next) == head;
ARM GAS  /tmp/cczxpjuQ.s 			page 172


 2914              		.loc 9 373 2 view .LVU929
 2915              	.LBB446:
 2916              		.loc 9 373 9 view .LVU930
 2917              	.LBB447:
 2918              		.loc 9 373 9 view .LVU931
 2919              		.loc 9 373 9 view .LVU932
 2920              	.LBE447:
 2921              		.loc 9 373 9 discriminator 2 view .LVU933
 2922              		.loc 9 373 9 discriminator 2 view .LVU934
 2923 004c D369     		ldr	r3, [r2, #28]
 2924              	.LVL260:
 2925              		.loc 9 373 9 is_stmt 0 discriminator 2 view .LVU935
 2926              	.LBE446:
 2927              	.LBE445:
 262:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             if(parent_dentry_inode != NULL) 
 2928              		.loc 1 262 11 discriminator 1 view .LVU936
 2929 004e 9942     		cmp	r1, r3
 2930 0050 E6D0     		beq	.L156
 263:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****                 spin_unlock(&parent_dentry_inode->lock);
 2931              		.loc 1 263 13 is_stmt 1 view .LVU937
 263:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****                 spin_unlock(&parent_dentry_inode->lock);
 2932              		.loc 1 263 15 is_stmt 0 view .LVU938
 2933 0052 002E     		cmp	r6, #0
 2934 0054 F7D0     		beq	.L154
 264:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             return;
 2935              		.loc 1 264 17 is_stmt 1 view .LVU939
 2936 0056 06F12400 		add	r0, r6, #36
 2937 005a FFF7FEFF 		bl	spin_unlock
 2938              	.LVL261:
 265:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 2939              		.loc 1 265 13 view .LVU940
 2940 005e F2E7     		b	.L154
 2941              		.cfi_endproc
 2942              	.LFE1048:
 2944              		.section	.text.initramfs_unlink,"ax",%progbits
 2945              		.align	1
 2946              		.syntax unified
 2947              		.thumb
 2948              		.thumb_func
 2950              	initramfs_unlink:
 2951              	.LVL262:
 2952              	.LFB1063:
 565:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *parent_inode = (struct initramfs_inode *)dir->i_private;
 2953              		.loc 1 565 1 view -0
 2954              		.cfi_startproc
 2955              		@ args = 0, pretend = 0, frame = 0
 2956              		@ frame_needed = 0, uses_anonymous_args = 0
 565:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *parent_inode = (struct initramfs_inode *)dir->i_private;
 2957              		.loc 1 565 1 is_stmt 0 view .LVU942
 2958 0000 08B5     		push	{r3, lr}
 2959              	.LCFI31:
 2960              		.cfi_def_cfa_offset 8
 2961              		.cfi_offset 3, -8
 2962              		.cfi_offset 14, -4
 566:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *delete_dentry = (struct initramfs_dentry *)dentry->d_fsdata;
 2963              		.loc 1 566 5 is_stmt 1 view .LVU943
 566:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *delete_dentry = (struct initramfs_dentry *)dentry->d_fsdata;
ARM GAS  /tmp/cczxpjuQ.s 			page 173


 2964              		.loc 1 566 29 is_stmt 0 view .LVU944
 2965 0002 D0F88430 		ldr	r3, [r0, #132]
 2966              	.LVL263:
 567:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     initramfs_delete_dentry(parent_inode->sb, parent_inode, delete_dentry);
 2967              		.loc 1 567 5 is_stmt 1 view .LVU945
 568:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 2968              		.loc 1 568 5 view .LVU946
 2969 0006 4A6D     		ldr	r2, [r1, #84]
 2970 0008 1946     		mov	r1, r3
 2971              	.LVL264:
 568:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 2972              		.loc 1 568 5 is_stmt 0 view .LVU947
 2973 000a D86B     		ldr	r0, [r3, #60]
 2974              	.LVL265:
 568:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 2975              		.loc 1 568 5 view .LVU948
 2976 000c FFF7FEFF 		bl	initramfs_delete_dentry
 2977              	.LVL266:
 569:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 2978              		.loc 1 569 5 is_stmt 1 view .LVU949
 570:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 2979              		.loc 1 570 1 is_stmt 0 view .LVU950
 2980 0010 0020     		movs	r0, #0
 2981 0012 08BD     		pop	{r3, pc}
 2982              		.cfi_endproc
 2983              	.LFE1063:
 2985              		.section	.text.initramfs_create_dentry,"ax",%progbits
 2986              		.align	1
 2987              		.syntax unified
 2988              		.thumb
 2989              		.thumb_func
 2991              	initramfs_create_dentry:
 2992              	.LVL267:
 2993              	.LFB1043:
 191:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(parent_dentry_inode == NULL || name == NULL || target_inode == NULL) return NULL;
 2994              		.loc 1 191 1 is_stmt 1 view -0
 2995              		.cfi_startproc
 2996              		@ args = 0, pretend = 0, frame = 0
 2997              		@ frame_needed = 0, uses_anonymous_args = 0
 191:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(parent_dentry_inode == NULL || name == NULL || target_inode == NULL) return NULL;
 2998              		.loc 1 191 1 is_stmt 0 view .LVU952
 2999 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3000              	.LCFI32:
 3001              		.cfi_def_cfa_offset 24
 3002              		.cfi_offset 4, -24
 3003              		.cfi_offset 5, -20
 3004              		.cfi_offset 6, -16
 3005              		.cfi_offset 7, -12
 3006              		.cfi_offset 8, -8
 3007              		.cfi_offset 14, -4
 192:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3008              		.loc 1 192 5 is_stmt 1 view .LVU953
 192:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3009              		.loc 1 192 7 is_stmt 0 view .LVU954
 3010 0004 8046     		mov	r8, r0
 3011 0006 0028     		cmp	r0, #0
 3012 0008 47D0     		beq	.L167
ARM GAS  /tmp/cczxpjuQ.s 			page 174


 3013 000a 0E46     		mov	r6, r1
 3014 000c 1546     		mov	r5, r2
 192:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3015              		.loc 1 192 36 discriminator 2 view .LVU955
 3016 000e 002A     		cmp	r2, #0
 3017 0010 45D0     		beq	.L168
 192:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3018              		.loc 1 192 52 discriminator 4 view .LVU956
 3019 0012 0029     		cmp	r1, #0
 3020 0014 45D0     		beq	.L169
 194:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_dentry == NULL)return NULL;
 3021              		.loc 1 194 5 is_stmt 1 view .LVU957
 3022              	.LVL268:
 3023              	.LBB448:
 3024              	.LBI448:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 3025              		.loc 5 379 21 view .LVU958
 3026              	.LBB449:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3027              		.loc 5 380 2 view .LVU959
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3028              		.loc 5 380 9 is_stmt 0 view .LVU960
 3029 0016 4FF44C61 		mov	r1, #3264
 3030              	.LVL269:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3031              		.loc 5 380 9 view .LVU961
 3032 001a 1420     		movs	r0, #20
 3033              	.LVL270:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3034              		.loc 5 380 9 view .LVU962
 3035 001c FFF7FEFF 		bl	__smalloc__
 3036              	.LVL271:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3037              		.loc 5 380 9 view .LVU963
 3038              	.LBE449:
 3039              	.LBE448:
 195:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     new_dentry->magic = MAGIC;
 3040              		.loc 1 195 5 is_stmt 1 view .LVU964
 195:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     new_dentry->magic = MAGIC;
 3041              		.loc 1 195 7 is_stmt 0 view .LVU965
 3042 0020 0446     		mov	r4, r0
 3043 0022 90B3     		cbz	r0, .L164
 196:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     new_dentry->name = NULL;
 3044              		.loc 1 196 5 is_stmt 1 view .LVU966
 196:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     new_dentry->name = NULL;
 3045              		.loc 1 196 23 is_stmt 0 view .LVU967
 3046 0024 204B     		ldr	r3, .L172
 3047 0026 0360     		str	r3, [r0]
 197:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     new_dentry->name = kmalloc(strlen(name) + 1,GFP_KERNEL);
 3048              		.loc 1 197 5 is_stmt 1 view .LVU968
 197:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     new_dentry->name = kmalloc(strlen(name) + 1,GFP_KERNEL);
 3049              		.loc 1 197 22 is_stmt 0 view .LVU969
 3050 0028 0023     		movs	r3, #0
 3051 002a 4360     		str	r3, [r0, #4]
 198:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_dentry->name  == NULL) {
 3052              		.loc 1 198 5 is_stmt 1 view .LVU970
 198:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_dentry->name  == NULL) {
ARM GAS  /tmp/cczxpjuQ.s 			page 175


 3053              		.loc 1 198 32 is_stmt 0 view .LVU971
 3054 002c 2846     		mov	r0, r5
 3055              	.LVL272:
 198:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_dentry->name  == NULL) {
 3056              		.loc 1 198 32 view .LVU972
 3057 002e FFF7FEFF 		bl	strlen
 3058              	.LVL273:
 3059              	.LBB450:
 3060              	.LBI450:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 3061              		.loc 5 379 21 is_stmt 1 view .LVU973
 3062              	.LBB451:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3063              		.loc 5 380 2 view .LVU974
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3064              		.loc 5 380 9 is_stmt 0 view .LVU975
 3065 0032 4FF44C61 		mov	r1, #3264
 3066 0036 0130     		adds	r0, r0, #1
 3067              	.LVL274:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3068              		.loc 5 380 9 view .LVU976
 3069 0038 FFF7FEFF 		bl	__smalloc__
 3070              	.LVL275:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3071              		.loc 5 380 9 view .LVU977
 3072 003c 0746     		mov	r7, r0
 3073              	.LVL276:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3074              		.loc 5 380 9 view .LVU978
 3075              	.LBE451:
 3076              	.LBE450:
 198:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_dentry->name  == NULL) {
 3077              		.loc 1 198 22 discriminator 2 view .LVU979
 3078 003e 6060     		str	r0, [r4, #4]
 199:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(new_dentry);
 3079              		.loc 1 199 5 is_stmt 1 view .LVU980
 199:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(new_dentry);
 3080              		.loc 1 199 7 is_stmt 0 view .LVU981
 3081 0040 30B3     		cbz	r0, .L171
 203:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     new_dentry->target_inode = target_inode;
 3082              		.loc 1 203 5 is_stmt 1 view .LVU982
 3083 0042 2946     		mov	r1, r5
 3084 0044 FFF7FEFF 		bl	strcpy
 3085              	.LVL277:
 204:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     INIT_LIST_HEAD(&new_dentry->list_node);
 3086              		.loc 1 204 5 view .LVU983
 204:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     INIT_LIST_HEAD(&new_dentry->list_node);
 3087              		.loc 1 204 30 is_stmt 0 view .LVU984
 3088 0048 A660     		str	r6, [r4, #8]
 205:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 3089              		.loc 1 205 5 is_stmt 1 view .LVU985
 3090 004a 04F10C05 		add	r5, r4, #12
 3091              	.LVL278:
 3092              	.LBB452:
 3093              	.LBI452:
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 3094              		.loc 9 35 20 view .LVU986
ARM GAS  /tmp/cczxpjuQ.s 			page 176


 3095              	.LBB453:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 3096              		.loc 9 37 2 view .LVU987
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 3097              		.loc 9 37 2 view .LVU988
 3098              	.LBB454:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 3099              		.loc 9 37 2 view .LVU989
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 3100              		.loc 9 37 2 view .LVU990
 3101              	.LBE454:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 3102              		.loc 9 37 2 discriminator 2 view .LVU991
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 3103              		.loc 9 37 2 discriminator 2 view .LVU992
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 3104              		.loc 9 37 2 discriminator 2 view .LVU993
 3105 004e E560     		str	r5, [r4, #12]
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 3106              		.loc 9 37 2 discriminator 2 view .LVU994
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 3107              		.loc 9 37 2 discriminator 2 view .LVU995
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3108              		.loc 9 38 2 view .LVU996
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3109              		.loc 9 38 2 view .LVU997
 3110              	.LBB455:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3111              		.loc 9 38 2 view .LVU998
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3112              		.loc 9 38 2 view .LVU999
 3113              	.LBE455:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3114              		.loc 9 38 2 discriminator 2 view .LVU1000
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3115              		.loc 9 38 2 discriminator 2 view .LVU1001
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3116              		.loc 9 38 2 discriminator 2 view .LVU1002
 3117 0050 2561     		str	r5, [r4, #16]
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3118              		.loc 9 38 2 discriminator 2 view .LVU1003
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3119              		.loc 9 38 2 discriminator 2 view .LVU1004
 3120              	.LVL279:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3121              		.loc 9 38 2 is_stmt 0 discriminator 2 view .LVU1005
 3122              	.LBE453:
 3123              	.LBE452:
 207:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 3124              		.loc 1 207 5 is_stmt 1 view .LVU1006
 3125 0052 06F10C01 		add	r1, r6, #12
 3126              	.LVL280:
 3127              	.LBB456:
 3128              	.LBI456:
 433:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 3129              		.loc 6 433 1 view .LVU1007
 435:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_inc(v);
ARM GAS  /tmp/cczxpjuQ.s 			page 177


 3130              		.loc 6 435 2 view .LVU1008
 436:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 3131              		.loc 6 436 2 view .LVU1009
 3132              	.LBB457:
 3133              	.LBI457:
 999:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 3134              		.loc 7 999 1 view .LVU1010
1004:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 3135              		.loc 7 1004 2 view .LVU1011
 3136              	.LBB458:
 3137              	.LBI458:
 550:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 3138              		.loc 7 550 1 view .LVU1012
 552:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 3139              		.loc 7 552 2 view .LVU1013
 3140              	.LBB459:
 3141              	.LBI459:
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 3142              		.loc 11 170 1 view .LVU1014
 3143              	.LBB460:
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 3144              		.loc 11 170 1 view .LVU1015
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 3145              		.loc 11 170 1 view .LVU1016
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 3146              		.loc 11 170 1 view .LVU1017
 3147              		.syntax unified
 3148              	@ 170 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h" 1
 3149              		@ atomic_add
 3150 0056 51E8003F 	1: ldrex   r3, [r1]
 3151 005a 03F10103 	   add r3, r3, #1
 3152 005e 41E80032 	   strex   r2, r3, [r1]
 3153 0062 92F0000F 	   teq r2, #0
 3154 0066 F6D1     	   bne 1b
 3155              	@ 0 "" 2
 3156              	.LVL281:
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 3157              		.loc 11 170 1 is_stmt 0 view .LVU1018
 3158              		.thumb
 3159              		.syntax unified
 3160              	.LBE460:
 3161              	.LBE459:
 3162              	.LBE458:
 3163              	.LBE457:
 3164              	.LBE456:
 209:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_add    (&new_dentry->list_node,&parent_dentry_inode->dentry_list_head);
 3165              		.loc 1 209 5 is_stmt 1 view .LVU1019
 3166 0068 08F12406 		add	r6, r8, #36
 3167              	.LVL282:
 209:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     list_add    (&new_dentry->list_node,&parent_dentry_inode->dentry_list_head);
 3168              		.loc 1 209 5 is_stmt 0 view .LVU1020
 3169 006c 3046     		mov	r0, r6
 3170 006e FFF7FEFF 		bl	spin_lock
 3171              	.LVL283:
 210:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     spin_unlock(&parent_dentry_inode->lock);
 3172              		.loc 1 210 5 is_stmt 1 view .LVU1021
 3173 0072 08F11C02 		add	r2, r8, #28
ARM GAS  /tmp/cczxpjuQ.s 			page 178


 3174              	.LVL284:
 3175              	.LBB461:
 3176              	.LBI461:
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 3177              		.loc 9 167 20 view .LVU1022
 3178              	.LBB462:
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3179              		.loc 9 169 2 view .LVU1023
 3180 0076 D8F81C30 		ldr	r3, [r8, #28]
 3181              	.LVL285:
 3182              	.LBB463:
 3183              	.LBI463:
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			      struct list_head *prev,
 3184              		.loc 9 146 20 view .LVU1024
 3185              	.LBB464:
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 3186              		.loc 9 150 2 view .LVU1025
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next = next;
 3187              		.loc 9 153 2 view .LVU1026
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next = next;
 3188              		.loc 9 153 13 is_stmt 0 view .LVU1027
 3189 007a 5D60     		str	r5, [r3, #4]
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev = prev;
 3190              		.loc 9 154 2 is_stmt 1 view .LVU1028
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev = prev;
 3191              		.loc 9 154 12 is_stmt 0 view .LVU1029
 3192 007c E360     		str	r3, [r4, #12]
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, new);
 3193              		.loc 9 155 2 is_stmt 1 view .LVU1030
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, new);
 3194              		.loc 9 155 12 is_stmt 0 view .LVU1031
 3195 007e 2261     		str	r2, [r4, #16]
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3196              		.loc 9 156 2 is_stmt 1 view .LVU1032
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3197              		.loc 9 156 2 view .LVU1033
 3198              	.LBB465:
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3199              		.loc 9 156 2 view .LVU1034
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3200              		.loc 9 156 2 view .LVU1035
 3201              	.LBE465:
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3202              		.loc 9 156 2 discriminator 2 view .LVU1036
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3203              		.loc 9 156 2 discriminator 2 view .LVU1037
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3204              		.loc 9 156 2 discriminator 2 view .LVU1038
 3205 0080 C8F81C50 		str	r5, [r8, #28]
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3206              		.loc 9 156 2 discriminator 3 view .LVU1039
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3207              		.loc 9 156 2 discriminator 3 view .LVU1040
 3208              	.LVL286:
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3209              		.loc 9 156 2 is_stmt 0 discriminator 3 view .LVU1041
 3210              	.LBE464:
ARM GAS  /tmp/cczxpjuQ.s 			page 179


 3211              	.LBE463:
 3212              	.LBE462:
 3213              	.LBE461:
 211:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return new_dentry;
 3214              		.loc 1 211 5 is_stmt 1 view .LVU1042
 3215 0084 3046     		mov	r0, r6
 3216 0086 FFF7FEFF 		bl	spin_unlock
 3217              	.LVL287:
 212:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 3218              		.loc 1 212 5 view .LVU1043
 3219              	.L164:
 213:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct initramfs_dentry* initramfs_create_inode( struct initramfs_superblock *sb,struct init
 3220              		.loc 1 213 1 is_stmt 0 view .LVU1044
 3221 008a 2046     		mov	r0, r4
 3222 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3223              	.LVL288:
 3224              	.L171:
 200:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 3225              		.loc 1 200 9 is_stmt 1 view .LVU1045
 3226              	.LBB466:
 3227              	.LBI466:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 3228              		.loc 5 383 20 view .LVU1046
 3229              	.LBB467:
 3230              		.loc 5 384 2 view .LVU1047
 3231 0090 2046     		mov	r0, r4
 3232 0092 FFF7FEFF 		bl	__sfree__
 3233              	.LVL289:
 3234              		.loc 5 384 2 is_stmt 0 view .LVU1048
 3235              	.LBE467:
 3236              	.LBE466:
 201:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3237              		.loc 1 201 9 is_stmt 1 view .LVU1049
 201:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3238              		.loc 1 201 16 is_stmt 0 view .LVU1050
 3239 0096 3C46     		mov	r4, r7
 3240              	.LVL290:
 201:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3241              		.loc 1 201 16 view .LVU1051
 3242 0098 F7E7     		b	.L164
 3243              	.LVL291:
 3244              	.L167:
 192:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3245              		.loc 1 192 84 discriminator 5 view .LVU1052
 3246 009a 0446     		mov	r4, r0
 3247 009c F5E7     		b	.L164
 3248              	.L168:
 192:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3249              		.loc 1 192 84 discriminator 5 view .LVU1053
 3250 009e 1446     		mov	r4, r2
 3251 00a0 F3E7     		b	.L164
 3252              	.L169:
 192:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3253              		.loc 1 192 84 discriminator 5 view .LVU1054
 3254 00a2 0C46     		mov	r4, r1
 3255 00a4 F1E7     		b	.L164
 3256              	.L173:
ARM GAS  /tmp/cczxpjuQ.s 			page 180


 3257 00a6 00BF     		.align	2
 3258              	.L172:
 3259 00a8 4E61BC00 		.word	12345678
 3260              		.cfi_endproc
 3261              	.LFE1043:
 3263              		.section	.text.initramfs_create_inode,"ax",%progbits
 3264              		.align	1
 3265              		.syntax unified
 3266              		.thumb
 3267              		.thumb_func
 3269              	initramfs_create_inode:
 3270              	.LVL292:
 3271              	.LFB1044:
 215:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode * new_inode = initramfs_create_empty_inode(sb,fop,major);
 3272              		.loc 1 215 1 is_stmt 1 view -0
 3273              		.cfi_startproc
 3274              		@ args = 4, pretend = 0, frame = 0
 3275              		@ frame_needed = 0, uses_anonymous_args = 0
 215:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode * new_inode = initramfs_create_empty_inode(sb,fop,major);
 3276              		.loc 1 215 1 is_stmt 0 view .LVU1056
 3277 0000 70B5     		push	{r4, r5, r6, lr}
 3278              	.LCFI33:
 3279              		.cfi_def_cfa_offset 16
 3280              		.cfi_offset 4, -16
 3281              		.cfi_offset 5, -12
 3282              		.cfi_offset 6, -8
 3283              		.cfi_offset 14, -4
 3284 0002 0646     		mov	r6, r0
 3285 0004 0C46     		mov	r4, r1
 3286 0006 1146     		mov	r1, r2
 3287              	.LVL293:
 216:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_inode == NULL){
 3288              		.loc 1 216 5 is_stmt 1 view .LVU1057
 216:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_inode == NULL){
 3289              		.loc 1 216 42 is_stmt 0 view .LVU1058
 3290 0008 1A46     		mov	r2, r3
 3291              	.LVL294:
 216:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_inode == NULL){
 3292              		.loc 1 216 42 view .LVU1059
 3293 000a FFF7FEFF 		bl	initramfs_create_empty_inode
 3294              	.LVL295:
 217:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 3295              		.loc 1 217 5 is_stmt 1 view .LVU1060
 217:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 3296              		.loc 1 217 7 is_stmt 0 view .LVU1061
 3297 000e 0546     		mov	r5, r0
 3298 0010 E8B1     		cbz	r0, .L176
 220:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_dentry == NULL){
 3299              		.loc 1 220 5 is_stmt 1 view .LVU1062
 220:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_dentry == NULL){
 3300              		.loc 1 220 43 is_stmt 0 view .LVU1063
 3301 0012 049A     		ldr	r2, [sp, #16]
 3302 0014 0146     		mov	r1, r0
 3303 0016 2046     		mov	r0, r4
 3304              	.LVL296:
 220:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_dentry == NULL){
 3305              		.loc 1 220 43 view .LVU1064
ARM GAS  /tmp/cczxpjuQ.s 			page 181


 3306 0018 FFF7FEFF 		bl	initramfs_create_dentry
 3307              	.LVL297:
 221:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         spin_lock(&sb->lock);
 3308              		.loc 1 221 5 is_stmt 1 view .LVU1065
 221:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         spin_lock(&sb->lock);
 3309              		.loc 1 221 7 is_stmt 0 view .LVU1066
 3310 001c 0446     		mov	r4, r0
 3311              	.LVL298:
 221:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         spin_lock(&sb->lock);
 3312              		.loc 1 221 7 view .LVU1067
 3313 001e 08B1     		cbz	r0, .L178
 3314              	.LVL299:
 3315              	.L174:
 229:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static struct initramfs_dentry* initramfs_create_file(struct initramfs_superblock *sb,struct initra
 3316              		.loc 1 229 1 view .LVU1068
 3317 0020 2046     		mov	r0, r4
 3318 0022 70BD     		pop	{r4, r5, r6, pc}
 3319              	.LVL300:
 3320              	.L178:
 222:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         list_del(&new_inode->list_node);
 3321              		.loc 1 222 9 is_stmt 1 view .LVU1069
 3322 0024 0436     		adds	r6, r6, #4
 3323              	.LVL301:
 222:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         list_del(&new_inode->list_node);
 3324              		.loc 1 222 9 is_stmt 0 view .LVU1070
 3325 0026 3046     		mov	r0, r6
 3326              	.LVL302:
 222:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         list_del(&new_inode->list_node);
 3327              		.loc 1 222 9 view .LVU1071
 3328 0028 FFF7FEFF 		bl	spin_lock
 3329              	.LVL303:
 223:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         spin_unlock(&sb->lock);
 3330              		.loc 1 223 9 is_stmt 1 view .LVU1072
 3331              	.LBB468:
 3332              	.LBI468:
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 3333              		.loc 9 227 20 view .LVU1073
 3334              	.LBB469:
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->next = LIST_POISON1;
 3335              		.loc 9 229 2 view .LVU1074
 3336              	.LBB470:
 3337              	.LBI470:
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 3338              		.loc 9 213 20 view .LVU1075
 3339              	.LBB471:
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 3340              		.loc 9 215 2 view .LVU1076
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3341              		.loc 9 218 2 view .LVU1077
 3342 002c AB69     		ldr	r3, [r5, #24]
 3343 002e 6A69     		ldr	r2, [r5, #20]
 3344              	.LVL304:
 3345              	.LBB472:
 3346              	.LBI472:
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 3347              		.loc 9 193 20 view .LVU1078
 3348              	.LBB473:
ARM GAS  /tmp/cczxpjuQ.s 			page 182


 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 3349              		.loc 9 195 2 view .LVU1079
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 3350              		.loc 9 195 13 is_stmt 0 view .LVU1080
 3351 0030 5360     		str	r3, [r2, #4]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3352              		.loc 9 196 2 is_stmt 1 view .LVU1081
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3353              		.loc 9 196 2 view .LVU1082
 3354              	.LBB474:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3355              		.loc 9 196 2 view .LVU1083
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3356              		.loc 9 196 2 view .LVU1084
 3357              	.LBE474:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3358              		.loc 9 196 2 discriminator 2 view .LVU1085
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3359              		.loc 9 196 2 discriminator 2 view .LVU1086
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3360              		.loc 9 196 2 discriminator 2 view .LVU1087
 3361 0032 1A60     		str	r2, [r3]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3362              		.loc 9 196 2 discriminator 2 view .LVU1088
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3363              		.loc 9 196 2 discriminator 2 view .LVU1089
 3364              	.LVL305:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3365              		.loc 9 196 2 is_stmt 0 discriminator 2 view .LVU1090
 3366              	.LBE473:
 3367              	.LBE472:
 3368              	.LBE471:
 3369              	.LBE470:
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 3370              		.loc 9 230 2 is_stmt 1 view .LVU1091
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 3371              		.loc 9 230 14 is_stmt 0 view .LVU1092
 3372 0034 4FF48073 		mov	r3, #256
 3373 0038 6B61     		str	r3, [r5, #20]
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3374              		.loc 9 231 2 is_stmt 1 view .LVU1093
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3375              		.loc 9 231 14 is_stmt 0 view .LVU1094
 3376 003a 4FF49173 		mov	r3, #290
 3377 003e AB61     		str	r3, [r5, #24]
 3378              	.LVL306:
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3379              		.loc 9 231 14 view .LVU1095
 3380              	.LBE469:
 3381              	.LBE468:
 224:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         initramfs_inode_put(new_inode);
 3382              		.loc 1 224 9 is_stmt 1 view .LVU1096
 3383 0040 3046     		mov	r0, r6
 3384 0042 FFF7FEFF 		bl	spin_unlock
 3385              	.LVL307:
 225:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 3386              		.loc 1 225 9 view .LVU1097
ARM GAS  /tmp/cczxpjuQ.s 			page 183


 3387 0046 2846     		mov	r0, r5
 3388 0048 FFF7FEFF 		bl	initramfs_inode_put
 3389              	.LVL308:
 226:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3390              		.loc 1 226 9 view .LVU1098
 226:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3391              		.loc 1 226 16 is_stmt 0 view .LVU1099
 3392 004c E8E7     		b	.L174
 3393              	.LVL309:
 3394              	.L176:
 218:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }   
 3395              		.loc 1 218 16 view .LVU1100
 3396 004e 0446     		mov	r4, r0
 3397              	.LVL310:
 218:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }   
 3398              		.loc 1 218 16 view .LVU1101
 3399 0050 E6E7     		b	.L174
 3400              		.cfi_endproc
 3401              	.LFE1044:
 3403              		.section	.text.initramfs_create_dir,"ax",%progbits
 3404              		.align	1
 3405              		.syntax unified
 3406              		.thumb
 3407              		.thumb_func
 3409              	initramfs_create_dir:
 3410              	.LVL311:
 3411              	.LFB1046:
 236:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* dentry =  initramfs_create_inode(sb,parent_dentry_inode,&initramfs_fil
 3412              		.loc 1 236 1 is_stmt 1 view -0
 3413              		.cfi_startproc
 3414              		@ args = 0, pretend = 0, frame = 0
 3415              		@ frame_needed = 0, uses_anonymous_args = 0
 236:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* dentry =  initramfs_create_inode(sb,parent_dentry_inode,&initramfs_fil
 3416              		.loc 1 236 1 is_stmt 0 view .LVU1103
 3417 0000 00B5     		push	{lr}
 3418              	.LCFI34:
 3419              		.cfi_def_cfa_offset 4
 3420              		.cfi_offset 14, -4
 3421 0002 83B0     		sub	sp, sp, #12
 3422              	.LCFI35:
 3423              		.cfi_def_cfa_offset 16
 237:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry == NULL) return NULL;
 3424              		.loc 1 237 5 is_stmt 1 view .LVU1104
 237:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry == NULL) return NULL;
 3425              		.loc 1 237 40 is_stmt 0 view .LVU1105
 3426 0004 0092     		str	r2, [sp]
 3427 0006 0023     		movs	r3, #0
 3428 0008 054A     		ldr	r2, .L182
 3429              	.LVL312:
 237:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry == NULL) return NULL;
 3430              		.loc 1 237 40 view .LVU1106
 3431 000a FFF7FEFF 		bl	initramfs_create_inode
 3432              	.LVL313:
 238:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->target_inode->i_mode = S_IFDIR | 0755;
 3433              		.loc 1 238 5 is_stmt 1 view .LVU1107
 238:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->target_inode->i_mode = S_IFDIR | 0755;
 3434              		.loc 1 238 7 is_stmt 0 view .LVU1108
ARM GAS  /tmp/cczxpjuQ.s 			page 184


 3435 000e 18B1     		cbz	r0, .L179
 239:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return dentry;
 3436              		.loc 1 239 5 is_stmt 1 view .LVU1109
 239:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return dentry;
 3437              		.loc 1 239 11 is_stmt 0 view .LVU1110
 3438 0010 8368     		ldr	r3, [r0, #8]
 239:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return dentry;
 3439              		.loc 1 239 34 view .LVU1111
 3440 0012 44F2ED12 		movw	r2, #16877
 3441 0016 5A60     		str	r2, [r3, #4]
 240:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 3442              		.loc 1 240 5 is_stmt 1 view .LVU1112
 3443              	.L179:
 241:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** static void dentry_put(struct initramfs_superblock *sb,struct initramfs_dentry* dentry)
 3444              		.loc 1 241 1 is_stmt 0 view .LVU1113
 3445 0018 03B0     		add	sp, sp, #12
 3446              	.LCFI36:
 3447              		.cfi_def_cfa_offset 4
 3448              		@ sp needed
 3449 001a 5DF804FB 		ldr	pc, [sp], #4
 3450              	.L183:
 3451 001e 00BF     		.align	2
 3452              	.L182:
 3453 0020 00000000 		.word	initramfs_file_fops
 3454              		.cfi_endproc
 3455              	.LFE1046:
 3457              		.section	.text.initramfs_mkdir,"ax",%progbits
 3458              		.align	1
 3459              		.syntax unified
 3460              		.thumb
 3461              		.thumb_func
 3463              	initramfs_mkdir:
 3464              	.LVL314:
 3465              	.LFB1064:
 573:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     char *file_name = d_getname(dentry);
 3466              		.loc 1 573 1 is_stmt 1 view -0
 3467              		.cfi_startproc
 3468              		@ args = 0, pretend = 0, frame = 0
 3469              		@ frame_needed = 0, uses_anonymous_args = 0
 573:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     char *file_name = d_getname(dentry);
 3470              		.loc 1 573 1 is_stmt 0 view .LVU1115
 3471 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3472              	.LCFI37:
 3473              		.cfi_def_cfa_offset 24
 3474              		.cfi_offset 4, -24
 3475              		.cfi_offset 5, -20
 3476              		.cfi_offset 6, -16
 3477              		.cfi_offset 7, -12
 3478              		.cfi_offset 8, -8
 3479              		.cfi_offset 14, -4
 3480 0004 0D46     		mov	r5, r1
 3481 0006 1446     		mov	r4, r2
 3482 0008 9846     		mov	r8, r3
 574:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dinode = dir->i_private;
 3483              		.loc 1 574 5 is_stmt 1 view .LVU1116
 574:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dinode = dir->i_private;
 3484              		.loc 1 574 23 is_stmt 0 view .LVU1117
ARM GAS  /tmp/cczxpjuQ.s 			page 185


 3485 000a 1046     		mov	r0, r2
 3486              	.LVL315:
 574:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dinode = dir->i_private;
 3487              		.loc 1 574 23 view .LVU1118
 3488 000c FFF7FEFF 		bl	d_getname
 3489              	.LVL316:
 574:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dinode = dir->i_private;
 3490              		.loc 1 574 23 view .LVU1119
 3491 0010 0646     		mov	r6, r0
 3492              	.LVL317:
 575:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* file = initramfs_lookup(dinode,file_name);
 3493              		.loc 1 575 5 is_stmt 1 view .LVU1120
 575:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* file = initramfs_lookup(dinode,file_name);
 3494              		.loc 1 575 29 is_stmt 0 view .LVU1121
 3495 0012 D5F88470 		ldr	r7, [r5, #132]
 3496              	.LVL318:
 576:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(file == NULL){
 3497              		.loc 1 576 5 is_stmt 1 view .LVU1122
 576:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(file == NULL){
 3498              		.loc 1 576 37 is_stmt 0 view .LVU1123
 3499 0016 0146     		mov	r1, r0
 3500 0018 3846     		mov	r0, r7
 3501              	.LVL319:
 576:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(file == NULL){
 3502              		.loc 1 576 37 view .LVU1124
 3503 001a FFF7FEFF 		bl	initramfs_lookup
 3504              	.LVL320:
 577:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         file =  initramfs_create_dir(dinode->sb,dinode,file_name);
 3505              		.loc 1 577 5 is_stmt 1 view .LVU1125
 577:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         file =  initramfs_create_dir(dinode->sb,dinode,file_name);
 3506              		.loc 1 577 7 is_stmt 0 view .LVU1126
 3507 001e 0146     		mov	r1, r0
 3508 0020 A8B1     		cbz	r0, .L191
 3509              	.L185:
 3510              	.LVL321:
 583:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 3511              		.loc 1 583 5 is_stmt 1 view .LVU1127
 583:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 3512              		.loc 1 583 9 is_stmt 0 view .LVU1128
 3513 0022 8A68     		ldr	r2, [r1, #8]
 583:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 3514              		.loc 1 583 42 view .LVU1129
 3515 0024 C8F30803 		ubfx	r3, r8, #0, #9
 3516 0028 43F40043 		orr	r3, r3, #32768
 583:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 3517              		.loc 1 583 32 view .LVU1130
 3518 002c 5360     		str	r3, [r2, #4]
 585:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      return -1;
 3519              		.loc 1 585 5 is_stmt 1 view .LVU1131
 585:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      return -1;
 3520              		.loc 1 585 9 is_stmt 0 view .LVU1132
 3521 002e 2046     		mov	r0, r4
 3522 0030 FFF7FEFF 		bl	initramfs_get_dentry
 3523              	.LVL322:
 585:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      return -1;
 3524              		.loc 1 585 7 discriminator 1 view .LVU1133
 3525 0034 B0B1     		cbz	r0, .L188
ARM GAS  /tmp/cczxpjuQ.s 			page 186


 588:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_file_inode == NULL)
 3526              		.loc 1 588 5 is_stmt 1 view .LVU1134
 588:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_file_inode == NULL)
 3527              		.loc 1 588 37 is_stmt 0 view .LVU1135
 3528 0036 6969     		ldr	r1, [r5, #20]
 3529 0038 3846     		mov	r0, r7
 3530 003a FFF7FEFF 		bl	initramfs_get_inode
 3531              	.LVL323:
 589:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -1;
 3532              		.loc 1 589 5 is_stmt 1 view .LVU1136
 589:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -1;
 3533              		.loc 1 589 7 is_stmt 0 view .LVU1137
 3534 003e 0146     		mov	r1, r0
 3535 0040 98B1     		cbz	r0, .L189
 592:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****    return 0;
 3536              		.loc 1 592 5 is_stmt 1 view .LVU1138
 3537 0042 2046     		mov	r0, r4
 3538              	.LVL324:
 592:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****    return 0;
 3539              		.loc 1 592 5 is_stmt 0 view .LVU1139
 3540 0044 FFF7FEFF 		bl	d_add
 3541              	.LVL325:
 593:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 3542              		.loc 1 593 4 is_stmt 1 view .LVU1140
 593:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 3543              		.loc 1 593 11 is_stmt 0 view .LVU1141
 3544 0048 0020     		movs	r0, #0
 3545              	.LVL326:
 3546              	.L184:
 594:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3547              		.loc 1 594 1 view .LVU1142
 3548 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3549              	.LVL327:
 3550              	.L191:
 578:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3551              		.loc 1 578 9 is_stmt 1 view .LVU1143
 578:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3552              		.loc 1 578 17 is_stmt 0 view .LVU1144
 3553 004e 3246     		mov	r2, r6
 3554 0050 3946     		mov	r1, r7
 3555 0052 F86B     		ldr	r0, [r7, #60]
 3556              	.LVL328:
 578:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3557              		.loc 1 578 17 view .LVU1145
 3558 0054 FFF7FEFF 		bl	initramfs_create_dir
 3559              	.LVL329:
 580:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -1;
 3560              		.loc 1 580 5 is_stmt 1 view .LVU1146
 580:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -1;
 3561              		.loc 1 580 8 is_stmt 0 view .LVU1147
 3562 0058 0146     		mov	r1, r0
 3563 005a 0028     		cmp	r0, #0
 3564 005c E1D1     		bne	.L185
 581:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3565              		.loc 1 581 16 view .LVU1148
 3566 005e 4FF0FF30 		mov	r0, #-1
 3567              	.LVL330:
ARM GAS  /tmp/cczxpjuQ.s 			page 187


 581:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3568              		.loc 1 581 16 view .LVU1149
 3569 0062 F2E7     		b	.L184
 3570              	.LVL331:
 3571              	.L188:
 586:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }  
 3572              		.loc 1 586 13 view .LVU1150
 3573 0064 4FF0FF30 		mov	r0, #-1
 3574 0068 EFE7     		b	.L184
 3575              	.LVL332:
 3576              	.L189:
 590:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3577              		.loc 1 590 16 view .LVU1151
 3578 006a 4FF0FF30 		mov	r0, #-1
 3579              	.LVL333:
 590:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3580              		.loc 1 590 16 view .LVU1152
 3581 006e ECE7     		b	.L184
 3582              		.cfi_endproc
 3583              	.LFE1064:
 3585              		.section	.text.initramfs_create_file,"ax",%progbits
 3586              		.align	1
 3587              		.syntax unified
 3588              		.thumb
 3589              		.thumb_func
 3591              	initramfs_create_file:
 3592              	.LVL334:
 3593              	.LFB1045:
 231:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return initramfs_create_inode(sb,parent_dentry_inode,fop,major,name);
 3594              		.loc 1 231 1 is_stmt 1 view -0
 3595              		.cfi_startproc
 3596              		@ args = 4, pretend = 0, frame = 0
 3597              		@ frame_needed = 0, uses_anonymous_args = 0
 231:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return initramfs_create_inode(sb,parent_dentry_inode,fop,major,name);
 3598              		.loc 1 231 1 is_stmt 0 view .LVU1154
 3599 0000 10B5     		push	{r4, lr}
 3600              	.LCFI38:
 3601              		.cfi_def_cfa_offset 8
 3602              		.cfi_offset 4, -8
 3603              		.cfi_offset 14, -4
 3604 0002 82B0     		sub	sp, sp, #8
 3605              	.LCFI39:
 3606              		.cfi_def_cfa_offset 16
 232:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 3607              		.loc 1 232 5 is_stmt 1 view .LVU1155
 232:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 3608              		.loc 1 232 12 is_stmt 0 view .LVU1156
 3609 0004 049C     		ldr	r4, [sp, #16]
 3610 0006 0094     		str	r4, [sp]
 3611 0008 FFF7FEFF 		bl	initramfs_create_inode
 3612              	.LVL335:
 233:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3613              		.loc 1 233 1 view .LVU1157
 3614 000c 02B0     		add	sp, sp, #8
 3615              	.LCFI40:
 3616              		.cfi_def_cfa_offset 8
 3617              		@ sp needed
ARM GAS  /tmp/cczxpjuQ.s 			page 188


 3618 000e 10BD     		pop	{r4, pc}
 233:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3619              		.loc 1 233 1 view .LVU1158
 3620              		.cfi_endproc
 3621              	.LFE1045:
 3623              		.section	.text.initramfs_create,"ax",%progbits
 3624              		.align	1
 3625              		.syntax unified
 3626              		.thumb
 3627              		.thumb_func
 3629              	initramfs_create:
 3630              	.LVL336:
 3631              	.LFB1060:
 508:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     char *file_name = d_getname(dentry);
 3632              		.loc 1 508 1 is_stmt 1 view -0
 3633              		.cfi_startproc
 3634              		@ args = 4, pretend = 0, frame = 0
 3635              		@ frame_needed = 0, uses_anonymous_args = 0
 508:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     char *file_name = d_getname(dentry);
 3636              		.loc 1 508 1 is_stmt 0 view .LVU1160
 3637 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3638              	.LCFI41:
 3639              		.cfi_def_cfa_offset 28
 3640              		.cfi_offset 4, -28
 3641              		.cfi_offset 5, -24
 3642              		.cfi_offset 6, -20
 3643              		.cfi_offset 7, -16
 3644              		.cfi_offset 8, -12
 3645              		.cfi_offset 9, -8
 3646              		.cfi_offset 14, -4
 3647 0004 83B0     		sub	sp, sp, #12
 3648              	.LCFI42:
 3649              		.cfi_def_cfa_offset 40
 3650 0006 0D46     		mov	r5, r1
 3651 0008 1446     		mov	r4, r2
 3652 000a 9946     		mov	r9, r3
 509:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dinode = dir->i_private;
 3653              		.loc 1 509 5 is_stmt 1 view .LVU1161
 509:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dinode = dir->i_private;
 3654              		.loc 1 509 23 is_stmt 0 view .LVU1162
 3655 000c 1046     		mov	r0, r2
 3656              	.LVL337:
 509:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dinode = dir->i_private;
 3657              		.loc 1 509 23 view .LVU1163
 3658 000e FFF7FEFF 		bl	d_getname
 3659              	.LVL338:
 509:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dinode = dir->i_private;
 3660              		.loc 1 509 23 view .LVU1164
 3661 0012 0646     		mov	r6, r0
 3662              	.LVL339:
 510:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* file = initramfs_lookup(dinode,file_name);
 3663              		.loc 1 510 5 is_stmt 1 view .LVU1165
 510:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry* file = initramfs_lookup(dinode,file_name);
 3664              		.loc 1 510 29 is_stmt 0 view .LVU1166
 3665 0014 D5F88480 		ldr	r8, [r5, #132]
 3666              	.LVL340:
 511:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(file == NULL){
ARM GAS  /tmp/cczxpjuQ.s 			page 189


 3667              		.loc 1 511 5 is_stmt 1 view .LVU1167
 511:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(file == NULL){
 3668              		.loc 1 511 37 is_stmt 0 view .LVU1168
 3669 0018 0146     		mov	r1, r0
 3670 001a 4046     		mov	r0, r8
 3671              	.LVL341:
 511:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(file == NULL){
 3672              		.loc 1 511 37 view .LVU1169
 3673 001c FFF7FEFF 		bl	initramfs_lookup
 3674              	.LVL342:
 512:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         file =  initramfs_create_file(dinode->sb,dinode,&initramfs_file_fops,10,file_name);
 3675              		.loc 1 512 5 is_stmt 1 view .LVU1170
 512:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         file =  initramfs_create_file(dinode->sb,dinode,&initramfs_file_fops,10,file_name);
 3676              		.loc 1 512 7 is_stmt 0 view .LVU1171
 3677 0020 0746     		mov	r7, r0
 3678 0022 A0B1     		cbz	r0, .L201
 3679              	.L195:
 3680              	.LVL343:
 518:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if( initramfs_get_dentry(dentry,file) == NULL){     //ÊûÑÂª∫dentry    
 3681              		.loc 1 518 5 is_stmt 1 view .LVU1172
 518:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if( initramfs_get_dentry(dentry,file) == NULL){     //ÊûÑÂª∫dentry    
 3682              		.loc 1 518 9 is_stmt 0 view .LVU1173
 3683 0024 BB68     		ldr	r3, [r7, #8]
 518:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if( initramfs_get_dentry(dentry,file) == NULL){     //ÊûÑÂª∫dentry    
 3684              		.loc 1 518 32 view .LVU1174
 3685 0026 C3F80490 		str	r9, [r3, #4]
 519:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      return -1;
 3686              		.loc 1 519 5 is_stmt 1 view .LVU1175
 519:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      return -1;
 3687              		.loc 1 519 9 is_stmt 0 view .LVU1176
 3688 002a 3946     		mov	r1, r7
 3689 002c 2046     		mov	r0, r4
 3690 002e FFF7FEFF 		bl	initramfs_get_dentry
 3691              	.LVL344:
 519:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      return -1;
 3692              		.loc 1 519 7 discriminator 1 view .LVU1177
 3693 0032 D0B1     		cbz	r0, .L198
 522:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_file_inode == NULL)
 3694              		.loc 1 522 5 is_stmt 1 view .LVU1178
 522:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(new_file_inode == NULL)
 3695              		.loc 1 522 37 is_stmt 0 view .LVU1179
 3696 0034 6969     		ldr	r1, [r5, #20]
 3697 0036 B868     		ldr	r0, [r7, #8]
 3698 0038 FFF7FEFF 		bl	initramfs_get_inode
 3699              	.LVL345:
 523:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -1;
 3700              		.loc 1 523 5 is_stmt 1 view .LVU1180
 523:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -1;
 3701              		.loc 1 523 7 is_stmt 0 view .LVU1181
 3702 003c 0146     		mov	r1, r0
 3703 003e B8B1     		cbz	r0, .L199
 526:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 3704              		.loc 1 526 5 is_stmt 1 view .LVU1182
 3705 0040 2046     		mov	r0, r4
 3706              	.LVL346:
 526:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 3707              		.loc 1 526 5 is_stmt 0 view .LVU1183
ARM GAS  /tmp/cczxpjuQ.s 			page 190


 3708 0042 FFF7FEFF 		bl	d_add
 3709              	.LVL347:
 527:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** } 
 3710              		.loc 1 527 5 is_stmt 1 view .LVU1184
 527:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** } 
 3711              		.loc 1 527 12 is_stmt 0 view .LVU1185
 3712 0046 0020     		movs	r0, #0
 3713              	.LVL348:
 3714              	.L194:
 528:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3715              		.loc 1 528 1 view .LVU1186
 3716 0048 03B0     		add	sp, sp, #12
 3717              	.LCFI43:
 3718              		.cfi_remember_state
 3719              		.cfi_def_cfa_offset 28
 3720              		@ sp needed
 3721 004a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3722              	.LVL349:
 3723              	.L201:
 3724              	.LCFI44:
 3725              		.cfi_restore_state
 513:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3726              		.loc 1 513 9 is_stmt 1 view .LVU1187
 513:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3727              		.loc 1 513 17 is_stmt 0 view .LVU1188
 3728 004e D8F83C00 		ldr	r0, [r8, #60]
 3729              	.LVL350:
 513:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3730              		.loc 1 513 17 view .LVU1189
 3731 0052 0096     		str	r6, [sp]
 3732 0054 0A23     		movs	r3, #10
 3733 0056 084A     		ldr	r2, .L202
 3734 0058 4146     		mov	r1, r8
 3735 005a FFF7FEFF 		bl	initramfs_create_file
 3736              	.LVL351:
 515:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -1;
 3737              		.loc 1 515 5 is_stmt 1 view .LVU1190
 515:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -1;
 3738              		.loc 1 515 8 is_stmt 0 view .LVU1191
 3739 005e 0746     		mov	r7, r0
 3740 0060 0028     		cmp	r0, #0
 3741 0062 DFD1     		bne	.L195
 516:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3742              		.loc 1 516 16 view .LVU1192
 3743 0064 4FF0FF30 		mov	r0, #-1
 3744              	.LVL352:
 516:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3745              		.loc 1 516 16 view .LVU1193
 3746 0068 EEE7     		b	.L194
 3747              	.LVL353:
 3748              	.L198:
 520:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }    
 3749              		.loc 1 520 13 view .LVU1194
 3750 006a 4FF0FF30 		mov	r0, #-1
 3751 006e EBE7     		b	.L194
 3752              	.LVL354:
 3753              	.L199:
ARM GAS  /tmp/cczxpjuQ.s 			page 191


 524:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 3754              		.loc 1 524 16 view .LVU1195
 3755 0070 4FF0FF30 		mov	r0, #-1
 3756              	.LVL355:
 524:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     
 3757              		.loc 1 524 16 view .LVU1196
 3758 0074 E8E7     		b	.L194
 3759              	.L203:
 3760 0076 00BF     		.align	2
 3761              	.L202:
 3762 0078 00000000 		.word	initramfs_file_fops
 3763              		.cfi_endproc
 3764              	.LFE1060:
 3766              		.section	.text.initramfs_link,"ax",%progbits
 3767              		.align	1
 3768              		.syntax unified
 3769              		.thumb
 3770              		.thumb_func
 3772              	initramfs_link:
 3773              	.LVL356:
 3774              	.LFB1062:
 551:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *old_inode = (struct initramfs_inode *)old_dentry->d_inode->i_private;
 3775              		.loc 1 551 1 is_stmt 1 view -0
 3776              		.cfi_startproc
 3777              		@ args = 0, pretend = 0, frame = 0
 3778              		@ frame_needed = 0, uses_anonymous_args = 0
 551:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *old_inode = (struct initramfs_inode *)old_dentry->d_inode->i_private;
 3779              		.loc 1 551 1 is_stmt 0 view .LVU1198
 3780 0000 38B5     		push	{r3, r4, r5, lr}
 3781              	.LCFI45:
 3782              		.cfi_def_cfa_offset 16
 3783              		.cfi_offset 3, -16
 3784              		.cfi_offset 4, -12
 3785              		.cfi_offset 5, -8
 3786              		.cfi_offset 14, -4
 3787 0002 0D46     		mov	r5, r1
 3788 0004 1446     		mov	r4, r2
 552:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dir_inode = (struct initramfs_inode *)dir->i_private;
 3789              		.loc 1 552 5 is_stmt 1 view .LVU1199
 552:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *dir_inode = (struct initramfs_inode *)dir->i_private;
 3790              		.loc 1 552 77 is_stmt 0 view .LVU1200
 3791 0006 836C     		ldr	r3, [r0, #72]
 3792              	.LVL357:
 553:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_dentry *new_dentry = initramfs_create_dentry(dir_inode, old_inode, dentry->d_n
 3793              		.loc 1 553 5 is_stmt 1 view .LVU1201
 554:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (new_dentry == NULL) {
 3794              		.loc 1 554 5 view .LVU1202
 554:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (new_dentry == NULL) {
 3795              		.loc 1 554 43 is_stmt 0 view .LVU1203
 3796 0008 9269     		ldr	r2, [r2, #24]
 3797              	.LVL358:
 554:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (new_dentry == NULL) {
 3798              		.loc 1 554 43 view .LVU1204
 3799 000a D3F88410 		ldr	r1, [r3, #132]
 3800              	.LVL359:
 554:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (new_dentry == NULL) {
 3801              		.loc 1 554 43 view .LVU1205
ARM GAS  /tmp/cczxpjuQ.s 			page 192


 3802 000e D5F88400 		ldr	r0, [r5, #132]
 3803              	.LVL360:
 554:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (new_dentry == NULL) {
 3804              		.loc 1 554 43 view .LVU1206
 3805 0012 FFF7FEFF 		bl	initramfs_create_dentry
 3806              	.LVL361:
 555:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -ENOMEM;
 3807              		.loc 1 555 5 is_stmt 1 view .LVU1207
 555:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return -ENOMEM;
 3808              		.loc 1 555 8 is_stmt 0 view .LVU1208
 3809 0016 58B1     		cbz	r0, .L206
 3810 0018 0146     		mov	r1, r0
 558:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->d_sb = dir->i_sb;
 3811              		.loc 1 558 5 is_stmt 1 view .LVU1209
 3812 001a 2046     		mov	r0, r4
 3813              	.LVL362:
 558:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->d_sb = dir->i_sb;
 3814              		.loc 1 558 5 is_stmt 0 view .LVU1210
 3815 001c FFF7FEFF 		bl	initramfs_get_dentry
 3816              	.LVL363:
 559:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     d_add(dentry,dentry->d_inode);
 3817              		.loc 1 559 5 is_stmt 1 view .LVU1211
 559:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     d_add(dentry,dentry->d_inode);
 3818              		.loc 1 559 23 is_stmt 0 view .LVU1212
 3819 0020 6B69     		ldr	r3, [r5, #20]
 559:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     d_add(dentry,dentry->d_inode);
 3820              		.loc 1 559 18 view .LVU1213
 3821 0022 2365     		str	r3, [r4, #80]
 560:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     return 0;
 3822              		.loc 1 560 5 is_stmt 1 view .LVU1214
 3823 0024 A16C     		ldr	r1, [r4, #72]
 3824 0026 2046     		mov	r0, r4
 3825 0028 FFF7FEFF 		bl	d_add
 3826              	.LVL364:
 561:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 3827              		.loc 1 561 5 view .LVU1215
 561:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 3828              		.loc 1 561 12 is_stmt 0 view .LVU1216
 3829 002c 0020     		movs	r0, #0
 3830              	.L204:
 562:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3831              		.loc 1 562 1 view .LVU1217
 3832 002e 38BD     		pop	{r3, r4, r5, pc}
 3833              	.LVL365:
 3834              	.L206:
 556:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3835              		.loc 1 556 16 view .LVU1218
 3836 0030 6FF00B00 		mvn	r0, #11
 3837              	.LVL366:
 556:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3838              		.loc 1 556 16 view .LVU1219
 3839 0034 FBE7     		b	.L204
 3840              		.cfi_endproc
 3841              	.LFE1062:
 3843              		.section	.text.initramfs_destroy_inode,"ax",%progbits
 3844              		.align	1
 3845              		.syntax unified
ARM GAS  /tmp/cczxpjuQ.s 			page 193


 3846              		.thumb
 3847              		.thumb_func
 3849              	initramfs_destroy_inode:
 3850              	.LVL367:
 3851              	.LFB1057:
 455:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(node == NULL) return;
 3852              		.loc 1 455 1 is_stmt 1 view -0
 3853              		.cfi_startproc
 3854              		@ args = 0, pretend = 0, frame = 0
 3855              		@ frame_needed = 0, uses_anonymous_args = 0
 456:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(node->i_private != NULL) {
 3856              		.loc 1 456 5 view .LVU1221
 456:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(node->i_private != NULL) {
 3857              		.loc 1 456 7 is_stmt 0 view .LVU1222
 3858 0000 80B1     		cbz	r0, .L211
 455:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(node == NULL) return;
 3859              		.loc 1 455 1 view .LVU1223
 3860 0002 08B5     		push	{r3, lr}
 3861              	.LCFI46:
 3862              		.cfi_def_cfa_offset 8
 3863              		.cfi_offset 3, -8
 3864              		.cfi_offset 14, -4
 457:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         struct initramfs_inode * initram_node = node->i_private;
 3865              		.loc 1 457 5 is_stmt 1 view .LVU1224
 457:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         struct initramfs_inode * initram_node = node->i_private;
 3866              		.loc 1 457 12 is_stmt 0 view .LVU1225
 3867 0004 D0F88400 		ldr	r0, [r0, #132]
 3868              	.LVL368:
 457:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         struct initramfs_inode * initram_node = node->i_private;
 3869              		.loc 1 457 7 view .LVU1226
 3870 0008 58B1     		cbz	r0, .L208
 3871              	.LBB475:
 458:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         list_del(&initram_node->list_node);
 3872              		.loc 1 458 9 is_stmt 1 view .LVU1227
 3873              	.LVL369:
 459:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(initram_node);        
 3874              		.loc 1 459 9 view .LVU1228
 3875              	.LBB476:
 3876              	.LBI476:
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 3877              		.loc 9 227 20 view .LVU1229
 3878              	.LBB477:
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->next = LIST_POISON1;
 3879              		.loc 9 229 2 view .LVU1230
 3880              	.LBB478:
 3881              	.LBI478:
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 3882              		.loc 9 213 20 view .LVU1231
 3883              	.LBB479:
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 3884              		.loc 9 215 2 view .LVU1232
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3885              		.loc 9 218 2 view .LVU1233
 3886 000a 8369     		ldr	r3, [r0, #24]
 3887 000c 4269     		ldr	r2, [r0, #20]
 3888              	.LVL370:
 3889              	.LBB480:
ARM GAS  /tmp/cczxpjuQ.s 			page 194


 3890              	.LBI480:
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 3891              		.loc 9 193 20 view .LVU1234
 3892              	.LBB481:
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 3893              		.loc 9 195 2 view .LVU1235
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 3894              		.loc 9 195 13 is_stmt 0 view .LVU1236
 3895 000e 5360     		str	r3, [r2, #4]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3896              		.loc 9 196 2 is_stmt 1 view .LVU1237
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3897              		.loc 9 196 2 view .LVU1238
 3898              	.LBB482:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3899              		.loc 9 196 2 view .LVU1239
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3900              		.loc 9 196 2 view .LVU1240
 3901              	.LBE482:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3902              		.loc 9 196 2 discriminator 2 view .LVU1241
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3903              		.loc 9 196 2 discriminator 2 view .LVU1242
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3904              		.loc 9 196 2 discriminator 2 view .LVU1243
 3905 0010 1A60     		str	r2, [r3]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3906              		.loc 9 196 2 discriminator 2 view .LVU1244
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3907              		.loc 9 196 2 discriminator 2 view .LVU1245
 3908              	.LVL371:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3909              		.loc 9 196 2 is_stmt 0 discriminator 2 view .LVU1246
 3910              	.LBE481:
 3911              	.LBE480:
 3912              	.LBE479:
 3913              	.LBE478:
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 3914              		.loc 9 230 2 is_stmt 1 view .LVU1247
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 3915              		.loc 9 230 14 is_stmt 0 view .LVU1248
 3916 0012 4FF48073 		mov	r3, #256
 3917 0016 4361     		str	r3, [r0, #20]
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3918              		.loc 9 231 2 is_stmt 1 view .LVU1249
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3919              		.loc 9 231 14 is_stmt 0 view .LVU1250
 3920 0018 4FF49173 		mov	r3, #290
 3921 001c 8361     		str	r3, [r0, #24]
 3922              	.LVL372:
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 3923              		.loc 9 231 14 view .LVU1251
 3924              	.LBE477:
 3925              	.LBE476:
 460:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 3926              		.loc 1 460 9 is_stmt 1 view .LVU1252
 3927              	.LBB483:
ARM GAS  /tmp/cczxpjuQ.s 			page 195


 3928              	.LBI483:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 3929              		.loc 5 383 20 view .LVU1253
 3930              	.LBB484:
 3931              		.loc 5 384 2 view .LVU1254
 3932 001e FFF7FEFF 		bl	__sfree__
 3933              	.LVL373:
 3934              	.L208:
 3935              		.loc 5 384 2 is_stmt 0 view .LVU1255
 3936              	.LBE484:
 3937              	.LBE483:
 3938              	.LBE475:
 462:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3939              		.loc 1 462 1 view .LVU1256
 3940 0022 08BD     		pop	{r3, pc}
 3941              	.LVL374:
 3942              	.L211:
 3943              	.LCFI47:
 3944              		.cfi_def_cfa_offset 0
 3945              		.cfi_restore 3
 3946              		.cfi_restore 14
 462:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 3947              		.loc 1 462 1 view .LVU1257
 3948 0024 7047     		bx	lr
 3949              		.cfi_endproc
 3950              	.LFE1057:
 3952              		.section	.text.initramfs_alloc_inode,"ax",%progbits
 3953              		.align	1
 3954              		.syntax unified
 3955              		.thumb
 3956              		.thumb_func
 3958              	initramfs_alloc_inode:
 3959              	.LVL375:
 3960              	.LFB1056:
 439:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_superblock *supb = sb->s_fs_info;
 3961              		.loc 1 439 1 is_stmt 1 view -0
 3962              		.cfi_startproc
 3963              		@ args = 0, pretend = 0, frame = 0
 3964              		@ frame_needed = 0, uses_anonymous_args = 0
 439:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_superblock *supb = sb->s_fs_info;
 3965              		.loc 1 439 1 is_stmt 0 view .LVU1259
 3966 0000 38B5     		push	{r3, r4, r5, lr}
 3967              	.LCFI48:
 3968              		.cfi_def_cfa_offset 16
 3969              		.cfi_offset 3, -16
 3970              		.cfi_offset 4, -12
 3971              		.cfi_offset 5, -8
 3972              		.cfi_offset 14, -4
 3973 0002 0446     		mov	r4, r0
 440:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(supb->magic != MAGIC) return NULL;
 3974              		.loc 1 440 5 is_stmt 1 view .LVU1260
 440:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(supb->magic != MAGIC) return NULL;
 3975              		.loc 1 440 34 is_stmt 0 view .LVU1261
 3976 0004 006B     		ldr	r0, [r0, #48]
 3977              	.LVL376:
 441:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      struct initramfs_inode * inode = initramfs_create_empty_inode(supb,&initramfs_file_fops,10); /
 3978              		.loc 1 441 5 is_stmt 1 view .LVU1262
ARM GAS  /tmp/cczxpjuQ.s 			page 196


 441:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      struct initramfs_inode * inode = initramfs_create_empty_inode(supb,&initramfs_file_fops,10); /
 3979              		.loc 1 441 12 is_stmt 0 view .LVU1263
 3980 0006 0268     		ldr	r2, [r0]
 441:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      struct initramfs_inode * inode = initramfs_create_empty_inode(supb,&initramfs_file_fops,10); /
 3981              		.loc 1 441 7 view .LVU1264
 3982 0008 0B4B     		ldr	r3, .L219
 3983 000a 9A42     		cmp	r2, r3
 3984 000c 0ED1     		bne	.L216
 442:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      if(inode == NULL) return NULL;
 3985              		.loc 1 442 6 is_stmt 1 view .LVU1265
 442:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      if(inode == NULL) return NULL;
 3986              		.loc 1 442 39 is_stmt 0 view .LVU1266
 3987 000e 0A22     		movs	r2, #10
 3988 0010 0A49     		ldr	r1, .L219+4
 3989 0012 FFF7FEFF 		bl	initramfs_create_empty_inode
 3990              	.LVL377:
 443:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      struct inode *out_inode = initramfs_get_inode(inode,sb);
 3991              		.loc 1 443 6 is_stmt 1 view .LVU1267
 443:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      struct inode *out_inode = initramfs_get_inode(inode,sb);
 3992              		.loc 1 443 8 is_stmt 0 view .LVU1268
 3993 0016 0546     		mov	r5, r0
 3994 0018 58B1     		cbz	r0, .L217
 444:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      if(out_inode == NULL){
 3995              		.loc 1 444 6 is_stmt 1 view .LVU1269
 444:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      if(out_inode == NULL){
 3996              		.loc 1 444 32 is_stmt 0 view .LVU1270
 3997 001a 2146     		mov	r1, r4
 3998 001c FFF7FEFF 		bl	initramfs_get_inode
 3999              	.LVL378:
 445:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(inode);
 4000              		.loc 1 445 6 is_stmt 1 view .LVU1271
 445:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(inode);
 4001              		.loc 1 445 8 is_stmt 0 view .LVU1272
 4002 0020 0446     		mov	r4, r0
 4003              	.LVL379:
 445:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(inode);
 4004              		.loc 1 445 8 view .LVU1273
 4005 0022 20B9     		cbnz	r0, .L214
 446:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return NULL;
 4006              		.loc 1 446 9 is_stmt 1 view .LVU1274
 4007              	.LVL380:
 4008              	.LBB485:
 4009              	.LBI485:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 4010              		.loc 5 383 20 view .LVU1275
 4011              	.LBB486:
 4012              		.loc 5 384 2 view .LVU1276
 4013 0024 2846     		mov	r0, r5
 4014              	.LVL381:
 4015              		.loc 5 384 2 is_stmt 0 view .LVU1277
 4016 0026 FFF7FEFF 		bl	__sfree__
 4017              	.LVL382:
 4018              		.loc 5 384 2 view .LVU1278
 4019              	.LBE486:
 4020              	.LBE485:
 447:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      }
 4021              		.loc 1 447 9 is_stmt 1 view .LVU1279
ARM GAS  /tmp/cczxpjuQ.s 			page 197


 447:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      }
 4022              		.loc 1 447 16 is_stmt 0 view .LVU1280
 4023 002a 00E0     		b	.L214
 4024              	.LVL383:
 4025              	.L216:
 441:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      struct initramfs_inode * inode = initramfs_create_empty_inode(supb,&initramfs_file_fops,10); /
 4026              		.loc 1 441 37 discriminator 1 view .LVU1281
 4027 002c 0024     		movs	r4, #0
 4028              	.LVL384:
 4029              	.L214:
 450:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 4030              		.loc 1 450 1 view .LVU1282
 4031 002e 2046     		mov	r0, r4
 4032 0030 38BD     		pop	{r3, r4, r5, pc}
 4033              	.LVL385:
 4034              	.L217:
 443:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      struct inode *out_inode = initramfs_get_inode(inode,sb);
 4035              		.loc 1 443 31 discriminator 1 view .LVU1283
 4036 0032 0446     		mov	r4, r0
 4037              	.LVL386:
 443:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****      struct inode *out_inode = initramfs_get_inode(inode,sb);
 4038              		.loc 1 443 31 discriminator 1 view .LVU1284
 4039 0034 FBE7     		b	.L214
 4040              	.L220:
 4041 0036 00BF     		.align	2
 4042              	.L219:
 4043 0038 4E61BC00 		.word	12345678
 4044 003c 00000000 		.word	initramfs_file_fops
 4045              		.cfi_endproc
 4046              	.LFE1056:
 4048              		.section	.text.initramfs_superblock_destory,"ax",%progbits
 4049              		.align	1
 4050              		.syntax unified
 4051              		.thumb
 4052              		.thumb_func
 4054              	initramfs_superblock_destory:
 4055              	.LVL387:
 4056              	.LFB1050:
 293:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(sb!= NULL) {
 4057              		.loc 1 293 74 is_stmt 1 view -0
 4058              		.cfi_startproc
 4059              		@ args = 0, pretend = 0, frame = 0
 4060              		@ frame_needed = 0, uses_anonymous_args = 0
 294:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         struct initramfs_inode * root_inode = sb->rootinode;
 4061              		.loc 1 294 5 view .LVU1286
 294:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         struct initramfs_inode * root_inode = sb->rootinode;
 4062              		.loc 1 294 7 is_stmt 0 view .LVU1287
 4063 0000 50B1     		cbz	r0, .L225
 293:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(sb!= NULL) {
 4064              		.loc 1 293 74 view .LVU1288
 4065 0002 10B5     		push	{r4, lr}
 4066              	.LCFI49:
 4067              		.cfi_def_cfa_offset 8
 4068              		.cfi_offset 4, -8
 4069              		.cfi_offset 14, -4
 4070 0004 0446     		mov	r4, r0
 4071              	.LBB487:
ARM GAS  /tmp/cczxpjuQ.s 			page 198


 295:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(!root_inode){
 4072              		.loc 1 295 9 is_stmt 1 view .LVU1289
 295:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         if(!root_inode){
 4073              		.loc 1 295 34 is_stmt 0 view .LVU1290
 4074 0006 4069     		ldr	r0, [r0, #20]
 4075              	.LVL388:
 296:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             kfree(root_inode);
 4076              		.loc 1 296 9 is_stmt 1 view .LVU1291
 296:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****             kfree(root_inode);
 4077              		.loc 1 296 11 is_stmt 0 view .LVU1292
 4078 0008 18B1     		cbz	r0, .L228
 4079              	.LVL389:
 4080              	.L223:
 299:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 4081              		.loc 1 299 9 is_stmt 1 view .LVU1293
 4082              	.LBB488:
 4083              	.LBI488:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 4084              		.loc 5 383 20 view .LVU1294
 4085              	.LBB489:
 4086              		.loc 5 384 2 view .LVU1295
 4087 000a 2046     		mov	r0, r4
 4088 000c FFF7FEFF 		bl	__sfree__
 4089              	.LVL390:
 4090              		.loc 5 384 2 is_stmt 0 view .LVU1296
 4091              	.LBE489:
 4092              	.LBE488:
 4093              	.LBE487:
 301:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 4094              		.loc 1 301 1 view .LVU1297
 4095 0010 10BD     		pop	{r4, pc}
 4096              	.LVL391:
 4097              	.L228:
 4098              	.LBB492:
 297:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         }
 4099              		.loc 1 297 13 is_stmt 1 view .LVU1298
 4100              	.LBB490:
 4101              	.LBI490:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 4102              		.loc 5 383 20 view .LVU1299
 4103              	.LBB491:
 4104              		.loc 5 384 2 view .LVU1300
 4105 0012 FFF7FEFF 		bl	__sfree__
 4106              	.LVL392:
 385:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4107              		.loc 5 385 1 is_stmt 0 view .LVU1301
 4108 0016 F8E7     		b	.L223
 4109              	.LVL393:
 4110              	.L225:
 4111              	.LCFI50:
 4112              		.cfi_def_cfa_offset 0
 4113              		.cfi_restore 4
 4114              		.cfi_restore 14
 4115              		.loc 5 385 1 view .LVU1302
 4116 0018 7047     		bx	lr
 4117              	.LBE491:
 4118              	.LBE490:
ARM GAS  /tmp/cczxpjuQ.s 			page 199


 4119              	.LBE492:
 4120              		.cfi_endproc
 4121              	.LFE1050:
 4123              		.section	.rodata.initramfs_mount.str1.4,"aMS",%progbits,1
 4124              		.align	2
 4125              	.LC1:
 4126 0000 726F6F74 		.ascii	"root\000"
 4126      00
 4127              		.section	.text.initramfs_mount,"ax",%progbits
 4128              		.align	1
 4129              		.syntax unified
 4130              		.thumb
 4131              		.thumb_func
 4133              	initramfs_mount:
 4134              	.LVL394:
 4135              	.LFB1052:
 350:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_superblock *fs_superblock= initramfs_superblock_create();
 4136              		.loc 1 350 1 is_stmt 1 view -0
 4137              		.cfi_startproc
 4138              		@ args = 0, pretend = 0, frame = 0
 4139              		@ frame_needed = 0, uses_anonymous_args = 0
 350:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_superblock *fs_superblock= initramfs_superblock_create();
 4140              		.loc 1 350 1 is_stmt 0 view .LVU1304
 4141 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4142              	.LCFI51:
 4143              		.cfi_def_cfa_offset 24
 4144              		.cfi_offset 3, -24
 4145              		.cfi_offset 4, -20
 4146              		.cfi_offset 5, -16
 4147              		.cfi_offset 6, -12
 4148              		.cfi_offset 7, -8
 4149              		.cfi_offset 14, -4
 351:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (fs_superblock == NULL){
 4150              		.loc 1 351 5 is_stmt 1 view .LVU1305
 351:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if (fs_superblock == NULL){
 4151              		.loc 1 351 49 is_stmt 0 view .LVU1306
 4152 0002 FFF7FEFF 		bl	initramfs_superblock_create
 4153              	.LVL395:
 352:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return ERR_PTR(-ENOMEM);        
 4154              		.loc 1 352 5 is_stmt 1 view .LVU1307
 352:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return ERR_PTR(-ENOMEM);        
 4155              		.loc 1 352 8 is_stmt 0 view .LVU1308
 4156 0006 0028     		cmp	r0, #0
 4157 0008 49D0     		beq	.L235
 4158 000a 0646     		mov	r6, r0
 355:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(root == NULL){
 4159              		.loc 1 355 5 is_stmt 1 view .LVU1309
 355:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(root == NULL){
 4160              		.loc 1 355 28 is_stmt 0 view .LVU1310
 4161 000c 2549     		ldr	r1, .L241
 4162 000e 0020     		movs	r0, #0
 4163              	.LVL396:
 355:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(root == NULL){
 4164              		.loc 1 355 28 view .LVU1311
 4165 0010 FFF7FEFF 		bl	__d_alloc
 4166              	.LVL397:
 356:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****          initramfs_superblock_destory(fs_superblock);
ARM GAS  /tmp/cczxpjuQ.s 			page 200


 4167              		.loc 1 356 5 is_stmt 1 view .LVU1312
 356:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****          initramfs_superblock_destory(fs_superblock);
 4168              		.loc 1 356 7 is_stmt 0 view .LVU1313
 4169 0014 0446     		mov	r4, r0
 4170 0016 D8B1     		cbz	r0, .L237
 362:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(dentry == NULL){
 4171              		.loc 1 362 5 is_stmt 1 view .LVU1314
 4172              	.LVL398:
 4173              	.LBB493:
 4174              	.LBI493:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 4175              		.loc 5 379 21 view .LVU1315
 4176              	.LBB494:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4177              		.loc 5 380 2 view .LVU1316
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4178              		.loc 5 380 9 is_stmt 0 view .LVU1317
 4179 0018 4FF44C61 		mov	r1, #3264
 4180 001c 1420     		movs	r0, #20
 4181              	.LVL399:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4182              		.loc 5 380 9 view .LVU1318
 4183 001e FFF7FEFF 		bl	__smalloc__
 4184              	.LVL400:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4185              		.loc 5 380 9 view .LVU1319
 4186              	.LBE494:
 4187              	.LBE493:
 363:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****        
 4188              		.loc 1 363 5 is_stmt 1 view .LVU1320
 363:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****        
 4189              		.loc 1 363 7 is_stmt 0 view .LVU1321
 4190 0022 0546     		mov	r5, r0
 4191 0024 D0B1     		cbz	r0, .L238
 368:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->target_inode = fs_superblock->rootinode;
 4192              		.loc 1 368 5 is_stmt 1 view .LVU1322
 368:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->target_inode = fs_superblock->rootinode;
 4193              		.loc 1 368 18 is_stmt 0 view .LVU1323
 4194 0026 0021     		movs	r1, #0
 4195 0028 4160     		str	r1, [r0, #4]
 369:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->magic =MAGIC;
 4196              		.loc 1 369 5 is_stmt 1 view .LVU1324
 369:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->magic =MAGIC;
 4197              		.loc 1 369 41 is_stmt 0 view .LVU1325
 4198 002a 7369     		ldr	r3, [r6, #20]
 369:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     dentry->magic =MAGIC;
 4199              		.loc 1 369 26 view .LVU1326
 4200 002c 8360     		str	r3, [r0, #8]
 370:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     root->d_fsdata = dentry;
 4201              		.loc 1 370 5 is_stmt 1 view .LVU1327
 370:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     root->d_fsdata = dentry;
 4202              		.loc 1 370 19 is_stmt 0 view .LVU1328
 4203 002e 1E4B     		ldr	r3, .L241+4
 4204 0030 0360     		str	r3, [r0]
 371:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct inode * root_inode = initramfs_get_inode(dentry->target_inode,NULL);
 4205              		.loc 1 371 5 is_stmt 1 view .LVU1329
 371:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct inode * root_inode = initramfs_get_inode(dentry->target_inode,NULL);
ARM GAS  /tmp/cczxpjuQ.s 			page 201


 4206              		.loc 1 371 20 is_stmt 0 view .LVU1330
 4207 0032 6065     		str	r0, [r4, #84]
 372:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(root_inode == NULL){
 4208              		.loc 1 372 5 is_stmt 1 view .LVU1331
 372:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(root_inode == NULL){
 4209              		.loc 1 372 33 is_stmt 0 view .LVU1332
 4210 0034 8068     		ldr	r0, [r0, #8]
 4211              	.LVL401:
 372:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(root_inode == NULL){
 4212              		.loc 1 372 33 view .LVU1333
 4213 0036 FFF7FEFF 		bl	initramfs_get_inode
 4214              	.LVL402:
 373:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(dentry);
 4215              		.loc 1 373 5 is_stmt 1 view .LVU1334
 373:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(dentry);
 4216              		.loc 1 373 7 is_stmt 0 view .LVU1335
 4217 003a 0746     		mov	r7, r0
 4218 003c A0B1     		cbz	r0, .L239
 379:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 4219              		.loc 1 379 5 is_stmt 1 view .LVU1336
 379:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 4220              		.loc 1 379 19 is_stmt 0 view .LVU1337
 4221 003e A064     		str	r0, [r4, #72]
 381:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(sb == NULL){
 4222              		.loc 1 381 5 is_stmt 1 view .LVU1338
 381:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(sb == NULL){
 4223              		.loc 1 381 29 is_stmt 0 view .LVU1339
 4224 0040 3046     		mov	r0, r6
 4225              	.LVL403:
 381:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(sb == NULL){
 4226              		.loc 1 381 29 view .LVU1340
 4227 0042 FFF7FEFF 		bl	initramfs_get_vfs_superblock
 4228              	.LVL404:
 382:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(root);
 4229              		.loc 1 382 5 is_stmt 1 view .LVU1341
 382:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(root);
 4230              		.loc 1 382 7 is_stmt 0 view .LVU1342
 4231 0046 D8B1     		cbz	r0, .L240
 389:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     root->d_sb = sb;
 4232              		.loc 1 389 5 is_stmt 1 view .LVU1343
 389:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     root->d_sb = sb;
 4233              		.loc 1 389 16 is_stmt 0 view .LVU1344
 4234 0048 8461     		str	r4, [r0, #24]
 390:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 4235              		.loc 1 390 5 is_stmt 1 view .LVU1345
 390:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 4236              		.loc 1 390 16 is_stmt 0 view .LVU1346
 4237 004a 2065     		str	r0, [r4, #80]
 392:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 4238              		.loc 1 392 5 is_stmt 1 view .LVU1347
 4239              	.LVL405:
 4240              	.L229:
 393:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 4241              		.loc 1 393 1 is_stmt 0 view .LVU1348
 4242 004c 2046     		mov	r0, r4
 4243 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4244              	.LVL406:
ARM GAS  /tmp/cczxpjuQ.s 			page 202


 4245              	.L237:
 357:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return ERR_PTR(-ENOMEM);   
 4246              		.loc 1 357 10 is_stmt 1 view .LVU1349
 4247 0050 3046     		mov	r0, r6
 4248              	.LVL407:
 357:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return ERR_PTR(-ENOMEM);   
 4249              		.loc 1 357 10 is_stmt 0 view .LVU1350
 4250 0052 FFF7FEFF 		bl	initramfs_superblock_destory
 4251              	.LVL408:
 358:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 4252              		.loc 1 358 9 is_stmt 1 view .LVU1351
 358:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 4253              		.loc 1 358 16 is_stmt 0 view .LVU1352
 4254 0056 6FF00B04 		mvn	r4, #11
 4255              	.LVL409:
 358:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 4256              		.loc 1 358 16 view .LVU1353
 4257 005a F7E7     		b	.L229
 4258              	.LVL410:
 4259              	.L238:
 365:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return ERR_PTR(-ENOMEM);        
 4260              		.loc 1 365 9 is_stmt 1 view .LVU1354
 4261              	.LBB495:
 4262              	.LBI495:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 4263              		.loc 5 383 20 view .LVU1355
 4264              	.LBB496:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4265              		.loc 5 384 2 view .LVU1356
 4266 005c 2046     		mov	r0, r4
 4267              	.LVL411:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4268              		.loc 5 384 2 is_stmt 0 view .LVU1357
 4269 005e FFF7FEFF 		bl	__sfree__
 4270              	.LVL412:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4271              		.loc 5 384 2 view .LVU1358
 4272              	.LBE496:
 4273              	.LBE495:
 366:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 4274              		.loc 1 366 9 is_stmt 1 view .LVU1359
 366:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 4275              		.loc 1 366 16 is_stmt 0 view .LVU1360
 4276 0062 6FF00B04 		mvn	r4, #11
 4277              	.LVL413:
 366:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 4278              		.loc 1 366 16 view .LVU1361
 4279 0066 F1E7     		b	.L229
 4280              	.LVL414:
 4281              	.L239:
 374:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         initramfs_superblock_destory(fs_superblock);
 4282              		.loc 1 374 9 is_stmt 1 view .LVU1362
 4283              	.LBB497:
 4284              	.LBI497:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 4285              		.loc 5 383 20 view .LVU1363
 4286              	.LBB498:
ARM GAS  /tmp/cczxpjuQ.s 			page 203


 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4287              		.loc 5 384 2 view .LVU1364
 4288 0068 2846     		mov	r0, r5
 4289              	.LVL415:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4290              		.loc 5 384 2 is_stmt 0 view .LVU1365
 4291 006a FFF7FEFF 		bl	__sfree__
 4292              	.LVL416:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4293              		.loc 5 384 2 view .LVU1366
 4294              	.LBE498:
 4295              	.LBE497:
 375:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(root);
 4296              		.loc 1 375 9 is_stmt 1 view .LVU1367
 4297 006e 3046     		mov	r0, r6
 4298 0070 FFF7FEFF 		bl	initramfs_superblock_destory
 4299              	.LVL417:
 376:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return ERR_PTR(-ENOMEM);        
 4300              		.loc 1 376 9 view .LVU1368
 4301              	.LBB499:
 4302              	.LBI499:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 4303              		.loc 5 383 20 view .LVU1369
 4304              	.LBB500:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4305              		.loc 5 384 2 view .LVU1370
 4306 0074 2046     		mov	r0, r4
 4307 0076 FFF7FEFF 		bl	__sfree__
 4308              	.LVL418:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4309              		.loc 5 384 2 is_stmt 0 view .LVU1371
 4310              	.LBE500:
 4311              	.LBE499:
 377:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     } 
 4312              		.loc 1 377 9 is_stmt 1 view .LVU1372
 377:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     } 
 4313              		.loc 1 377 16 is_stmt 0 view .LVU1373
 4314 007a 6FF00B04 		mvn	r4, #11
 4315              	.LVL419:
 377:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     } 
 4316              		.loc 1 377 16 view .LVU1374
 4317 007e E5E7     		b	.L229
 4318              	.LVL420:
 4319              	.L240:
 383:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         kfree(dentry);
 4320              		.loc 1 383 9 is_stmt 1 view .LVU1375
 4321              	.LBB501:
 4322              	.LBI501:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 4323              		.loc 5 383 20 view .LVU1376
 4324              	.LBB502:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4325              		.loc 5 384 2 view .LVU1377
 4326 0080 2046     		mov	r0, r4
 4327              	.LVL421:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4328              		.loc 5 384 2 is_stmt 0 view .LVU1378
ARM GAS  /tmp/cczxpjuQ.s 			page 204


 4329 0082 FFF7FEFF 		bl	__sfree__
 4330              	.LVL422:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4331              		.loc 5 384 2 view .LVU1379
 4332              	.LBE502:
 4333              	.LBE501:
 384:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         inode_put(root_inode);
 4334              		.loc 1 384 9 is_stmt 1 view .LVU1380
 4335              	.LBB503:
 4336              	.LBI503:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 4337              		.loc 5 383 20 view .LVU1381
 4338              	.LBB504:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4339              		.loc 5 384 2 view .LVU1382
 4340 0086 2846     		mov	r0, r5
 4341 0088 FFF7FEFF 		bl	__sfree__
 4342              	.LVL423:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 4343              		.loc 5 384 2 is_stmt 0 view .LVU1383
 4344              	.LBE504:
 4345              	.LBE503:
 385:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         initramfs_superblock_destory(fs_superblock);
 4346              		.loc 1 385 9 is_stmt 1 view .LVU1384
 4347 008c 3846     		mov	r0, r7
 4348 008e FFF7FEFF 		bl	inode_put
 4349              	.LVL424:
 386:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return ERR_PTR(-ENOMEM);       
 4350              		.loc 1 386 9 view .LVU1385
 4351 0092 3046     		mov	r0, r6
 4352 0094 FFF7FEFF 		bl	initramfs_superblock_destory
 4353              	.LVL425:
 387:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 4354              		.loc 1 387 9 view .LVU1386
 387:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 4355              		.loc 1 387 16 is_stmt 0 view .LVU1387
 4356 0098 6FF00B04 		mvn	r4, #11
 4357              	.LVL426:
 387:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 4358              		.loc 1 387 16 view .LVU1388
 4359 009c D6E7     		b	.L229
 4360              	.LVL427:
 4361              	.L235:
 353:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 4362              		.loc 1 353 16 view .LVU1389
 4363 009e 6FF00B04 		mvn	r4, #11
 4364 00a2 D3E7     		b	.L229
 4365              	.L242:
 4366              		.align	2
 4367              	.L241:
 4368 00a4 00000000 		.word	.LC1
 4369 00a8 4E61BC00 		.word	12345678
 4370              		.cfi_endproc
 4371              	.LFE1052:
 4373              		.section	.rodata.initram_fs_mount_file.str1.4,"aMS",%progbits,1
 4374              		.align	2
 4375              	.LC2:
ARM GAS  /tmp/cczxpjuQ.s 			page 205


 4376 0000 63616E20 		.ascii	"can not mount file:%s file is using\012\000"
 4376      6E6F7420 
 4376      6D6F756E 
 4376      74206669 
 4376      6C653A25 
 4377              		.section	.text.initram_fs_mount_file,"ax",%progbits
 4378              		.align	1
 4379              		.global	initram_fs_mount_file
 4380              		.syntax unified
 4381              		.thumb
 4382              		.thumb_func
 4384              	initram_fs_mount_file:
 4385              	.LVL428:
 4386              	.LFB1035:
  51:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *init_ram_fs_inode = inode->i_private;
 4387              		.loc 1 51 1 is_stmt 1 view -0
 4388              		.cfi_startproc
 4389              		@ args = 0, pretend = 0, frame = 0
 4390              		@ frame_needed = 0, uses_anonymous_args = 0
  51:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *init_ram_fs_inode = inode->i_private;
 4391              		.loc 1 51 1 is_stmt 0 view .LVU1391
 4392 0000 70B5     		push	{r4, r5, r6, lr}
 4393              	.LCFI52:
 4394              		.cfi_def_cfa_offset 16
 4395              		.cfi_offset 4, -16
 4396              		.cfi_offset 5, -12
 4397              		.cfi_offset 6, -8
 4398              		.cfi_offset 14, -4
 4399 0002 0D46     		mov	r5, r1
  52:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(init_ram_fs_inode->i_page != NULL){
 4400              		.loc 1 52 5 is_stmt 1 view .LVU1392
  52:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(init_ram_fs_inode->i_page != NULL){
 4401              		.loc 1 52 29 is_stmt 0 view .LVU1393
 4402 0004 D0F88430 		ldr	r3, [r0, #132]
 4403              	.LVL429:
  53:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         pr_info("can not mount file:%s file is using\n",filedata->path);
 4404              		.loc 1 53 5 is_stmt 1 view .LVU1394
  53:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         pr_info("can not mount file:%s file is using\n",filedata->path);
 4405              		.loc 1 53 25 is_stmt 0 view .LVU1395
 4406 0008 1B6C     		ldr	r3, [r3, #64]
 4407              	.LVL430:
  53:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         pr_info("can not mount file:%s file is using\n",filedata->path);
 4408              		.loc 1 53 7 view .LVU1396
 4409 000a 2BB1     		cbz	r3, .L244
  54:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return;
 4410              		.loc 1 54 9 is_stmt 1 view .LVU1397
 4411 000c 0A68     		ldr	r2, [r1]
 4412 000e 1449     		ldr	r1, .L249
 4413              	.LVL431:
  54:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return;
 4414              		.loc 1 54 9 is_stmt 0 view .LVU1398
 4415 0010 0620     		movs	r0, #6
 4416              	.LVL432:
  54:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         return;
 4417              		.loc 1 54 9 view .LVU1399
 4418 0012 FFF7FEFF 		bl	printk
 4419              	.LVL433:
ARM GAS  /tmp/cczxpjuQ.s 			page 206


  55:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     }
 4420              		.loc 1 55 9 is_stmt 1 view .LVU1400
 4421              	.L243:
  68:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 4422              		.loc 1 68 1 is_stmt 0 view .LVU1401
 4423 0016 70BD     		pop	{r4, r5, r6, pc}
 4424              	.LVL434:
 4425              	.L244:
  68:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** 
 4426              		.loc 1 68 1 view .LVU1402
 4427 0018 0446     		mov	r4, r0
  57:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(file_data_page == NULL){
 4428              		.loc 1 57 5 is_stmt 1 view .LVU1403
  57:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     if(file_data_page == NULL){
 4429              		.loc 1 57 35 is_stmt 0 view .LVU1404
 4430 001a 8E68     		ldr	r6, [r1, #8]
 4431              	.LVL435:
 4432              	.LBB505:
 4433              	.LBI505:
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	struct page *page = __page_create(GFP_KERNEL);
 4434              		.loc 4 243 28 is_stmt 1 view .LVU1405
 4435              	.LBB506:
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	if(page == NULL)
 4436              		.loc 4 244 2 view .LVU1406
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	if(page == NULL)
 4437              		.loc 4 244 22 is_stmt 0 view .LVU1407
 4438 001c 4FF44C60 		mov	r0, #3264
 4439              	.LVL436:
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	if(page == NULL)
 4440              		.loc 4 244 22 view .LVU1408
 4441 0020 FFF7FEFF 		bl	__page_create
 4442              	.LVL437:
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		return -ENOMEM ;
 4443              		.loc 4 245 2 is_stmt 1 view .LVU1409
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 		return -ENOMEM ;
 4444              		.loc 4 245 4 is_stmt 0 view .LVU1410
 4445 0024 0246     		mov	r2, r0
 4446 0026 C0B1     		cbz	r0, .L247
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	return page;
 4447              		.loc 4 247 2 is_stmt 1 view .LVU1411
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	return page;
 4448              		.loc 4 247 25 is_stmt 0 view .LVU1412
 4449 0028 4660     		str	r6, [r0, #4]
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 4450              		.loc 4 248 2 is_stmt 1 view .LVU1413
 4451              	.LVL438:
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 4452              		.loc 4 248 2 is_stmt 0 view .LVU1414
 4453              	.LBE506:
 4454              	.LBE505:
  58:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****         pr_info("can not mount file:%s no memory\n",filedata->path);
 4455              		.loc 1 58 5 is_stmt 1 view .LVU1415
  62:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     struct initramfs_inode *p_inode = inode->i_private;
 4456              		.loc 1 62 5 view .LVU1416
 4457              	.LBB508:
 4458              	.LBI508:
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****     if (page)
ARM GAS  /tmp/cczxpjuQ.s 			page 207


 4459              		.loc 4 252 20 view .LVU1417
 4460              	.LBB509:
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h ****         atomic_inc(&page->_refcount);
 4461              		.loc 4 253 5 view .LVU1418
 4462              	.L246:
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** }
 4463              		.loc 4 254 9 view .LVU1419
 4464 002a 02F11C03 		add	r3, r2, #28
 4465              	.LVL439:
 4466              	.LBB510:
 4467              	.LBI510:
 433:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 4468              		.loc 6 433 1 view .LVU1420
 435:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_inc(v);
 4469              		.loc 6 435 2 view .LVU1421
 436:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 4470              		.loc 6 436 2 view .LVU1422
 4471              	.LBB511:
 4472              	.LBI511:
 999:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 4473              		.loc 7 999 1 view .LVU1423
1004:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 4474              		.loc 7 1004 2 view .LVU1424
 4475              	.LBB512:
 4476              	.LBI512:
 550:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 4477              		.loc 7 550 1 view .LVU1425
 552:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 4478              		.loc 7 552 2 view .LVU1426
 4479              	.LBB513:
 4480              	.LBI513:
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 4481              		.loc 11 170 1 view .LVU1427
 4482              	.LBB514:
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 4483              		.loc 11 170 1 view .LVU1428
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 4484              		.loc 11 170 1 view .LVU1429
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 4485              		.loc 11 170 1 view .LVU1430
 4486              		.syntax unified
 4487              	@ 170 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h" 1
 4488              		@ atomic_add
 4489 002e 53E8001F 	1: ldrex   r1, [r3]
 4490 0032 01F10101 	   add r1, r1, #1
 4491 0036 43E80010 	   strex   r0, r1, [r3]
 4492 003a 90F0000F 	   teq r0, #0
 4493 003e F6D1     	   bne 1b
 4494              	@ 0 "" 2
 4495              	.LVL440:
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 4496              		.loc 11 170 1 is_stmt 0 view .LVU1431
 4497              		.thumb
 4498              		.syntax unified
 4499              	.LBE514:
 4500              	.LBE513:
 4501              	.LBE512:
ARM GAS  /tmp/cczxpjuQ.s 			page 208


 4502              	.LBE511:
 4503              	.LBE510:
 4504              	.LBE509:
 4505              	.LBE508:
  63:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     p_inode->i_page = file_data_page;
 4506              		.loc 1 63 5 is_stmt 1 view .LVU1432
  63:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     p_inode->i_page = file_data_page;
 4507              		.loc 1 63 29 is_stmt 0 view .LVU1433
 4508 0040 D4F88430 		ldr	r3, [r4, #132]
 4509              	.LVL441:
  64:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     p_inode->size   = filedata->length;
 4510              		.loc 1 64 5 is_stmt 1 view .LVU1434
  64:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     p_inode->size   = filedata->length;
 4511              		.loc 1 64 21 is_stmt 0 view .LVU1435
 4512 0044 1A64     		str	r2, [r3, #64]
  65:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     p_inode->mode   = READONLY;
 4513              		.loc 1 65 5 is_stmt 1 view .LVU1436
  65:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     p_inode->mode   = READONLY;
 4514              		.loc 1 65 31 is_stmt 0 view .LVU1437
 4515 0046 6A68     		ldr	r2, [r5, #4]
  65:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     p_inode->mode   = READONLY;
 4516              		.loc 1 65 21 view .LVU1438
 4517 0048 5A64     		str	r2, [r3, #68]
  66:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_size   = filedata->length;
 4518              		.loc 1 66 5 is_stmt 1 view .LVU1439
  66:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c ****     inode->i_size   = filedata->length;
 4519              		.loc 1 66 21 is_stmt 0 view .LVU1440
 4520 004a 0022     		movs	r2, #0
 4521 004c 83F83420 		strb	r2, [r3, #52]
  67:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 4522              		.loc 1 67 5 is_stmt 1 view .LVU1441
  67:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 4523              		.loc 1 67 31 is_stmt 0 view .LVU1442
 4524 0050 6B68     		ldr	r3, [r5, #4]
 4525              	.LVL442:
  67:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 4526              		.loc 1 67 31 view .LVU1443
 4527 0052 DA17     		asrs	r2, r3, #31
  67:/mnt/c/Users/31740/Desktop/newcore/fs/initramfs/initramfs.c **** }
 4528              		.loc 1 67 21 view .LVU1444
 4529 0054 2362     		str	r3, [r4, #32]
 4530 0056 6262     		str	r2, [r4, #36]
 4531 0058 DDE7     		b	.L243
 4532              	.LVL443:
 4533              	.L247:
 4534              	.LBB515:
 4535              	.LBB507:
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h **** 	page->zone_device_data = (void *)(pfn << 0 );
 4536              		.loc 4 246 10 view .LVU1445
 4537 005a 6FF00B02 		mvn	r2, #11
 4538 005e E4E7     		b	.L246
 4539              	.L250:
 4540              		.align	2
 4541              	.L249:
 4542 0060 00000000 		.word	.LC2
 4543              	.LBE507:
 4544              	.LBE515:
ARM GAS  /tmp/cczxpjuQ.s 			page 209


 4545              		.cfi_endproc
 4546              	.LFE1035:
 4548              		.section	.fsinitcall,"aw"
 4549              		.align	2
 4552              	_initcall_initramfs_ops_init:
 4553 0000 00000000 		.word	initramfs_ops_init
 4554              		.section	.rodata.str1.4,"aMS",%progbits,1
 4555              		.align	2
 4556              	.LC3:
 4557 0000 696E6974 		.ascii	"initramfs\000"
 4557      72616D66 
 4557      7300
 4558              		.section	.data.fs_type,"aw"
 4559              		.align	2
 4562              	fs_type:
 4563 0000 00000000 		.word	.LC3
 4564 0004 00000000 		.word	0
 4565 0008 00000000 		.word	0
 4566 000c 00000000 		.space	4
 4567 0010 00000000 		.word	initramfs_mount
 4568 0014 00000000 		.word	initramfs_kill_sb
 4569 0018 00000000 		.word	0
 4570 001c 00000000 		.space	8
 4570      00000000 
 4571              		.section	.data.initramfs_inode_operation,"aw"
 4572              		.align	2
 4575              	initramfs_inode_operation:
 4576 0000 00000000 		.word	initramfs_vfs_lookup
 4577 0004 00000000 		.space	16
 4577      00000000 
 4577      00000000 
 4577      00000000 
 4578 0014 00000000 		.word	initramfs_create
 4579 0018 00000000 		.word	initramfs_link
 4580 001c 00000000 		.word	initramfs_unlink
 4581 0020 00000000 		.space	4
 4582 0024 00000000 		.word	initramfs_mkdir
 4583 0028 00000000 		.word	initramfs_rmdir
 4584 002c 00000000 		.space	8
 4584      00000000 
 4585 0034 00000000 		.word	initramfs_setattr
 4586 0038 00000000 		.word	initramfs_getattr
 4587 003c 00000000 		.space	40
 4587      00000000 
 4587      00000000 
 4587      00000000 
 4587      00000000 
 4588              		.section	.data.initramfs_dentry_operation,"aw"
 4589              		.align	7
 4592              	initramfs_dentry_operation:
 4593 0000 00000000 		.space	24
 4593      00000000 
 4593      00000000 
 4593      00000000 
 4593      00000000 
 4594 0018 00000000 		.word	initramfs_release_dentry
 4595 001c 00000000 		.space	100
ARM GAS  /tmp/cczxpjuQ.s 			page 210


 4595      00000000 
 4595      00000000 
 4595      00000000 
 4595      00000000 
 4596              		.section	.data.initramfs_super_operation,"aw"
 4597              		.align	2
 4600              	initramfs_super_operation:
 4601 0000 00000000 		.word	initramfs_alloc_inode
 4602 0004 00000000 		.word	initramfs_destroy_inode
 4603 0008 00000000 		.word	0
 4604 000c 00000000 		.word	0
 4605 0010 00000000 		.word	0
 4606 0014 00000000 		.word	0
 4607 0018 00000000 		.space	4
 4608 001c 00000000 		.word	initramfs_kill_sb
 4609 0020 00000000 		.word	0
 4610 0024 00000000 		.space	16
 4610      00000000 
 4610      00000000 
 4610      00000000 
 4611 0034 00000000 		.word	initramfs_statfs
 4612 0038 00000000 		.space	36
 4612      00000000 
 4612      00000000 
 4612      00000000 
 4612      00000000 
 4613              		.section	.data.initramfs_file_fops,"aw"
 4614              		.align	2
 4617              	initramfs_file_fops:
 4618 0000 00000000 		.word	0
 4619 0004 00000000 		.space	8
 4619      00000000 
 4620 000c 00000000 		.word	initramfs_read
 4621 0010 00000000 		.word	initramfs_write
 4622 0014 00000000 		.space	12
 4622      00000000 
 4622      00000000 
 4623 0020 00000000 		.word	initramfs_iterate
 4624 0024 00000000 		.space	16
 4624      00000000 
 4624      00000000 
 4624      00000000 
 4625 0034 00000000 		.word	initramfs_open
 4626 0038 00000000 		.space	4
 4627 003c 00000000 		.word	initramfs_release
 4628 0040 00000000 		.space	72
 4628      00000000 
 4628      00000000 
 4628      00000000 
 4628      00000000 
 4629              		.text
 4630              	.Letext0:
 4631              		.file 14 "/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/int-l64.h"
 4632              		.file 15 "/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/posix_types.h"
 4633              		.file 16 "/mnt/c/Users/31740/Desktop/newcore/include/uapi/linux/types.h"
 4634              		.file 17 "/mnt/c/Users/31740/Desktop/newcore/include/linux/types.h"
 4635              		.file 18 "/mnt/c/Users/31740/Desktop/newcore/include/linux/init.h"
ARM GAS  /tmp/cczxpjuQ.s 			page 211


 4636              		.file 19 "/mnt/c/Users/31740/Desktop/newcore/include/linux/time64.h"
 4637              		.file 20 "/mnt/c/Users/31740/Desktop/newcore/include/linux/uidgid_types.h"
 4638              		.file 21 "/mnt/c/Users/31740/Desktop/newcore/include/linux/stat.h"
 4639              		.file 22 "/mnt/c/Users/31740/Desktop/newcore/include/linux/errseq.h"
 4640              		.file 23 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/sched.h"
 4641              		.file 24 "/mnt/c/Users/31740/Desktop/newcore/include/linux/sched.h"
 4642              		.file 25 "/mnt/c/Users/31740/Desktop/newcore/include/linux/lockdep_types.h"
 4643              		.file 26 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock_types_raw.h"
 4644              		.file 27 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock_types.h"
 4645              		.file 28 "/mnt/c/Users/31740/Desktop/newcore/include/linux/rbtree_types.h"
 4646              		.file 29 "/mnt/c/Users/31740/Desktop/newcore/include/linux/projid.h"
 4647              		.file 30 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mnt_idmapping.h"
 4648              		.file 31 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mutex.h"
 4649              		.file 32 "/mnt/c/Users/31740/Desktop/newcore/include/linux/uio.h"
 4650              		.file 33 "/mnt/c/Users/31740/Desktop/newcore/include/linux/migrate_mode.h"
 4651              		.file 34 "/mnt/c/Users/31740/Desktop/newcore/include/linux/wait.h"
 4652              		.file 35 "/mnt/c/Users/31740/Desktop/newcore/include/linux/xarray.h"
 4653              		.file 36 "/mnt/c/Users/31740/Desktop/newcore/include/linux/rw_hint.h"
 4654              		.file 37 "/mnt/c/Users/31740/Desktop/newcore/include/linux/stddef.h"
 4655              		.file 38 "/mnt/c/Users/31740/Desktop/newcore/include/linux/gfp_types.h"
 4656              		.file 39 "/mnt/c/Users/31740/Desktop/newcore/include/linux/reciprocal_div.h"
 4657              		.file 40 "/mnt/c/Users/31740/Desktop/newcore/include/linux/bvec.h"
 4658              		.file 41 "/mnt/c/Users/31740/Desktop/newcore/include/linux/blk_types.h"
 4659              		.file 42 "/mnt/c/Users/31740/Desktop/newcore/include/linux/blkdev.h"
 4660              		.file 43 "/mnt/c/Users/31740/Desktop/newcore/include/linux/bio.h"
 4661              		.file 44 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h"
 4662              		.file 45 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool.h"
 4663              		.file 46 "/mnt/c/Users/31740/Desktop/newcore/include/linux/workqueue_types.h"
 4664              		.file 47 "/mnt/c/Users/31740/Desktop/newcore/include/linux/blk-mq.h"
 4665              		.file 48 "/mnt/c/Users/31740/Desktop/newcore/include/linux/dcache.h"
 4666              		.file 49 "/mnt/c/Users/31740/Desktop/newcore/include/uapi/linux/pr.h"
 4667              		.file 50 "/mnt/c/Users/31740/Desktop/newcore/include/linux/pr.h"
 4668              		.file 51 "/mnt/c/Users/31740/Desktop/newcore/include/linux/hdreg.h"
 4669              		.file 52 "/mnt/c/Users/31740/Desktop/newcore/include/linux/lockref.h"
 4670              		.file 53 "/mnt/c/Users/31740/Desktop/newcore/include/linux/path.h"
 4671              		.file 54 "/mnt/c/Users/31740/Desktop/newcore/include/linux/statfs.h"
 4672              		.file 55 "/mnt/c/Users/31740/Desktop/newcore/include/linux/initramfs.h"
 4673              		.file 56 "/mnt/c/Users/31740/Desktop/newcore/include/linux/string.h"
 4674              		.file 57 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/string.h"
 4675              		.file 58 "/mnt/c/Users/31740/Desktop/newcore/include/linux/time.h"
 4676              		.file 59 "/mnt/c/Users/31740/Desktop/newcore/include/linux/printk.h"
 4677              		.file 60 "/mnt/c/Users/31740/Desktop/newcore/include/linux/instrumented.h"
 4678              		.file 61 "/mnt/c/Users/31740/Desktop/newcore/include/linux/kcsan-checks.h"
 4679              		.file 62 "/mnt/c/Users/31740/Desktop/newcore/include/linux/kasan-checks.h"
 4680              		.file 63 "<built-in>"
ARM GAS  /tmp/cczxpjuQ.s 			page 212


DEFINED SYMBOLS
                            *ABS*:00000000 initramfs.c
     /tmp/cczxpjuQ.s:21     .text.__spin_init:00000000 $t
     /tmp/cczxpjuQ.s:26     .text.__spin_init:00000000 __spin_init
     /tmp/cczxpjuQ.s:46     .text.__spin_unlock:00000000 $t
     /tmp/cczxpjuQ.s:51     .text.__spin_unlock:00000000 __spin_unlock
     /tmp/cczxpjuQ.s:69     .text.spin_lock_init:00000000 $t
     /tmp/cczxpjuQ.s:74     .text.spin_lock_init:00000000 spin_lock_init
     /tmp/cczxpjuQ.s:97     .text.spin_unlock:00000000 $t
     /tmp/cczxpjuQ.s:102    .text.spin_unlock:00000000 spin_unlock
     /tmp/cczxpjuQ.s:124    .text.__kmap:00000000 $t
     /tmp/cczxpjuQ.s:129    .text.__kmap:00000000 __kmap
     /tmp/cczxpjuQ.s:155    .text.initramfs_open:00000000 $t
     /tmp/cczxpjuQ.s:160    .text.initramfs_open:00000000 initramfs_open
     /tmp/cczxpjuQ.s:178    .text.initramfs_release:00000000 $t
     /tmp/cczxpjuQ.s:183    .text.initramfs_release:00000000 initramfs_release
     /tmp/cczxpjuQ.s:201    .text.initramfs_statfs:00000000 $t
     /tmp/cczxpjuQ.s:206    .text.initramfs_statfs:00000000 initramfs_statfs
     /tmp/cczxpjuQ.s:251    .text.initramfs_statfs:0000001c $d
     /tmp/cczxpjuQ.s:256    .text.initramfs_get_dentry:00000000 $t
     /tmp/cczxpjuQ.s:261    .text.initramfs_get_dentry:00000000 initramfs_get_dentry
     /tmp/cczxpjuQ.s:291    .text.initramfs_setattr:00000000 $t
     /tmp/cczxpjuQ.s:296    .text.initramfs_setattr:00000000 initramfs_setattr
     /tmp/cczxpjuQ.s:328    .text.__page_create:00000000 $t
     /tmp/cczxpjuQ.s:333    .text.__page_create:00000000 __page_create
     /tmp/cczxpjuQ.s:444    .init.text:00000000 $t
     /tmp/cczxpjuQ.s:449    .init.text:00000000 initramfs_ops_init
     /tmp/cczxpjuQ.s:471    .init.text:0000000c $d
     /tmp/cczxpjuQ.s:4562   .data.fs_type:00000000 fs_type
     /tmp/cczxpjuQ.s:476    .text.initramfs_kill_sb:00000000 $t
     /tmp/cczxpjuQ.s:481    .text.initramfs_kill_sb:00000000 initramfs_kill_sb
     /tmp/cczxpjuQ.s:503    .text.__spin_lock:00000000 $t
     /tmp/cczxpjuQ.s:508    .text.__spin_lock:00000000 __spin_lock
     /tmp/cczxpjuQ.s:558    .text.spin_lock:00000000 $t
     /tmp/cczxpjuQ.s:563    .text.spin_lock:00000000 spin_lock
     /tmp/cczxpjuQ.s:623    .text.initramfs_iterate:00000000 $t
     /tmp/cczxpjuQ.s:628    .text.initramfs_iterate:00000000 initramfs_iterate
     /tmp/cczxpjuQ.s:814    .text.initramfs_create_empty_inode:00000000 $t
     /tmp/cczxpjuQ.s:819    .text.initramfs_create_empty_inode:00000000 initramfs_create_empty_inode
     /tmp/cczxpjuQ.s:1062   .text.initramfs_create_empty_inode:00000070 $d
     /tmp/cczxpjuQ.s:1067   .rodata.initramfs_read.str1.4:00000000 $d
     /tmp/cczxpjuQ.s:1071   .text.initramfs_read:00000000 $t
     /tmp/cczxpjuQ.s:1076   .text.initramfs_read:00000000 initramfs_read
     /tmp/cczxpjuQ.s:1197   .text.initramfs_read:00000068 $d
     /tmp/cczxpjuQ.s:1202   .text.initramfs_get_inode:00000000 $t
     /tmp/cczxpjuQ.s:1207   .text.initramfs_get_inode:00000000 initramfs_get_inode
     /tmp/cczxpjuQ.s:1268   .text.initramfs_get_inode:00000028 $d
     /tmp/cczxpjuQ.s:4575   .data.initramfs_inode_operation:00000000 initramfs_inode_operation
     /tmp/cczxpjuQ.s:1273   .text.initramfs_getattr:00000000 $t
     /tmp/cczxpjuQ.s:1278   .text.initramfs_getattr:00000000 initramfs_getattr
     /tmp/cczxpjuQ.s:1421   .text.initramfs_getattr:0000007c $d
     /tmp/cczxpjuQ.s:1426   .text.initramfs_lookup:00000000 $t
     /tmp/cczxpjuQ.s:1431   .text.initramfs_lookup:00000000 initramfs_lookup
     /tmp/cczxpjuQ.s:1545   .text.initramfs_vfs_lookup:00000000 $t
     /tmp/cczxpjuQ.s:1550   .text.initramfs_vfs_lookup:00000000 initramfs_vfs_lookup
     /tmp/cczxpjuQ.s:1633   .text.initramfs_get_vfs_superblock:00000000 $t
     /tmp/cczxpjuQ.s:1638   .text.initramfs_get_vfs_superblock:00000000 initramfs_get_vfs_superblock
ARM GAS  /tmp/cczxpjuQ.s 			page 213


     /tmp/cczxpjuQ.s:1686   .text.initramfs_get_vfs_superblock:0000001c $d
     /tmp/cczxpjuQ.s:4592   .data.initramfs_dentry_operation:00000000 initramfs_dentry_operation
     /tmp/cczxpjuQ.s:4600   .data.initramfs_super_operation:00000000 initramfs_super_operation
     /tmp/cczxpjuQ.s:1692   .text.initramfs_superblock_create:00000000 $t
     /tmp/cczxpjuQ.s:1697   .text.initramfs_superblock_create:00000000 initramfs_superblock_create
     /tmp/cczxpjuQ.s:1901   .text.initramfs_superblock_create:00000068 $d
     /tmp/cczxpjuQ.s:4617   .data.initramfs_file_fops:00000000 initramfs_file_fops
     /tmp/cczxpjuQ.s:1907   .text.__alloc_pages:00000000 $t
     /tmp/cczxpjuQ.s:1912   .text.__alloc_pages:00000000 __alloc_pages
     /tmp/cczxpjuQ.s:2008   .text.initramfs_write:00000000 $t
     /tmp/cczxpjuQ.s:2013   .text.initramfs_write:00000000 initramfs_write
     /tmp/cczxpjuQ.s:2217   .text.__free_pages:00000000 $t
     /tmp/cczxpjuQ.s:2222   .text.__free_pages:00000000 __free_pages
     /tmp/cczxpjuQ.s:2304   .text.__put_page:00000000 $t
     /tmp/cczxpjuQ.s:2309   .text.__put_page:00000000 __put_page
     /tmp/cczxpjuQ.s:2434   .text.initramfs_inode_put:00000000 $t
     /tmp/cczxpjuQ.s:2439   .text.initramfs_inode_put:00000000 initramfs_inode_put
     /tmp/cczxpjuQ.s:2492   .text.dentry_put:00000000 $t
     /tmp/cczxpjuQ.s:2497   .text.dentry_put:00000000 dentry_put
     /tmp/cczxpjuQ.s:2714   .text.initramfs_release_dentry:00000000 $t
     /tmp/cczxpjuQ.s:2719   .text.initramfs_release_dentry:00000000 initramfs_release_dentry
     /tmp/cczxpjuQ.s:2751   .text.initramfs_rmdir:00000000 $t
     /tmp/cczxpjuQ.s:2756   .text.initramfs_rmdir:00000000 initramfs_rmdir
     /tmp/cczxpjuQ.s:2792   .text.initramfs_delete_dentry:00000000 $t
     /tmp/cczxpjuQ.s:2797   .text.initramfs_delete_dentry:00000000 initramfs_delete_dentry
     /tmp/cczxpjuQ.s:2945   .text.initramfs_unlink:00000000 $t
     /tmp/cczxpjuQ.s:2950   .text.initramfs_unlink:00000000 initramfs_unlink
     /tmp/cczxpjuQ.s:2986   .text.initramfs_create_dentry:00000000 $t
     /tmp/cczxpjuQ.s:2991   .text.initramfs_create_dentry:00000000 initramfs_create_dentry
     /tmp/cczxpjuQ.s:3259   .text.initramfs_create_dentry:000000a8 $d
     /tmp/cczxpjuQ.s:3264   .text.initramfs_create_inode:00000000 $t
     /tmp/cczxpjuQ.s:3269   .text.initramfs_create_inode:00000000 initramfs_create_inode
     /tmp/cczxpjuQ.s:3404   .text.initramfs_create_dir:00000000 $t
     /tmp/cczxpjuQ.s:3409   .text.initramfs_create_dir:00000000 initramfs_create_dir
     /tmp/cczxpjuQ.s:3453   .text.initramfs_create_dir:00000020 $d
     /tmp/cczxpjuQ.s:3458   .text.initramfs_mkdir:00000000 $t
     /tmp/cczxpjuQ.s:3463   .text.initramfs_mkdir:00000000 initramfs_mkdir
     /tmp/cczxpjuQ.s:3586   .text.initramfs_create_file:00000000 $t
     /tmp/cczxpjuQ.s:3591   .text.initramfs_create_file:00000000 initramfs_create_file
     /tmp/cczxpjuQ.s:3624   .text.initramfs_create:00000000 $t
     /tmp/cczxpjuQ.s:3629   .text.initramfs_create:00000000 initramfs_create
     /tmp/cczxpjuQ.s:3762   .text.initramfs_create:00000078 $d
     /tmp/cczxpjuQ.s:3767   .text.initramfs_link:00000000 $t
     /tmp/cczxpjuQ.s:3772   .text.initramfs_link:00000000 initramfs_link
     /tmp/cczxpjuQ.s:3844   .text.initramfs_destroy_inode:00000000 $t
     /tmp/cczxpjuQ.s:3849   .text.initramfs_destroy_inode:00000000 initramfs_destroy_inode
     /tmp/cczxpjuQ.s:3953   .text.initramfs_alloc_inode:00000000 $t
     /tmp/cczxpjuQ.s:3958   .text.initramfs_alloc_inode:00000000 initramfs_alloc_inode
     /tmp/cczxpjuQ.s:4043   .text.initramfs_alloc_inode:00000038 $d
     /tmp/cczxpjuQ.s:4049   .text.initramfs_superblock_destory:00000000 $t
     /tmp/cczxpjuQ.s:4054   .text.initramfs_superblock_destory:00000000 initramfs_superblock_destory
     /tmp/cczxpjuQ.s:4124   .rodata.initramfs_mount.str1.4:00000000 $d
     /tmp/cczxpjuQ.s:4128   .text.initramfs_mount:00000000 $t
     /tmp/cczxpjuQ.s:4133   .text.initramfs_mount:00000000 initramfs_mount
     /tmp/cczxpjuQ.s:4368   .text.initramfs_mount:000000a4 $d
     /tmp/cczxpjuQ.s:4374   .rodata.initram_fs_mount_file.str1.4:00000000 $d
     /tmp/cczxpjuQ.s:4378   .text.initram_fs_mount_file:00000000 $t
ARM GAS  /tmp/cczxpjuQ.s 			page 214


     /tmp/cczxpjuQ.s:4384   .text.initram_fs_mount_file:00000000 initram_fs_mount_file
     /tmp/cczxpjuQ.s:4542   .text.initram_fs_mount_file:00000060 $d
     /tmp/cczxpjuQ.s:4549   .fsinitcall:00000000 $d
     /tmp/cczxpjuQ.s:4552   .fsinitcall:00000000 _initcall_initramfs_ops_init
     /tmp/cczxpjuQ.s:4555   .rodata.str1.4:00000000 $d
     /tmp/cczxpjuQ.s:4559   .data.fs_type:00000000 $d
     /tmp/cczxpjuQ.s:4572   .data.initramfs_inode_operation:00000000 $d
     /tmp/cczxpjuQ.s:4589   .data.initramfs_dentry_operation:00000000 $d
     /tmp/cczxpjuQ.s:4597   .data.initramfs_super_operation:00000000 $d
     /tmp/cczxpjuQ.s:4614   .data.initramfs_file_fops:00000000 $d

UNDEFINED SYMBOLS
__smalloc__
register_filesystem
put_super
stop_all_scheduler
start_all_scheduler
get_current_task
__delay
strlen
memcpy
printk
new_inode
ktime_get
HZ
strcmp
d_add
alloc_super
__sfree__
simple_unlink
strcpy
d_getname
__d_alloc
inode_put
