ARM GAS  /tmp/ccNyNvIh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"sched.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c"
  20              		.section	.text.save_context,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	save_context:
  27              	.LVL0:
  28              	.LFB223:
  29              		.file 2 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h"
   1:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** #ifndef __CONTEXT_H__
   2:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** #define __CONTEXT_H__                
   3:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** 
   4:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** 
   5:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** extern void __init_Taskcontext(struct task_struct* task_data,uint32_t pic_offset);
   6:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** static void init_task_context(struct task_struct* task_data,uint32_t pic_offset){
   7:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h ****     __init_Taskcontext(task_data,pic_offset);
   8:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** } 
   9:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** 
  10:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** extern int __get_task_using_cpu_core(void);
  11:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** 
  12:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** static int get_task_using_cpu_core(void){
  13:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h ****      return  __get_task_using_cpu_core();
  14:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** }
  15:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** 
  16:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** static void save_context(struct task_struct *this_task,uint32_t data){
  30              		.loc 2 16 70 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  17:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h ****         this_task->context.psp = data;
  35              		.loc 2 17 9 view .LVU1
  36              		.loc 2 17 32 is_stmt 0 view .LVU2
  37 0000 C164     		str	r1, [r0, #76]
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** }
  38              		.loc 2 18 1 view .LVU3
  39 0002 7047     		bx	lr
  40              		.cfi_endproc
ARM GAS  /tmp/ccNyNvIh.s 			page 2


  41              	.LFE223:
  43              		.section	.text.load_task,"ax",%progbits
  44              		.align	1
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	load_task:
  50              	.LVL1:
  51              	.LFB224:
  19:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** static uint32_t load_task(struct task_struct *this_task) {
  52              		.loc 2 19 58 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  20:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h ****     return this_task->context.psp;
  57              		.loc 2 20 5 view .LVU5
  21:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** };
  58              		.loc 2 21 1 is_stmt 0 view .LVU6
  59 0000 C06C     		ldr	r0, [r0, #76]
  60              	.LVL2:
  61              		.loc 2 21 1 view .LVU7
  62 0002 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE224:
  66              		.section	.rodata.default_task.str1.4,"aMS",%progbits,1
  67              		.align	2
  68              	.LC0:
  69 0000 73797374 		.ascii	"system free memory size:%d kb\012\015\000"
  69      656D2066 
  69      72656520 
  69      6D656D6F 
  69      72792073 
  70              		.section	.text.default_task,"ax",%progbits
  71              		.align	1
  72              		.global	default_task
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	default_task:
  78              	.LVL3:
  79              	.LFB254:
   1:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #include <linux/kernel.h>
   2:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #include <linux/sys_call.h>
   3:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #include <linux/sched.h>
   4:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #include <linux/error.h>
   5:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #include <generated/autoconf.h>
   6:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
   7:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** static struct scheduler k_scheduler[CONFIG_CPU_NUM];
   8:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
   9:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** struct scheduler *get_scheduler_by_cpu_core_id(uint32_t core_id){
  10:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(core_id >= CONFIG_CPU_NUM) return NULL;
  11:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return &k_scheduler[core_id];
  12:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
  13:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
  14:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** static void scheduler_init( struct scheduler* uninit_scheduler,char* pool_name)
  15:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** {
ARM GAS  /tmp/ccNyNvIh.s 			page 3


  16:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct task_pool_types * task_pool = find_task_pool(pool_name);
  17:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(task_pool == NULL) {
  18:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("can not find this task_pool:%s\n",pool_name);while (1){}
  19:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
  20:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uninit_scheduler->s_task_pool = task_pool->alloc_task_pool(uninit_scheduler);
  21:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(IS_ERR(uninit_scheduler->s_task_pool)) {
  22:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("can not init create scheduler\n");while (1){}
  23:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
  24:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uninit_scheduler->magic  = scheduler_scheduler;
  25:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uninit_scheduler->s_flag = SCHEDULER_RUN;
  26:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uninit_scheduler->current_task = NULL;
  27:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uninit_scheduler->t_pop  = task_pool->t_op;
  28:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
  29:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
  30:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** extern size_t get_global_heap_size(void);
  31:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** void default_task(void* argv){
  80              		.loc 1 31 30 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 8
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		.loc 1 31 30 is_stmt 0 view .LVU9
  85 0000 00B5     		push	{lr}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 14, -4
  89 0002 83B0     		sub	sp, sp, #12
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 16
  32:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     volatile int j  = 0;
  92              		.loc 1 32 5 is_stmt 1 view .LVU10
  93              		.loc 1 32 18 is_stmt 0 view .LVU11
  94 0004 0023     		movs	r3, #0
  95 0006 0193     		str	r3, [sp, #4]
  96 0008 0DE0     		b	.L6
  97              	.LVL4:
  98              	.L5:
  99              	.LBB4:
  33:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     while (1){
  34:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         for(int i =0;i<1000000000;i++){j++;}
 100              		.loc 1 34 40 is_stmt 1 discriminator 3 view .LVU12
 101              		.loc 1 34 41 is_stmt 0 discriminator 3 view .LVU13
 102 000a 019B     		ldr	r3, [sp, #4]
 103 000c 0133     		adds	r3, r3, #1
 104 000e 0193     		str	r3, [sp, #4]
 105              		.loc 1 34 36 is_stmt 1 discriminator 3 view .LVU14
 106 0010 0132     		adds	r2, r2, #1
 107              	.LVL5:
 108              	.L4:
 109              		.loc 1 34 23 discriminator 1 view .LVU15
 110 0012 064B     		ldr	r3, .L8
 111 0014 9A42     		cmp	r2, r3
 112 0016 F8DD     		ble	.L5
 113              	.LBE4:
  35:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         printk(KERN_DEBUG "system free memory size:%d kb\n\r",get_global_heap_size()/1024);  
 114              		.loc 1 35 9 view .LVU16
 115              		.loc 1 35 63 is_stmt 0 view .LVU17
 116 0018 FFF7FEFF 		bl	get_global_heap_size
ARM GAS  /tmp/ccNyNvIh.s 			page 4


 117              	.LVL6:
 118              		.loc 1 35 9 discriminator 1 view .LVU18
 119 001c 820A     		lsrs	r2, r0, #10
 120 001e 0449     		ldr	r1, .L8+4
 121 0020 0720     		movs	r0, #7
 122 0022 FFF7FEFF 		bl	printk
 123              	.LVL7:
  33:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     while (1){
 124              		.loc 1 33 11 is_stmt 1 view .LVU19
 125              	.L6:
  33:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     while (1){
 126              		.loc 1 33 5 view .LVU20
  34:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         printk(KERN_DEBUG "system free memory size:%d kb\n\r",get_global_heap_size()/1024);  
 127              		.loc 1 34 9 view .LVU21
 128              	.LBB5:
  34:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         printk(KERN_DEBUG "system free memory size:%d kb\n\r",get_global_heap_size()/1024);  
 129              		.loc 1 34 13 view .LVU22
  34:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         printk(KERN_DEBUG "system free memory size:%d kb\n\r",get_global_heap_size()/1024);  
 130              		.loc 1 34 17 is_stmt 0 view .LVU23
 131 0026 0022     		movs	r2, #0
  34:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         printk(KERN_DEBUG "system free memory size:%d kb\n\r",get_global_heap_size()/1024);  
 132              		.loc 1 34 9 view .LVU24
 133 0028 F3E7     		b	.L4
 134              	.L9:
 135 002a 00BF     		.align	2
 136              	.L8:
 137 002c FFC99A3B 		.word	999999999
 138 0030 00000000 		.word	.LC0
 139              	.LBE5:
 140              		.cfi_endproc
 141              	.LFE254:
 143              		.section	.text.get_task_using_cpu_core,"ax",%progbits
 144              		.align	1
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 149              	get_task_using_cpu_core:
 150              	.LFB222:
  12:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h ****      return  __get_task_using_cpu_core();
 151              		.loc 2 12 41 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155 0000 08B5     		push	{r3, lr}
 156              	.LCFI2:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 3, -8
 159              		.cfi_offset 14, -4
  13:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** }
 160              		.loc 2 13 6 view .LVU26
  13:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** }
 161              		.loc 2 13 14 is_stmt 0 view .LVU27
 162 0002 FFF7FEFF 		bl	__get_task_using_cpu_core
 163              	.LVL8:
  14:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/context.h **** 
 164              		.loc 2 14 1 view .LVU28
 165 0006 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccNyNvIh.s 			page 5


 166              		.cfi_endproc
 167              	.LFE222:
 169              		.section	.rodata.scheduler_init.str1.4,"aMS",%progbits,1
 170              		.align	2
 171              	.LC1:
 172 0000 63616E20 		.ascii	"can not find this task_pool:%s\012\000"
 172      6E6F7420 
 172      66696E64 
 172      20746869 
 172      73207461 
 173              		.align	2
 174              	.LC2:
 175 0020 63616E20 		.ascii	"can not init create scheduler\012\000"
 175      6E6F7420 
 175      696E6974 
 175      20637265 
 175      61746520 
 176              		.section	.text.scheduler_init,"ax",%progbits
 177              		.align	1
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 182              	scheduler_init:
 183              	.LVL9:
 184              	.LFB253:
  15:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct task_pool_types * task_pool = find_task_pool(pool_name);
 185              		.loc 1 15 1 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
  15:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct task_pool_types * task_pool = find_task_pool(pool_name);
 189              		.loc 1 15 1 is_stmt 0 view .LVU30
 190 0000 70B5     		push	{r4, r5, r6, lr}
 191              	.LCFI3:
 192              		.cfi_def_cfa_offset 16
 193              		.cfi_offset 4, -16
 194              		.cfi_offset 5, -12
 195              		.cfi_offset 6, -8
 196              		.cfi_offset 14, -4
 197 0002 0446     		mov	r4, r0
 198 0004 0D46     		mov	r5, r1
  16:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(task_pool == NULL) {
 199              		.loc 1 16 5 is_stmt 1 view .LVU31
  16:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(task_pool == NULL) {
 200              		.loc 1 16 42 is_stmt 0 view .LVU32
 201 0006 0846     		mov	r0, r1
 202              	.LVL10:
  16:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(task_pool == NULL) {
 203              		.loc 1 16 42 view .LVU33
 204 0008 FFF7FEFF 		bl	find_task_pool
 205              	.LVL11:
  17:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("can not find this task_pool:%s\n",pool_name);while (1){}
 206              		.loc 1 17 5 is_stmt 1 view .LVU34
  17:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("can not find this task_pool:%s\n",pool_name);while (1){}
 207              		.loc 1 17 7 is_stmt 0 view .LVU35
 208 000c 80B1     		cbz	r0, .L18
 209 000e 0646     		mov	r6, r0
ARM GAS  /tmp/ccNyNvIh.s 			page 6


  20:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(IS_ERR(uninit_scheduler->s_task_pool)) {
 210              		.loc 1 20 5 is_stmt 1 view .LVU36
  20:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(IS_ERR(uninit_scheduler->s_task_pool)) {
 211              		.loc 1 20 46 is_stmt 0 view .LVU37
 212 0010 0369     		ldr	r3, [r0, #16]
  20:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(IS_ERR(uninit_scheduler->s_task_pool)) {
 213              		.loc 1 20 37 view .LVU38
 214 0012 2046     		mov	r0, r4
 215              	.LVL12:
  20:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(IS_ERR(uninit_scheduler->s_task_pool)) {
 216              		.loc 1 20 37 view .LVU39
 217 0014 9847     		blx	r3
 218              	.LVL13:
  20:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(IS_ERR(uninit_scheduler->s_task_pool)) {
 219              		.loc 1 20 35 discriminator 1 view .LVU40
 220 0016 6060     		str	r0, [r4, #4]
  21:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("can not init create scheduler\n");while (1){}
 221              		.loc 1 21 5 is_stmt 1 view .LVU41
 222              	.LVL14:
 223              	.LBB6:
 224              	.LBI6:
 225              		.file 3 "/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #ifndef _LINUX_ERR_H
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define _LINUX_ERR_H
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #include <linux/compiler_attributes.h>
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #include <linux/compiler.h>
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #include <linux/types.h>
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #include <asm/errno.h>
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /*
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Kernel pointers have redundant information, so we can use a
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * scheme where we can return either an error code or a normal
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * pointer with the same return value.
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  *
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * This should be a per-architecture thing, to allow different
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * error and pointer decisions.
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define MAX_ERRNO	4095
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #ifndef __ASSEMBLY__
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /**
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * IS_ERR_VALUE - Detect an error pointer.
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * @x: The pointer to check.
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  *
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Like IS_ERR(), but does not generate a compiler warning if result is unused.
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #ifndef unlikely
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #  define unlikely(x) __builtin_expect(!!(x), 0)
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #endif
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #ifndef likely
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #  define likely(x) __builtin_expect(!!(x), 1)
ARM GAS  /tmp/ccNyNvIh.s 			page 7


  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #endif
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define IS_ERR_VALUE(x) unlikely((unsigned long)(void *)(x) >= (unsigned long)-MAX_ERRNO)
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /**
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * ERR_PTR - Create an error pointer.
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * @error: A negative error code.
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  *
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Encodes @error into a pointer value. Users should consider the result
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * opaque and not assume anything about how the error is encoded.
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  *
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Return: A pointer with @error encoded within its value.
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** static inline void * __must_check ERR_PTR(long error)
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** {
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 	return (void *) error;
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** }
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /* Return the pointer in the percpu address space. */
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define ERR_PTR_PCPU(error) ((void __percpu *)(unsigned long)ERR_PTR(error))
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /**
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * PTR_ERR - Extract the error code from an error pointer.
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * @ptr: An error pointer.
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Return: The error code within @ptr.
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** static inline long __must_check PTR_ERR(__force const void *ptr)
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** {
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 	return (long) ptr;
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** }
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /* Read an error pointer from the percpu address space. */
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define PTR_ERR_PCPU(ptr) (PTR_ERR((const void *)(__force const unsigned long)(ptr)))
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /**
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * IS_ERR - Detect an error pointer.
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * @ptr: The pointer to check.
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Return: true if @ptr is an error pointer, false otherwise.
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** static inline bool __must_check IS_ERR(__force const void *ptr)
 226              		.loc 3 75 33 view .LVU42
 227              	.LBB7:
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** {
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 	return IS_ERR_VALUE((unsigned long)ptr);
 228              		.loc 3 77 2 view .LVU43
 229              		.loc 3 77 2 is_stmt 0 view .LVU44
 230              	.LBE7:
 231              	.LBE6:
  21:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("can not init create scheduler\n");while (1){}
 232              		.loc 1 21 7 discriminator 1 view .LVU45
 233 0018 10F5805F 		cmn	r0, #4096
 234 001c 0ED8     		bhi	.L19
  24:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uninit_scheduler->s_flag = SCHEDULER_RUN;
 235              		.loc 1 24 5 is_stmt 1 view .LVU46
  24:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uninit_scheduler->s_flag = SCHEDULER_RUN;
 236              		.loc 1 24 30 is_stmt 0 view .LVU47
 237 001e 0A4B     		ldr	r3, .L20
ARM GAS  /tmp/ccNyNvIh.s 			page 8


 238 0020 2360     		str	r3, [r4]
  25:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uninit_scheduler->current_task = NULL;
 239              		.loc 1 25 5 is_stmt 1 view .LVU48
  25:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uninit_scheduler->current_task = NULL;
 240              		.loc 1 25 30 is_stmt 0 view .LVU49
 241 0022 0123     		movs	r3, #1
 242 0024 2374     		strb	r3, [r4, #16]
  26:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uninit_scheduler->t_pop  = task_pool->t_op;
 243              		.loc 1 26 5 is_stmt 1 view .LVU50
  26:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uninit_scheduler->t_pop  = task_pool->t_op;
 244              		.loc 1 26 36 is_stmt 0 view .LVU51
 245 0026 0023     		movs	r3, #0
 246 0028 6361     		str	r3, [r4, #20]
  27:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 247              		.loc 1 27 5 is_stmt 1 view .LVU52
  27:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 248              		.loc 1 27 41 is_stmt 0 view .LVU53
 249 002a F368     		ldr	r3, [r6, #12]
  27:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 250              		.loc 1 27 30 view .LVU54
 251 002c E360     		str	r3, [r4, #12]
  28:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 252              		.loc 1 28 1 view .LVU55
 253 002e 70BD     		pop	{r4, r5, r6, pc}
 254              	.LVL15:
 255              	.L18:
  18:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 256              		.loc 1 18 9 is_stmt 1 view .LVU56
 257 0030 2A46     		mov	r2, r5
 258 0032 0649     		ldr	r1, .L20+4
 259 0034 0320     		movs	r0, #3
 260              	.LVL16:
  18:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 261              		.loc 1 18 9 is_stmt 0 view .LVU57
 262 0036 FFF7FEFF 		bl	printk
 263              	.LVL17:
 264              	.L14:
  18:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 265              		.loc 1 18 62 is_stmt 1 discriminator 1 view .LVU58
  18:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 266              		.loc 1 18 72 discriminator 1 view .LVU59
  18:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 267              		.loc 1 18 68 discriminator 1 view .LVU60
 268 003a FEE7     		b	.L14
 269              	.LVL18:
 270              	.L19:
  22:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 271              		.loc 1 22 9 view .LVU61
 272 003c 0449     		ldr	r1, .L20+8
 273 003e 0320     		movs	r0, #3
 274 0040 FFF7FEFF 		bl	printk
 275              	.LVL19:
 276              	.L16:
  22:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 277              		.loc 1 22 51 discriminator 1 view .LVU62
  22:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 278              		.loc 1 22 61 discriminator 1 view .LVU63
ARM GAS  /tmp/ccNyNvIh.s 			page 9


  22:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 279              		.loc 1 22 57 discriminator 1 view .LVU64
 280 0044 FEE7     		b	.L16
 281              	.L21:
 282 0046 00BF     		.align	2
 283              	.L20:
 284 0048 56341200 		.word	1193046
 285 004c 00000000 		.word	.LC1
 286 0050 20000000 		.word	.LC2
 287              		.cfi_endproc
 288              	.LFE253:
 290              		.section	.text.sched_start,"ax",%progbits
 291              		.align	1
 292              		.global	sched_start
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 297              	sched_start:
 298              	.LFB260:
  36:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
  37:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
  38:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
  39:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
  40:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #ifndef  CONFIG_SCHED_CPU0
  41:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #error "cpu core number is not zero"    
  42:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #endif
  43:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #ifndef CONFIG_SCHED_CPU1
  44:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #ifdef  CONFIG_SCHED_CPU0
  45:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** static char* sched_config[] = {
  46:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     CONFIG_SCHED_CPU0
  47:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** };
  48:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #endif 
  49:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #endif 
  50:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #ifndef CONFIG_SCHED_CPU2
  51:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #ifdef  CONFIG_SCHED_CPU1
  52:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** static char* sched_config[] = {
  53:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     CONFIG_SCHED_CPU0,
  54:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     CONFIG_SCHED_CPU1,
  55:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** };
  56:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #endif
  57:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #endif
  58:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #ifndef CONFIG_SCHED_CPU3
  59:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #ifdef CONFIG_SCHED_CPU2
  60:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** static char* sched_config[] = {
  61:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     CONFIG_SCHED_CPU0,
  62:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     CONFIG_SCHED_CPU1,
  63:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     CONFIG_SCHED_CPU2,
  64:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** };
  65:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #endif
  66:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #endif
  67:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #ifdef CONFIG_SCHED_CPU3
  68:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** static char* sched_config[] = {
  69:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     CONFIG_SCHED_CPU0,
  70:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     CONFIG_SCHED_CPU1,
  71:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     CONFIG_SCHED_CPU2,
  72:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     CONFIG_SCHED_CPU3,
  73:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** };
ARM GAS  /tmp/ccNyNvIh.s 			page 10


  74:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** #endif
  75:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** static void init_all_scheduler(void){
  76:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     for(int i =0 ;i < CONFIG_CPU_NUM ;i++){
  77:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
  78:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         task_run(default_task,512,10,1,"system_default_task",i,0);
  79:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
  80:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
  81:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
  82:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** uint32_t Scheduler_Task(uint32_t context)
  83:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** {
  84:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct scheduler * curren_scheduler = get_current_scheduler();
  85:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(curren_scheduler->s_flag == SCHEDULER_BLOCKED )
  86:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return context;
  87:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
  88:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(curren_scheduler->current_task != NULL)
  89:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     save_context(curren_scheduler->current_task, context);
  90:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct task_struct* t1 = curren_scheduler->current_task;
  91:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     curren_scheduler->current_task = curren_scheduler->t_pop->get_next_task(curren_scheduler);
  92:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(curren_scheduler->current_task!= NULL)
  93:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return load_task(curren_scheduler->current_task);        
  94:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     else
  95:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return context;
  96:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
  97:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
  98:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
  99:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 100:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 101:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** void __user_error_process(void){
 102:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct  task_struct* task = get_current_task();
 103:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_err("__user_error_process: Task:%s get ERROR\n",task->task_name);
 104:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     task->state = TASK_BROKEN;
 105:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     __sched();
 106:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 107:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 108:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 109:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** extern int check_haper_completeness(void);
 110:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** extern void __destory_task(struct task_struct *t);
 111:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** extern size_t get_global_heap_size(void);
 112:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 113:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** void __kernel_error_process(void)
 114:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** {
 115:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uint32_t core_id = get_task_using_cpu_core();
 116:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_err("cpu core: (%d) get ERROR\n",core_id);
 117:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_err("checking memory completeness\n");
 118:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uint32_t err = check_haper_completeness();
 119:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(err > 0){
 120:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("memory ERROR:(%d)\n",err);
 121:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 122:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     else {
 123:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         printk(KERN_DEBUG "system free memory size:%d kb\n\r",get_global_heap_size()/1024);  
 124:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 125:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct scheduler* current_sched = &k_scheduler[core_id];
 126:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(current_sched->magic != scheduler_scheduler){
 127:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Can not get core: (%d) scheduler handler may be task is broken\n",core_id);
 128:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         goto block;
 129:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 130:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_err("get core: (%d) scheduler handler\n",core_id);
ARM GAS  /tmp/ccNyNvIh.s 			page 11


 131:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct  task_struct* task = current_sched->current_task;
 132:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(task == NULL){
 133:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("can not get current task\n");
 134:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         goto block;
 135:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 136:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(task->magic != task_struct_magic){
 137:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Task controller is broken \n");
 138:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         goto block;
 139:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 140:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_err("__kernel_error_process: Task: %s get ERROR\n",task->task_name);
 141:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(current_sched->t_pop->check_task_completeness(current_sched) < 0){
 142:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Task controller has been broken \n");
 143:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         goto block;        
 144:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 145:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     
 146:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     task->state = TASK_BROKEN;
 147:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     current_sched->current_task = NULL;
 148:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     current_sched->t_pop->remove_task(task,current_sched);
 149:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     __destory_task(task);
 150:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     i_sched();
 151:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return;
 152:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 153:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     block:
 154:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_err("System get Unfixable errors\n");
 155:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     while (1){}
 156:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 157:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 158:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 159:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** void scheduler_start();
 160:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 161:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** void sched_init(){
 162:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_info("sched: init all scheduler\n");
 163:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     init_all_scheduler();    
 164:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 165:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** core_initcall_sync(sched_init);
 166:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 167:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** void sched_start(){
 299              		.loc 1 167 19 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 08B5     		push	{r3, lr}
 304              	.LCFI4:
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 3, -8
 307              		.cfi_offset 14, -4
 168:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     change_to_task_mode();
 308              		.loc 1 168 5 view .LVU66
 309 0002 FFF7FEFF 		bl	change_to_task_mode
 310              	.LVL20:
 169:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     scheduler_start();
 311              		.loc 1 169 5 view .LVU67
 312 0006 FFF7FEFF 		bl	scheduler_start
 313              	.LVL21:
 170:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     sched();
 314              		.loc 1 170 5 view .LVU68
 315 000a FFF7FEFF 		bl	sched
ARM GAS  /tmp/ccNyNvIh.s 			page 12


 316              	.LVL22:
 171:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 317              		.loc 1 171 1 is_stmt 0 view .LVU69
 318 000e 08BD     		pop	{r3, pc}
 319              		.cfi_endproc
 320              	.LFE260:
 322              		.section	.text.get_scheduler_by_cpu_core_id,"ax",%progbits
 323              		.align	1
 324              		.global	get_scheduler_by_cpu_core_id
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	get_scheduler_by_cpu_core_id:
 330              	.LVL23:
 331              	.LFB252:
   9:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(core_id >= CONFIG_CPU_NUM) return NULL;
 332              		.loc 1 9 65 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
  10:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return &k_scheduler[core_id];
 337              		.loc 1 10 5 view .LVU71
  10:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return &k_scheduler[core_id];
 338              		.loc 1 10 7 is_stmt 0 view .LVU72
 339 0000 28B9     		cbnz	r0, .L26
  11:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 340              		.loc 1 11 5 is_stmt 1 view .LVU73
  11:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 341              		.loc 1 11 12 is_stmt 0 view .LVU74
 342 0002 00EB4003 		add	r3, r0, r0, lsl #1
 343 0006 0348     		ldr	r0, .L27
 344              	.LVL24:
  11:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 345              		.loc 1 11 12 view .LVU75
 346 0008 00EBC300 		add	r0, r0, r3, lsl #3
 347 000c 7047     		bx	lr
 348              	.LVL25:
 349              	.L26:
  10:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return &k_scheduler[core_id];
 350              		.loc 1 10 42 discriminator 1 view .LVU76
 351 000e 0020     		movs	r0, #0
 352              	.LVL26:
  12:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 353              		.loc 1 12 1 view .LVU77
 354 0010 7047     		bx	lr
 355              	.L28:
 356 0012 00BF     		.align	2
 357              	.L27:
 358 0014 00000000 		.word	k_scheduler
 359              		.cfi_endproc
 360              	.LFE252:
 362              		.section	.rodata.init_all_scheduler.str1.4,"aMS",%progbits,1
 363              		.align	2
 364              	.LC3:
 365 0000 50726565 		.ascii	"Preemptive\000"
 365      6D707469 
ARM GAS  /tmp/ccNyNvIh.s 			page 13


 365      766500
 366 000b 00       		.align	2
 367              	.LC4:
 368 000c 73797374 		.ascii	"system_default_task\000"
 368      656D5F64 
 368      65666175 
 368      6C745F74 
 368      61736B00 
 369              		.section	.text.init_all_scheduler,"ax",%progbits
 370              		.align	1
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 375              	init_all_scheduler:
 376              	.LFB255:
  75:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     for(int i =0 ;i < CONFIG_CPU_NUM ;i++){
 377              		.loc 1 75 37 is_stmt 1 view -0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 10B5     		push	{r4, lr}
 382              	.LCFI5:
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 4, -8
 385              		.cfi_offset 14, -4
 386 0002 84B0     		sub	sp, sp, #16
 387              	.LCFI6:
 388              		.cfi_def_cfa_offset 24
  76:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
 389              		.loc 1 76 5 view .LVU79
 390              	.LBB8:
  76:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
 391              		.loc 1 76 9 view .LVU80
 392              	.LVL27:
  76:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
 393              		.loc 1 76 13 is_stmt 0 view .LVU81
 394 0004 0024     		movs	r4, #0
 395              	.LVL28:
 396              	.L30:
  76:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
 397              		.loc 1 76 21 is_stmt 1 discriminator 1 view .LVU82
 398 0006 002C     		cmp	r4, #0
 399 0008 01DD     		ble	.L31
 400              	.LBE8:
  80:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 401              		.loc 1 80 1 is_stmt 0 view .LVU83
 402 000a 04B0     		add	sp, sp, #16
 403              	.LCFI7:
 404              		.cfi_remember_state
 405              		.cfi_def_cfa_offset 8
 406              		@ sp needed
 407 000c 10BD     		pop	{r4, pc}
 408              	.LVL29:
 409              	.L31:
 410              	.LCFI8:
 411              		.cfi_restore_state
 412              	.LBB9:
ARM GAS  /tmp/ccNyNvIh.s 			page 14


  77:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         task_run(default_task,512,10,1,"system_default_task",i,0);
 413              		.loc 1 77 9 is_stmt 1 view .LVU84
 414 000e 2046     		mov	r0, r4
 415 0010 FFF7FEFF 		bl	get_scheduler_by_cpu_core_id
 416              	.LVL30:
  77:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         task_run(default_task,512,10,1,"system_default_task",i,0);
 417              		.loc 1 77 9 is_stmt 0 discriminator 1 view .LVU85
 418 0014 0849     		ldr	r1, .L33
 419 0016 FFF7FEFF 		bl	scheduler_init
 420              	.LVL31:
  78:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 421              		.loc 1 78 9 is_stmt 1 view .LVU86
 422 001a 0023     		movs	r3, #0
 423 001c 0293     		str	r3, [sp, #8]
 424 001e 0194     		str	r4, [sp, #4]
 425 0020 064B     		ldr	r3, .L33+4
 426 0022 0093     		str	r3, [sp]
 427 0024 0123     		movs	r3, #1
 428 0026 0A22     		movs	r2, #10
 429 0028 4FF40071 		mov	r1, #512
 430 002c 0448     		ldr	r0, .L33+8
 431 002e FFF7FEFF 		bl	task_run
 432              	.LVL32:
  76:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
 433              		.loc 1 76 40 discriminator 3 view .LVU87
 434 0032 0134     		adds	r4, r4, #1
 435              	.LVL33:
  76:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
 436              		.loc 1 76 40 is_stmt 0 discriminator 3 view .LVU88
 437 0034 E7E7     		b	.L30
 438              	.L34:
 439 0036 00BF     		.align	2
 440              	.L33:
 441 0038 00000000 		.word	.LC3
 442 003c 0C000000 		.word	.LC4
 443 0040 00000000 		.word	default_task
 444              	.LBE9:
 445              		.cfi_endproc
 446              	.LFE255:
 448              		.section	.rodata.sched_init.str1.4,"aMS",%progbits,1
 449              		.align	2
 450              	.LC5:
 451 0000 73636865 		.ascii	"sched: init all scheduler\012\000"
 451      643A2069 
 451      6E697420 
 451      616C6C20 
 451      73636865 
 452              		.section	.text.sched_init,"ax",%progbits
 453              		.align	1
 454              		.global	sched_init
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 459              	sched_init:
 460              	.LFB259:
 161:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_info("sched: init all scheduler\n");
 461              		.loc 1 161 18 is_stmt 1 view -0
ARM GAS  /tmp/ccNyNvIh.s 			page 15


 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465 0000 08B5     		push	{r3, lr}
 466              	.LCFI9:
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 3, -8
 469              		.cfi_offset 14, -4
 162:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     init_all_scheduler();    
 470              		.loc 1 162 5 view .LVU90
 471 0002 0349     		ldr	r1, .L37
 472 0004 0620     		movs	r0, #6
 473 0006 FFF7FEFF 		bl	printk
 474              	.LVL34:
 163:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 475              		.loc 1 163 5 view .LVU91
 476 000a FFF7FEFF 		bl	init_all_scheduler
 477              	.LVL35:
 164:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** core_initcall_sync(sched_init);
 478              		.loc 1 164 1 is_stmt 0 view .LVU92
 479 000e 08BD     		pop	{r3, pc}
 480              	.L38:
 481              		.align	2
 482              	.L37:
 483 0010 00000000 		.word	.LC5
 484              		.cfi_endproc
 485              	.LFE259:
 487              		.section	.text.Scheduler_Task,"ax",%progbits
 488              		.align	1
 489              		.global	Scheduler_Task
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 494              	Scheduler_Task:
 495              	.LVL36:
 496              	.LFB256:
  83:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct scheduler * curren_scheduler = get_current_scheduler();
 497              		.loc 1 83 1 is_stmt 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
  83:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct scheduler * curren_scheduler = get_current_scheduler();
 501              		.loc 1 83 1 is_stmt 0 view .LVU94
 502 0000 38B5     		push	{r3, r4, r5, lr}
 503              	.LCFI10:
 504              		.cfi_def_cfa_offset 16
 505              		.cfi_offset 3, -16
 506              		.cfi_offset 4, -12
 507              		.cfi_offset 5, -8
 508              		.cfi_offset 14, -4
 509 0002 0546     		mov	r5, r0
  84:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(curren_scheduler->s_flag == SCHEDULER_BLOCKED )
 510              		.loc 1 84 5 is_stmt 1 view .LVU95
  84:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(curren_scheduler->s_flag == SCHEDULER_BLOCKED )
 511              		.loc 1 84 43 is_stmt 0 view .LVU96
 512 0004 FFF7FEFF 		bl	get_current_scheduler
 513              	.LVL37:
ARM GAS  /tmp/ccNyNvIh.s 			page 16


  85:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return context;
 514              		.loc 1 85 5 is_stmt 1 view .LVU97
  85:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return context;
 515              		.loc 1 85 24 is_stmt 0 view .LVU98
 516 0008 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
  85:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return context;
 517              		.loc 1 85 7 view .LVU99
 518 000a 73B1     		cbz	r3, .L40
 519 000c 0446     		mov	r4, r0
  88:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     save_context(curren_scheduler->current_task, context);
 520              		.loc 1 88 5 is_stmt 1 view .LVU100
  88:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     save_context(curren_scheduler->current_task, context);
 521              		.loc 1 88 24 is_stmt 0 view .LVU101
 522 000e 4069     		ldr	r0, [r0, #20]
 523              	.LVL38:
  88:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     save_context(curren_scheduler->current_task, context);
 524              		.loc 1 88 7 view .LVU102
 525 0010 10B1     		cbz	r0, .L41
  89:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct task_struct* t1 = curren_scheduler->current_task;
 526              		.loc 1 89 5 is_stmt 1 view .LVU103
 527 0012 2946     		mov	r1, r5
 528 0014 FFF7FEFF 		bl	save_context
 529              	.LVL39:
 530              	.L41:
  90:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     curren_scheduler->current_task = curren_scheduler->t_pop->get_next_task(curren_scheduler);
 531              		.loc 1 90 5 view .LVU104
  91:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(curren_scheduler->current_task!= NULL)
 532              		.loc 1 91 5 view .LVU105
  91:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(curren_scheduler->current_task!= NULL)
 533              		.loc 1 91 54 is_stmt 0 view .LVU106
 534 0018 E368     		ldr	r3, [r4, #12]
  91:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(curren_scheduler->current_task!= NULL)
 535              		.loc 1 91 61 view .LVU107
 536 001a 1B68     		ldr	r3, [r3]
  91:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(curren_scheduler->current_task!= NULL)
 537              		.loc 1 91 38 view .LVU108
 538 001c 2046     		mov	r0, r4
 539 001e 9847     		blx	r3
 540              	.LVL40:
  91:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(curren_scheduler->current_task!= NULL)
 541              		.loc 1 91 36 discriminator 1 view .LVU109
 542 0020 6061     		str	r0, [r4, #20]
  92:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return load_task(curren_scheduler->current_task);        
 543              		.loc 1 92 5 is_stmt 1 view .LVU110
  92:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return load_task(curren_scheduler->current_task);        
 544              		.loc 1 92 7 is_stmt 0 view .LVU111
 545 0022 10B1     		cbz	r0, .L40
  93:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     else
 546              		.loc 1 93 5 is_stmt 1 view .LVU112
  93:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     else
 547              		.loc 1 93 12 is_stmt 0 view .LVU113
 548 0024 FFF7FEFF 		bl	load_task
 549              	.LVL41:
 550 0028 0546     		mov	r5, r0
 551              	.LVL42:
 552              	.L40:
  96:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
ARM GAS  /tmp/ccNyNvIh.s 			page 17


 553              		.loc 1 96 1 view .LVU114
 554 002a 2846     		mov	r0, r5
 555 002c 38BD     		pop	{r3, r4, r5, pc}
 556              		.cfi_endproc
 557              	.LFE256:
 559              		.section	.rodata.__user_error_process.str1.4,"aMS",%progbits,1
 560              		.align	2
 561              	.LC6:
 562 0000 5F5F7573 		.ascii	"__user_error_process: Task:%s get ERROR\012\000"
 562      65725F65 
 562      72726F72 
 562      5F70726F 
 562      63657373 
 563              		.section	.text.__user_error_process,"ax",%progbits
 564              		.align	1
 565              		.global	__user_error_process
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 570              	__user_error_process:
 571              	.LFB257:
 101:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct  task_struct* task = get_current_task();
 572              		.loc 1 101 32 is_stmt 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576 0000 10B5     		push	{r4, lr}
 577              	.LCFI11:
 578              		.cfi_def_cfa_offset 8
 579              		.cfi_offset 4, -8
 580              		.cfi_offset 14, -4
 102:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_err("__user_error_process: Task:%s get ERROR\n",task->task_name);
 581              		.loc 1 102 5 view .LVU116
 102:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_err("__user_error_process: Task:%s get ERROR\n",task->task_name);
 582              		.loc 1 102 33 is_stmt 0 view .LVU117
 583 0002 FFF7FEFF 		bl	get_current_task
 584              	.LVL43:
 585 0006 0446     		mov	r4, r0
 586              	.LVL44:
 103:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     task->state = TASK_BROKEN;
 587              		.loc 1 103 5 is_stmt 1 view .LVU118
 588 0008 00F10802 		add	r2, r0, #8
 589 000c 0449     		ldr	r1, .L45
 590 000e 0320     		movs	r0, #3
 591              	.LVL45:
 103:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     task->state = TASK_BROKEN;
 592              		.loc 1 103 5 is_stmt 0 view .LVU119
 593 0010 FFF7FEFF 		bl	printk
 594              	.LVL46:
 104:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     __sched();
 595              		.loc 1 104 5 is_stmt 1 view .LVU120
 104:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     __sched();
 596              		.loc 1 104 17 is_stmt 0 view .LVU121
 597 0014 0723     		movs	r3, #7
 598 0016 84F86030 		strb	r3, [r4, #96]
 105:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 599              		.loc 1 105 5 is_stmt 1 view .LVU122
ARM GAS  /tmp/ccNyNvIh.s 			page 18


 600 001a FFF7FEFF 		bl	__sched
 601              	.LVL47:
 106:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 602              		.loc 1 106 1 is_stmt 0 view .LVU123
 603 001e 10BD     		pop	{r4, pc}
 604              	.LVL48:
 605              	.L46:
 106:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 606              		.loc 1 106 1 view .LVU124
 607              		.align	2
 608              	.L45:
 609 0020 00000000 		.word	.LC6
 610              		.cfi_endproc
 611              	.LFE257:
 613              		.section	.rodata.__kernel_error_process.str1.4,"aMS",%progbits,1
 614              		.align	2
 615              	.LC7:
 616 0000 63707520 		.ascii	"cpu core: (%d) get ERROR\012\000"
 616      636F7265 
 616      3A202825 
 616      64292067 
 616      65742045 
 617 001a 0000     		.align	2
 618              	.LC8:
 619 001c 63686563 		.ascii	"checking memory completeness\012\000"
 619      6B696E67 
 619      206D656D 
 619      6F727920 
 619      636F6D70 
 620 003a 0000     		.align	2
 621              	.LC9:
 622 003c 6D656D6F 		.ascii	"memory ERROR:(%d)\012\000"
 622      72792045 
 622      52524F52 
 622      3A282564 
 622      290A00
 623 004f 00       		.align	2
 624              	.LC10:
 625 0050 43616E20 		.ascii	"Can not get core: (%d) scheduler handler may be tas"
 625      6E6F7420 
 625      67657420 
 625      636F7265 
 625      3A202825 
 626 0083 6B206973 		.ascii	"k is broken\012\000"
 626      2062726F 
 626      6B656E0A 
 626      00
 627              		.align	2
 628              	.LC11:
 629 0090 67657420 		.ascii	"get core: (%d) scheduler handler\012\000"
 629      636F7265 
 629      3A202825 
 629      64292073 
 629      63686564 
 630 00b2 0000     		.align	2
 631              	.LC12:
 632 00b4 63616E20 		.ascii	"can not get current task\012\000"
ARM GAS  /tmp/ccNyNvIh.s 			page 19


 632      6E6F7420 
 632      67657420 
 632      63757272 
 632      656E7420 
 633 00ce 0000     		.align	2
 634              	.LC13:
 635 00d0 5461736B 		.ascii	"Task controller is broken \012\000"
 635      20636F6E 
 635      74726F6C 
 635      6C657220 
 635      69732062 
 636              		.align	2
 637              	.LC14:
 638 00ec 5F5F6B65 		.ascii	"__kernel_error_process: Task: %s get ERROR\012\000"
 638      726E656C 
 638      5F657272 
 638      6F725F70 
 638      726F6365 
 639              		.align	2
 640              	.LC15:
 641 0118 5461736B 		.ascii	"Task controller has been broken \012\000"
 641      20636F6E 
 641      74726F6C 
 641      6C657220 
 641      68617320 
 642 013a 0000     		.align	2
 643              	.LC16:
 644 013c 53797374 		.ascii	"System get Unfixable errors\012\000"
 644      656D2067 
 644      65742055 
 644      6E666978 
 644      61626C65 
 645              		.section	.text.__kernel_error_process,"ax",%progbits
 646              		.align	1
 647              		.global	__kernel_error_process
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 652              	__kernel_error_process:
 653              	.LFB258:
 114:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uint32_t core_id = get_task_using_cpu_core();
 654              		.loc 1 114 1 is_stmt 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658 0000 70B5     		push	{r4, r5, r6, lr}
 659              	.LCFI12:
 660              		.cfi_def_cfa_offset 16
 661              		.cfi_offset 4, -16
 662              		.cfi_offset 5, -12
 663              		.cfi_offset 6, -8
 664              		.cfi_offset 14, -4
 115:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_err("cpu core: (%d) get ERROR\n",core_id);
 665              		.loc 1 115 5 view .LVU126
 115:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_err("cpu core: (%d) get ERROR\n",core_id);
 666              		.loc 1 115 24 is_stmt 0 view .LVU127
 667 0002 FFF7FEFF 		bl	get_task_using_cpu_core
ARM GAS  /tmp/ccNyNvIh.s 			page 20


 668              	.LVL49:
 669 0006 0446     		mov	r4, r0
 670              	.LVL50:
 116:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_err("checking memory completeness\n");
 671              		.loc 1 116 5 is_stmt 1 view .LVU128
 672 0008 0246     		mov	r2, r0
 673 000a 3849     		ldr	r1, .L60
 674 000c 0320     		movs	r0, #3
 675              	.LVL51:
 116:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     pr_err("checking memory completeness\n");
 676              		.loc 1 116 5 is_stmt 0 view .LVU129
 677 000e FFF7FEFF 		bl	printk
 678              	.LVL52:
 117:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     uint32_t err = check_haper_completeness();
 679              		.loc 1 117 5 is_stmt 1 view .LVU130
 680 0012 3749     		ldr	r1, .L60+4
 681 0014 0320     		movs	r0, #3
 682 0016 FFF7FEFF 		bl	printk
 683              	.LVL53:
 118:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(err > 0){
 684              		.loc 1 118 5 view .LVU131
 118:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(err > 0){
 685              		.loc 1 118 20 is_stmt 0 view .LVU132
 686 001a FFF7FEFF 		bl	check_haper_completeness
 687              	.LVL54:
 119:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("memory ERROR:(%d)\n",err);
 688              		.loc 1 119 5 is_stmt 1 view .LVU133
 119:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("memory ERROR:(%d)\n",err);
 689              		.loc 1 119 7 is_stmt 0 view .LVU134
 690 001e C0B1     		cbz	r0, .L48
 691 0020 0246     		mov	r2, r0
 120:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 692              		.loc 1 120 9 is_stmt 1 view .LVU135
 693 0022 3449     		ldr	r1, .L60+8
 694 0024 0320     		movs	r0, #3
 695              	.LVL55:
 120:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 696              		.loc 1 120 9 is_stmt 0 view .LVU136
 697 0026 FFF7FEFF 		bl	printk
 698              	.LVL56:
 699              	.L49:
 125:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(current_sched->magic != scheduler_scheduler){
 700              		.loc 1 125 5 is_stmt 1 view .LVU137
 125:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(current_sched->magic != scheduler_scheduler){
 701              		.loc 1 125 23 is_stmt 0 view .LVU138
 702 002a 04EB4403 		add	r3, r4, r4, lsl #1
 703 002e 324A     		ldr	r2, .L60+12
 704 0030 02EBC306 		add	r6, r2, r3, lsl #3
 705              	.LVL57:
 126:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Can not get core: (%d) scheduler handler may be task is broken\n",core_id);
 706              		.loc 1 126 5 is_stmt 1 view .LVU139
 126:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Can not get core: (%d) scheduler handler may be task is broken\n",core_id);
 707              		.loc 1 126 21 is_stmt 0 view .LVU140
 708 0034 52F83320 		ldr	r2, [r2, r3, lsl #3]
 126:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Can not get core: (%d) scheduler handler may be task is broken\n",core_id);
 709              		.loc 1 126 7 view .LVU141
 710 0038 304B     		ldr	r3, .L60+16
ARM GAS  /tmp/ccNyNvIh.s 			page 21


 711 003a 9A42     		cmp	r2, r3
 712 003c 11D0     		beq	.L50
 127:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         goto block;
 713              		.loc 1 127 9 is_stmt 1 view .LVU142
 714 003e 2246     		mov	r2, r4
 715 0040 2F49     		ldr	r1, .L60+20
 716 0042 0320     		movs	r0, #3
 717 0044 FFF7FEFF 		bl	printk
 718              	.LVL58:
 128:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 719              		.loc 1 128 9 view .LVU143
 720              	.L51:
 154:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     while (1){}
 721              		.loc 1 154 5 view .LVU144
 722 0048 2E49     		ldr	r1, .L60+24
 723 004a 0320     		movs	r0, #3
 724 004c FFF7FEFF 		bl	printk
 725              	.LVL59:
 726              	.L55:
 155:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 727              		.loc 1 155 5 view .LVU145
 155:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 728              		.loc 1 155 15 view .LVU146
 155:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** }
 729              		.loc 1 155 11 view .LVU147
 730 0050 FEE7     		b	.L55
 731              	.LVL60:
 732              	.L48:
 123:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 733              		.loc 1 123 9 view .LVU148
 123:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 734              		.loc 1 123 63 is_stmt 0 view .LVU149
 735 0052 FFF7FEFF 		bl	get_global_heap_size
 736              	.LVL61:
 123:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 737              		.loc 1 123 9 discriminator 1 view .LVU150
 738 0056 820A     		lsrs	r2, r0, #10
 739 0058 2B49     		ldr	r1, .L60+28
 740 005a 0720     		movs	r0, #7
 741 005c FFF7FEFF 		bl	printk
 742              	.LVL62:
 743 0060 E3E7     		b	.L49
 744              	.LVL63:
 745              	.L50:
 130:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     struct  task_struct* task = current_sched->current_task;
 746              		.loc 1 130 5 is_stmt 1 view .LVU151
 747 0062 2246     		mov	r2, r4
 748 0064 2949     		ldr	r1, .L60+32
 749 0066 0320     		movs	r0, #3
 750 0068 FFF7FEFF 		bl	printk
 751              	.LVL64:
 131:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(task == NULL){
 752              		.loc 1 131 5 view .LVU152
 131:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(task == NULL){
 753              		.loc 1 131 26 is_stmt 0 view .LVU153
 754 006c 04EB4402 		add	r2, r4, r4, lsl #1
 755 0070 214B     		ldr	r3, .L60+12
ARM GAS  /tmp/ccNyNvIh.s 			page 22


 756 0072 03EBC203 		add	r3, r3, r2, lsl #3
 757 0076 5D69     		ldr	r5, [r3, #20]
 758              	.LVL65:
 132:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("can not get current task\n");
 759              		.loc 1 132 5 is_stmt 1 view .LVU154
 132:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("can not get current task\n");
 760              		.loc 1 132 7 is_stmt 0 view .LVU155
 761 0078 45B1     		cbz	r5, .L58
 136:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Task controller is broken \n");
 762              		.loc 1 136 5 is_stmt 1 view .LVU156
 136:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Task controller is broken \n");
 763              		.loc 1 136 12 is_stmt 0 view .LVU157
 764 007a 2A68     		ldr	r2, [r5]
 136:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Task controller is broken \n");
 765              		.loc 1 136 7 view .LVU158
 766 007c 244B     		ldr	r3, .L60+36
 767 007e 9A42     		cmp	r2, r3
 768 0080 09D0     		beq	.L53
 137:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         goto block;
 769              		.loc 1 137 9 is_stmt 1 view .LVU159
 770 0082 2449     		ldr	r1, .L60+40
 771 0084 0320     		movs	r0, #3
 772 0086 FFF7FEFF 		bl	printk
 773              	.LVL66:
 138:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 774              		.loc 1 138 9 view .LVU160
 775 008a DDE7     		b	.L51
 776              	.L58:
 133:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         goto block;
 777              		.loc 1 133 9 view .LVU161
 778 008c 2249     		ldr	r1, .L60+44
 779 008e 0320     		movs	r0, #3
 780 0090 FFF7FEFF 		bl	printk
 781              	.LVL67:
 134:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 782              		.loc 1 134 9 view .LVU162
 783 0094 D8E7     		b	.L51
 784              	.L53:
 140:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     if(current_sched->t_pop->check_task_completeness(current_sched) < 0){
 785              		.loc 1 140 5 view .LVU163
 786 0096 05F10802 		add	r2, r5, #8
 787 009a 2049     		ldr	r1, .L60+48
 788 009c 0320     		movs	r0, #3
 789 009e FFF7FEFF 		bl	printk
 790              	.LVL68:
 141:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Task controller has been broken \n");
 791              		.loc 1 141 5 view .LVU164
 141:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Task controller has been broken \n");
 792              		.loc 1 141 21 is_stmt 0 view .LVU165
 793 00a2 04EB4402 		add	r2, r4, r4, lsl #1
 794 00a6 144B     		ldr	r3, .L60+12
 795 00a8 03EBC203 		add	r3, r3, r2, lsl #3
 796 00ac DB68     		ldr	r3, [r3, #12]
 141:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Task controller has been broken \n");
 797              		.loc 1 141 28 view .LVU166
 798 00ae DB68     		ldr	r3, [r3, #12]
 141:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Task controller has been broken \n");
ARM GAS  /tmp/ccNyNvIh.s 			page 23


 799              		.loc 1 141 8 view .LVU167
 800 00b0 3046     		mov	r0, r6
 801 00b2 9847     		blx	r3
 802              	.LVL69:
 141:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         pr_err("Task controller has been broken \n");
 803              		.loc 1 141 7 discriminator 1 view .LVU168
 804 00b4 0028     		cmp	r0, #0
 805 00b6 14DB     		blt	.L59
 146:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     current_sched->current_task = NULL;
 806              		.loc 1 146 5 is_stmt 1 view .LVU169
 146:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     current_sched->current_task = NULL;
 807              		.loc 1 146 17 is_stmt 0 view .LVU170
 808 00b8 0723     		movs	r3, #7
 809 00ba 85F86030 		strb	r3, [r5, #96]
 147:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     current_sched->t_pop->remove_task(task,current_sched);
 810              		.loc 1 147 5 is_stmt 1 view .LVU171
 147:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     current_sched->t_pop->remove_task(task,current_sched);
 811              		.loc 1 147 33 is_stmt 0 view .LVU172
 812 00be 0E4B     		ldr	r3, .L60+12
 813 00c0 04EB4402 		add	r2, r4, r4, lsl #1
 814 00c4 03EBC202 		add	r2, r3, r2, lsl #3
 815 00c8 0021     		movs	r1, #0
 816 00ca 5161     		str	r1, [r2, #20]
 148:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     __destory_task(task);
 817              		.loc 1 148 5 is_stmt 1 view .LVU173
 148:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     __destory_task(task);
 818              		.loc 1 148 18 is_stmt 0 view .LVU174
 819 00cc D368     		ldr	r3, [r2, #12]
 148:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     __destory_task(task);
 820              		.loc 1 148 25 view .LVU175
 821 00ce 9B68     		ldr	r3, [r3, #8]
 148:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     __destory_task(task);
 822              		.loc 1 148 5 view .LVU176
 823 00d0 3146     		mov	r1, r6
 824 00d2 2846     		mov	r0, r5
 825 00d4 9847     		blx	r3
 826              	.LVL70:
 149:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     i_sched();
 827              		.loc 1 149 5 is_stmt 1 view .LVU177
 828 00d6 2846     		mov	r0, r5
 829 00d8 FFF7FEFF 		bl	__destory_task
 830              	.LVL71:
 150:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     return;
 831              		.loc 1 150 5 view .LVU178
 832 00dc FFF7FEFF 		bl	i_sched
 833              	.LVL72:
 151:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 834              		.loc 1 151 5 view .LVU179
 156:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c **** 
 835              		.loc 1 156 1 is_stmt 0 view .LVU180
 836 00e0 70BD     		pop	{r4, r5, r6, pc}
 837              	.LVL73:
 838              	.L59:
 142:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****         goto block;        
 839              		.loc 1 142 9 is_stmt 1 view .LVU181
 840 00e2 0F49     		ldr	r1, .L60+52
 841 00e4 0320     		movs	r0, #3
ARM GAS  /tmp/ccNyNvIh.s 			page 24


 842 00e6 FFF7FEFF 		bl	printk
 843              	.LVL74:
 143:/mnt/c/Users/31740/Desktop/newcore/kernel/sched/sched.c ****     }
 844              		.loc 1 143 9 view .LVU182
 845 00ea ADE7     		b	.L51
 846              	.L61:
 847              		.align	2
 848              	.L60:
 849 00ec 00000000 		.word	.LC7
 850 00f0 1C000000 		.word	.LC8
 851 00f4 3C000000 		.word	.LC9
 852 00f8 00000000 		.word	k_scheduler
 853 00fc 56341200 		.word	1193046
 854 0100 50000000 		.word	.LC10
 855 0104 3C010000 		.word	.LC16
 856 0108 00000000 		.word	.LC0
 857 010c 90000000 		.word	.LC11
 858 0110 40E20100 		.word	123456
 859 0114 D0000000 		.word	.LC13
 860 0118 B4000000 		.word	.LC12
 861 011c EC000000 		.word	.LC14
 862 0120 18010000 		.word	.LC15
 863              		.cfi_endproc
 864              	.LFE258:
 866              		.section	.postcore_initcall_sync,"aw"
 867              		.align	2
 870              	_initcall_sched_start:
 871 0000 00000000 		.word	sched_start
 872              		.section	.core_initcall_sync,"aw"
 873              		.align	2
 876              	_initcall_sched_init:
 877 0000 00000000 		.word	sched_init
 878              		.section	.bss.k_scheduler,"aw",%nobits
 879              		.align	2
 882              	k_scheduler:
 883 0000 00000000 		.space	24
 883      00000000 
 883      00000000 
 883      00000000 
 883      00000000 
 884              		.text
 885              	.Letext0:
 886              		.file 4 "/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/int-l64.h"
 887              		.file 5 "/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/posix_types.h"
 888              		.file 6 "/mnt/c/Users/31740/Desktop/newcore/include/linux/types.h"
 889              		.file 7 "/mnt/c/Users/31740/Desktop/newcore/include/linux/init.h"
 890              		.file 8 "/mnt/c/Users/31740/Desktop/newcore/include/linux/time64.h"
 891              		.file 9 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/sched.h"
 892              		.file 10 "/mnt/c/Users/31740/Desktop/newcore/include/linux/sched.h"
 893              		.file 11 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h"
 894              		.file 12 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock_types_raw.h"
 895              		.file 13 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock_types.h"
 896              		.file 14 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mutex.h"
 897              		.file 15 "/mnt/c/Users/31740/Desktop/newcore/include/linux/error.h"
 898              		.file 16 "/mnt/c/Users/31740/Desktop/newcore/include/linux/printk.h"
ARM GAS  /tmp/ccNyNvIh.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 sched.c
     /tmp/ccNyNvIh.s:21     .text.save_context:00000000 $t
     /tmp/ccNyNvIh.s:26     .text.save_context:00000000 save_context
     /tmp/ccNyNvIh.s:44     .text.load_task:00000000 $t
     /tmp/ccNyNvIh.s:49     .text.load_task:00000000 load_task
     /tmp/ccNyNvIh.s:67     .rodata.default_task.str1.4:00000000 $d
     /tmp/ccNyNvIh.s:71     .text.default_task:00000000 $t
     /tmp/ccNyNvIh.s:77     .text.default_task:00000000 default_task
     /tmp/ccNyNvIh.s:137    .text.default_task:0000002c $d
     /tmp/ccNyNvIh.s:144    .text.get_task_using_cpu_core:00000000 $t
     /tmp/ccNyNvIh.s:149    .text.get_task_using_cpu_core:00000000 get_task_using_cpu_core
     /tmp/ccNyNvIh.s:170    .rodata.scheduler_init.str1.4:00000000 $d
     /tmp/ccNyNvIh.s:177    .text.scheduler_init:00000000 $t
     /tmp/ccNyNvIh.s:182    .text.scheduler_init:00000000 scheduler_init
     /tmp/ccNyNvIh.s:284    .text.scheduler_init:00000048 $d
     /tmp/ccNyNvIh.s:291    .text.sched_start:00000000 $t
     /tmp/ccNyNvIh.s:297    .text.sched_start:00000000 sched_start
     /tmp/ccNyNvIh.s:323    .text.get_scheduler_by_cpu_core_id:00000000 $t
     /tmp/ccNyNvIh.s:329    .text.get_scheduler_by_cpu_core_id:00000000 get_scheduler_by_cpu_core_id
     /tmp/ccNyNvIh.s:358    .text.get_scheduler_by_cpu_core_id:00000014 $d
     /tmp/ccNyNvIh.s:882    .bss.k_scheduler:00000000 k_scheduler
     /tmp/ccNyNvIh.s:363    .rodata.init_all_scheduler.str1.4:00000000 $d
     /tmp/ccNyNvIh.s:370    .text.init_all_scheduler:00000000 $t
     /tmp/ccNyNvIh.s:375    .text.init_all_scheduler:00000000 init_all_scheduler
     /tmp/ccNyNvIh.s:441    .text.init_all_scheduler:00000038 $d
     /tmp/ccNyNvIh.s:449    .rodata.sched_init.str1.4:00000000 $d
     /tmp/ccNyNvIh.s:453    .text.sched_init:00000000 $t
     /tmp/ccNyNvIh.s:459    .text.sched_init:00000000 sched_init
     /tmp/ccNyNvIh.s:483    .text.sched_init:00000010 $d
     /tmp/ccNyNvIh.s:488    .text.Scheduler_Task:00000000 $t
     /tmp/ccNyNvIh.s:494    .text.Scheduler_Task:00000000 Scheduler_Task
     /tmp/ccNyNvIh.s:560    .rodata.__user_error_process.str1.4:00000000 $d
     /tmp/ccNyNvIh.s:564    .text.__user_error_process:00000000 $t
     /tmp/ccNyNvIh.s:570    .text.__user_error_process:00000000 __user_error_process
     /tmp/ccNyNvIh.s:609    .text.__user_error_process:00000020 $d
     /tmp/ccNyNvIh.s:614    .rodata.__kernel_error_process.str1.4:00000000 $d
     /tmp/ccNyNvIh.s:646    .text.__kernel_error_process:00000000 $t
     /tmp/ccNyNvIh.s:652    .text.__kernel_error_process:00000000 __kernel_error_process
     /tmp/ccNyNvIh.s:849    .text.__kernel_error_process:000000ec $d
     /tmp/ccNyNvIh.s:867    .postcore_initcall_sync:00000000 $d
     /tmp/ccNyNvIh.s:870    .postcore_initcall_sync:00000000 _initcall_sched_start
     /tmp/ccNyNvIh.s:873    .core_initcall_sync:00000000 $d
     /tmp/ccNyNvIh.s:876    .core_initcall_sync:00000000 _initcall_sched_init
     /tmp/ccNyNvIh.s:879    .bss.k_scheduler:00000000 $d

UNDEFINED SYMBOLS
get_global_heap_size
printk
__get_task_using_cpu_core
find_task_pool
change_to_task_mode
scheduler_start
sched
task_run
get_current_scheduler
get_current_task
ARM GAS  /tmp/ccNyNvIh.s 			page 26


__sched
check_haper_completeness
__destory_task
i_sched
