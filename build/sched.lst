ARM GAS  /tmp/ccmb4xzG.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"sched.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./kernel/sched/sched.c"
  20              		.section	.text.save_context,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	save_context:
  27              	.LVL0:
  28              	.LFB223:
  29              		.file 2 "./arch/arm_m/include/asm/context.h"
   1:./arch/arm_m/include/asm/context.h **** #ifndef __CONTEXT_H__
   2:./arch/arm_m/include/asm/context.h **** #define __CONTEXT_H__                
   3:./arch/arm_m/include/asm/context.h **** 
   4:./arch/arm_m/include/asm/context.h **** 
   5:./arch/arm_m/include/asm/context.h **** extern void __init_Taskcontext(struct task_struct* task_data);
   6:./arch/arm_m/include/asm/context.h **** static void init_task_context(struct task_struct* task_data){
   7:./arch/arm_m/include/asm/context.h ****     __init_Taskcontext(task_data);
   8:./arch/arm_m/include/asm/context.h **** }
   9:./arch/arm_m/include/asm/context.h **** 
  10:./arch/arm_m/include/asm/context.h **** extern int __get_task_using_cpu_core(void);
  11:./arch/arm_m/include/asm/context.h **** 
  12:./arch/arm_m/include/asm/context.h **** static int get_task_using_cpu_core(void){
  13:./arch/arm_m/include/asm/context.h ****      return  __get_task_using_cpu_core();
  14:./arch/arm_m/include/asm/context.h **** }
  15:./arch/arm_m/include/asm/context.h **** 
  16:./arch/arm_m/include/asm/context.h **** static void save_context(struct task_struct *this_task,uint32_t data){
  30              		.loc 2 16 70 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  17:./arch/arm_m/include/asm/context.h ****         this_task->context.psp = data;
  35              		.loc 2 17 9 view .LVU1
  36              		.loc 2 17 32 is_stmt 0 view .LVU2
  37 0000 8164     		str	r1, [r0, #72]
  18:./arch/arm_m/include/asm/context.h **** }
  38              		.loc 2 18 1 view .LVU3
  39 0002 7047     		bx	lr
  40              		.cfi_endproc
ARM GAS  /tmp/ccmb4xzG.s 			page 2


  41              	.LFE223:
  43              		.section	.text.load_task,"ax",%progbits
  44              		.align	1
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	load_task:
  50              	.LVL1:
  51              	.LFB224:
  19:./arch/arm_m/include/asm/context.h **** static uint32_t load_task(struct task_struct *this_task) {
  52              		.loc 2 19 58 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  20:./arch/arm_m/include/asm/context.h ****     return this_task->context.psp;
  57              		.loc 2 20 5 view .LVU5
  21:./arch/arm_m/include/asm/context.h **** };
  58              		.loc 2 21 1 is_stmt 0 view .LVU6
  59 0000 806C     		ldr	r0, [r0, #72]
  60              	.LVL2:
  61              		.loc 2 21 1 view .LVU7
  62 0002 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE224:
  66              		.section	.rodata.default_task.str1.4,"aMS",%progbits,1
  67              		.align	2
  68              	.LC0:
  69 0000 64656661 		.ascii	"default_task test\012\000"
  69      756C745F 
  69      7461736B 
  69      20746573 
  69      740A00
  70              		.section	.text.default_task,"ax",%progbits
  71              		.align	1
  72              		.global	default_task
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	default_task:
  78              	.LVL3:
  79              	.LFB254:
   1:./kernel/sched/sched.c **** #include <linux/kernel.h>
   2:./kernel/sched/sched.c **** #include <linux/sys_call.h>
   3:./kernel/sched/sched.c **** #include <linux/sched.h>
   4:./kernel/sched/sched.c **** #include <linux/error.h>
   5:./kernel/sched/sched.c **** #include <generated/autoconf.h>
   6:./kernel/sched/sched.c **** 
   7:./kernel/sched/sched.c **** static struct scheduler k_scheduler[CONFIG_CPU_NUM];
   8:./kernel/sched/sched.c **** 
   9:./kernel/sched/sched.c **** struct scheduler *get_scheduler_by_cpu_core_id(uint32_t core_id){
  10:./kernel/sched/sched.c ****     if(core_id >= CONFIG_CPU_NUM) return NULL;
  11:./kernel/sched/sched.c ****     return &k_scheduler[core_id];
  12:./kernel/sched/sched.c **** }
  13:./kernel/sched/sched.c **** 
  14:./kernel/sched/sched.c **** static void scheduler_init( struct scheduler* uninit_scheduler,char* pool_name)
  15:./kernel/sched/sched.c **** {
ARM GAS  /tmp/ccmb4xzG.s 			page 3


  16:./kernel/sched/sched.c ****     struct task_pool_types * task_pool = find_task_pool(pool_name);
  17:./kernel/sched/sched.c ****     if(task_pool == NULL) {
  18:./kernel/sched/sched.c ****         pr_err("can not find this task_pool:%s\n",pool_name);while (1){}
  19:./kernel/sched/sched.c ****     }
  20:./kernel/sched/sched.c ****     uninit_scheduler->s_task_pool = task_pool->alloc_task_pool(uninit_scheduler);
  21:./kernel/sched/sched.c ****     if(IS_ERR(uninit_scheduler->s_task_pool)) {
  22:./kernel/sched/sched.c ****         pr_err("can not init create scheduler\n");while (1){}
  23:./kernel/sched/sched.c ****     }
  24:./kernel/sched/sched.c ****     uninit_scheduler->s_flag = SCHEDULER_RUN;
  25:./kernel/sched/sched.c ****     uninit_scheduler->current_task = NULL;
  26:./kernel/sched/sched.c ****     uninit_scheduler->t_pop  = task_pool->t_op;
  27:./kernel/sched/sched.c **** }
  28:./kernel/sched/sched.c **** 
  29:./kernel/sched/sched.c **** void default_task(void* argv){
  80              		.loc 1 29 30 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 8
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		.loc 1 29 30 is_stmt 0 view .LVU9
  85 0000 00B5     		push	{lr}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 14, -4
  89 0002 83B0     		sub	sp, sp, #12
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 16
  30:./kernel/sched/sched.c ****     volatile int j  = 0;
  92              		.loc 1 30 5 is_stmt 1 view .LVU10
  93              		.loc 1 30 18 is_stmt 0 view .LVU11
  94 0004 0023     		movs	r3, #0
  95 0006 0193     		str	r3, [sp, #4]
  96 0008 09E0     		b	.L6
  97              	.LVL4:
  98              	.L5:
  99              	.LBB4:
  31:./kernel/sched/sched.c ****     while (1){
  32:./kernel/sched/sched.c ****         for(int i =0;i<120000000;i++){j++;}
 100              		.loc 1 32 39 is_stmt 1 discriminator 3 view .LVU12
 101              		.loc 1 32 40 is_stmt 0 discriminator 3 view .LVU13
 102 000a 019B     		ldr	r3, [sp, #4]
 103 000c 0133     		adds	r3, r3, #1
 104 000e 0193     		str	r3, [sp, #4]
 105              		.loc 1 32 35 is_stmt 1 discriminator 3 view .LVU14
 106 0010 0132     		adds	r2, r2, #1
 107              	.LVL5:
 108              	.L4:
 109              		.loc 1 32 23 discriminator 1 view .LVU15
 110 0012 044B     		ldr	r3, .L8
 111 0014 9A42     		cmp	r2, r3
 112 0016 F8DD     		ble	.L5
 113              	.LBE4:
  33:./kernel/sched/sched.c ****         printk("default_task test\n");
 114              		.loc 1 33 9 view .LVU16
 115 0018 0348     		ldr	r0, .L8+4
 116 001a FFF7FEFF 		bl	printk
 117              	.LVL6:
  31:./kernel/sched/sched.c ****     while (1){
ARM GAS  /tmp/ccmb4xzG.s 			page 4


 118              		.loc 1 31 11 view .LVU17
 119              	.L6:
  31:./kernel/sched/sched.c ****     while (1){
 120              		.loc 1 31 5 view .LVU18
  32:./kernel/sched/sched.c ****         printk("default_task test\n");
 121              		.loc 1 32 9 view .LVU19
 122              	.LBB5:
  32:./kernel/sched/sched.c ****         printk("default_task test\n");
 123              		.loc 1 32 13 view .LVU20
  32:./kernel/sched/sched.c ****         printk("default_task test\n");
 124              		.loc 1 32 17 is_stmt 0 view .LVU21
 125 001e 0022     		movs	r2, #0
  32:./kernel/sched/sched.c ****         printk("default_task test\n");
 126              		.loc 1 32 9 view .LVU22
 127 0020 F7E7     		b	.L4
 128              	.L9:
 129 0022 00BF     		.align	2
 130              	.L8:
 131 0024 FF0D2707 		.word	119999999
 132 0028 00000000 		.word	.LC0
 133              	.LBE5:
 134              		.cfi_endproc
 135              	.LFE254:
 137              		.section	.rodata.scheduler_init.str1.4,"aMS",%progbits,1
 138              		.align	2
 139              	.LC1:
 140 0000 63616E20 		.ascii	"can not find this task_pool:%s\012\000"
 140      6E6F7420 
 140      66696E64 
 140      20746869 
 140      73207461 
 141              		.align	2
 142              	.LC2:
 143 0020 63616E20 		.ascii	"can not init create scheduler\012\000"
 143      6E6F7420 
 143      696E6974 
 143      20637265 
 143      61746520 
 144              		.section	.text.scheduler_init,"ax",%progbits
 145              		.align	1
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 150              	scheduler_init:
 151              	.LVL7:
 152              	.LFB253:
  15:./kernel/sched/sched.c ****     struct task_pool_types * task_pool = find_task_pool(pool_name);
 153              		.loc 1 15 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
  15:./kernel/sched/sched.c ****     struct task_pool_types * task_pool = find_task_pool(pool_name);
 157              		.loc 1 15 1 is_stmt 0 view .LVU24
 158 0000 70B5     		push	{r4, r5, r6, lr}
 159              	.LCFI2:
 160              		.cfi_def_cfa_offset 16
 161              		.cfi_offset 4, -16
ARM GAS  /tmp/ccmb4xzG.s 			page 5


 162              		.cfi_offset 5, -12
 163              		.cfi_offset 6, -8
 164              		.cfi_offset 14, -4
 165 0002 0446     		mov	r4, r0
 166 0004 0D46     		mov	r5, r1
  16:./kernel/sched/sched.c ****     if(task_pool == NULL) {
 167              		.loc 1 16 5 is_stmt 1 view .LVU25
  16:./kernel/sched/sched.c ****     if(task_pool == NULL) {
 168              		.loc 1 16 42 is_stmt 0 view .LVU26
 169 0006 0846     		mov	r0, r1
 170              	.LVL8:
  16:./kernel/sched/sched.c ****     if(task_pool == NULL) {
 171              		.loc 1 16 42 view .LVU27
 172 0008 FFF7FEFF 		bl	find_task_pool
 173              	.LVL9:
  17:./kernel/sched/sched.c ****         pr_err("can not find this task_pool:%s\n",pool_name);while (1){}
 174              		.loc 1 17 5 is_stmt 1 view .LVU28
  17:./kernel/sched/sched.c ****         pr_err("can not find this task_pool:%s\n",pool_name);while (1){}
 175              		.loc 1 17 7 is_stmt 0 view .LVU29
 176 000c 70B1     		cbz	r0, .L16
 177 000e 0646     		mov	r6, r0
  20:./kernel/sched/sched.c ****     if(IS_ERR(uninit_scheduler->s_task_pool)) {
 178              		.loc 1 20 5 is_stmt 1 view .LVU30
  20:./kernel/sched/sched.c ****     if(IS_ERR(uninit_scheduler->s_task_pool)) {
 179              		.loc 1 20 46 is_stmt 0 view .LVU31
 180 0010 0369     		ldr	r3, [r0, #16]
  20:./kernel/sched/sched.c ****     if(IS_ERR(uninit_scheduler->s_task_pool)) {
 181              		.loc 1 20 37 view .LVU32
 182 0012 2046     		mov	r0, r4
 183              	.LVL10:
  20:./kernel/sched/sched.c ****     if(IS_ERR(uninit_scheduler->s_task_pool)) {
 184              		.loc 1 20 37 view .LVU33
 185 0014 9847     		blx	r3
 186              	.LVL11:
  20:./kernel/sched/sched.c ****     if(IS_ERR(uninit_scheduler->s_task_pool)) {
 187              		.loc 1 20 35 discriminator 1 view .LVU34
 188 0016 2060     		str	r0, [r4]
  21:./kernel/sched/sched.c ****         pr_err("can not init create scheduler\n");while (1){}
 189              		.loc 1 21 5 is_stmt 1 view .LVU35
 190              	.LVL12:
 191              	.LBB6:
 192              	.LBI6:
 193              		.file 3 "./include/linux/err.h"
   1:./include/linux/err.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:./include/linux/err.h **** #ifndef _LINUX_ERR_H
   3:./include/linux/err.h **** #define _LINUX_ERR_H
   4:./include/linux/err.h **** 
   5:./include/linux/err.h **** #include <linux/compiler_attributes.h>
   6:./include/linux/err.h **** #include <linux/compiler.h>
   7:./include/linux/err.h **** #include <linux/types.h>
   8:./include/linux/err.h **** 
   9:./include/linux/err.h **** #include <asm/errno.h>
  10:./include/linux/err.h **** 
  11:./include/linux/err.h **** /*
  12:./include/linux/err.h ****  * Kernel pointers have redundant information, so we can use a
  13:./include/linux/err.h ****  * scheme where we can return either an error code or a normal
  14:./include/linux/err.h ****  * pointer with the same return value.
ARM GAS  /tmp/ccmb4xzG.s 			page 6


  15:./include/linux/err.h ****  *
  16:./include/linux/err.h ****  * This should be a per-architecture thing, to allow different
  17:./include/linux/err.h ****  * error and pointer decisions.
  18:./include/linux/err.h ****  */
  19:./include/linux/err.h **** #define MAX_ERRNO	4095
  20:./include/linux/err.h **** 
  21:./include/linux/err.h **** #ifndef __ASSEMBLY__
  22:./include/linux/err.h **** 
  23:./include/linux/err.h **** /**
  24:./include/linux/err.h ****  * IS_ERR_VALUE - Detect an error pointer.
  25:./include/linux/err.h ****  * @x: The pointer to check.
  26:./include/linux/err.h ****  *
  27:./include/linux/err.h ****  * Like IS_ERR(), but does not generate a compiler warning if result is unused.
  28:./include/linux/err.h ****  */
  29:./include/linux/err.h **** 
  30:./include/linux/err.h **** #ifndef unlikely
  31:./include/linux/err.h **** #  define unlikely(x) __builtin_expect(!!(x), 0)
  32:./include/linux/err.h **** #endif
  33:./include/linux/err.h **** 
  34:./include/linux/err.h **** #ifndef likely
  35:./include/linux/err.h **** #  define likely(x) __builtin_expect(!!(x), 1)
  36:./include/linux/err.h **** #endif
  37:./include/linux/err.h **** 
  38:./include/linux/err.h **** #define IS_ERR_VALUE(x) unlikely((unsigned long)(void *)(x) >= (unsigned long)-MAX_ERRNO)
  39:./include/linux/err.h **** 
  40:./include/linux/err.h **** /**
  41:./include/linux/err.h ****  * ERR_PTR - Create an error pointer.
  42:./include/linux/err.h ****  * @error: A negative error code.
  43:./include/linux/err.h ****  *
  44:./include/linux/err.h ****  * Encodes @error into a pointer value. Users should consider the result
  45:./include/linux/err.h ****  * opaque and not assume anything about how the error is encoded.
  46:./include/linux/err.h ****  *
  47:./include/linux/err.h ****  * Return: A pointer with @error encoded within its value.
  48:./include/linux/err.h ****  */
  49:./include/linux/err.h **** static inline void * __must_check ERR_PTR(long error)
  50:./include/linux/err.h **** {
  51:./include/linux/err.h **** 	return (void *) error;
  52:./include/linux/err.h **** }
  53:./include/linux/err.h **** 
  54:./include/linux/err.h **** /* Return the pointer in the percpu address space. */
  55:./include/linux/err.h **** #define ERR_PTR_PCPU(error) ((void __percpu *)(unsigned long)ERR_PTR(error))
  56:./include/linux/err.h **** 
  57:./include/linux/err.h **** /**
  58:./include/linux/err.h ****  * PTR_ERR - Extract the error code from an error pointer.
  59:./include/linux/err.h ****  * @ptr: An error pointer.
  60:./include/linux/err.h ****  * Return: The error code within @ptr.
  61:./include/linux/err.h ****  */
  62:./include/linux/err.h **** static inline long __must_check PTR_ERR(__force const void *ptr)
  63:./include/linux/err.h **** {
  64:./include/linux/err.h **** 	return (long) ptr;
  65:./include/linux/err.h **** }
  66:./include/linux/err.h **** 
  67:./include/linux/err.h **** /* Read an error pointer from the percpu address space. */
  68:./include/linux/err.h **** #define PTR_ERR_PCPU(ptr) (PTR_ERR((const void *)(__force const unsigned long)(ptr)))
  69:./include/linux/err.h **** 
  70:./include/linux/err.h **** /**
  71:./include/linux/err.h ****  * IS_ERR - Detect an error pointer.
ARM GAS  /tmp/ccmb4xzG.s 			page 7


  72:./include/linux/err.h ****  * @ptr: The pointer to check.
  73:./include/linux/err.h ****  * Return: true if @ptr is an error pointer, false otherwise.
  74:./include/linux/err.h ****  */
  75:./include/linux/err.h **** static inline bool __must_check IS_ERR(__force const void *ptr)
 194              		.loc 3 75 33 view .LVU36
 195              	.LBB7:
  76:./include/linux/err.h **** {
  77:./include/linux/err.h **** 	return IS_ERR_VALUE((unsigned long)ptr);
 196              		.loc 3 77 2 view .LVU37
 197              		.loc 3 77 2 is_stmt 0 view .LVU38
 198              	.LBE7:
 199              	.LBE6:
  21:./kernel/sched/sched.c ****         pr_err("can not init create scheduler\n");while (1){}
 200              		.loc 1 21 7 discriminator 1 view .LVU39
 201 0018 10F5805F 		cmn	r0, #4096
 202 001c 0BD8     		bhi	.L17
  24:./kernel/sched/sched.c ****     uninit_scheduler->current_task = NULL;
 203              		.loc 1 24 5 is_stmt 1 view .LVU40
  24:./kernel/sched/sched.c ****     uninit_scheduler->current_task = NULL;
 204              		.loc 1 24 30 is_stmt 0 view .LVU41
 205 001e 0123     		movs	r3, #1
 206 0020 2373     		strb	r3, [r4, #12]
  25:./kernel/sched/sched.c ****     uninit_scheduler->t_pop  = task_pool->t_op;
 207              		.loc 1 25 5 is_stmt 1 view .LVU42
  25:./kernel/sched/sched.c ****     uninit_scheduler->t_pop  = task_pool->t_op;
 208              		.loc 1 25 36 is_stmt 0 view .LVU43
 209 0022 0023     		movs	r3, #0
 210 0024 2361     		str	r3, [r4, #16]
  26:./kernel/sched/sched.c **** }
 211              		.loc 1 26 5 is_stmt 1 view .LVU44
  26:./kernel/sched/sched.c **** }
 212              		.loc 1 26 41 is_stmt 0 view .LVU45
 213 0026 F368     		ldr	r3, [r6, #12]
  26:./kernel/sched/sched.c **** }
 214              		.loc 1 26 30 view .LVU46
 215 0028 A360     		str	r3, [r4, #8]
  27:./kernel/sched/sched.c **** 
 216              		.loc 1 27 1 view .LVU47
 217 002a 70BD     		pop	{r4, r5, r6, pc}
 218              	.LVL13:
 219              	.L16:
  18:./kernel/sched/sched.c ****     }
 220              		.loc 1 18 9 is_stmt 1 view .LVU48
 221 002c 2946     		mov	r1, r5
 222 002e 0448     		ldr	r0, .L18
 223              	.LVL14:
  18:./kernel/sched/sched.c ****     }
 224              		.loc 1 18 9 is_stmt 0 view .LVU49
 225 0030 FFF7FEFF 		bl	printk
 226              	.LVL15:
 227              	.L12:
  18:./kernel/sched/sched.c ****     }
 228              		.loc 1 18 62 is_stmt 1 discriminator 1 view .LVU50
  18:./kernel/sched/sched.c ****     }
 229              		.loc 1 18 72 discriminator 1 view .LVU51
  18:./kernel/sched/sched.c ****     }
 230              		.loc 1 18 68 discriminator 1 view .LVU52
ARM GAS  /tmp/ccmb4xzG.s 			page 8


 231 0034 FEE7     		b	.L12
 232              	.LVL16:
 233              	.L17:
  22:./kernel/sched/sched.c ****     }
 234              		.loc 1 22 9 view .LVU53
 235 0036 0348     		ldr	r0, .L18+4
 236 0038 FFF7FEFF 		bl	printk
 237              	.LVL17:
 238              	.L14:
  22:./kernel/sched/sched.c ****     }
 239              		.loc 1 22 51 discriminator 1 view .LVU54
  22:./kernel/sched/sched.c ****     }
 240              		.loc 1 22 61 discriminator 1 view .LVU55
  22:./kernel/sched/sched.c ****     }
 241              		.loc 1 22 57 discriminator 1 view .LVU56
 242 003c FEE7     		b	.L14
 243              	.L19:
 244 003e 00BF     		.align	2
 245              	.L18:
 246 0040 00000000 		.word	.LC1
 247 0044 20000000 		.word	.LC2
 248              		.cfi_endproc
 249              	.LFE253:
 251              		.section	.text.user_system_call,"ax",%progbits
 252              		.align	1
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 257              	user_system_call:
 258              	.LVL18:
 259              	.LFB225:
  22:./arch/arm_m/include/asm/context.h **** 
  23:./arch/arm_m/include/asm/context.h **** 
  24:./arch/arm_m/include/asm/context.h **** int __system_call(int sys_no, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5);
  25:./arch/arm_m/include/asm/context.h **** static void* user_system_call(int sys_no, int arg0, int arg1, int arg2, int arg3, int arg4, int arg
 260              		.loc 2 25 102 view -0
 261              		.cfi_startproc
 262              		@ args = 12, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		.loc 2 25 102 is_stmt 0 view .LVU58
 265 0000 10B5     		push	{r4, lr}
 266              	.LCFI3:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 4, -8
 269              		.cfi_offset 14, -4
 270 0002 84B0     		sub	sp, sp, #16
 271              	.LCFI4:
 272              		.cfi_def_cfa_offset 24
  26:./arch/arm_m/include/asm/context.h ****     __system_call(sys_no,arg0, arg1, arg2, arg3,arg4,arg5);
 273              		.loc 2 26 5 is_stmt 1 view .LVU59
 274 0004 089C     		ldr	r4, [sp, #32]
 275 0006 0294     		str	r4, [sp, #8]
 276 0008 079C     		ldr	r4, [sp, #28]
 277 000a 0194     		str	r4, [sp, #4]
 278 000c 069C     		ldr	r4, [sp, #24]
 279 000e 0094     		str	r4, [sp]
 280 0010 FFF7FEFF 		bl	__system_call
ARM GAS  /tmp/ccmb4xzG.s 			page 9


 281              	.LVL19:
  27:./arch/arm_m/include/asm/context.h **** }
 282              		.loc 2 27 1 is_stmt 0 view .LVU60
 283 0014 04B0     		add	sp, sp, #16
 284              	.LCFI5:
 285              		.cfi_def_cfa_offset 8
 286              		@ sp needed
 287 0016 10BD     		pop	{r4, pc}
 288              		.loc 2 27 1 view .LVU61
 289              		.cfi_endproc
 290              	.LFE225:
 292              		.section	.text.sched_start,"ax",%progbits
 293              		.align	1
 294              		.global	sched_start
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 299              	sched_start:
 300              	.LFB258:
  34:./kernel/sched/sched.c ****     }
  35:./kernel/sched/sched.c **** }
  36:./kernel/sched/sched.c **** 
  37:./kernel/sched/sched.c **** #ifndef  CONFIG_SCHED_CPU0
  38:./kernel/sched/sched.c **** #error "cpu core number is not zero"    
  39:./kernel/sched/sched.c **** #endif
  40:./kernel/sched/sched.c **** #ifndef CONFIG_SCHED_CPU1
  41:./kernel/sched/sched.c **** #ifdef  CONFIG_SCHED_CPU0
  42:./kernel/sched/sched.c **** static char* sched_config[] = {
  43:./kernel/sched/sched.c ****     CONFIG_SCHED_CPU0
  44:./kernel/sched/sched.c **** };
  45:./kernel/sched/sched.c **** #endif 
  46:./kernel/sched/sched.c **** #endif 
  47:./kernel/sched/sched.c **** #ifndef CONFIG_SCHED_CPU2
  48:./kernel/sched/sched.c **** #ifdef  CONFIG_SCHED_CPU1
  49:./kernel/sched/sched.c **** static char* sched_config[] = {
  50:./kernel/sched/sched.c ****     CONFIG_SCHED_CPU0,
  51:./kernel/sched/sched.c ****     CONFIG_SCHED_CPU1,
  52:./kernel/sched/sched.c **** };
  53:./kernel/sched/sched.c **** #endif
  54:./kernel/sched/sched.c **** #endif
  55:./kernel/sched/sched.c **** #ifndef CONFIG_SCHED_CPU3
  56:./kernel/sched/sched.c **** #ifdef CONFIG_SCHED_CPU2
  57:./kernel/sched/sched.c **** static char* sched_config[] = {
  58:./kernel/sched/sched.c ****     CONFIG_SCHED_CPU0,
  59:./kernel/sched/sched.c ****     CONFIG_SCHED_CPU1,
  60:./kernel/sched/sched.c ****     CONFIG_SCHED_CPU2,
  61:./kernel/sched/sched.c **** };
  62:./kernel/sched/sched.c **** #endif
  63:./kernel/sched/sched.c **** #endif
  64:./kernel/sched/sched.c **** #ifdef CONFIG_SCHED_CPU3
  65:./kernel/sched/sched.c **** static char* sched_config[] = {
  66:./kernel/sched/sched.c ****     CONFIG_SCHED_CPU0,
  67:./kernel/sched/sched.c ****     CONFIG_SCHED_CPU1,
  68:./kernel/sched/sched.c ****     CONFIG_SCHED_CPU2,
  69:./kernel/sched/sched.c ****     CONFIG_SCHED_CPU3,
  70:./kernel/sched/sched.c **** };
  71:./kernel/sched/sched.c **** #endif
ARM GAS  /tmp/ccmb4xzG.s 			page 10


  72:./kernel/sched/sched.c **** static void init_all_scheduler(void){
  73:./kernel/sched/sched.c ****     for(int i =0 ;i < CONFIG_CPU_NUM ;i++){
  74:./kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
  75:./kernel/sched/sched.c ****         task_run(default_task,512,10,1,"system_default_task",i);
  76:./kernel/sched/sched.c ****     }
  77:./kernel/sched/sched.c **** }
  78:./kernel/sched/sched.c **** 
  79:./kernel/sched/sched.c **** uint32_t Scheduler_Task(uint32_t context)
  80:./kernel/sched/sched.c **** {
  81:./kernel/sched/sched.c ****     struct scheduler * curren_scheduler = get_current_scheduler();
  82:./kernel/sched/sched.c ****     if(curren_scheduler->s_flag == SCHEDULER_BLOCKED )
  83:./kernel/sched/sched.c ****     return context;
  84:./kernel/sched/sched.c **** 
  85:./kernel/sched/sched.c ****     if(curren_scheduler->current_task != NULL)
  86:./kernel/sched/sched.c ****     save_context(curren_scheduler->current_task, context);
  87:./kernel/sched/sched.c ****     struct task_struct* t1 = curren_scheduler->current_task;
  88:./kernel/sched/sched.c ****     curren_scheduler->current_task = curren_scheduler->t_pop->get_next_task(curren_scheduler);
  89:./kernel/sched/sched.c ****     if(curren_scheduler->current_task!= NULL)
  90:./kernel/sched/sched.c ****     return load_task(curren_scheduler->current_task);        
  91:./kernel/sched/sched.c ****     else
  92:./kernel/sched/sched.c ****     return context;
  93:./kernel/sched/sched.c **** }
  94:./kernel/sched/sched.c **** 
  95:./kernel/sched/sched.c **** void scheduler_start();
  96:./kernel/sched/sched.c **** 
  97:./kernel/sched/sched.c **** void sched_init(){
  98:./kernel/sched/sched.c ****     pr_info("init all scheduler\n");
  99:./kernel/sched/sched.c ****     init_all_scheduler();    
 100:./kernel/sched/sched.c **** }
 101:./kernel/sched/sched.c **** core_initcall_sync(sched_init);
 102:./kernel/sched/sched.c **** 
 103:./kernel/sched/sched.c **** void sched_start(){
 301              		.loc 1 103 19 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 0000 00B5     		push	{lr}
 306              	.LCFI6:
 307              		.cfi_def_cfa_offset 4
 308              		.cfi_offset 14, -4
 309 0002 85B0     		sub	sp, sp, #20
 310              	.LCFI7:
 311              		.cfi_def_cfa_offset 24
 104:./kernel/sched/sched.c ****     change_to_task_mode();
 312              		.loc 1 104 5 view .LVU63
 313 0004 FFF7FEFF 		bl	change_to_task_mode
 314              	.LVL20:
 105:./kernel/sched/sched.c ****     scheduler_start();
 315              		.loc 1 105 5 view .LVU64
 316 0008 FFF7FEFF 		bl	scheduler_start
 317              	.LVL21:
 106:./kernel/sched/sched.c ****     user_system_call(SC_SCHEDULER,NULL,NULL,NULL,NULL,NULL,NULL);
 318              		.loc 1 106 5 view .LVU65
 319 000c 0021     		movs	r1, #0
 320 000e 0291     		str	r1, [sp, #8]
 321 0010 0191     		str	r1, [sp, #4]
 322 0012 0091     		str	r1, [sp]
ARM GAS  /tmp/ccmb4xzG.s 			page 11


 323 0014 0B46     		mov	r3, r1
 324 0016 0A46     		mov	r2, r1
 325 0018 0120     		movs	r0, #1
 326 001a FFF7FEFF 		bl	user_system_call
 327              	.LVL22:
 107:./kernel/sched/sched.c **** }
 328              		.loc 1 107 1 is_stmt 0 view .LVU66
 329 001e 05B0     		add	sp, sp, #20
 330              	.LCFI8:
 331              		.cfi_def_cfa_offset 4
 332              		@ sp needed
 333 0020 5DF804FB 		ldr	pc, [sp], #4
 334              		.cfi_endproc
 335              	.LFE258:
 337              		.section	.text.get_scheduler_by_cpu_core_id,"ax",%progbits
 338              		.align	1
 339              		.global	get_scheduler_by_cpu_core_id
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	get_scheduler_by_cpu_core_id:
 345              	.LVL23:
 346              	.LFB252:
   9:./kernel/sched/sched.c ****     if(core_id >= CONFIG_CPU_NUM) return NULL;
 347              		.loc 1 9 65 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
  10:./kernel/sched/sched.c ****     return &k_scheduler[core_id];
 352              		.loc 1 10 5 view .LVU68
  10:./kernel/sched/sched.c ****     return &k_scheduler[core_id];
 353              		.loc 1 10 7 is_stmt 0 view .LVU69
 354 0000 28B9     		cbnz	r0, .L26
  11:./kernel/sched/sched.c **** }
 355              		.loc 1 11 5 is_stmt 1 view .LVU70
  11:./kernel/sched/sched.c **** }
 356              		.loc 1 11 12 is_stmt 0 view .LVU71
 357 0002 00EB8003 		add	r3, r0, r0, lsl #2
 358 0006 0348     		ldr	r0, .L27
 359              	.LVL24:
  11:./kernel/sched/sched.c **** }
 360              		.loc 1 11 12 view .LVU72
 361 0008 00EB8300 		add	r0, r0, r3, lsl #2
 362 000c 7047     		bx	lr
 363              	.LVL25:
 364              	.L26:
  10:./kernel/sched/sched.c ****     return &k_scheduler[core_id];
 365              		.loc 1 10 42 discriminator 1 view .LVU73
 366 000e 0020     		movs	r0, #0
 367              	.LVL26:
  12:./kernel/sched/sched.c **** 
 368              		.loc 1 12 1 view .LVU74
 369 0010 7047     		bx	lr
 370              	.L28:
 371 0012 00BF     		.align	2
 372              	.L27:
ARM GAS  /tmp/ccmb4xzG.s 			page 12


 373 0014 00000000 		.word	k_scheduler
 374              		.cfi_endproc
 375              	.LFE252:
 377              		.section	.rodata.init_all_scheduler.str1.4,"aMS",%progbits,1
 378              		.align	2
 379              	.LC3:
 380 0000 50726565 		.ascii	"Preemptive\000"
 380      6D707469 
 380      766500
 381 000b 00       		.align	2
 382              	.LC4:
 383 000c 73797374 		.ascii	"system_default_task\000"
 383      656D5F64 
 383      65666175 
 383      6C745F74 
 383      61736B00 
 384              		.section	.text.init_all_scheduler,"ax",%progbits
 385              		.align	1
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 390              	init_all_scheduler:
 391              	.LFB255:
  72:./kernel/sched/sched.c ****     for(int i =0 ;i < CONFIG_CPU_NUM ;i++){
 392              		.loc 1 72 37 is_stmt 1 view -0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396 0000 10B5     		push	{r4, lr}
 397              	.LCFI9:
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
 401 0002 82B0     		sub	sp, sp, #8
 402              	.LCFI10:
 403              		.cfi_def_cfa_offset 16
  73:./kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
 404              		.loc 1 73 5 view .LVU76
 405              	.LBB8:
  73:./kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
 406              		.loc 1 73 9 view .LVU77
 407              	.LVL27:
  73:./kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
 408              		.loc 1 73 13 is_stmt 0 view .LVU78
 409 0004 0024     		movs	r4, #0
 410              	.LVL28:
 411              	.L30:
  73:./kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
 412              		.loc 1 73 21 is_stmt 1 discriminator 1 view .LVU79
 413 0006 002C     		cmp	r4, #0
 414 0008 01DD     		ble	.L31
 415              	.LBE8:
  77:./kernel/sched/sched.c **** 
 416              		.loc 1 77 1 is_stmt 0 view .LVU80
 417 000a 02B0     		add	sp, sp, #8
 418              	.LCFI11:
 419              		.cfi_remember_state
ARM GAS  /tmp/ccmb4xzG.s 			page 13


 420              		.cfi_def_cfa_offset 8
 421              		@ sp needed
 422 000c 10BD     		pop	{r4, pc}
 423              	.LVL29:
 424              	.L31:
 425              	.LCFI12:
 426              		.cfi_restore_state
 427              	.LBB9:
  74:./kernel/sched/sched.c ****         task_run(default_task,512,10,1,"system_default_task",i);
 428              		.loc 1 74 9 is_stmt 1 view .LVU81
 429 000e 2046     		mov	r0, r4
 430 0010 FFF7FEFF 		bl	get_scheduler_by_cpu_core_id
 431              	.LVL30:
  74:./kernel/sched/sched.c ****         task_run(default_task,512,10,1,"system_default_task",i);
 432              		.loc 1 74 9 is_stmt 0 discriminator 1 view .LVU82
 433 0014 0749     		ldr	r1, .L33
 434 0016 FFF7FEFF 		bl	scheduler_init
 435              	.LVL31:
  75:./kernel/sched/sched.c ****     }
 436              		.loc 1 75 9 is_stmt 1 view .LVU83
 437 001a 0194     		str	r4, [sp, #4]
 438 001c 064B     		ldr	r3, .L33+4
 439 001e 0093     		str	r3, [sp]
 440 0020 0123     		movs	r3, #1
 441 0022 0A22     		movs	r2, #10
 442 0024 4FF40071 		mov	r1, #512
 443 0028 0448     		ldr	r0, .L33+8
 444 002a FFF7FEFF 		bl	task_run
 445              	.LVL32:
  73:./kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
 446              		.loc 1 73 40 discriminator 3 view .LVU84
 447 002e 0134     		adds	r4, r4, #1
 448              	.LVL33:
  73:./kernel/sched/sched.c ****         scheduler_init(get_scheduler_by_cpu_core_id(i),sched_config[i]);
 449              		.loc 1 73 40 is_stmt 0 discriminator 3 view .LVU85
 450 0030 E9E7     		b	.L30
 451              	.L34:
 452 0032 00BF     		.align	2
 453              	.L33:
 454 0034 00000000 		.word	.LC3
 455 0038 0C000000 		.word	.LC4
 456 003c 00000000 		.word	default_task
 457              	.LBE9:
 458              		.cfi_endproc
 459              	.LFE255:
 461              		.section	.rodata.sched_init.str1.4,"aMS",%progbits,1
 462              		.align	2
 463              	.LC5:
 464 0000 696E6974 		.ascii	"init all scheduler\012\000"
 464      20616C6C 
 464      20736368 
 464      6564756C 
 464      65720A00 
 465              		.section	.text.sched_init,"ax",%progbits
 466              		.align	1
 467              		.global	sched_init
 468              		.syntax unified
ARM GAS  /tmp/ccmb4xzG.s 			page 14


 469              		.thumb
 470              		.thumb_func
 472              	sched_init:
 473              	.LFB257:
  97:./kernel/sched/sched.c ****     pr_info("init all scheduler\n");
 474              		.loc 1 97 18 is_stmt 1 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 08B5     		push	{r3, lr}
 479              	.LCFI13:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 3, -8
 482              		.cfi_offset 14, -4
  98:./kernel/sched/sched.c ****     init_all_scheduler();    
 483              		.loc 1 98 5 view .LVU87
 484 0002 0348     		ldr	r0, .L37
 485 0004 FFF7FEFF 		bl	printk
 486              	.LVL34:
  99:./kernel/sched/sched.c **** }
 487              		.loc 1 99 5 view .LVU88
 488 0008 FFF7FEFF 		bl	init_all_scheduler
 489              	.LVL35:
 100:./kernel/sched/sched.c **** core_initcall_sync(sched_init);
 490              		.loc 1 100 1 is_stmt 0 view .LVU89
 491 000c 08BD     		pop	{r3, pc}
 492              	.L38:
 493 000e 00BF     		.align	2
 494              	.L37:
 495 0010 00000000 		.word	.LC5
 496              		.cfi_endproc
 497              	.LFE257:
 499              		.section	.text.Scheduler_Task,"ax",%progbits
 500              		.align	1
 501              		.global	Scheduler_Task
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 506              	Scheduler_Task:
 507              	.LVL36:
 508              	.LFB256:
  80:./kernel/sched/sched.c ****     struct scheduler * curren_scheduler = get_current_scheduler();
 509              		.loc 1 80 1 is_stmt 1 view -0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
  80:./kernel/sched/sched.c ****     struct scheduler * curren_scheduler = get_current_scheduler();
 513              		.loc 1 80 1 is_stmt 0 view .LVU91
 514 0000 38B5     		push	{r3, r4, r5, lr}
 515              	.LCFI14:
 516              		.cfi_def_cfa_offset 16
 517              		.cfi_offset 3, -16
 518              		.cfi_offset 4, -12
 519              		.cfi_offset 5, -8
 520              		.cfi_offset 14, -4
 521 0002 0546     		mov	r5, r0
  81:./kernel/sched/sched.c ****     if(curren_scheduler->s_flag == SCHEDULER_BLOCKED )
ARM GAS  /tmp/ccmb4xzG.s 			page 15


 522              		.loc 1 81 5 is_stmt 1 view .LVU92
  81:./kernel/sched/sched.c ****     if(curren_scheduler->s_flag == SCHEDULER_BLOCKED )
 523              		.loc 1 81 43 is_stmt 0 view .LVU93
 524 0004 FFF7FEFF 		bl	get_current_scheduler
 525              	.LVL37:
  82:./kernel/sched/sched.c ****     return context;
 526              		.loc 1 82 5 is_stmt 1 view .LVU94
  82:./kernel/sched/sched.c ****     return context;
 527              		.loc 1 82 24 is_stmt 0 view .LVU95
 528 0008 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
  82:./kernel/sched/sched.c ****     return context;
 529              		.loc 1 82 7 view .LVU96
 530 000a 73B1     		cbz	r3, .L40
 531 000c 0446     		mov	r4, r0
  85:./kernel/sched/sched.c ****     save_context(curren_scheduler->current_task, context);
 532              		.loc 1 85 5 is_stmt 1 view .LVU97
  85:./kernel/sched/sched.c ****     save_context(curren_scheduler->current_task, context);
 533              		.loc 1 85 24 is_stmt 0 view .LVU98
 534 000e 0069     		ldr	r0, [r0, #16]
 535              	.LVL38:
  85:./kernel/sched/sched.c ****     save_context(curren_scheduler->current_task, context);
 536              		.loc 1 85 7 view .LVU99
 537 0010 10B1     		cbz	r0, .L41
  86:./kernel/sched/sched.c ****     struct task_struct* t1 = curren_scheduler->current_task;
 538              		.loc 1 86 5 is_stmt 1 view .LVU100
 539 0012 2946     		mov	r1, r5
 540 0014 FFF7FEFF 		bl	save_context
 541              	.LVL39:
 542              	.L41:
  87:./kernel/sched/sched.c ****     curren_scheduler->current_task = curren_scheduler->t_pop->get_next_task(curren_scheduler);
 543              		.loc 1 87 5 view .LVU101
  88:./kernel/sched/sched.c ****     if(curren_scheduler->current_task!= NULL)
 544              		.loc 1 88 5 view .LVU102
  88:./kernel/sched/sched.c ****     if(curren_scheduler->current_task!= NULL)
 545              		.loc 1 88 54 is_stmt 0 view .LVU103
 546 0018 A368     		ldr	r3, [r4, #8]
  88:./kernel/sched/sched.c ****     if(curren_scheduler->current_task!= NULL)
 547              		.loc 1 88 61 view .LVU104
 548 001a 1B68     		ldr	r3, [r3]
  88:./kernel/sched/sched.c ****     if(curren_scheduler->current_task!= NULL)
 549              		.loc 1 88 38 view .LVU105
 550 001c 2046     		mov	r0, r4
 551 001e 9847     		blx	r3
 552              	.LVL40:
  88:./kernel/sched/sched.c ****     if(curren_scheduler->current_task!= NULL)
 553              		.loc 1 88 36 discriminator 1 view .LVU106
 554 0020 2061     		str	r0, [r4, #16]
  89:./kernel/sched/sched.c ****     return load_task(curren_scheduler->current_task);        
 555              		.loc 1 89 5 is_stmt 1 view .LVU107
  89:./kernel/sched/sched.c ****     return load_task(curren_scheduler->current_task);        
 556              		.loc 1 89 7 is_stmt 0 view .LVU108
 557 0022 10B1     		cbz	r0, .L40
  90:./kernel/sched/sched.c ****     else
 558              		.loc 1 90 5 is_stmt 1 view .LVU109
  90:./kernel/sched/sched.c ****     else
 559              		.loc 1 90 12 is_stmt 0 view .LVU110
 560 0024 FFF7FEFF 		bl	load_task
ARM GAS  /tmp/ccmb4xzG.s 			page 16


 561              	.LVL41:
 562 0028 0546     		mov	r5, r0
 563              	.LVL42:
 564              	.L40:
  93:./kernel/sched/sched.c **** 
 565              		.loc 1 93 1 view .LVU111
 566 002a 2846     		mov	r0, r5
 567 002c 38BD     		pop	{r3, r4, r5, pc}
 568              		.cfi_endproc
 569              	.LFE256:
 571              		.section	.postcore_initcall_sync,"aw"
 572              		.align	2
 575              	_initcall_sched_start:
 576 0000 00000000 		.word	sched_start
 577              		.section	.core_initcall_sync,"aw"
 578              		.align	2
 581              	_initcall_sched_init:
 582 0000 00000000 		.word	sched_init
 583              		.section	.bss.k_scheduler,"aw",%nobits
 584              		.align	2
 587              	k_scheduler:
 588 0000 00000000 		.space	20
 588      00000000 
 588      00000000 
 588      00000000 
 588      00000000 
 589              		.text
 590              	.Letext0:
 591              		.file 4 "./include/asm-generic/int-l64.h"
 592              		.file 5 "./include/asm-generic/posix_types.h"
 593              		.file 6 "./include/linux/types.h"
 594              		.file 7 "./include/linux/init.h"
 595              		.file 8 "./include/linux/time64.h"
 596              		.file 9 "./arch/arm_m/include/asm/sched.h"
 597              		.file 10 "./include/linux/sched.h"
 598              		.file 11 "./arch/arm_m/include/asm/spinlock.h"
 599              		.file 12 "./include/linux/spinlock_types_raw.h"
 600              		.file 13 "./include/linux/spinlock_types.h"
 601              		.file 14 "./include/linux/mutex.h"
 602              		.file 15 "./include/linux/error.h"
 603              		.file 16 "./include/linux/sys_call.h"
 604              		.file 17 "./include/linux/printk.h"
ARM GAS  /tmp/ccmb4xzG.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 sched.c
     /tmp/ccmb4xzG.s:21     .text.save_context:00000000 $t
     /tmp/ccmb4xzG.s:26     .text.save_context:00000000 save_context
     /tmp/ccmb4xzG.s:44     .text.load_task:00000000 $t
     /tmp/ccmb4xzG.s:49     .text.load_task:00000000 load_task
     /tmp/ccmb4xzG.s:67     .rodata.default_task.str1.4:00000000 $d
     /tmp/ccmb4xzG.s:71     .text.default_task:00000000 $t
     /tmp/ccmb4xzG.s:77     .text.default_task:00000000 default_task
     /tmp/ccmb4xzG.s:131    .text.default_task:00000024 $d
     /tmp/ccmb4xzG.s:138    .rodata.scheduler_init.str1.4:00000000 $d
     /tmp/ccmb4xzG.s:145    .text.scheduler_init:00000000 $t
     /tmp/ccmb4xzG.s:150    .text.scheduler_init:00000000 scheduler_init
     /tmp/ccmb4xzG.s:246    .text.scheduler_init:00000040 $d
     /tmp/ccmb4xzG.s:252    .text.user_system_call:00000000 $t
     /tmp/ccmb4xzG.s:257    .text.user_system_call:00000000 user_system_call
     /tmp/ccmb4xzG.s:293    .text.sched_start:00000000 $t
     /tmp/ccmb4xzG.s:299    .text.sched_start:00000000 sched_start
     /tmp/ccmb4xzG.s:338    .text.get_scheduler_by_cpu_core_id:00000000 $t
     /tmp/ccmb4xzG.s:344    .text.get_scheduler_by_cpu_core_id:00000000 get_scheduler_by_cpu_core_id
     /tmp/ccmb4xzG.s:373    .text.get_scheduler_by_cpu_core_id:00000014 $d
     /tmp/ccmb4xzG.s:587    .bss.k_scheduler:00000000 k_scheduler
     /tmp/ccmb4xzG.s:378    .rodata.init_all_scheduler.str1.4:00000000 $d
     /tmp/ccmb4xzG.s:385    .text.init_all_scheduler:00000000 $t
     /tmp/ccmb4xzG.s:390    .text.init_all_scheduler:00000000 init_all_scheduler
     /tmp/ccmb4xzG.s:454    .text.init_all_scheduler:00000034 $d
     /tmp/ccmb4xzG.s:462    .rodata.sched_init.str1.4:00000000 $d
     /tmp/ccmb4xzG.s:466    .text.sched_init:00000000 $t
     /tmp/ccmb4xzG.s:472    .text.sched_init:00000000 sched_init
     /tmp/ccmb4xzG.s:495    .text.sched_init:00000010 $d
     /tmp/ccmb4xzG.s:500    .text.Scheduler_Task:00000000 $t
     /tmp/ccmb4xzG.s:506    .text.Scheduler_Task:00000000 Scheduler_Task
     /tmp/ccmb4xzG.s:572    .postcore_initcall_sync:00000000 $d
     /tmp/ccmb4xzG.s:575    .postcore_initcall_sync:00000000 _initcall_sched_start
     /tmp/ccmb4xzG.s:578    .core_initcall_sync:00000000 $d
     /tmp/ccmb4xzG.s:581    .core_initcall_sync:00000000 _initcall_sched_init
     /tmp/ccmb4xzG.s:584    .bss.k_scheduler:00000000 $d

UNDEFINED SYMBOLS
printk
find_task_pool
__system_call
change_to_task_mode
scheduler_start
task_run
get_current_scheduler
