ARM GAS  /tmp/ccQOnTG0.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"pipefs.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c"
  20              		.section	.text.__spin_init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__spin_init:
  27              	.LVL0:
  28              	.LFB850:
  29              		.file 2 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h"
   1:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** #ifndef __SPIN_LOCK_H_
   2:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** #define __SPIN_LOCK_H_
   3:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
   4:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** #include <linux/sched.h>
   5:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
   6:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** typedef struct { 
   7:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****      int flag; 
   8:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** } arch_spinlock_t;
   9:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  10:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** static int __spin_init(arch_spinlock_t *lock) 
  11:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** {
  30              		.loc 2 11 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  12:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     lock->flag = 0;
  35              		.loc 2 12 5 view .LVU1
  36              		.loc 2 12 16 is_stmt 0 view .LVU2
  37 0000 0023     		movs	r3, #0
  38 0002 0360     		str	r3, [r0]
  39              	.LVL1:
  13:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** }
  40              		.loc 2 13 1 view .LVU3
  41 0004 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE850:
  45              		.section	.text.__spin_unlock,"ax",%progbits
  46              		.align	1
ARM GAS  /tmp/ccQOnTG0.s 			page 2


  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	__spin_unlock:
  52              	.LVL2:
  53              	.LFB852:
  14:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  15:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** static int __spin_lock(arch_spinlock_t *lock) {
  16:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  17:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     stop_all_scheduler();
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     if(lock->flag == 0){
  19:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
  20:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
  21:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         return 1;
  22:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
  23:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     else
  24:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     {
  25:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         start_all_scheduler();
  26:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         return 0;
  27:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
  28:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** }
  29:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  30:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** static void  __spin_unlock( arch_spinlock_t *lock ){
  54              		.loc 2 30 52 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  31:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     lock->flag = 0;
  59              		.loc 2 31 5 view .LVU5
  60              		.loc 2 31 16 is_stmt 0 view .LVU6
  61 0000 0023     		movs	r3, #0
  62 0002 0360     		str	r3, [r0]
  32:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** }
  63              		.loc 2 32 1 view .LVU7
  64 0004 7047     		bx	lr
  65              		.cfi_endproc
  66              	.LFE852:
  68              		.section	.text.spin_lock_init,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	spin_lock_init:
  75              	.LVL3:
  76              	.LFB853:
  77              		.file 3 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #ifndef __SPINLOCK_H__
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #define __SPINLOCK_H__
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #include <linux/types.h>
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #include <linux/spinlock_types.h>
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #include <linux/sched.h>
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** static void spin_lock_init(spinlock_t* lock){
ARM GAS  /tmp/ccQOnTG0.s 			page 3


  78              		.loc 3 10 45 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		.loc 3 10 45 is_stmt 0 view .LVU9
  83 0000 08B5     		push	{r3, lr}
  84              	.LCFI0:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 3, -8
  87              		.cfi_offset 14, -4
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     __spin_init(&lock->rlock.raw_lock);
  88              		.loc 3 11 5 is_stmt 1 view .LVU10
  89 0002 FFF7FEFF 		bl	__spin_init
  90              	.LVL4:
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** }
  91              		.loc 3 12 1 is_stmt 0 view .LVU11
  92 0006 08BD     		pop	{r3, pc}
  93              		.cfi_endproc
  94              	.LFE853:
  96              		.section	.text.spin_unlock,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	spin_unlock:
 103              	.LVL5:
 104              	.LFB855:
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** static void spin_lock(spinlock_t* lock)
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** {  
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     while (1)
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     {
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         if(__spin_lock(&lock->rlock.raw_lock) == 1){
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             lock->owner = get_current_task();
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             break;
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         else  if(lock->owner == get_current_task()){  //Â¶ÇÊûúÂ∑≤ÁªèË¢´ÈîÅ‰Ωè‰ΩÜÊòØÈîÅÊòØËá™Â∑±ÁöÑÔ
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         else{
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             __delay(5); //‰∏ªÂä®ËÆ©Âá∫Êó∂Èó¥Áâá
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     }
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** }
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** static void spin_unlock(spinlock_t* lock)
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** {
 105              		.loc 3 32 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		.loc 3 32 1 is_stmt 0 view .LVU13
 110 0000 08B5     		push	{r3, lr}
 111              	.LCFI1:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 3, -8
 114              		.cfi_offset 14, -4
ARM GAS  /tmp/ccQOnTG0.s 			page 4


  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     __spin_unlock(&lock->rlock.raw_lock);
 115              		.loc 3 33 5 is_stmt 1 view .LVU14
 116 0002 FFF7FEFF 		bl	__spin_unlock
 117              	.LVL6:
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** }
 118              		.loc 3 34 1 is_stmt 0 view .LVU15
 119 0006 08BD     		pop	{r3, pc}
 120              		.cfi_endproc
 121              	.LFE855:
 123              		.section	.text.pipefs_statfs,"ax",%progbits
 124              		.align	1
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 129              	pipefs_statfs:
 130              	.LVL7:
 131              	.LFB1058:
   1:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** #include <linux/kernel.h>
   2:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** #include <linux/uaccess.h>
   3:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** #include <linux/atomic.h>
   4:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** #include <linux/types.h>
   5:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** #include <linux/module.h>
   6:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** #include <linux/string.h>
   7:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** #include <linux/fs.h>
   8:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** #include <linux/slab.h>
   9:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** #include <linux/init.h>
  10:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** #include <linux/sched.h>
  11:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  12:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  13:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  14:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  15:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** #define MAGIC 12345678
  16:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** struct pipefs_dentry {
  17:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     int                    magic;
  18:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     char *name;                             // ÂêçÂ≠ó
  19:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *target_inode;       // ËØ•dentryÊåáÂêëÁöÑÁõÆÊ†áinode
  20:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct list_head list_node;             // ÊåÇËΩΩÂà∞Áà∂ÁõÆÂΩïinode‰∏≠ÁöÑlisthead‰∏≠
  21:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** };
  22:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** struct pipefs_superblock {
  23:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     int                    magic;
  24:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spinlock_t             lock;
  25:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *rootinode;
  26:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct list_head inode_list_head;       // ËØ•superblock‰∏ãÁöÑinodeÈìæË°®Â§¥
  27:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** };
  28:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  29:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  30:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** int pipe_buffer_read(struct pipe_buffer *buf, char* data) 
  31:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
  32:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock(&buf->lock);
  33:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  34:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (buf->head == buf->tail) {
  35:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
  36:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1; // Buffer empty
  37:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
  38:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  39:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     data[0] = buf->buffer[buf->tail];
  40:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     buf->tail = (buf->tail + 1) % buf->size;
ARM GAS  /tmp/ccQOnTG0.s 			page 5


  41:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  42:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_unlock(&buf->lock);
  43:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
  44:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
  45:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  46:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** int pipe_buffer_write(struct pipe_buffer *buf, char data)
  47:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
  48:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock(&buf->lock);
  49:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  50:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if ((buf->head + 1) % buf->size == buf->tail) {
  51:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
  52:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1; // Buffer full
  53:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
  54:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  55:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     buf->buffer[buf->head] = data;
  56:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     buf->head = (buf->head + 1) % buf->size;
  57:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  58:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_unlock(&buf->lock);
  59:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
  60:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
  61:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  62:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  63:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_open(struct inode *inode, struct file *file)
  64:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
  65:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *p_inode = inode->i_private;
  66:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(p_inode->buf == NULL)
  67:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
  68:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         p_inode->buf = kmalloc(sizeof(struct pipe_buffer),GFP_KERNEL);
  69:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(!p_inode->buf)
  70:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****            return -1;
  71:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
  72:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
  73:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
  74:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  75:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_release(struct inode *inode, struct file *file){
  76:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pr_info("pipefs test close\n");
  77:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
  78:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
  79:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  80:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_read(struct file *file, char __user * data, size_t size, loff_t *offset)
  81:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {    
  82:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     for(int i = 0;i < size;i++)
  83:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
  84:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         while (pipe_buffer_read(((struct pipefs_inode*)(file->f_inode->i_private))->buf,&data[i]) <
  85:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             __delay(1);
  86:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
  87:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
  88:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
  89:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
  90:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
  91:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_write(struct file *file, char __user * data, size_t size, loff_t *offset){
  92:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     int i;
  93:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     for(i = 0;i < size;i++)
  94:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
  95:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         while (pipe_buffer_write(((struct pipefs_inode*)(file->f_inode->i_private))->buf,data[i]) <
  96:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             __delay(1);
  97:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
ARM GAS  /tmp/ccQOnTG0.s 			page 6


  98:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
  99:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 100:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 101:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 102:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 103:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 104:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 105:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 106:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct file_operations pipefs_file_fops = {
 107:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .owner = THIS_MODULE,
 108:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .open = pipefs_open,
 109:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .release = pipefs_release,
 110:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .read  = pipefs_read,
 111:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .write = pipefs_write
 112:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** };
 113:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 114:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct pipefs_inode *pipefs_create_empty_inode(struct pipefs_superblock *sb,struct file_oper
 115:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 116:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(fop == NULL) return NULL;
 117:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *pipe_inode = kmalloc(sizeof(struct pipefs_inode),GFP_KERNEL);
 118:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(pipe_inode == NULL) return NULL;
 119:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->magic = MAGIC;
 120:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->major = major;
 121:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->i_fop = fop;
 122:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->sb    = sb;
 123:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->i_mode = S_IFREG | 0755;
 124:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     atomic_set(&pipe_inode->dentry_count,0);
 125:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock_init(&pipe_inode->lock);
 126:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     INIT_LIST_HEAD(&pipe_inode->list_node);
 127:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     INIT_LIST_HEAD(&pipe_inode->dentry_list_head);
 128:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 129:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->buf = NULL;
 130:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 131:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock(&sb->lock);
 132:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     list_add(&pipe_inode->list_node,&sb->inode_list_head);
 133:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_unlock(&sb->lock);
 134:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 135:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return pipe_inode;
 136:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 137:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static void pipefs_inode_put(struct pipefs_inode *node){
 138:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(node != NULL)
 139:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 140:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(node->buf){
 141:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             kfree(node->buf);
 142:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 143:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(node);
 144:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 145:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 146:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct pipefs_dentry* pipefs_create_dentry(struct pipefs_inode* parent_dentry_inode,struct p
 147:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 148:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(parent_dentry_inode == NULL || name == NULL || target_inode == NULL) return NULL;
 149:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 150:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* new_dentry =  kmalloc(sizeof(struct pipefs_dentry),GFP_KERNEL);
 151:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_dentry == NULL)return NULL;
 152:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     new_dentry->magic = MAGIC;
 153:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     new_dentry->name = NULL;
 154:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     new_dentry->name = kmalloc(strlen(name) + 1,GFP_KERNEL);
ARM GAS  /tmp/ccQOnTG0.s 			page 7


 155:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_dentry->name  == NULL) {
 156:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(new_dentry);
 157:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 158:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 159:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     strcpy(new_dentry->name,name);
 160:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     new_dentry->target_inode = target_inode;
 161:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     INIT_LIST_HEAD(&new_dentry->list_node);
 162:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 163:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 164:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     atomic_inc (&target_inode->dentry_count);      //Â¢ûÂä†ÂºïÁî®ËÆ°Êï∞
 165:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 166:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 167:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock   (&parent_dentry_inode->lock);
 168:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     list_add    (&new_dentry->list_node,&parent_dentry_inode->dentry_list_head);
 169:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_unlock(&parent_dentry_inode->lock);
 170:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return new_dentry;
 171:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 172:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct pipefs_dentry* pipefs_create_inode( struct pipefs_superblock *sb,struct pipefs_inode*
 173:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 174:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode * new_inode = pipefs_create_empty_inode(sb,fop,major);
 175:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_inode == NULL){
 176:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 177:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }   
 178:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* new_dentry = pipefs_create_dentry(parent_dentry_inode,new_inode,name); //
 179:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_dentry == NULL){
 180:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_lock(&sb->lock);
 181:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         list_del(&new_inode->list_node);
 182:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&sb->lock);
 183:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         pipefs_inode_put(new_inode);
 184:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 185:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 186:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return new_dentry;
 187:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 188:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct pipefs_dentry* pipefs_create_file(struct pipefs_superblock *sb,struct pipefs_inode* p
 189:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 190:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return pipefs_create_inode(sb,parent_dentry_inode,fop,major,name);
 191:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 192:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 193:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct pipefs_dentry* pipefs_create_dir(struct pipefs_superblock *sb,struct pipefs_inode* pa
 194:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 195:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* dentry =  pipefs_create_inode(sb,parent_dentry_inode,&pipefs_file_fops,0,
 196:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry == NULL) return NULL;
 197:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->target_inode->i_mode = S_IFDIR | 0755;
 198:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return dentry;
 199:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 200:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static void dentry_put(struct pipefs_superblock *sb,struct pipefs_dentry* dentry)
 201:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 202:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry == NULL) return;
 203:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry->target_inode != NULL)
 204:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 205:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_lock(&sb->lock);
 206:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (atomic_dec_and_test(&dentry->target_inode->dentry_count)) //Ê£ÄÊµãinodeÂºïÁî®ËÆ°Êï∞ÊòØÂ
 207:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         {
 208:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             list_del(&dentry->target_inode->list_node);    
 209:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             pipefs_inode_put(dentry->target_inode);
 210:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 211:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&sb->lock);
ARM GAS  /tmp/ccQOnTG0.s 			page 8


 212:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 213:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     kfree(dentry->name);
 214:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     kfree(dentry);
 215:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 216:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static void pipefs_delete_dentry(struct pipefs_superblock *sb,struct pipefs_inode* parent_dentry_in
 217:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(parent_dentry_inode != NULL) spin_lock(&parent_dentry_inode->lock);
 218:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 219:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if ((delete_dentry->target_inode->i_mode & S_IFMT) == S_IFDIR ){         //Â¶ÇÊûúÊòØÁõÆÂΩïÈ°πÈú
 220:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(!list_empty(&delete_dentry->target_inode->dentry_list_head)){      //Â¶ÇÊûúÁõÆÂΩï‰∏ãÁöÑi
 221:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             if(parent_dentry_inode != NULL) 
 222:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****                 spin_unlock(&parent_dentry_inode->lock);
 223:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             return;
 224:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 225:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 226:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     list_del(&delete_dentry->list_node);                                     //Â∞Üdentry‰ªéÁà∂ÁõÆÂΩ
 227:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(parent_dentry_inode != NULL) spin_unlock(&parent_dentry_inode->lock);
 228:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry_put(sb,delete_dentry);
 229:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 230:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct pipefs_superblock* pipefs_superblock_create(void) //ÂàõÂª∫superblock
 231:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 232:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_superblock*d_sb = kmalloc(sizeof(struct pipefs_superblock),GFP_KERNEL);
 233:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(d_sb == NULL){
 234:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;        
 235:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 236:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     d_sb->magic = MAGIC;
 237:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock_init(&d_sb->lock);
 238:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     INIT_LIST_HEAD(&d_sb->inode_list_head);
 239:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode* root_inode = pipefs_create_empty_inode(d_sb ,&pipefs_file_fops,0);
 240:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(root_inode == NULL){
 241:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(d_sb);
 242:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 243:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 244:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     root_inode->i_mode = S_IFDIR | 0755;
 245:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     d_sb->rootinode = root_inode;
 246:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     root_inode->i_fop = &pipefs_file_fops;
 247:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     atomic_inc (&root_inode->dentry_count); 
 248:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     INIT_LIST_HEAD(&root_inode->dentry_list_head);
 249:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return d_sb;
 250:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** } 
 251:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static void pipefs_superblock_destory(struct pipefs_superblock* sb){
 252:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(sb!= NULL) {
 253:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         struct pipefs_inode * root_inode = sb->rootinode;
 254:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(!root_inode){
 255:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             kfree(root_inode);
 256:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 257:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(sb);
 258:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 259:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 260:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 261:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct pipefs_dentry* pipefs_lookup(struct pipefs_inode* dentry_inode,char *name)
 262:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 263:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry_inode == NULL) return NULL;
 264:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if ( (dentry_inode->i_mode & S_IFMT) != S_IFDIR ) return NULL;
 265:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* pos;
 266:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock(&dentry_inode->lock);
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     list_for_each_entry(pos, &dentry_inode->dentry_list_head,list_node ) {
 268:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
ARM GAS  /tmp/ccQOnTG0.s 			page 9


 269:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             spin_unlock(&dentry_inode->lock);
 270:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             return pos;
 271:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 272:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 273:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_unlock(&dentry_inode->lock);
 274:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return NULL;
 275:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 276:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 277:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 278:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 279:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 280:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 281:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 282:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 283:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 284:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 285:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct super_operations pipefs_super_operation;
 286:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct dentry_operations pipefs_dentry_operation;
 287:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct inode_operations pipefs_inode_operation;
 288:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 289:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static void pipefs_kill_sb (struct super_block * sb);
 290:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct inode *pipefs_alloc_inode(struct super_block *sb);
 291:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static void  pipefs_destroy_inode(struct inode * node); //Êí§ÈîÄpipefs_alloc_inodeÊâÄÂÅöÁöÑ‰∏ÄÂàá
 292:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_statfs (struct dentry * dentry, struct kstatfs *star);
 293:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct dentry * pipefs_get_dentry(struct dentry * vdentry, struct pipefs_dentry *dentry);
 294:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct super_block *pipefs_get_vfs_superblock(struct pipefs_superblock *sb);
 295:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct inode *  pipefs_get_inode(struct pipefs_inode *,struct super_block*);
 296:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct dentry *pipefs_mount(struct file_system_type *fs_type,
 297:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     int flags,
 298:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     const char *pipe_name,
 299:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     void *data);
 300:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 301:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct file_system_type fs_type = {
 302:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .name     = "pipefs",
 303:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .fs_flags = 0,
 304:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .init_fs_context = NULL,
 305:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .kill_sb  = pipefs_kill_sb,
 306:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .mount    = pipefs_mount,
 307:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .owner    = THIS_MODULE,
 308:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** };
 309:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 310:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct dentry *pipefs_mount(struct file_system_type *fs_type,
 311:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     int flags,
 312:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     const char *pipe_name,
 313:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     void *data)
 314:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 315:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_superblock *fs_superblock= pipefs_superblock_create();
 316:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (fs_superblock == NULL){
 317:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return ERR_PTR(-ENOMEM);        
 318:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 319:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct dentry * root = __d_alloc(NULL,"root");
 320:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(root == NULL){
 321:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         pipefs_superblock_destory(fs_superblock);
 322:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return ERR_PTR(-ENOMEM);   
 323:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 324:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 325:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
ARM GAS  /tmp/ccQOnTG0.s 			page 10


 326:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* dentry = kmalloc(sizeof(struct pipefs_dentry),GFP_KERNEL);
 327:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry == NULL){
 328:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****        
 329:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(root);
 330:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return ERR_PTR(-ENOMEM);        
 331:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 332:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->name = NULL;
 333:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->target_inode = fs_superblock->rootinode;
 334:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->magic =MAGIC;
 335:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     root->d_fsdata = dentry;
 336:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct inode * root_inode = pipefs_get_inode(dentry->target_inode,NULL);
 337:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(root_inode == NULL){
 338:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(dentry);
 339:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         pipefs_superblock_destory(fs_superblock);
 340:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(root);
 341:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return ERR_PTR(-ENOMEM);        
 342:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     } 
 343:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     root->d_inode = root_inode;
 344:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 345:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct super_block *sb =pipefs_get_vfs_superblock(fs_superblock);
 346:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(sb == NULL){
 347:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(root);
 348:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(dentry);
 349:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         inode_put(root_inode);
 350:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         pipefs_superblock_destory(fs_superblock);
 351:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return ERR_PTR(-ENOMEM);       
 352:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 353:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     sb->s_root = root;
 354:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     root->d_sb = sb;
 355:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return root;
 356:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 357:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 358:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 359:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 360:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct super_operations pipefs_super_operation = {
 361:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .alloc_inode   = pipefs_alloc_inode,
 362:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .destroy_inode = pipefs_destroy_inode, 
 363:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .free_inode    = NULL,         
 364:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .dirty_inode   = NULL,
 365:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .write_inode   = NULL,
 366:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .drop_inode    = NULL,
 367:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .put_super     = pipefs_kill_sb,
 368:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .sync_fs       = NULL,
 369:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .statfs        = pipefs_statfs,
 370:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** };
 371:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 372:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct super_block *pipefs_get_vfs_superblock(struct pipefs_superblock *sb) //Â∞ÜÊñá‰ª∂Á≥ªÁª
 373:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 374:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(sb == NULL) return NULL;
 375:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct super_block * vsb  = alloc_super(NULL);                        //ÂàÜÈÖç‰∫Ü‰∏Ä‰∏™superblo
 376:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(vsb == NULL) return NULL;
 377:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     vsb->s_fs_info =   sb;
 378:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     vsb->s_d_op    =  &pipefs_dentry_operation;
 379:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     vsb->s_op      =  &pipefs_super_operation;    
 380:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return vsb;
 381:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 382:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
ARM GAS  /tmp/ccQOnTG0.s 			page 11


 383:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 384:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static void pipefs_kill_sb (struct super_block * sb){                          //ÈáäÊîæÊñá‰ª∂Á≥ªÁªü
 385:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     put_super(sb);
 386:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 387:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 388:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct inode *  pipefs_get_inode(struct pipefs_inode * pipe_node,struct super_block* sb )  /
 389:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 390:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(pipe_node == NULL) return NULL;
 391:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct inode*inode  =  new_inode(sb); //Ê≠§Â§ÑÂä®ÊÄÅÂàõÂª∫‰∫Ü‰∏Ä‰∏™inode,ÈúÄË¶ÅÂêéÁª≠ÈáäÊîæ
 392:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(inode == NULL) return NULL;  
 393:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_mode    = pipe_node->i_mode;
 394:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_fop     = pipe_node->i_fop;
 395:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_op      = &pipefs_inode_operation;
 396:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_private = pipe_node;
 397:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return inode;
 398:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 399:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 400:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct inode *pipefs_alloc_inode(struct super_block *sb) //ÂàõÂª∫‰∏Ä‰∏™inodeÔºåÂêåÊó∂ÂàõÂª∫i
 401:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 402:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_superblock *supb = sb->s_fs_info;
 403:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(supb->magic != MAGIC) return NULL;
 404:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      struct pipefs_inode * inode = pipefs_create_empty_inode(supb,&pipefs_file_fops,10); //Êñá‰ª∂Á≥
 405:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      if(inode == NULL) return NULL;
 406:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      struct inode *out_inode = pipefs_get_inode(inode,sb);
 407:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      if(out_inode == NULL){
 408:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(inode);
 409:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 410:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      }
 411:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      return out_inode;
 412:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 413:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 414:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 415:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 416:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static void  pipefs_destroy_inode(struct inode * node) //Êí§ÈîÄpipefs_alloc_inodeÊâÄÂÅöÁöÑ‰∏ÄÂàá
 417:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 418:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(node == NULL) return;
 419:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(node->i_private != NULL) {
 420:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         struct pipefs_inode * pipe_node = node->i_private;
 421:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         list_del(&pipe_node->list_node);
 422:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(pipe_node);        
 423:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 424:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 425:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 426:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_statfs (struct dentry * dentry, struct kstatfs *star){
 132              		.loc 1 426 72 is_stmt 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 427:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry * pipefs_dentry = dentry->d_fsdata;
 137              		.loc 1 427 5 view .LVU17
 428:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode * pipefs_node = pipefs_dentry->target_inode;
 138              		.loc 1 428 5 view .LVU18
 429:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     star->f_type = MAGIC;
 139              		.loc 1 429 5 view .LVU19
 140              		.loc 1 429 18 is_stmt 0 view .LVU20
 141 0000 064B     		ldr	r3, .L8
ARM GAS  /tmp/ccQOnTG0.s 			page 12


 142 0002 0B60     		str	r3, [r1]
 143              	.LVL8:
 430:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     star->f_bsize  = 0;
 144              		.loc 1 430 5 is_stmt 1 view .LVU21
 145              		.loc 1 430 20 is_stmt 0 view .LVU22
 146 0004 0020     		movs	r0, #0
 147              	.LVL9:
 148              		.loc 1 430 20 view .LVU23
 149 0006 4860     		str	r0, [r1, #4]
 431:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     star->f_blocks = 1;
 150              		.loc 1 431 5 is_stmt 1 view .LVU24
 151              		.loc 1 431 20 is_stmt 0 view .LVU25
 152 0008 0123     		movs	r3, #1
 153 000a 8B60     		str	r3, [r1, #8]
 432:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     star->f_bfree  = 0;
 154              		.loc 1 432 5 is_stmt 1 view .LVU26
 155              		.loc 1 432 20 is_stmt 0 view .LVU27
 156 000c C860     		str	r0, [r1, #12]
 433:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     star->f_bavail = 0;
 157              		.loc 1 433 5 is_stmt 1 view .LVU28
 158              		.loc 1 433 20 is_stmt 0 view .LVU29
 159 000e 0861     		str	r0, [r1, #16]
 434:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     star->f_files  = 128;
 160              		.loc 1 434 5 is_stmt 1 view .LVU30
 161              		.loc 1 434 20 is_stmt 0 view .LVU31
 162 0010 8023     		movs	r3, #128
 163 0012 4B61     		str	r3, [r1, #20]
 435:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     star->f_ffree  = 127;
 164              		.loc 1 435 5 is_stmt 1 view .LVU32
 165              		.loc 1 435 20 is_stmt 0 view .LVU33
 166 0014 7F23     		movs	r3, #127
 167 0016 8B61     		str	r3, [r1, #24]
 436:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 168              		.loc 1 436 5 is_stmt 1 view .LVU34
 437:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 169              		.loc 1 437 1 is_stmt 0 view .LVU35
 170 0018 7047     		bx	lr
 171              	.L9:
 172 001a 00BF     		.align	2
 173              	.L8:
 174 001c 4E61BC00 		.word	12345678
 175              		.cfi_endproc
 176              	.LFE1058:
 178              		.section	.text.pipefs_get_dentry,"ax",%progbits
 179              		.align	1
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 184              	pipefs_get_dentry:
 185              	.LVL10:
 186              	.LFB1059:
 438:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 439:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 440:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 441:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_create(struct mnt_idmap * map, struct inode * dir,struct dentry * dentry,umode_t 
 442:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct dentry *pipefs_vfs_lookup(struct inode *dir, struct dentry *dentry, unsigned int flag
 443:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_link(struct dentry *old_dentry, struct inode *dir, struct dentry *dentry);
ARM GAS  /tmp/ccQOnTG0.s 			page 13


 444:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_unlink(struct inode *dir, struct dentry *dentry);
 445:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_mkdir(struct mnt_idmap *mnt, struct inode *dir, struct dentry *dentry, umode_t mo
 446:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_setattr(struct mnt_idmap *map, struct dentry *dentry, struct iattr *iattr);
 447:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int  pipefs_getattr (struct mnt_idmap *dmp, const struct path * path,struct kstat *stat, u32
 448:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_rmdir(struct inode *	inode  ,struct dentry *dentry);
 449:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 450:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct inode_operations pipefs_inode_operation = {
 451:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .create = pipefs_create,
 452:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .lookup = pipefs_vfs_lookup,
 453:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .link   = pipefs_link,
 454:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .unlink = pipefs_unlink,
 455:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .mkdir  = pipefs_mkdir,
 456:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .rmdir  = pipefs_rmdir,
 457:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .setattr = pipefs_setattr,
 458:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .getattr = pipefs_getattr
 459:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** };
 460:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 461:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct dentry * pipefs_get_dentry(struct dentry * vdentry, struct pipefs_dentry *dentry) //È
 462:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 187              		.loc 1 462 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 463:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry == NULL || vdentry == NULL) return NULL;
 192              		.loc 1 463 5 view .LVU37
 193              		.loc 1 463 7 is_stmt 0 view .LVU38
 194 0000 11B1     		cbz	r1, .L12
 195              		.loc 1 463 23 discriminator 2 view .LVU39
 196 0002 10B1     		cbz	r0, .L10
 464:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     vdentry->d_fsdata = dentry;
 197              		.loc 1 464 5 is_stmt 1 view .LVU40
 198              		.loc 1 464 23 is_stmt 0 view .LVU41
 199 0004 4165     		str	r1, [r0, #84]
 465:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return vdentry;
 200              		.loc 1 465 5 is_stmt 1 view .LVU42
 201              		.loc 1 465 12 is_stmt 0 view .LVU43
 202 0006 7047     		bx	lr
 203              	.L12:
 463:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry == NULL || vdentry == NULL) return NULL;
 204              		.loc 1 463 50 discriminator 3 view .LVU44
 205 0008 0846     		mov	r0, r1
 206              	.LVL11:
 207              	.L10:
 466:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 208              		.loc 1 466 1 view .LVU45
 209 000a 7047     		bx	lr
 210              		.cfi_endproc
 211              	.LFE1059:
 213              		.section	.text.pipefs_setattr,"ax",%progbits
 214              		.align	1
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 219              	pipefs_setattr:
 220              	.LVL12:
 221              	.LFB1067:
ARM GAS  /tmp/ccQOnTG0.s 			page 14


 467:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 468:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_create(struct mnt_idmap * map, struct inode * dir,struct dentry * dentry,umode_t 
 469:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 470:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     char *file_name = d_getname(dentry);
 471:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 472:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *dinode = dir->i_private;
 473:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* file = pipefs_lookup(dinode,file_name);
 474:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(file == NULL){
 475:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         file =  pipefs_create_file(dinode->sb,dinode,&pipefs_file_fops,10,file_name);
 476:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 477:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (file == NULL){                               //Á°ÆÂÆöÊñá‰ª∂ÊòØÂê¶Ë¢´ÂàõÂª∫
 478:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1;
 479:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 480:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     file->target_inode->i_mode = S_IFREG | (mode & 0777);
 481:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if( pipefs_get_dentry(dentry,file) == NULL){     //ÊûÑÂª∫dentry    
 482:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      return -1;
 483:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }  
 484:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 485:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct inode * new_file_inode = pipefs_get_inode(file->target_inode,dir->i_sb);
 486:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_file_inode == NULL)
 487:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1;
 488:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 489:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     d_add(dentry,new_file_inode); //ÈÄöÁü•Êñá‰ª∂Á≥ªÁªüÂä†ÂÖ•ÁºìÂ≠òÔºåÂπ∂ËøõË°åËµÑÊ∫êÁªëÂÆö
 490:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****    return 0;
 491:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** } 
 492:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 493:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct dentry *pipefs_vfs_lookup(struct inode *dir, struct dentry *dentry, unsigned int flag
 494:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 495:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *dir_inode = (struct pipefs_inode *)dir->i_private; //Ëé∑ÂèñÊñá‰ª∂Á≥ªÁªüÊú¨
 496:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     char *name = dentry->d_name.name;                           
 497:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry *pos;    
 498:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pos = pipefs_lookup(dir_inode,name);       //Êü•ËØ¢Ëé∑Âæódentry
 499:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(pos == NULL) return NULL;
 500:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 501:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if( pipefs_get_dentry(dentry,pos) == NULL)
 502:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 503:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 504:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct inode * find_inode = pipefs_get_inode(pos->target_inode,dir->i_sb);
 505:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(find_inode == NULL)
 506:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 507:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 508:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return d_add(dentry,find_inode);
 509:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return NULL;
 510:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 511:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 512:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 513:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_link(struct dentry *old_dentry, struct inode *dir, struct dentry *dentry)
 514:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 515:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *old_inode = (struct pipefs_inode *)old_dentry->d_inode->i_private;
 516:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *dir_inode = (struct pipefs_inode *)dir->i_private;
 517:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry *new_dentry = pipefs_create_dentry(dir_inode, old_inode, dentry->d_name.na
 518:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (new_dentry == NULL) {
 519:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -ENOMEM;
 520:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 521:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipefs_get_dentry(dentry,new_dentry);
 522:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->d_sb = dir->i_sb;
 523:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     d_add(dentry,dentry->d_inode);
ARM GAS  /tmp/ccQOnTG0.s 			page 15


 524:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 525:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 526:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 527:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_unlink(struct inode *dir, struct dentry *dentry)
 528:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 529:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *parent_inode = (struct pipefs_inode *)dir->i_private;
 530:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry *delete_dentry = (struct pipefs_dentry *)dentry->d_fsdata;
 531:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipefs_delete_dentry(parent_inode->sb, parent_inode, delete_dentry);
 532:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 533:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 534:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 535:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 536:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_mkdir(struct mnt_idmap *mnt, struct inode *dir, struct dentry *dentry, umode_t mo
 537:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 538:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     char *file_name = d_getname(dentry);
 539:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 540:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *dinode = dir->i_private;
 541:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* file = pipefs_lookup(dinode,file_name);
 542:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(file == NULL){
 543:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         file =  pipefs_create_dir(dinode->sb,dinode,file_name);
 544:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 545:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (file == NULL){                               //Á°ÆÂÆöÊñá‰ª∂ÊòØÂê¶Ë¢´ÂàõÂª∫
 546:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1;
 547:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 548:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     file->target_inode->i_mode = S_IFREG | (mode & 0777);
 549:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 550:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if( pipefs_get_dentry(dentry,file) == NULL){     //ÊûÑÂª∫dentry    
 551:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      return -1;
 552:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }  
 553:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct inode * new_file_inode = pipefs_get_inode(dinode,dir->i_sb);
 554:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_file_inode == NULL)
 555:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1;
 556:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 557:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     d_add(dentry,new_file_inode); //ÈÄöÁü•Êñá‰ª∂Á≥ªÁªüÂä†ÂÖ•ÁºìÂ≠òÔºåÂπ∂ËøõË°åËµÑÊ∫êÁªëÂÆö
 558:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****    return 0;
 559:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 560:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 561:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 562:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_release_dentry(struct dentry *dentry){
 563:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry *fs_dentry = dentry->d_fsdata;
 564:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry_put(fs_dentry->target_inode->sb, fs_dentry);
 565:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 566:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_rmdir(struct inode *	dir  ,struct dentry *dentry){
 567:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipefs_release_dentry(dentry);
 568:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return simple_unlink(dir,dentry);
 569:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 570:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 571:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_setattr(struct mnt_idmap *map, struct dentry *dentry, struct iattr *iattr)
 572:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 222              		.loc 1 572 1 is_stmt 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 573:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* file = dentry->d_fsdata;
 227              		.loc 1 573 5 view .LVU47
 228              		.loc 1 573 27 is_stmt 0 view .LVU48
ARM GAS  /tmp/ccQOnTG0.s 			page 16


 229 0000 4B6D     		ldr	r3, [r1, #84]
 230              	.LVL13:
 574:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     file->target_inode->i_mode = (iattr->ia_mode & S_IFMT) | iattr->ia_mode;
 231              		.loc 1 574 5 is_stmt 1 view .LVU49
 232              		.loc 1 574 40 is_stmt 0 view .LVU50
 233 0002 9288     		ldrh	r2, [r2, #4]
 234              	.LVL14:
 235              		.loc 1 574 9 view .LVU51
 236 0004 9B68     		ldr	r3, [r3, #8]
 237              	.LVL15:
 238              		.loc 1 574 32 view .LVU52
 239 0006 5A60     		str	r2, [r3, #4]
 240              	.LVL16:
 575:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 241              		.loc 1 575 5 is_stmt 1 view .LVU53
 576:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 242              		.loc 1 576 1 is_stmt 0 view .LVU54
 243 0008 0020     		movs	r0, #0
 244              	.LVL17:
 245              		.loc 1 576 1 view .LVU55
 246 000a 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE1067:
 250              		.section	.text.__spin_lock,"ax",%progbits
 251              		.align	1
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	__spin_lock:
 257              	.LVL18:
 258              	.LFB851:
  15:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
 259              		.loc 2 15 47 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
  15:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
 263              		.loc 2 15 47 is_stmt 0 view .LVU57
 264 0000 38B5     		push	{r3, r4, r5, lr}
 265              	.LCFI2:
 266              		.cfi_def_cfa_offset 16
 267              		.cfi_offset 3, -16
 268              		.cfi_offset 4, -12
 269              		.cfi_offset 5, -8
 270              		.cfi_offset 14, -4
 271 0002 0446     		mov	r4, r0
  17:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     if(lock->flag == 0){
 272              		.loc 2 17 5 is_stmt 1 view .LVU58
 273 0004 FFF7FEFF 		bl	stop_all_scheduler
 274              	.LVL19:
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 275              		.loc 2 18 5 view .LVU59
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 276              		.loc 2 18 12 is_stmt 0 view .LVU60
 277 0008 2368     		ldr	r3, [r4]
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           lock->flag = 1;  
 278              		.loc 2 18 7 view .LVU61
ARM GAS  /tmp/ccQOnTG0.s 			page 17


 279 000a 2BB9     		cbnz	r3, .L16
  19:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
 280              		.loc 2 19 11 is_stmt 1 view .LVU62
  19:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****           start_all_scheduler();
 281              		.loc 2 19 22 is_stmt 0 view .LVU63
 282 000c 0125     		movs	r5, #1
 283 000e 2560     		str	r5, [r4]
  20:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         return 1;
 284              		.loc 2 20 11 is_stmt 1 view .LVU64
 285 0010 FFF7FEFF 		bl	start_all_scheduler
 286              	.LVL20:
  21:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
 287              		.loc 2 21 9 view .LVU65
  21:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
 288              		.loc 2 21 16 is_stmt 0 view .LVU66
 289 0014 2846     		mov	r0, r5
 290              	.L15:
  28:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
 291              		.loc 2 28 1 view .LVU67
 292 0016 38BD     		pop	{r3, r4, r5, pc}
 293              	.LVL21:
 294              	.L16:
  25:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****         return 0;
 295              		.loc 2 25 9 is_stmt 1 view .LVU68
 296 0018 FFF7FEFF 		bl	start_all_scheduler
 297              	.LVL22:
  26:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
 298              		.loc 2 26 9 view .LVU69
  26:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     }
 299              		.loc 2 26 16 is_stmt 0 view .LVU70
 300 001c 0020     		movs	r0, #0
 301 001e FAE7     		b	.L15
 302              		.cfi_endproc
 303              	.LFE851:
 305              		.section	.text.spin_lock,"ax",%progbits
 306              		.align	1
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 311              	spin_lock:
 312              	.LVL23:
 313              	.LFB854:
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     while (1)
 314              		.loc 3 15 1 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     while (1)
 318              		.loc 3 15 1 is_stmt 0 view .LVU72
 319 0000 38B5     		push	{r3, r4, r5, lr}
 320              	.LCFI3:
 321              		.cfi_def_cfa_offset 16
 322              		.cfi_offset 3, -16
 323              		.cfi_offset 4, -12
 324              		.cfi_offset 5, -8
 325              		.cfi_offset 14, -4
 326 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccQOnTG0.s 			page 18


 327 0004 06E0     		b	.L22
 328              	.LVL24:
 329              	.L24:
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             break;
 330              		.loc 3 19 13 is_stmt 1 view .LVU73
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             break;
 331              		.loc 3 19 27 is_stmt 0 view .LVU74
 332 0006 FFF7FEFF 		bl	get_current_task
 333              	.LVL25:
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             break;
 334              		.loc 3 19 25 discriminator 1 view .LVU75
 335 000a 2060     		str	r0, [r4]
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
 336              		.loc 3 20 13 is_stmt 1 view .LVU76
 337              	.L19:
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
 338              		.loc 3 29 1 is_stmt 0 view .LVU77
 339 000c 38BD     		pop	{r3, r4, r5, pc}
 340              	.LVL26:
 341              	.L25:
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****         }
 342              		.loc 3 26 13 is_stmt 1 view .LVU78
 343 000e 0520     		movs	r0, #5
 344 0010 FFF7FEFF 		bl	__delay
 345              	.LVL27:
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     {
 346              		.loc 3 16 11 view .LVU79
 347              	.L22:
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     {
 348              		.loc 3 16 5 view .LVU80
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             lock->owner = get_current_task();
 349              		.loc 3 18 9 view .LVU81
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             lock->owner = get_current_task();
 350              		.loc 3 18 12 is_stmt 0 view .LVU82
 351 0014 2046     		mov	r0, r4
 352 0016 FFF7FEFF 		bl	__spin_lock
 353              	.LVL28:
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             lock->owner = get_current_task();
 354              		.loc 3 18 11 discriminator 1 view .LVU83
 355 001a 0128     		cmp	r0, #1
 356 001c F3D0     		beq	.L24
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
 357              		.loc 3 22 15 is_stmt 1 view .LVU84
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
 358              		.loc 3 22 22 is_stmt 0 view .LVU85
 359 001e 2568     		ldr	r5, [r4]
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
 360              		.loc 3 22 33 view .LVU86
 361 0020 FFF7FEFF 		bl	get_current_task
 362              	.LVL29:
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****             return;   
 363              		.loc 3 22 17 discriminator 1 view .LVU87
 364 0024 8542     		cmp	r5, r0
 365 0026 F2D1     		bne	.L25
 366 0028 F0E7     		b	.L19
 367              		.cfi_endproc
 368              	.LFE854:
ARM GAS  /tmp/ccQOnTG0.s 			page 19


 370              		.section	.init.text,"ax",%progbits
 371              		.align	1
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 376              	pipefs_ops_init:
 377              	.LFB1069:
 577:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int  pipefs_getattr (struct mnt_idmap *dmp, const struct path * path,struct kstat *stat, u32
 578:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** {
 579:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct dentry *d = path->dentry;
 580:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* file = d->d_fsdata;
 581:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *inode;
 582:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 583:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (!file || !(inode = file->target_inode))
 584:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return -ENOENT;
 585:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->mode = inode->i_mode;
 586:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->dev  = MKDEV(inode->major, 0);
 587:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->ino  = (unsigned long)inode;  
 588:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->nlink = atomic_read(&inode->dentry_count);
 589:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->size  = 0; 
 590:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->atime.tv_nsec = jiffies/HZ;
 591:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->atime.tv_sec  = jiffies%HZ;
 592:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->mtime = stat->atime;
 593:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->ctime = stat->atime;
 594:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->blksize = PAGE_SIZE;
 595:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->blocks  = 0;
 596:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 597:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 598:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 599:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct dentry_operations pipefs_dentry_operation = {
 600:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     .d_release = pipefs_release_dentry,
 601:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** };
 602:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 603:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int __init pipefs_ops_init(void){
 378              		.loc 1 603 40 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382 0000 08B5     		push	{r3, lr}
 383              	.LCFI4:
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 3, -8
 386              		.cfi_offset 14, -4
 604:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     register_filesystem(&fs_type);
 387              		.loc 1 604 5 view .LVU89
 388 0002 0248     		ldr	r0, .L28
 389 0004 FFF7FEFF 		bl	register_filesystem
 390              	.LVL30:
 605:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 391              		.loc 1 605 5 view .LVU90
 606:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 392              		.loc 1 606 1 is_stmt 0 view .LVU91
 393 0008 0020     		movs	r0, #0
 394 000a 08BD     		pop	{r3, pc}
 395              	.L29:
 396              		.align	2
 397              	.L28:
ARM GAS  /tmp/ccQOnTG0.s 			page 20


 398 000c 00000000 		.word	fs_type
 399              		.cfi_endproc
 400              	.LFE1069:
 402              		.section	.text.pipefs_kill_sb,"ax",%progbits
 403              		.align	1
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 408              	pipefs_kill_sb:
 409              	.LVL31:
 410              	.LFB1054:
 384:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     put_super(sb);
 411              		.loc 1 384 53 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 384:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     put_super(sb);
 415              		.loc 1 384 53 is_stmt 0 view .LVU93
 416 0000 08B5     		push	{r3, lr}
 417              	.LCFI5:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
 385:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 421              		.loc 1 385 5 is_stmt 1 view .LVU94
 422 0002 FFF7FEFF 		bl	put_super
 423              	.LVL32:
 386:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 424              		.loc 1 386 1 is_stmt 0 view .LVU95
 425 0006 08BD     		pop	{r3, pc}
 426              		.cfi_endproc
 427              	.LFE1054:
 429              		.section	.rodata.pipefs_release.str1.4,"aMS",%progbits,1
 430              		.align	2
 431              	.LC0:
 432 0000 70697065 		.ascii	"pipefs test close\012\000"
 432      66732074 
 432      65737420 
 432      636C6F73 
 432      650A00
 433              		.section	.text.pipefs_release,"ax",%progbits
 434              		.align	1
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 439              	pipefs_release:
 440              	.LVL33:
 441              	.LFB1038:
  75:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pr_info("pipefs test close\n");
 442              		.loc 1 75 66 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
  75:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pr_info("pipefs test close\n");
 446              		.loc 1 75 66 is_stmt 0 view .LVU97
 447 0000 08B5     		push	{r3, lr}
 448              	.LCFI6:
ARM GAS  /tmp/ccQOnTG0.s 			page 21


 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 3, -8
 451              		.cfi_offset 14, -4
  76:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 452              		.loc 1 76 5 is_stmt 1 view .LVU98
 453 0002 0349     		ldr	r1, .L34
 454              	.LVL34:
  76:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 455              		.loc 1 76 5 is_stmt 0 view .LVU99
 456 0004 0620     		movs	r0, #6
 457              	.LVL35:
  76:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 458              		.loc 1 76 5 view .LVU100
 459 0006 FFF7FEFF 		bl	printk
 460              	.LVL36:
  77:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 461              		.loc 1 77 5 is_stmt 1 view .LVU101
  78:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 462              		.loc 1 78 1 is_stmt 0 view .LVU102
 463 000a 0020     		movs	r0, #0
 464 000c 08BD     		pop	{r3, pc}
 465              	.L35:
 466 000e 00BF     		.align	2
 467              	.L34:
 468 0010 00000000 		.word	.LC0
 469              		.cfi_endproc
 470              	.LFE1038:
 472              		.section	.text.pipefs_open,"ax",%progbits
 473              		.align	1
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 478              	pipefs_open:
 479              	.LVL37:
 480              	.LFB1037:
  64:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *p_inode = inode->i_private;
 481              		.loc 1 64 1 is_stmt 1 view -0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
  64:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *p_inode = inode->i_private;
 485              		.loc 1 64 1 is_stmt 0 view .LVU104
 486 0000 10B5     		push	{r4, lr}
 487              	.LCFI7:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 4, -8
 490              		.cfi_offset 14, -4
  65:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(p_inode->buf == NULL)
 491              		.loc 1 65 5 is_stmt 1 view .LVU105
  65:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(p_inode->buf == NULL)
 492              		.loc 1 65 26 is_stmt 0 view .LVU106
 493 0002 D0F88440 		ldr	r4, [r0, #132]
 494              	.LVL38:
  66:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 495              		.loc 1 66 5 is_stmt 1 view .LVU107
  66:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 496              		.loc 1 66 15 is_stmt 0 view .LVU108
ARM GAS  /tmp/ccQOnTG0.s 			page 22


 497 0006 A36B     		ldr	r3, [r4, #56]
  66:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 498              		.loc 1 66 7 view .LVU109
 499 0008 0BB1     		cbz	r3, .L41
  72:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 500              		.loc 1 72 12 view .LVU110
 501 000a 0020     		movs	r0, #0
 502              	.LVL39:
 503              	.L36:
  73:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 504              		.loc 1 73 1 view .LVU111
 505 000c 10BD     		pop	{r4, pc}
 506              	.LVL40:
 507              	.L41:
  68:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(!p_inode->buf)
 508              		.loc 1 68 9 is_stmt 1 view .LVU112
 509              	.LBB229:
 510              	.LBI229:
 511              		.file 4 "/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Written by Mark Hemment, 1996 (markhe@nextd.demon.co.uk).
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * (C) SGI 2006, Christoph Lameter
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * 	Cleaned up and restructured to ease the addition of alternative
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * 	implementations of SLAB allocators.
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * (C) Linux Foundation 2008-2013
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *      Unified interface for all slab allocators
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifndef _LINUX_SLAB_H
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define	_LINUX_SLAB_H
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/cache.h>
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/overflow.h>
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/types.h>
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/raid/pq.h>
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/gfp_types.h>
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/numa.h>
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/reciprocal_div.h>
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/spinlock.h>
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** enum _slab_flag_bits {
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CONSISTENCY_CHECKS,
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_RED_ZONE,
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_POISON,
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_KMALLOC,
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_HWCACHE_ALIGN,
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CACHE_DMA,
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CACHE_DMA32,
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_STORE_USER,
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_PANIC,
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_TYPESAFE_BY_RCU,
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_TRACE,
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_DEBUG_OBJECTS
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_DEBUG_OBJECTS,
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
ARM GAS  /tmp/ccQOnTG0.s 			page 23


  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NOLEAKTRACE,
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NO_MERGE,
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_FAILSLAB
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_FAILSLAB,
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_MEMCG
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_ACCOUNT,
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KASAN_GENERIC
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_KASAN,
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NO_USER_FLAGS,
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KFENCE
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_SKIP_KFENCE,
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifndef CONFIG_SLUB_TINY
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_RECLAIM_ACCOUNT,
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_OBJECT_POISON,
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CMPXCHG_DOUBLE,
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLAB_OBJ_EXT
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NO_OBJ_EXT,
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_FLAGS_LAST_BIT
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** };
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define __SLAB_FLAG_BIT(nr)	((slab_flags_t __force)(1U << (nr)))
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define __SLAB_FLAG_UNUSED	((slab_flags_t __force)(0U))
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Flags to pass to kmem_cache_create().
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * The ones marked DEBUG need CONFIG_SLUB_DEBUG enabled, otherwise are no-op
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Perform (expensive) checks on alloc/free */
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_CONSISTENCY_CHECKS	__SLAB_FLAG_BIT(_SLAB_CONSISTENCY_CHECKS)
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Red zone objs in a cache */
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_RED_ZONE		__SLAB_FLAG_BIT(_SLAB_RED_ZONE)
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Poison objects */
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_POISON		__SLAB_FLAG_BIT(_SLAB_POISON)
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Indicate a kmalloc slab */
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_KMALLOC		__SLAB_FLAG_BIT(_SLAB_KMALLOC)
  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_HWCACHE_ALIGN - Align objects on cache line boundaries.
  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Sufficiently large objects are aligned on cache line boundary. For object
  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * size smaller than a half of cache line size, the alignment is on the half of
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * cache line size. In general, if object size is smaller than 1/2^n of cache
  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * line size, the alignment is adjusted to 1/2^n.
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * If explicit alignment is also requested by the respective
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * &struct kmem_cache_args field, the greater of both is alignments is applied.
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_HWCACHE_ALIGN	__SLAB_FLAG_BIT(_SLAB_HWCACHE_ALIGN)
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Use GFP_DMA memory */
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_CACHE_DMA		__SLAB_FLAG_BIT(_SLAB_CACHE_DMA)
ARM GAS  /tmp/ccQOnTG0.s 			page 24


  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Use GFP_DMA32 memory */
  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_CACHE_DMA32	__SLAB_FLAG_BIT(_SLAB_CACHE_DMA32)
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Store the last owner for bug hunting */
  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_STORE_USER		__SLAB_FLAG_BIT(_SLAB_STORE_USER)
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Panic if kmem_cache_create() fails */
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_PANIC		__SLAB_FLAG_BIT(_SLAB_PANIC)
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_TYPESAFE_BY_RCU - **WARNING** READ THIS!
 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * This delays freeing the SLAB page by a grace period, it does _NOT_
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * delay object freeing. This means that if you do kmem_cache_free()
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * that memory location is free to be reused at any time. Thus it may
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * be possible to see another object there in the same RCU grace period.
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * This feature only ensures the memory location backing the object
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * stays valid, the trick to using this is relying on an independent
 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * object validation pass. Something like:
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * ::
 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *  begin:
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   rcu_read_lock();
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   obj = lockless_lookup(key);
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   if (obj) {
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *     if (!try_get_ref(obj)) // might fail for free objects
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       rcu_read_unlock();
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       goto begin;
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *     if (obj->key != key) { // not the object we expected
 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       put_ref(obj);
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       rcu_read_unlock();
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       goto begin;
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *     }
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   }
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *  rcu_read_unlock();
 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * This is useful if we need to approach a kernel structure obliquely,
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * from its address obtained without the usual locking. We can lock
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * the structure to stabilize it and check it's still at the given address,
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * only if we can be sure that the memory has not been meanwhile reused
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * for some other kind of object (which our subsystem's lock might corrupt).
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * rcu_read_lock before reading the address, then rcu_read_unlock after
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * taking the spinlock within the structure expected at that address.
 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Note that it is not possible to acquire a lock within a structure
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * allocated with SLAB_TYPESAFE_BY_RCU without first acquiring a reference
 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * as described above.  The reason is that SLAB_TYPESAFE_BY_RCU pages
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * are not zeroed before being given to the slab, which means that any
 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * locks must be initialized after each and every kmem_struct_alloc().
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Alternatively, make the ctor passed to kmem_cache_create() initialize
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * the locks at page-allocation time, as is done in __i915_request_ctor(),
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * sighand_ctor(), and anon_vma_ctor().  Such a ctor permits readers
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * to safely acquire those ctor-initialized locks under rcu_read_lock()
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * protection.
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Note that SLAB_TYPESAFE_BY_RCU was originally named SLAB_DESTROY_BY_RCU.
ARM GAS  /tmp/ccQOnTG0.s 			page 25


 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_TYPESAFE_BY_RCU	__SLAB_FLAG_BIT(_SLAB_TYPESAFE_BY_RCU)
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Trace allocations and frees */
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_TRACE		__SLAB_FLAG_BIT(_SLAB_TRACE)
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Flag to prevent checks on free */
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_DEBUG_OBJECTS
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_DEBUG_OBJECTS	__SLAB_FLAG_BIT(_SLAB_DEBUG_OBJECTS)
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_DEBUG_OBJECTS	__SLAB_FLAG_UNUSED
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Avoid kmemleak tracing */
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NOLEAKTRACE	__SLAB_FLAG_BIT(_SLAB_NOLEAKTRACE)
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Prevent merging with compatible kmem caches. This flag should be used
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * cautiously. Valid use cases:
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * - caches created for self-tests (e.g. kunit)
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * - general caches created and used by a subsystem, only when a
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   (subsystem-specific) debug option is enabled
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * - performance critical caches, should be very rare and consulted with slab
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   maintainers, and not used together with CONFIG_SLUB_TINY
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_MERGE		__SLAB_FLAG_BIT(_SLAB_NO_MERGE)
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Fault injection mark */
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_FAILSLAB
 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_FAILSLAB		__SLAB_FLAG_BIT(_SLAB_FAILSLAB)
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_FAILSLAB		__SLAB_FLAG_UNUSED
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_ACCOUNT - Account allocations to memcg.
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * All object allocations from this cache will be memcg accounted, regardless of
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * __GFP_ACCOUNT being or not being passed to individual allocations.
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_MEMCG
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_ACCOUNT		__SLAB_FLAG_BIT(_SLAB_ACCOUNT)
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_ACCOUNT		__SLAB_FLAG_UNUSED
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KASAN_GENERIC
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_KASAN		__SLAB_FLAG_BIT(_SLAB_KASAN)
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_KASAN		__SLAB_FLAG_UNUSED
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Ignore user specified debugging flags.
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Intended for caches created for self-tests so they have only flags
 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * specified in the code and other flags are ignored.
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_USER_FLAGS	__SLAB_FLAG_BIT(_SLAB_NO_USER_FLAGS)
ARM GAS  /tmp/ccQOnTG0.s 			page 26


 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KFENCE
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_SKIP_KFENCE	__SLAB_FLAG_BIT(_SLAB_SKIP_KFENCE)
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_SKIP_KFENCE	__SLAB_FLAG_UNUSED
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* The following flags affect the page allocator grouping pages by mobility */
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_RECLAIM_ACCOUNT - Objects are reclaimable.
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Use this flag for caches that have an associated shrinker. As a result, slab
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * pages are allocated with __GFP_RECLAIMABLE, which affects grouping pages by
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * mobility, and are accounted in SReclaimable counter in /proc/meminfo
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifndef CONFIG_SLUB_TINY
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_RECLAIM_ACCOUNT	__SLAB_FLAG_BIT(_SLAB_RECLAIM_ACCOUNT)
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_RECLAIM_ACCOUNT	__SLAB_FLAG_UNUSED
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_TEMPORARY		SLAB_RECLAIM_ACCOUNT	/* Objects are short-lived */
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Slab created using create_boot_cache */
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLAB_OBJ_EXT
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_OBJ_EXT		__SLAB_FLAG_BIT(_SLAB_NO_OBJ_EXT)
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_OBJ_EXT		__SLAB_FLAG_UNUSED
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * freeptr_t represents a SLUB freelist pointer, which might be encoded
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * and not dereferenceable if CONFIG_SLAB_FREELIST_HARDENED is enabled.
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** typedef struct { unsigned long v; } freeptr_t;
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * ZERO_SIZE_PTR will be returned for zero sized kmalloc requests.
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Dereferencing ZERO_SIZE_PTR will lead to a distinct access fault.
 249:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 250:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * ZERO_SIZE_PTR can be passed to kfree though in the same way that NULL can.
 251:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Both make kfree a no-op.
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define ZERO_SIZE_PTR ((void *)16)
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 255:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define ZERO_OR_NULL_PTR(x) ((unsigned long)(x) <= \
 256:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 				(unsigned long)ZERO_SIZE_PTR)
 257:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 261:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLUB_CPU_PARTIAL
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial(c)			((c)->partial)
 264:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_set_percpu_partial(c, p)		\
 266:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** ({						\
ARM GAS  /tmp/ccQOnTG0.s 			page 27


 267:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	slub_percpu_partial(c) = (p)->next;	\
 268:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** })
 269:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 270:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial_read_once(c)	READ_ONCE(slub_percpu_partial(c))
 271:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 272:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial(c)			NULL
 273:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 274:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_set_percpu_partial(c, p)
 275:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 276:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial_read_once(c)	NULL
 277:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 278:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 279:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif // CONFIG_SLUB_CPU_PARTIAL
 280:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 281:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 282:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	* Word size structure that can be atomically updated or read and that
 283:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	* contains both the order and the number of objects that a slab of the
 284:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	* given order would contain.
 285:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	*/				
 286:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** struct kmem_cache_order_objects {
 287:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	unsigned int x;
 288:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** };
 289:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 290:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** struct kmem_cache_node {
 291:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	spinlock_t list_lock;
 292:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	unsigned long nr_partial;
 293:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	struct list_head partial;
 294:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLUB_DEBUG
 295:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	atomic_long_t nr_slabs;
 296:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	atomic_long_t total_objects;
 297:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	struct list_head full;
 298:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 299:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** };
 300:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 301:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** struct kmem_cache {
 302:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifndef CONFIG_SLUB_TINY
 303:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	//	struct kmem_cache_cpu __percpu *cpu_slab;
 304:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 305:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Used for retrieving partial slabs, etc. */
 306:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		slab_flags_t flags;
 307:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned long min_partial;
 308:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int size;		/* Object size including metadata */
 309:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int object_size;	/* Object size without metadata */
 310:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct reciprocal_value reciprocal_size;
 311:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int offset;		/* Free pointer offset */
 312:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SLUB_CPU_PARTIAL
 313:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Number of per cpu partial objects to keep around */
 314:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int cpu_partial;
 315:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Number of per cpu partial slabs to keep around */
 316:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int cpu_partial_slabs;
 317:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 318:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kmem_cache_order_objects oo;
 319:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 320:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Allocation and freeing of slabs */
 321:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kmem_cache_order_objects min;
 322:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		gfp_t allocflags;		/* gfp flags to use on each alloc */
 323:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		int refcount;			/* Refcount for slab cache destroy */
ARM GAS  /tmp/ccQOnTG0.s 			page 28


 324:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		void (*ctor)(void *object);	/* Object constructor */
 325:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int inuse;		/* Offset to metadata */
 326:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int align;		/* Alignment */
 327:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int red_left_pad;	/* Left redzone padding size */
 328:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		const char *name;		/* Name (only for display!) */
 329:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct list_head list;		/* List of slab caches */
 330:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SYSFS
 331:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kobject kobj;		/* For sysfs */
 332:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 333:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SLAB_FREELIST_HARDENED
 334:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned long random;
 335:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 336:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 337:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_NUMA
 338:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/*
 339:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 			* Defragmentation by allocating from a remote node.
 340:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 			*/
 341:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int remote_node_defrag_ratio;
 342:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 343:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 344:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SLAB_FREELIST_RANDOM
 345:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int *random_seq;
 346:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 347:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 348:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_KASAN_GENERIC
 349:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kasan_cache kasan_info;
 350:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 351:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 352:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_HARDENED_USERCOPY
 353:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int useroffset;	/* Usercopy region offset */
 354:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int usersize;		/* Usercopy region size */
 355:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 356:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 357:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kmem_cache_node *node[MAX_NUMNODES];
 358:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	};
 359:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 					
 360:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 361:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 362:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 363:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 364:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define KMALLOC_WAIT 1
 365:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 366:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 367:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** extern void* __smalloc__(u32 size, gfp_t flags);
 368:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** extern void  __sfree__(void* addr);
 369:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 370:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 371:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline *vmalloc(unsigned long size){
 372:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__(size,GFP_TRANSHUGE_LIGHT);
 373:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 374:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 375:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline vfree(void *addr){
 376:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__(addr);
 377:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 378:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline *kmalloc(size_t size, gfp_t flags){
 512              		.loc 4 379 21 view .LVU113
ARM GAS  /tmp/ccQOnTG0.s 			page 29


 513              	.LBB230:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 514              		.loc 4 380 2 view .LVU114
 515              		.loc 4 380 9 is_stmt 0 view .LVU115
 516 000e 4FF44C61 		mov	r1, #3264
 517              	.LVL41:
 518              		.loc 4 380 9 view .LVU116
 519 0012 40F21C40 		movw	r0, #1052
 520              	.LVL42:
 521              		.loc 4 380 9 view .LVU117
 522 0016 FFF7FEFF 		bl	__smalloc__
 523              	.LVL43:
 524              		.loc 4 380 9 view .LVU118
 525              	.LBE230:
 526              	.LBE229:
  68:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(!p_inode->buf)
 527              		.loc 1 68 22 discriminator 1 view .LVU119
 528 001a A063     		str	r0, [r4, #56]
  69:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****            return -1;
 529              		.loc 1 69 9 is_stmt 1 view .LVU120
  69:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****            return -1;
 530              		.loc 1 69 11 is_stmt 0 view .LVU121
 531 001c 08B1     		cbz	r0, .L39
  72:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 532              		.loc 1 72 12 view .LVU122
 533 001e 0020     		movs	r0, #0
 534 0020 F4E7     		b	.L36
 535              	.L39:
  70:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 536              		.loc 1 70 19 view .LVU123
 537 0022 4FF0FF30 		mov	r0, #-1
 538 0026 F1E7     		b	.L36
 539              		.cfi_endproc
 540              	.LFE1037:
 542              		.section	.text.pipefs_create_empty_inode,"ax",%progbits
 543              		.align	1
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 548              	pipefs_create_empty_inode:
 549              	.LVL44:
 550              	.LFB1041:
 115:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(fop == NULL) return NULL;
 551              		.loc 1 115 1 is_stmt 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 115:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(fop == NULL) return NULL;
 555              		.loc 1 115 1 is_stmt 0 view .LVU125
 556 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 557              	.LCFI8:
 558              		.cfi_def_cfa_offset 24
 559              		.cfi_offset 3, -24
 560              		.cfi_offset 4, -20
 561              		.cfi_offset 5, -16
 562              		.cfi_offset 6, -12
 563              		.cfi_offset 7, -8
ARM GAS  /tmp/ccQOnTG0.s 			page 30


 564              		.cfi_offset 14, -4
 116:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *pipe_inode = kmalloc(sizeof(struct pipefs_inode),GFP_KERNEL);
 565              		.loc 1 116 5 is_stmt 1 view .LVU126
 116:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *pipe_inode = kmalloc(sizeof(struct pipefs_inode),GFP_KERNEL);
 566              		.loc 1 116 7 is_stmt 0 view .LVU127
 567 0002 0F46     		mov	r7, r1
 568 0004 71B3     		cbz	r1, .L44
 569 0006 0546     		mov	r5, r0
 570 0008 1646     		mov	r6, r2
 117:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(pipe_inode == NULL) return NULL;
 571              		.loc 1 117 5 is_stmt 1 view .LVU128
 572              	.LVL45:
 573              	.LBB231:
 574              	.LBI231:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 575              		.loc 4 379 21 view .LVU129
 576              	.LBB232:
 577              		.loc 4 380 2 view .LVU130
 578              		.loc 4 380 9 is_stmt 0 view .LVU131
 579 000a 4FF44C61 		mov	r1, #3264
 580              	.LVL46:
 581              		.loc 4 380 9 view .LVU132
 582 000e 3C20     		movs	r0, #60
 583              	.LVL47:
 584              		.loc 4 380 9 view .LVU133
 585 0010 FFF7FEFF 		bl	__smalloc__
 586              	.LVL48:
 587              		.loc 4 380 9 view .LVU134
 588              	.LBE232:
 589              	.LBE231:
 118:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->magic = MAGIC;
 590              		.loc 1 118 5 is_stmt 1 view .LVU135
 118:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->magic = MAGIC;
 591              		.loc 1 118 7 is_stmt 0 view .LVU136
 592 0014 0446     		mov	r4, r0
 593 0016 18B3     		cbz	r0, .L42
 119:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->major = major;
 594              		.loc 1 119 5 is_stmt 1 view .LVU137
 119:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->major = major;
 595              		.loc 1 119 23 is_stmt 0 view .LVU138
 596 0018 134B     		ldr	r3, .L46
 597 001a 0360     		str	r3, [r0]
 120:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->i_fop = fop;
 598              		.loc 1 120 5 is_stmt 1 view .LVU139
 120:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->i_fop = fop;
 599              		.loc 1 120 23 is_stmt 0 view .LVU140
 600 001c 8660     		str	r6, [r0, #8]
 121:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->sb    = sb;
 601              		.loc 1 121 5 is_stmt 1 view .LVU141
 121:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->sb    = sb;
 602              		.loc 1 121 23 is_stmt 0 view .LVU142
 603 001e 0761     		str	r7, [r0, #16]
 122:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->i_mode = S_IFREG | 0755;
 604              		.loc 1 122 5 is_stmt 1 view .LVU143
 122:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipe_inode->i_mode = S_IFREG | 0755;
 605              		.loc 1 122 23 is_stmt 0 view .LVU144
 606 0020 4563     		str	r5, [r0, #52]
ARM GAS  /tmp/ccQOnTG0.s 			page 31


 123:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     atomic_set(&pipe_inode->dentry_count,0);
 607              		.loc 1 123 5 is_stmt 1 view .LVU145
 123:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     atomic_set(&pipe_inode->dentry_count,0);
 608              		.loc 1 123 24 is_stmt 0 view .LVU146
 609 0022 48F2ED13 		movw	r3, #33261
 610 0026 4360     		str	r3, [r0, #4]
 124:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock_init(&pipe_inode->lock);
 611              		.loc 1 124 5 is_stmt 1 view .LVU147
 612              	.LVL49:
 613              	.LBB233:
 614              	.LBI233:
 615              		.file 5 "/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** // SPDX-License-Identifier: GPL-2.0
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** // Generated by scripts/atomic/gen-atomic-instrumented.sh 
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** // DO NOT MODIFY THIS FILE DIRECTLY
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /*
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * This file provoides atomic operations with explicit instrumentation (e.g.
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * KASAN, KCSAN), which should be used unless it is necessary to avoid
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * instrumentation. Where it is necessary to aovid instrumenation, the
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * raw_atomic*() operations should be used.
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** #ifndef _LINUX_ATOMIC_INSTRUMENTED_H
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** #define _LINUX_ATOMIC_INSTRUMENTED_H
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** #include <linux/build_bug.h>
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** #include <linux/compiler.h>
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** #include <linux/instrumented.h>
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_read() - atomic load with relaxed ordering
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically loads the value of @v with relaxed ordering.
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_read() there.
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The value loaded from @v.
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_read(const atomic_t *v)
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read(v, sizeof(*v));
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_read(v);
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_read_acquire() - atomic load with acquire ordering
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically loads the value of @v with acquire ordering.
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_read_acquire() there.
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The value loaded from @v.
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
ARM GAS  /tmp/ccQOnTG0.s 			page 32


  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_read_acquire(const atomic_t *v)
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read(v, sizeof(*v));
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_read_acquire(v);
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_set() - atomic set with relaxed ordering
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to assign
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically sets @v to @i with relaxed ordering.
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_set() there.
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_set(atomic_t *v, int i)
 616              		.loc 5 65 1 view .LVU148
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_write(v, sizeof(*v));
 617              		.loc 5 67 2 view .LVU149
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_set(v, i);
 618              		.loc 5 68 2 view .LVU150
 619              	.LBB234:
 620              	.LBI234:
 621              		.file 6 "/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** // SPDX-License-Identifier: GPL-2.0
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** // Generated by scripts/atomic/gen-atomic-fallback.sh
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** // DO NOT MODIFY THIS FILE DIRECTLY
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #ifndef _LINUX_ATOMIC_FALLBACK_H
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define _LINUX_ATOMIC_FALLBACK_H
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #include <linux/compiler.h>
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_xchg)
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg arch_xchg
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_xchg_relaxed)
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg(...) \
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_xchg, __VA_ARGS__)
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_xchg_not_implemented(void);
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg(...) raw_xchg_not_implemented()
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_xchg_acquire)
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_acquire arch_xchg_acquire
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_xchg_relaxed)
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_acquire(...) \
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_xchg, __VA_ARGS__)
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_xchg)
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_acquire arch_xchg
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
ARM GAS  /tmp/ccQOnTG0.s 			page 33


  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_xchg_acquire_not_implemented(void);
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_acquire(...) raw_xchg_acquire_not_implemented()
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_xchg_release)
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_release arch_xchg_release
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_xchg_relaxed)
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_release(...) \
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_xchg, __VA_ARGS__)
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_xchg)
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_release arch_xchg
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_xchg_release_not_implemented(void);
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_release(...) raw_xchg_release_not_implemented()
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_xchg_relaxed)
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_relaxed arch_xchg_relaxed
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_xchg)
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_relaxed arch_xchg
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_xchg_relaxed_not_implemented(void);
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_xchg_relaxed(...) raw_xchg_relaxed_not_implemented()
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg)
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg arch_cmpxchg
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg_relaxed)
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg(...) \
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_cmpxchg, __VA_ARGS__)
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg_not_implemented(void);
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg(...) raw_cmpxchg_not_implemented()
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg_acquire)
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_acquire arch_cmpxchg_acquire
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg_relaxed)
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_acquire(...) \
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_cmpxchg, __VA_ARGS__)
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg)
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_acquire arch_cmpxchg
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg_acquire_not_implemented(void);
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_acquire(...) raw_cmpxchg_acquire_not_implemented()
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg_release)
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_release arch_cmpxchg_release
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg_relaxed)
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_release(...) \
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_cmpxchg, __VA_ARGS__)
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg)
  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_release arch_cmpxchg
  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg_release_not_implemented(void);
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_release(...) raw_cmpxchg_release_not_implemented()
ARM GAS  /tmp/ccQOnTG0.s 			page 34


  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg_relaxed)
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_relaxed arch_cmpxchg_relaxed
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg)
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_relaxed arch_cmpxchg
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg_relaxed_not_implemented(void);
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_relaxed(...) raw_cmpxchg_relaxed_not_implemented()
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg64)
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64 arch_cmpxchg64
  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg64_relaxed)
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64(...) \
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_cmpxchg64, __VA_ARGS__)
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg64_not_implemented(void);
 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64(...) raw_cmpxchg64_not_implemented()
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg64_acquire)
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_acquire arch_cmpxchg64_acquire
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg64_relaxed)
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_acquire(...) \
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_cmpxchg64, __VA_ARGS__)
 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg64)
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_acquire arch_cmpxchg64
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg64_acquire_not_implemented(void);
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_acquire(...) raw_cmpxchg64_acquire_not_implemented()
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg64_release)
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_release arch_cmpxchg64_release
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg64_relaxed)
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_release(...) \
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_cmpxchg64, __VA_ARGS__)
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg64)
 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_release arch_cmpxchg64
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg64_release_not_implemented(void);
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_release(...) raw_cmpxchg64_release_not_implemented()
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg64_relaxed)
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_relaxed arch_cmpxchg64_relaxed
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg64)
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_relaxed arch_cmpxchg64
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg64_relaxed_not_implemented(void);
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_relaxed(...) raw_cmpxchg64_relaxed_not_implemented()
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg128)
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128 arch_cmpxchg128
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg128_relaxed)
ARM GAS  /tmp/ccQOnTG0.s 			page 35


 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128(...) \
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_cmpxchg128, __VA_ARGS__)
 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg128_not_implemented(void);
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128(...) raw_cmpxchg128_not_implemented()
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg128_acquire)
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_acquire arch_cmpxchg128_acquire
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg128_relaxed)
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_acquire(...) \
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_cmpxchg128, __VA_ARGS__)
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg128)
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_acquire arch_cmpxchg128
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg128_acquire_not_implemented(void);
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_acquire(...) raw_cmpxchg128_acquire_not_implemented()
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg128_release)
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_release arch_cmpxchg128_release
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg128_relaxed)
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_release(...) \
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_cmpxchg128, __VA_ARGS__)
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg128)
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_release arch_cmpxchg128
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg128_release_not_implemented(void);
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_release(...) raw_cmpxchg128_release_not_implemented()
 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_cmpxchg128_relaxed)
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_relaxed arch_cmpxchg128_relaxed
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_cmpxchg128)
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_relaxed arch_cmpxchg128
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** extern void raw_cmpxchg128_relaxed_not_implemented(void);
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_relaxed(...) raw_cmpxchg128_relaxed_not_implemented()
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg)
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg arch_try_cmpxchg
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg_relaxed)
 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg(...) \
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_try_cmpxchg, __VA_ARGS__)
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg(_ptr, _oldp, _new) \
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg((_ptr), ___o, (_new)); \
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
ARM GAS  /tmp/ccQOnTG0.s 			page 36


 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg_acquire)
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_acquire arch_try_cmpxchg_acquire
 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg_relaxed)
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_acquire(...) \
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_try_cmpxchg, __VA_ARGS__)
 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg)
 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_acquire arch_try_cmpxchg
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_acquire(_ptr, _oldp, _new) \
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg_acquire((_ptr), ___o, (_new)); \
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg_release)
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_release arch_try_cmpxchg_release
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg_relaxed)
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_release(...) \
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_try_cmpxchg, __VA_ARGS__)
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg)
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_release arch_try_cmpxchg
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_release(_ptr, _oldp, _new) \
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg_release((_ptr), ___o, (_new)); \
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg_relaxed)
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_relaxed arch_try_cmpxchg_relaxed
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg)
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_relaxed arch_try_cmpxchg
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_relaxed(_ptr, _oldp, _new) \
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 249:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg_relaxed((_ptr), ___o, (_new)); \
 250:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 251:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 255:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 256:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg64)
ARM GAS  /tmp/ccQOnTG0.s 			page 37


 257:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64 arch_try_cmpxchg64
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg64_relaxed)
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64(...) \
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_try_cmpxchg64, __VA_ARGS__)
 261:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64(_ptr, _oldp, _new) \
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 264:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg64((_ptr), ___o, (_new)); \
 266:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 267:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 268:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 269:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 270:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 271:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 272:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg64_acquire)
 273:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_acquire arch_try_cmpxchg64_acquire
 274:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg64_relaxed)
 275:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_acquire(...) \
 276:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_try_cmpxchg64, __VA_ARGS__)
 277:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg64)
 278:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_acquire arch_try_cmpxchg64
 279:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 280:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_acquire(_ptr, _oldp, _new) \
 281:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 282:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 283:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg64_acquire((_ptr), ___o, (_new)); \
 284:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 285:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 286:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 287:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 288:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 289:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 290:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg64_release)
 291:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_release arch_try_cmpxchg64_release
 292:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg64_relaxed)
 293:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_release(...) \
 294:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_try_cmpxchg64, __VA_ARGS__)
 295:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg64)
 296:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_release arch_try_cmpxchg64
 297:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 298:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_release(_ptr, _oldp, _new) \
 299:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 300:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 301:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg64_release((_ptr), ___o, (_new)); \
 302:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 303:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 304:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 305:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 306:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 307:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 308:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg64_relaxed)
 309:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_relaxed arch_try_cmpxchg64_relaxed
 310:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg64)
 311:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_relaxed arch_try_cmpxchg64
 312:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 313:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_relaxed(_ptr, _oldp, _new) \
ARM GAS  /tmp/ccQOnTG0.s 			page 38


 314:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 315:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 316:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg64_relaxed((_ptr), ___o, (_new)); \
 317:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 318:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 319:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 320:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 321:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 322:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 323:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg128)
 324:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128 arch_try_cmpxchg128
 325:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg128_relaxed)
 326:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128(...) \
 327:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_fence(arch_try_cmpxchg128, __VA_ARGS__)
 328:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 329:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128(_ptr, _oldp, _new) \
 330:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 331:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 332:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg128((_ptr), ___o, (_new)); \
 333:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 334:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 335:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 336:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 337:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 338:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 339:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg128_acquire)
 340:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_acquire arch_try_cmpxchg128_acquire
 341:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg128_relaxed)
 342:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_acquire(...) \
 343:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_acquire(arch_try_cmpxchg128, __VA_ARGS__)
 344:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg128)
 345:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_acquire arch_try_cmpxchg128
 346:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 347:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_acquire(_ptr, _oldp, _new) \
 348:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 349:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 350:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg128_acquire((_ptr), ___o, (_new)); \
 351:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 352:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 353:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 354:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 355:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 356:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 357:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg128_release)
 358:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_release arch_try_cmpxchg128_release
 359:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg128_relaxed)
 360:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_release(...) \
 361:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_op_release(arch_try_cmpxchg128, __VA_ARGS__)
 362:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg128)
 363:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_release arch_try_cmpxchg128
 364:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 365:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_release(_ptr, _oldp, _new) \
 366:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 367:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 368:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg128_release((_ptr), ___o, (_new)); \
 369:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 370:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
ARM GAS  /tmp/ccQOnTG0.s 			page 39


 371:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 372:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 373:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 374:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 375:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_try_cmpxchg128_relaxed)
 376:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_relaxed arch_try_cmpxchg128_relaxed
 377:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_try_cmpxchg128)
 378:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_relaxed arch_try_cmpxchg128
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_relaxed(_ptr, _oldp, _new) \
 381:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 382:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg128_relaxed((_ptr), ___o, (_new)); \
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 385:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 386:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 387:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 388:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 389:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 390:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg_local arch_cmpxchg_local
 391:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 392:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #ifdef arch_try_cmpxchg_local
 393:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_local arch_try_cmpxchg_local
 394:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 395:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg_local(_ptr, _oldp, _new) \
 396:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 397:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 398:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg_local((_ptr), ___o, (_new)); \
 399:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 400:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 401:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 402:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 403:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 404:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 405:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg64_local arch_cmpxchg64_local
 406:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 407:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #ifdef arch_try_cmpxchg64_local
 408:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_local arch_try_cmpxchg64_local
 409:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 410:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg64_local(_ptr, _oldp, _new) \
 411:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 412:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 413:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg64_local((_ptr), ___o, (_new)); \
 414:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 415:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 416:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 417:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 418:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 419:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 420:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_cmpxchg128_local arch_cmpxchg128_local
 421:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 422:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #ifdef arch_try_cmpxchg128_local
 423:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_local arch_try_cmpxchg128_local
 424:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 425:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_try_cmpxchg128_local(_ptr, _oldp, _new) \
 426:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 427:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
ARM GAS  /tmp/ccQOnTG0.s 			page 40


 428:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_cmpxchg128_local((_ptr), ___o, (_new)); \
 429:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 430:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 431:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 432:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 433:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 434:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 435:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_sync_cmpxchg arch_sync_cmpxchg
 436:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 437:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #ifdef arch_sync_try_cmpxchg
 438:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_sync_try_cmpxchg arch_sync_try_cmpxchg
 439:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 440:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #define raw_sync_try_cmpxchg(_ptr, _oldp, _new) \
 441:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** ({ \
 442:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	typeof(*(_ptr)) *___op = (_oldp), ___o = *___op, ___r; \
 443:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	___r = raw_sync_cmpxchg((_ptr), ___o, (_new)); \
 444:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(___r != ___o)) \
 445:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*___op = ___r; \
 446:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	likely(___r == ___o); \
 447:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** })
 448:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 449:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 450:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 451:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_read() - atomic load with relaxed ordering
 452:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 453:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 454:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically loads the value of @v with relaxed ordering.
 455:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 456:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_read() elsewhere.
 457:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 458:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The value loaded from @v.
 459:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 460:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 461:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_read(const atomic_t *v)
 462:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_read(v);
 464:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 465:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 466:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 467:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_read_acquire() - atomic load with acquire ordering
 468:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 469:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 470:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically loads the value of @v with acquire ordering.
 471:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 472:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_read_acquire() elsewhere.
 473:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 474:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The value loaded from @v.
 475:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 476:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 477:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_read_acquire(const atomic_t *v)
 478:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 479:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_read_acquire)
 480:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_read_acquire(v);
 481:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 482:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
 483:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 484:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (__native_word(atomic_t)) {
ARM GAS  /tmp/ccQOnTG0.s 			page 41


 485:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		ret = smp_load_acquire(&(v)->counter);
 486:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	} else {
 487:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		ret = raw_atomic_read(v);
 488:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		__atomic_acquire_fence();
 489:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	}
 490:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 491:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 492:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 493:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 494:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 495:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 496:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_set() - atomic set with relaxed ordering
 497:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 498:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to assign
 499:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 500:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically sets @v to @i with relaxed ordering.
 501:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 502:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_set() elsewhere.
 503:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 504:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
 505:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 506:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
 507:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_set(atomic_t *v, int i)
 622              		.loc 6 507 1 view .LVU151
 623              	.LBB235:
 508:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 509:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_set(v, i);
 624              		.loc 6 509 2 view .LVU152
 625              		.loc 6 509 2 view .LVU153
 626              	.LBB236:
 627              		.loc 6 509 2 view .LVU154
 628              		.loc 6 509 2 view .LVU155
 629              	.LBE236:
 630              		.loc 6 509 2 discriminator 2 view .LVU156
 631              		.loc 6 509 2 discriminator 2 view .LVU157
 632              		.loc 6 509 2 discriminator 2 view .LVU158
 633 0028 0027     		movs	r7, #0
 634              	.LVL50:
 635              		.loc 6 509 2 is_stmt 0 discriminator 2 view .LVU159
 636 002a C760     		str	r7, [r0, #12]
 637              		.loc 6 509 2 is_stmt 1 discriminator 2 view .LVU160
 638              		.loc 6 509 2 discriminator 2 view .LVU161
 639              	.LVL51:
 640              		.loc 6 509 2 is_stmt 0 discriminator 2 view .LVU162
 641              	.LBE235:
 642              	.LBE234:
 643              	.LBE233:
 125:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     INIT_LIST_HEAD(&pipe_inode->list_node);
 644              		.loc 1 125 5 is_stmt 1 view .LVU163
 645 002c 2430     		adds	r0, r0, #36
 646              	.LVL52:
 125:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     INIT_LIST_HEAD(&pipe_inode->list_node);
 647              		.loc 1 125 5 is_stmt 0 view .LVU164
 648 002e FFF7FEFF 		bl	spin_lock_init
 649              	.LVL53:
 126:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     INIT_LIST_HEAD(&pipe_inode->dentry_list_head);
 650              		.loc 1 126 5 is_stmt 1 view .LVU165
ARM GAS  /tmp/ccQOnTG0.s 			page 42


 651 0032 04F11406 		add	r6, r4, #20
 652              	.LVL54:
 653              	.LBB237:
 654              	.LBI237:
 655              		.file 7 "/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #ifndef _LINUX_LIST_H
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #define _LINUX_LIST_H
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <linux/container_of.h>
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <linux/types.h>
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <linux/stddef.h>
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <linux/poison.h>
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <linux/const.h>
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <asm/barrier.h>
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #include <linux/rwonce.h>
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Circular doubly linked list implementation.
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Some of the internal functions ("__xxx") are useful when
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * manipulating whole lists rather than single entries, as
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * sometimes we already know the next/prev entries and we can
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * generate better code by using them directly rather than
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * using the generic single-entry routines.
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #define LIST_HEAD_INIT(name) { &(name), &(name) }
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #define LIST_HEAD(name) \
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	struct list_head name = LIST_HEAD_INIT(name)
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * INIT_LIST_HEAD - Initialize a list_head structure
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @list: list_head structure to be initialized.
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Initializes the list_head to point to itself.  If it is a list header,
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * the result is an empty list.
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void INIT_LIST_HEAD(struct list_head *list)
 656              		.loc 7 35 20 view .LVU166
 657              	.LBB238:
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->next, list);
 658              		.loc 7 37 2 view .LVU167
 659              		.loc 7 37 2 view .LVU168
 660              	.LBB239:
 661              		.loc 7 37 2 view .LVU169
 662              		.loc 7 37 2 view .LVU170
 663              	.LBE239:
 664              		.loc 7 37 2 discriminator 2 view .LVU171
 665              		.loc 7 37 2 discriminator 2 view .LVU172
 666              		.loc 7 37 2 discriminator 2 view .LVU173
 667 0036 6661     		str	r6, [r4, #20]
 668              		.loc 7 37 2 discriminator 2 view .LVU174
 669              		.loc 7 37 2 discriminator 2 view .LVU175
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
ARM GAS  /tmp/ccQOnTG0.s 			page 43


 670              		.loc 7 38 2 view .LVU176
 671              		.loc 7 38 2 view .LVU177
 672              	.LBB240:
 673              		.loc 7 38 2 view .LVU178
 674              		.loc 7 38 2 view .LVU179
 675              	.LBE240:
 676              		.loc 7 38 2 discriminator 2 view .LVU180
 677              		.loc 7 38 2 discriminator 2 view .LVU181
 678              		.loc 7 38 2 discriminator 2 view .LVU182
 679 0038 A661     		str	r6, [r4, #24]
 680              		.loc 7 38 2 discriminator 2 view .LVU183
 681              		.loc 7 38 2 discriminator 2 view .LVU184
 682              	.LVL55:
 683              		.loc 7 38 2 is_stmt 0 discriminator 2 view .LVU185
 684              	.LBE238:
 685              	.LBE237:
 127:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 686              		.loc 1 127 5 is_stmt 1 view .LVU186
 687 003a 04F11C03 		add	r3, r4, #28
 688              	.LVL56:
 689              	.LBB241:
 690              	.LBI241:
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 691              		.loc 7 35 20 view .LVU187
 692              	.LBB242:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 693              		.loc 7 37 2 view .LVU188
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 694              		.loc 7 37 2 view .LVU189
 695              	.LBB243:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 696              		.loc 7 37 2 view .LVU190
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 697              		.loc 7 37 2 view .LVU191
 698              	.LBE243:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 699              		.loc 7 37 2 discriminator 2 view .LVU192
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 700              		.loc 7 37 2 discriminator 2 view .LVU193
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 701              		.loc 7 37 2 discriminator 2 view .LVU194
 702 003e E361     		str	r3, [r4, #28]
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 703              		.loc 7 37 2 discriminator 2 view .LVU195
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 704              		.loc 7 37 2 discriminator 2 view .LVU196
 705              		.loc 7 38 2 view .LVU197
 706              		.loc 7 38 2 view .LVU198
 707              	.LBB244:
 708              		.loc 7 38 2 view .LVU199
 709              		.loc 7 38 2 view .LVU200
 710              	.LBE244:
 711              		.loc 7 38 2 discriminator 2 view .LVU201
 712              		.loc 7 38 2 discriminator 2 view .LVU202
 713              		.loc 7 38 2 discriminator 2 view .LVU203
 714 0040 2362     		str	r3, [r4, #32]
 715              		.loc 7 38 2 discriminator 2 view .LVU204
ARM GAS  /tmp/ccQOnTG0.s 			page 44


 716              		.loc 7 38 2 discriminator 2 view .LVU205
 717              	.LVL57:
 718              		.loc 7 38 2 is_stmt 0 discriminator 2 view .LVU206
 719              	.LBE242:
 720              	.LBE241:
 129:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 721              		.loc 1 129 5 is_stmt 1 view .LVU207
 129:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 722              		.loc 1 129 21 is_stmt 0 view .LVU208
 723 0042 A763     		str	r7, [r4, #56]
 131:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     list_add(&pipe_inode->list_node,&sb->inode_list_head);
 724              		.loc 1 131 5 is_stmt 1 view .LVU209
 725 0044 2F1D     		adds	r7, r5, #4
 726 0046 3846     		mov	r0, r7
 727 0048 FFF7FEFF 		bl	spin_lock
 728              	.LVL58:
 132:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_unlock(&sb->lock);
 729              		.loc 1 132 5 view .LVU210
 730 004c 05F11802 		add	r2, r5, #24
 731              	.LVL59:
 732              	.LBB245:
 733              	.LBI245:
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #ifdef CONFIG_LIST_HARDENED
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #ifdef CONFIG_DEBUG_LIST
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** # define __list_valid_slowpath
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #else
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** # define __list_valid_slowpath __cold __preserve_most
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #endif
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Performs the full set of list corruption checks before __list_add().
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * On list corruption reports a warning, and returns false.
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** extern bool __list_valid_slowpath __list_add_valid_or_report(struct list_head *new,
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 							     struct list_head *prev,
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 							     struct list_head *next);
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Performs list corruption checks before __list_add(). Returns false if a
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * corruption is detected, true otherwise.
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * With CONFIG_LIST_HARDENED only, performs minimal list integrity checking
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * inline to catch non-faulting corruptions, and only if a corruption is
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * detected calls the reporting function __list_add_valid_or_report().
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static __always_inline bool __list_add_valid(struct list_head *new,
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 					     struct list_head *prev,
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 					     struct list_head *next)
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	bool ret = true;
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	if (!IS_ENABLED(CONFIG_DEBUG_LIST)) {
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		/*
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * With the hardening version, elide checking if next and prev
ARM GAS  /tmp/ccQOnTG0.s 			page 45


  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * are NULL, since the immediate dereference of them below would
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * result in a fault if NULL.
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 *
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * With the reduced set of checks, we can afford to inline the
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * checks, which also gives the compiler a chance to elide some
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * of them completely if they can be proven at compile-time. If
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * one of the pre-conditions does not hold, the slow-path will
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * show a report which pre-condition failed.
  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 */
  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		if (likely(next->prev == prev && prev->next == next && new != prev && new != next))
  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			return true;
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		ret = false;
  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	}
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	ret &= __list_add_valid_or_report(new, prev, next);
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return ret;
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Performs the full set of list corruption checks before __list_del_entry().
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * On list corruption reports a warning, and returns false.
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** extern bool __list_valid_slowpath __list_del_entry_valid_or_report(struct list_head *entry);
  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Performs list corruption checks before __list_del_entry(). Returns false if a
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * corruption is detected, true otherwise.
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * With CONFIG_LIST_HARDENED only, performs minimal list integrity checking
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * inline to catch non-faulting corruptions, and only if a corruption is
 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * detected calls the reporting function __list_del_entry_valid_or_report().
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static __always_inline bool __list_del_entry_valid(struct list_head *entry)
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	bool ret = true;
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	if (!IS_ENABLED(CONFIG_DEBUG_LIST)) {
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		struct list_head *prev = entry->prev;
 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		struct list_head *next = entry->next;
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		/*
 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * With the hardening version, elide checking if next and prev
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * are NULL, LIST_POISON1 or LIST_POISON2, since the immediate
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 * dereference of them below would result in a fault.
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		 */
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		if (likely(prev->next == entry && next->prev == entry))
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			return true;
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		ret = false;
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	}
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	ret &= __list_del_entry_valid_or_report(entry);
 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return ret;
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #else
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline bool __list_add_valid(struct list_head *new,
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				struct list_head *prev,
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				struct list_head *next)
ARM GAS  /tmp/ccQOnTG0.s 			page 46


 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return true;
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline bool __list_del_entry_valid(struct list_head *entry)
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return true;
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** #endif
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Insert a new entry between two known consecutive entries.
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * This is only for internal list manipulation where we know
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * the prev/next entries already!
 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void __list_add(struct list_head *new,
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			      struct list_head *prev,
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			      struct list_head *next)
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	if (!__list_add_valid(new, prev, next))
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	next->prev = new;
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next = next;
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev = prev;
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, new);
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_add - add a new entry
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @new: new entry to be added
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: list head to add it after
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Insert a new entry after the specified head.
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * This is good for implementing stacks.
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_add(struct list_head *new, struct list_head *head)
 734              		.loc 7 167 20 view .LVU211
 735              	.LBB246:
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_add(new, head, head->next);
 736              		.loc 7 169 2 view .LVU212
 737 0050 AB69     		ldr	r3, [r5, #24]
 738              	.LVL60:
 739              	.LBB247:
 740              	.LBI247:
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			      struct list_head *prev,
 741              		.loc 7 146 20 view .LVU213
 742              	.LBB248:
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 743              		.loc 7 150 2 view .LVU214
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next = next;
 744              		.loc 7 153 2 view .LVU215
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next = next;
 745              		.loc 7 153 13 is_stmt 0 view .LVU216
 746 0052 5E60     		str	r6, [r3, #4]
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev = prev;
ARM GAS  /tmp/ccQOnTG0.s 			page 47


 747              		.loc 7 154 2 is_stmt 1 view .LVU217
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev = prev;
 748              		.loc 7 154 12 is_stmt 0 view .LVU218
 749 0054 6361     		str	r3, [r4, #20]
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, new);
 750              		.loc 7 155 2 is_stmt 1 view .LVU219
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, new);
 751              		.loc 7 155 12 is_stmt 0 view .LVU220
 752 0056 A261     		str	r2, [r4, #24]
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 753              		.loc 7 156 2 is_stmt 1 view .LVU221
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 754              		.loc 7 156 2 view .LVU222
 755              	.LBB249:
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 756              		.loc 7 156 2 view .LVU223
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 757              		.loc 7 156 2 view .LVU224
 758              	.LBE249:
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 759              		.loc 7 156 2 discriminator 2 view .LVU225
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 760              		.loc 7 156 2 discriminator 2 view .LVU226
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 761              		.loc 7 156 2 discriminator 2 view .LVU227
 762 0058 AE61     		str	r6, [r5, #24]
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 763              		.loc 7 156 2 discriminator 3 view .LVU228
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 764              		.loc 7 156 2 discriminator 3 view .LVU229
 765              	.LVL61:
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 766              		.loc 7 156 2 is_stmt 0 discriminator 3 view .LVU230
 767              	.LBE248:
 768              	.LBE247:
 769              	.LBE246:
 770              	.LBE245:
 133:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 771              		.loc 1 133 5 is_stmt 1 view .LVU231
 772 005a 3846     		mov	r0, r7
 773 005c FFF7FEFF 		bl	spin_unlock
 774              	.LVL62:
 135:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 775              		.loc 1 135 5 view .LVU232
 776              	.L42:
 136:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static void pipefs_inode_put(struct pipefs_inode *node){
 777              		.loc 1 136 1 is_stmt 0 view .LVU233
 778 0060 2046     		mov	r0, r4
 779 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 780              	.LVL63:
 781              	.L44:
 116:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *pipe_inode = kmalloc(sizeof(struct pipefs_inode),GFP_KERNEL);
 782              		.loc 1 116 28 discriminator 1 view .LVU234
 783 0064 0C46     		mov	r4, r1
 784 0066 FBE7     		b	.L42
 785              	.L47:
 786              		.align	2
ARM GAS  /tmp/ccQOnTG0.s 			page 48


 787              	.L46:
 788 0068 4E61BC00 		.word	12345678
 789              		.cfi_endproc
 790              	.LFE1041:
 792              		.section	.text.pipefs_get_inode,"ax",%progbits
 793              		.align	1
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 798              	pipefs_get_inode:
 799              	.LVL64:
 800              	.LFB1055:
 389:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(pipe_node == NULL) return NULL;
 801              		.loc 1 389 1 is_stmt 1 view -0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 389:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(pipe_node == NULL) return NULL;
 805              		.loc 1 389 1 is_stmt 0 view .LVU236
 806 0000 10B5     		push	{r4, lr}
 807              	.LCFI9:
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 4, -8
 810              		.cfi_offset 14, -4
 390:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct inode*inode  =  new_inode(sb); //Ê≠§Â§ÑÂä®ÊÄÅÂàõÂª∫‰∫Ü‰∏Ä‰∏™inode,ÈúÄË¶ÅÂêéÁª≠ÈáäÊîæ
 811              		.loc 1 390 5 is_stmt 1 view .LVU237
 390:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct inode*inode  =  new_inode(sb); //Ê≠§Â§ÑÂä®ÊÄÅÂàõÂª∫‰∫Ü‰∏Ä‰∏™inode,ÈúÄË¶ÅÂêéÁª≠ÈáäÊîæ
 812              		.loc 1 390 7 is_stmt 0 view .LVU238
 813 0002 0446     		mov	r4, r0
 814 0004 58B1     		cbz	r0, .L48
 391:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(inode == NULL) return NULL;  
 815              		.loc 1 391 5 is_stmt 1 view .LVU239
 391:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(inode == NULL) return NULL;  
 816              		.loc 1 391 28 is_stmt 0 view .LVU240
 817 0006 0846     		mov	r0, r1
 818              	.LVL65:
 391:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(inode == NULL) return NULL;  
 819              		.loc 1 391 28 view .LVU241
 820 0008 FFF7FEFF 		bl	new_inode
 821              	.LVL66:
 392:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_mode    = pipe_node->i_mode;
 822              		.loc 1 392 5 is_stmt 1 view .LVU242
 392:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_mode    = pipe_node->i_mode;
 823              		.loc 1 392 7 is_stmt 0 view .LVU243
 824 000c 38B1     		cbz	r0, .L48
 393:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_fop     = pipe_node->i_fop;
 825              		.loc 1 393 5 is_stmt 1 view .LVU244
 393:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_fop     = pipe_node->i_fop;
 826              		.loc 1 393 33 is_stmt 0 view .LVU245
 827 000e 6368     		ldr	r3, [r4, #4]
 393:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_fop     = pipe_node->i_fop;
 828              		.loc 1 393 22 view .LVU246
 829 0010 0380     		strh	r3, [r0]	@ movhi
 394:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_op      = &pipefs_inode_operation;
 830              		.loc 1 394 5 is_stmt 1 view .LVU247
 394:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_op      = &pipefs_inode_operation;
 831              		.loc 1 394 33 is_stmt 0 view .LVU248
ARM GAS  /tmp/ccQOnTG0.s 			page 49


 832 0012 2369     		ldr	r3, [r4, #16]
 394:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_op      = &pipefs_inode_operation;
 833              		.loc 1 394 22 view .LVU249
 834 0014 C367     		str	r3, [r0, #124]
 395:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_private = pipe_node;
 835              		.loc 1 395 5 is_stmt 1 view .LVU250
 395:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     inode->i_private = pipe_node;
 836              		.loc 1 395 22 is_stmt 0 view .LVU251
 837 0016 024B     		ldr	r3, .L52
 838 0018 0361     		str	r3, [r0, #16]
 396:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return inode;
 839              		.loc 1 396 5 is_stmt 1 view .LVU252
 396:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return inode;
 840              		.loc 1 396 22 is_stmt 0 view .LVU253
 841 001a C0F88440 		str	r4, [r0, #132]
 397:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 842              		.loc 1 397 5 is_stmt 1 view .LVU254
 843              	.LVL67:
 844              	.L48:
 398:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 845              		.loc 1 398 1 is_stmt 0 view .LVU255
 846 001e 10BD     		pop	{r4, pc}
 847              	.LVL68:
 848              	.L53:
 398:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 849              		.loc 1 398 1 view .LVU256
 850              		.align	2
 851              	.L52:
 852 0020 00000000 		.word	pipefs_inode_operation
 853              		.cfi_endproc
 854              	.LFE1055:
 856              		.section	.text.pipefs_getattr,"ax",%progbits
 857              		.align	1
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 862              	pipefs_getattr:
 863              	.LVL69:
 864              	.LFB1068:
 578:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct dentry *d = path->dentry;
 865              		.loc 1 578 1 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 4, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 578:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct dentry *d = path->dentry;
 869              		.loc 1 578 1 is_stmt 0 view .LVU258
 870 0000 38B5     		push	{r3, r4, r5, lr}
 871              	.LCFI10:
 872              		.cfi_def_cfa_offset 16
 873              		.cfi_offset 3, -16
 874              		.cfi_offset 4, -12
 875              		.cfi_offset 5, -8
 876              		.cfi_offset 14, -4
 579:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* file = d->d_fsdata;
 877              		.loc 1 579 5 is_stmt 1 view .LVU259
 579:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* file = d->d_fsdata;
 878              		.loc 1 579 20 is_stmt 0 view .LVU260
ARM GAS  /tmp/ccQOnTG0.s 			page 50


 879 0002 4B68     		ldr	r3, [r1, #4]
 880              	.LVL70:
 580:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *inode;
 881              		.loc 1 580 5 is_stmt 1 view .LVU261
 580:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *inode;
 882              		.loc 1 580 27 is_stmt 0 view .LVU262
 883 0004 5B6D     		ldr	r3, [r3, #84]
 884              	.LVL71:
 581:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 885              		.loc 1 581 5 is_stmt 1 view .LVU263
 583:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return -ENOENT;
 886              		.loc 1 583 5 view .LVU264
 583:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return -ENOENT;
 887              		.loc 1 583 8 is_stmt 0 view .LVU265
 888 0006 002B     		cmp	r3, #0
 889 0008 31D0     		beq	.L56
 890 000a 1446     		mov	r4, r2
 583:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return -ENOENT;
 891              		.loc 1 583 26 discriminator 1 view .LVU266
 892 000c 9B68     		ldr	r3, [r3, #8]
 893              	.LVL72:
 583:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return -ENOENT;
 894              		.loc 1 583 15 discriminator 1 view .LVU267
 895 000e 8BB3     		cbz	r3, .L57
 585:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->dev  = MKDEV(inode->major, 0);
 896              		.loc 1 585 5 is_stmt 1 view .LVU268
 585:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->dev  = MKDEV(inode->major, 0);
 897              		.loc 1 585 23 is_stmt 0 view .LVU269
 898 0010 5A68     		ldr	r2, [r3, #4]
 899              	.LVL73:
 585:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->dev  = MKDEV(inode->major, 0);
 900              		.loc 1 585 16 view .LVU270
 901 0012 A280     		strh	r2, [r4, #4]	@ movhi
 902              	.LVL74:
 586:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->ino  = (unsigned long)inode;  
 903              		.loc 1 586 5 is_stmt 1 view .LVU271
 586:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->ino  = (unsigned long)inode;  
 904              		.loc 1 586 18 is_stmt 0 view .LVU272
 905 0014 9A68     		ldr	r2, [r3, #8]
 906 0016 1205     		lsls	r2, r2, #20
 586:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->ino  = (unsigned long)inode;  
 907              		.loc 1 586 16 view .LVU273
 908 0018 E261     		str	r2, [r4, #28]
 587:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->nlink = atomic_read(&inode->dentry_count);
 909              		.loc 1 587 5 is_stmt 1 view .LVU274
 587:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->nlink = atomic_read(&inode->dentry_count);
 910              		.loc 1 587 16 is_stmt 0 view .LVU275
 911 001a A361     		str	r3, [r4, #24]
 588:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->size  = 0; 
 912              		.loc 1 588 5 is_stmt 1 view .LVU276
 913              	.LVL75:
 914              	.LBB250:
 915              	.LBI250:
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 916              		.loc 5 30 1 view .LVU277
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_read(v);
 917              		.loc 5 32 2 view .LVU278
ARM GAS  /tmp/ccQOnTG0.s 			page 51


  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 918              		.loc 5 33 2 view .LVU279
 919              	.LBB251:
 920              	.LBI251:
 461:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 921              		.loc 6 461 1 view .LVU280
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 922              		.loc 6 463 2 view .LVU281
 923              	.LBB252:
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 924              		.loc 6 463 9 view .LVU282
 925              	.LBB253:
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 926              		.loc 6 463 9 view .LVU283
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 927              		.loc 6 463 9 view .LVU284
 928              	.LBE253:
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 929              		.loc 6 463 9 discriminator 2 view .LVU285
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 930              		.loc 6 463 9 discriminator 2 view .LVU286
 931 001c DB68     		ldr	r3, [r3, #12]
 932              	.LVL76:
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 933              		.loc 6 463 9 is_stmt 0 discriminator 2 view .LVU287
 934              	.LBE252:
 935              	.LBE251:
 936              	.LBE250:
 588:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->size  = 0; 
 937              		.loc 1 588 17 discriminator 1 view .LVU288
 938 001e A360     		str	r3, [r4, #8]
 589:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->atime.tv_nsec = jiffies/HZ;
 939              		.loc 1 589 5 is_stmt 1 view .LVU289
 589:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->atime.tv_nsec = jiffies/HZ;
 940              		.loc 1 589 17 is_stmt 0 view .LVU290
 941 0020 0022     		movs	r2, #0
 942 0022 0023     		movs	r3, #0
 943 0024 C4E90C23 		strd	r2, [r4, #48]
 590:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->atime.tv_sec  = jiffies%HZ;
 944              		.loc 1 590 5 is_stmt 1 view .LVU291
 590:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->atime.tv_sec  = jiffies%HZ;
 945              		.loc 1 590 27 is_stmt 0 view .LVU292
 946 0028 FFF7FEFF 		bl	ktime_get
 947              	.LVL77:
 590:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->atime.tv_sec  = jiffies%HZ;
 948              		.loc 1 590 34 discriminator 1 view .LVU293
 949 002c 134D     		ldr	r5, .L59
 950 002e 2B68     		ldr	r3, [r5]
 951 0030 B0FBF3F0 		udiv	r0, r0, r3
 590:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->atime.tv_sec  = jiffies%HZ;
 952              		.loc 1 590 25 discriminator 1 view .LVU294
 953 0034 E063     		str	r0, [r4, #60]
 591:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->mtime = stat->atime;
 954              		.loc 1 591 5 is_stmt 1 view .LVU295
 591:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->mtime = stat->atime;
 955              		.loc 1 591 27 is_stmt 0 view .LVU296
 956 0036 FFF7FEFF 		bl	ktime_get
ARM GAS  /tmp/ccQOnTG0.s 			page 52


 957              	.LVL78:
 591:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->mtime = stat->atime;
 958              		.loc 1 591 34 discriminator 1 view .LVU297
 959 003a 2B68     		ldr	r3, [r5]
 960 003c B0FBF3F2 		udiv	r2, r0, r3
 961 0040 03FB1200 		mls	r0, r3, r2, r0
 591:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->mtime = stat->atime;
 962              		.loc 1 591 25 discriminator 1 view .LVU298
 963 0044 A063     		str	r0, [r4, #56]
 592:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->ctime = stat->atime;
 964              		.loc 1 592 5 is_stmt 1 view .LVU299
 592:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->ctime = stat->atime;
 965              		.loc 1 592 17 is_stmt 0 view .LVU300
 966 0046 04F14002 		add	r2, r4, #64
 967 004a 04F13803 		add	r3, r4, #56
 968 004e 93E80300 		ldm	r3, {r0, r1}
 969 0052 82E80300 		stm	r2, {r0, r1}
 593:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->blksize = PAGE_SIZE;
 970              		.loc 1 593 5 is_stmt 1 view .LVU301
 593:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->blksize = PAGE_SIZE;
 971              		.loc 1 593 17 is_stmt 0 view .LVU302
 972 0056 04F14802 		add	r2, r4, #72
 973 005a 93E80300 		ldm	r3, {r0, r1}
 974 005e 82E80300 		stm	r2, {r0, r1}
 594:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->blocks  = 0;
 975              		.loc 1 594 5 is_stmt 1 view .LVU303
 594:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->blocks  = 0;
 976              		.loc 1 594 19 is_stmt 0 view .LVU304
 977 0062 4FF48053 		mov	r3, #4096
 978 0066 E360     		str	r3, [r4, #12]
 595:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 979              		.loc 1 595 5 is_stmt 1 view .LVU305
 595:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 980              		.loc 1 595 19 is_stmt 0 view .LVU306
 981 0068 0020     		movs	r0, #0
 982 006a A065     		str	r0, [r4, #88]
 596:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 983              		.loc 1 596 5 is_stmt 1 view .LVU307
 984              	.LVL79:
 985              	.L54:
 597:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 986              		.loc 1 597 1 is_stmt 0 view .LVU308
 987 006c 38BD     		pop	{r3, r4, r5, pc}
 988              	.LVL80:
 989              	.L56:
 584:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->mode = inode->i_mode;
 990              		.loc 1 584 12 view .LVU309
 991 006e 6FF00100 		mvn	r0, #1
 992              	.LVL81:
 584:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->mode = inode->i_mode;
 993              		.loc 1 584 12 view .LVU310
 994 0072 FBE7     		b	.L54
 995              	.LVL82:
 996              	.L57:
 584:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->mode = inode->i_mode;
 997              		.loc 1 584 12 view .LVU311
 998 0074 6FF00100 		mvn	r0, #1
ARM GAS  /tmp/ccQOnTG0.s 			page 53


 999              	.LVL83:
 584:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     stat->mode = inode->i_mode;
 1000              		.loc 1 584 12 view .LVU312
 1001 0078 F8E7     		b	.L54
 1002              	.L60:
 1003 007a 00BF     		.align	2
 1004              	.L59:
 1005 007c 00000000 		.word	HZ
 1006              		.cfi_endproc
 1007              	.LFE1068:
 1009              		.section	.text.pipefs_lookup,"ax",%progbits
 1010              		.align	1
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1015              	pipefs_lookup:
 1016              	.LVL84:
 1017              	.LFB1051:
 262:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry_inode == NULL) return NULL;
 1018              		.loc 1 262 1 is_stmt 1 view -0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 262:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry_inode == NULL) return NULL;
 1022              		.loc 1 262 1 is_stmt 0 view .LVU314
 1023 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1024              	.LCFI11:
 1025              		.cfi_def_cfa_offset 24
 1026              		.cfi_offset 3, -24
 1027              		.cfi_offset 4, -20
 1028              		.cfi_offset 5, -16
 1029              		.cfi_offset 6, -12
 1030              		.cfi_offset 7, -8
 1031              		.cfi_offset 14, -4
 263:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if ( (dentry_inode->i_mode & S_IFMT) != S_IFDIR ) return NULL;
 1032              		.loc 1 263 5 is_stmt 1 view .LVU315
 263:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if ( (dentry_inode->i_mode & S_IFMT) != S_IFDIR ) return NULL;
 1033              		.loc 1 263 7 is_stmt 0 view .LVU316
 1034 0002 0546     		mov	r5, r0
 1035 0004 20B3     		cbz	r0, .L66
 1036 0006 0E46     		mov	r6, r1
 264:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* pos;
 1037              		.loc 1 264 5 is_stmt 1 view .LVU317
 264:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* pos;
 1038              		.loc 1 264 23 is_stmt 0 view .LVU318
 1039 0008 4368     		ldr	r3, [r0, #4]
 264:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* pos;
 1040              		.loc 1 264 32 view .LVU319
 1041 000a 03F47043 		and	r3, r3, #61440
 264:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* pos;
 1042              		.loc 1 264 8 view .LVU320
 1043 000e B3F5804F 		cmp	r3, #16384
 1044 0012 1FD1     		bne	.L67
 265:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock(&dentry_inode->lock);
 1045              		.loc 1 265 5 is_stmt 1 view .LVU321
 266:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     list_for_each_entry(pos, &dentry_inode->dentry_list_head,list_node ) {
 1046              		.loc 1 266 5 view .LVU322
ARM GAS  /tmp/ccQOnTG0.s 			page 54


 1047 0014 00F12407 		add	r7, r0, #36
 1048 0018 3846     		mov	r0, r7
 1049              	.LVL85:
 266:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     list_for_each_entry(pos, &dentry_inode->dentry_list_head,list_node ) {
 1050              		.loc 1 266 5 is_stmt 0 view .LVU323
 1051 001a FFF7FEFF 		bl	spin_lock
 1052              	.LVL86:
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
 1053              		.loc 1 267 5 is_stmt 1 view .LVU324
 1054              	.LBB254:
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
 1055              		.loc 1 267 5 view .LVU325
 1056 001e EC69     		ldr	r4, [r5, #28]
 1057              	.LVL87:
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
 1058              		.loc 1 267 5 view .LVU326
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
 1059              		.loc 1 267 5 view .LVU327
 1060 0020 0C3C     		subs	r4, r4, #12
 1061              	.LVL88:
 1062              	.L63:
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
 1063              		.loc 1 267 5 is_stmt 0 view .LVU328
 1064              	.LBE254:
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
 1065              		.loc 1 267 5 is_stmt 1 discriminator 1 view .LVU329
 1066 0022 04F10C03 		add	r3, r4, #12
 1067 0026 05F11C02 		add	r2, r5, #28
 1068 002a 9342     		cmp	r3, r2
 1069 002c 0BD0     		beq	.L69
 268:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             spin_unlock(&dentry_inode->lock);
 1070              		.loc 1 268 9 view .LVU330
 268:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             spin_unlock(&dentry_inode->lock);
 1071              		.loc 1 268 13 is_stmt 0 view .LVU331
 1072 002e 3146     		mov	r1, r6
 1073 0030 6068     		ldr	r0, [r4, #4]
 1074 0032 FFF7FEFF 		bl	strcmp
 1075              	.LVL89:
 268:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             spin_unlock(&dentry_inode->lock);
 1076              		.loc 1 268 12 discriminator 1 view .LVU332
 1077 0036 10B1     		cbz	r0, .L70
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
 1078              		.loc 1 267 5 is_stmt 1 discriminator 2 view .LVU333
 1079              	.LBB255:
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
 1080              		.loc 1 267 5 discriminator 2 view .LVU334
 1081 0038 E468     		ldr	r4, [r4, #12]
 1082              	.LVL90:
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
 1083              		.loc 1 267 5 discriminator 2 view .LVU335
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
 1084              		.loc 1 267 5 discriminator 2 view .LVU336
 1085 003a 0C3C     		subs	r4, r4, #12
 1086              	.LVL91:
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
 1087              		.loc 1 267 5 is_stmt 0 discriminator 2 view .LVU337
 1088 003c F1E7     		b	.L63
ARM GAS  /tmp/ccQOnTG0.s 			page 55


 1089              	.LVL92:
 1090              	.L70:
 267:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (strcmp(pos->name, name) == 0) {
 1091              		.loc 1 267 5 discriminator 2 view .LVU338
 1092              	.LBE255:
 269:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             return pos;
 1093              		.loc 1 269 13 is_stmt 1 view .LVU339
 1094 003e 3846     		mov	r0, r7
 1095 0040 FFF7FEFF 		bl	spin_unlock
 1096              	.LVL93:
 270:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 1097              		.loc 1 270 13 view .LVU340
 270:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 1098              		.loc 1 270 20 is_stmt 0 view .LVU341
 1099 0044 07E0     		b	.L61
 1100              	.L69:
 273:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return NULL;
 1101              		.loc 1 273 5 is_stmt 1 view .LVU342
 1102 0046 3846     		mov	r0, r7
 1103 0048 FFF7FEFF 		bl	spin_unlock
 1104              	.LVL94:
 274:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 1105              		.loc 1 274 5 view .LVU343
 274:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 1106              		.loc 1 274 12 is_stmt 0 view .LVU344
 1107 004c 0024     		movs	r4, #0
 1108              	.LVL95:
 274:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 1109              		.loc 1 274 12 view .LVU345
 1110 004e 02E0     		b	.L61
 1111              	.LVL96:
 1112              	.L66:
 263:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if ( (dentry_inode->i_mode & S_IFMT) != S_IFDIR ) return NULL;
 1113              		.loc 1 263 37 discriminator 1 view .LVU346
 1114 0050 0446     		mov	r4, r0
 1115 0052 00E0     		b	.L61
 1116              	.L67:
 264:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* pos;
 1117              		.loc 1 264 62 discriminator 1 view .LVU347
 1118 0054 0024     		movs	r4, #0
 1119              	.LVL97:
 1120              	.L61:
 275:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 1121              		.loc 1 275 1 view .LVU348
 1122 0056 2046     		mov	r0, r4
 1123 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 275:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 1124              		.loc 1 275 1 view .LVU349
 1125              		.cfi_endproc
 1126              	.LFE1051:
 1128              		.section	.text.pipefs_vfs_lookup,"ax",%progbits
 1129              		.align	1
 1130              		.syntax unified
 1131              		.thumb
 1132              		.thumb_func
 1134              	pipefs_vfs_lookup:
 1135              	.LVL98:
ARM GAS  /tmp/ccQOnTG0.s 			page 56


 1136              	.LFB1061:
 493:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 1137              		.loc 1 493 102 is_stmt 1 view -0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 493:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 1141              		.loc 1 493 102 is_stmt 0 view .LVU351
 1142 0000 70B5     		push	{r4, r5, r6, lr}
 1143              	.LCFI12:
 1144              		.cfi_def_cfa_offset 16
 1145              		.cfi_offset 4, -16
 1146              		.cfi_offset 5, -12
 1147              		.cfi_offset 6, -8
 1148              		.cfi_offset 14, -4
 1149 0002 0646     		mov	r6, r0
 1150 0004 0D46     		mov	r5, r1
 495:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     char *name = dentry->d_name.name;                           
 1151              		.loc 1 495 5 is_stmt 1 view .LVU352
 1152              	.LVL99:
 496:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry *pos;    
 1153              		.loc 1 496 5 view .LVU353
 497:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pos = pipefs_lookup(dir_inode,name);       //Êü•ËØ¢Ëé∑Âæódentry
 1154              		.loc 1 497 5 view .LVU354
 498:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(pos == NULL) return NULL;
 1155              		.loc 1 498 5 view .LVU355
 498:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(pos == NULL) return NULL;
 1156              		.loc 1 498 11 is_stmt 0 view .LVU356
 1157 0006 8969     		ldr	r1, [r1, #24]
 1158              	.LVL100:
 498:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(pos == NULL) return NULL;
 1159              		.loc 1 498 11 view .LVU357
 1160 0008 D0F88400 		ldr	r0, [r0, #132]
 1161              	.LVL101:
 498:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(pos == NULL) return NULL;
 1162              		.loc 1 498 11 view .LVU358
 1163 000c FFF7FEFF 		bl	pipefs_lookup
 1164              	.LVL102:
 499:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 1165              		.loc 1 499 5 is_stmt 1 view .LVU359
 499:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 1166              		.loc 1 499 7 is_stmt 0 view .LVU360
 1167 0010 0446     		mov	r4, r0
 1168 0012 78B1     		cbz	r0, .L71
 501:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 1169              		.loc 1 501 5 is_stmt 1 view .LVU361
 501:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 1170              		.loc 1 501 9 is_stmt 0 view .LVU362
 1171 0014 0146     		mov	r1, r0
 1172 0016 2846     		mov	r0, r5
 1173              	.LVL103:
 501:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 1174              		.loc 1 501 9 view .LVU363
 1175 0018 FFF7FEFF 		bl	pipefs_get_dentry
 1176              	.LVL104:
 501:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 1177              		.loc 1 501 7 discriminator 1 view .LVU364
ARM GAS  /tmp/ccQOnTG0.s 			page 57


 1178 001c 60B1     		cbz	r0, .L73
 504:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(find_inode == NULL)
 1179              		.loc 1 504 5 is_stmt 1 view .LVU365
 504:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(find_inode == NULL)
 1180              		.loc 1 504 33 is_stmt 0 view .LVU366
 1181 001e 7169     		ldr	r1, [r6, #20]
 1182 0020 A068     		ldr	r0, [r4, #8]
 1183 0022 FFF7FEFF 		bl	pipefs_get_inode
 1184              	.LVL105:
 505:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 1185              		.loc 1 505 5 is_stmt 1 view .LVU367
 505:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 1186              		.loc 1 505 7 is_stmt 0 view .LVU368
 1187 0026 0446     		mov	r4, r0
 1188              	.LVL106:
 505:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 1189              		.loc 1 505 7 view .LVU369
 1190 0028 20B1     		cbz	r0, .L71
 508:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return NULL;
 1191              		.loc 1 508 5 is_stmt 1 view .LVU370
 508:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return NULL;
 1192              		.loc 1 508 12 is_stmt 0 view .LVU371
 1193 002a 0146     		mov	r1, r0
 1194 002c 2846     		mov	r0, r5
 1195              	.LVL107:
 508:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return NULL;
 1196              		.loc 1 508 12 view .LVU372
 1197 002e FFF7FEFF 		bl	d_add
 1198              	.LVL108:
 508:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return NULL;
 1199              		.loc 1 508 12 view .LVU373
 1200 0032 0446     		mov	r4, r0
 1201              	.LVL109:
 1202              	.L71:
 510:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 1203              		.loc 1 510 1 view .LVU374
 1204 0034 2046     		mov	r0, r4
 1205 0036 70BD     		pop	{r4, r5, r6, pc}
 1206              	.LVL110:
 1207              	.L73:
 502:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 1208              		.loc 1 502 16 view .LVU375
 1209 0038 0446     		mov	r4, r0
 1210              	.LVL111:
 502:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 1211              		.loc 1 502 16 view .LVU376
 1212 003a FBE7     		b	.L71
 1213              		.cfi_endproc
 1214              	.LFE1061:
 1216              		.section	.text.pipefs_get_vfs_superblock,"ax",%progbits
 1217              		.align	1
 1218              		.syntax unified
 1219              		.thumb
 1220              		.thumb_func
 1222              	pipefs_get_vfs_superblock:
 1223              	.LVL112:
 1224              	.LFB1053:
ARM GAS  /tmp/ccQOnTG0.s 			page 58


 373:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(sb == NULL) return NULL;
 1225              		.loc 1 373 1 is_stmt 1 view -0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 0, uses_anonymous_args = 0
 373:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(sb == NULL) return NULL;
 1229              		.loc 1 373 1 is_stmt 0 view .LVU378
 1230 0000 10B5     		push	{r4, lr}
 1231              	.LCFI13:
 1232              		.cfi_def_cfa_offset 8
 1233              		.cfi_offset 4, -8
 1234              		.cfi_offset 14, -4
 374:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct super_block * vsb  = alloc_super(NULL);                        //ÂàÜÈÖç‰∫Ü‰∏Ä‰∏™superblo
 1235              		.loc 1 374 5 is_stmt 1 view .LVU379
 374:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct super_block * vsb  = alloc_super(NULL);                        //ÂàÜÈÖç‰∫Ü‰∏Ä‰∏™superblo
 1236              		.loc 1 374 7 is_stmt 0 view .LVU380
 1237 0002 0446     		mov	r4, r0
 1238 0004 40B1     		cbz	r0, .L75
 375:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(vsb == NULL) return NULL;
 1239              		.loc 1 375 5 is_stmt 1 view .LVU381
 375:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(vsb == NULL) return NULL;
 1240              		.loc 1 375 33 is_stmt 0 view .LVU382
 1241 0006 0020     		movs	r0, #0
 1242              	.LVL113:
 375:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(vsb == NULL) return NULL;
 1243              		.loc 1 375 33 view .LVU383
 1244 0008 FFF7FEFF 		bl	alloc_super
 1245              	.LVL114:
 376:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     vsb->s_fs_info =   sb;
 1246              		.loc 1 376 5 is_stmt 1 view .LVU384
 376:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     vsb->s_fs_info =   sb;
 1247              		.loc 1 376 7 is_stmt 0 view .LVU385
 1248 000c 20B1     		cbz	r0, .L75
 377:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     vsb->s_d_op    =  &pipefs_dentry_operation;
 1249              		.loc 1 377 5 is_stmt 1 view .LVU386
 377:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     vsb->s_d_op    =  &pipefs_dentry_operation;
 1250              		.loc 1 377 20 is_stmt 0 view .LVU387
 1251 000e 0463     		str	r4, [r0, #48]
 378:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     vsb->s_op      =  &pipefs_super_operation;    
 1252              		.loc 1 378 5 is_stmt 1 view .LVU388
 378:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     vsb->s_op      =  &pipefs_super_operation;    
 1253              		.loc 1 378 20 is_stmt 0 view .LVU389
 1254 0010 024B     		ldr	r3, .L79
 1255 0012 0367     		str	r3, [r0, #112]
 379:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return vsb;
 1256              		.loc 1 379 5 is_stmt 1 view .LVU390
 379:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return vsb;
 1257              		.loc 1 379 20 is_stmt 0 view .LVU391
 1258 0014 024B     		ldr	r3, .L79+4
 1259 0016 0361     		str	r3, [r0, #16]
 380:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 1260              		.loc 1 380 5 is_stmt 1 view .LVU392
 1261              	.LVL115:
 1262              	.L75:
 381:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 1263              		.loc 1 381 1 is_stmt 0 view .LVU393
 1264 0018 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccQOnTG0.s 			page 59


 1265              	.LVL116:
 1266              	.L80:
 381:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 1267              		.loc 1 381 1 view .LVU394
 1268 001a 00BF     		.align	2
 1269              	.L79:
 1270 001c 00000000 		.word	pipefs_dentry_operation
 1271 0020 00000000 		.word	pipefs_super_operation
 1272              		.cfi_endproc
 1273              	.LFE1053:
 1275              		.section	.text.pipefs_superblock_create,"ax",%progbits
 1276              		.align	1
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1281              	pipefs_superblock_create:
 1282              	.LFB1049:
 231:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_superblock*d_sb = kmalloc(sizeof(struct pipefs_superblock),GFP_KERNEL);
 1283              		.loc 1 231 1 is_stmt 1 view -0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 0
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287 0000 38B5     		push	{r3, r4, r5, lr}
 1288              	.LCFI14:
 1289              		.cfi_def_cfa_offset 16
 1290              		.cfi_offset 3, -16
 1291              		.cfi_offset 4, -12
 1292              		.cfi_offset 5, -8
 1293              		.cfi_offset 14, -4
 232:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(d_sb == NULL){
 1294              		.loc 1 232 5 view .LVU396
 1295              	.LVL117:
 1296              	.LBB256:
 1297              	.LBI256:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 1298              		.loc 4 379 21 view .LVU397
 1299              	.LBB257:
 1300              		.loc 4 380 2 view .LVU398
 1301              		.loc 4 380 9 is_stmt 0 view .LVU399
 1302 0002 4FF44C61 		mov	r1, #3264
 1303 0006 2020     		movs	r0, #32
 1304 0008 FFF7FEFF 		bl	__smalloc__
 1305              	.LVL118:
 1306              		.loc 4 380 9 view .LVU400
 1307              	.LBE257:
 1308              	.LBE256:
 233:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;        
 1309              		.loc 1 233 5 is_stmt 1 view .LVU401
 233:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;        
 1310              		.loc 1 233 7 is_stmt 0 view .LVU402
 1311 000c 0446     		mov	r4, r0
 1312 000e 20B3     		cbz	r0, .L81
 236:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock_init(&d_sb->lock);
 1313              		.loc 1 236 5 is_stmt 1 view .LVU403
 236:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock_init(&d_sb->lock);
 1314              		.loc 1 236 17 is_stmt 0 view .LVU404
 1315 0010 154B     		ldr	r3, .L86
ARM GAS  /tmp/ccQOnTG0.s 			page 60


 1316 0012 40F8043B 		str	r3, [r0], #4
 1317              	.LVL119:
 237:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     INIT_LIST_HEAD(&d_sb->inode_list_head);
 1318              		.loc 1 237 5 is_stmt 1 view .LVU405
 1319 0016 FFF7FEFF 		bl	spin_lock_init
 1320              	.LVL120:
 238:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode* root_inode = pipefs_create_empty_inode(d_sb ,&pipefs_file_fops,0);
 1321              		.loc 1 238 5 view .LVU406
 1322 001a 04F11803 		add	r3, r4, #24
 1323              	.LVL121:
 1324              	.LBB258:
 1325              	.LBI258:
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 1326              		.loc 7 35 20 view .LVU407
 1327              	.LBB259:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1328              		.loc 7 37 2 view .LVU408
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1329              		.loc 7 37 2 view .LVU409
 1330              	.LBB260:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1331              		.loc 7 37 2 view .LVU410
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1332              		.loc 7 37 2 view .LVU411
 1333              	.LBE260:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1334              		.loc 7 37 2 discriminator 2 view .LVU412
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1335              		.loc 7 37 2 discriminator 2 view .LVU413
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1336              		.loc 7 37 2 discriminator 2 view .LVU414
 1337 001e A361     		str	r3, [r4, #24]
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1338              		.loc 7 37 2 discriminator 2 view .LVU415
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1339              		.loc 7 37 2 discriminator 2 view .LVU416
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1340              		.loc 7 38 2 view .LVU417
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1341              		.loc 7 38 2 view .LVU418
 1342              	.LBB261:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1343              		.loc 7 38 2 view .LVU419
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1344              		.loc 7 38 2 view .LVU420
 1345              	.LBE261:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1346              		.loc 7 38 2 discriminator 2 view .LVU421
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1347              		.loc 7 38 2 discriminator 2 view .LVU422
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1348              		.loc 7 38 2 discriminator 2 view .LVU423
 1349 0020 E361     		str	r3, [r4, #28]
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1350              		.loc 7 38 2 discriminator 2 view .LVU424
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1351              		.loc 7 38 2 discriminator 2 view .LVU425
ARM GAS  /tmp/ccQOnTG0.s 			page 61


 1352              	.LVL122:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1353              		.loc 7 38 2 is_stmt 0 discriminator 2 view .LVU426
 1354              	.LBE259:
 1355              	.LBE258:
 239:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(root_inode == NULL){
 1356              		.loc 1 239 5 is_stmt 1 view .LVU427
 239:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(root_inode == NULL){
 1357              		.loc 1 239 39 is_stmt 0 view .LVU428
 1358 0022 0022     		movs	r2, #0
 1359 0024 1149     		ldr	r1, .L86+4
 1360 0026 2046     		mov	r0, r4
 1361 0028 FFF7FEFF 		bl	pipefs_create_empty_inode
 1362              	.LVL123:
 240:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(d_sb);
 1363              		.loc 1 240 5 is_stmt 1 view .LVU429
 240:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(d_sb);
 1364              		.loc 1 240 7 is_stmt 0 view .LVU430
 1365 002c 0546     		mov	r5, r0
 1366 002e B0B1     		cbz	r0, .L85
 244:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     d_sb->rootinode = root_inode;
 1367              		.loc 1 244 5 is_stmt 1 view .LVU431
 244:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     d_sb->rootinode = root_inode;
 1368              		.loc 1 244 24 is_stmt 0 view .LVU432
 1369 0030 44F2ED13 		movw	r3, #16877
 1370 0034 4360     		str	r3, [r0, #4]
 245:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     root_inode->i_fop = &pipefs_file_fops;
 1371              		.loc 1 245 5 is_stmt 1 view .LVU433
 245:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     root_inode->i_fop = &pipefs_file_fops;
 1372              		.loc 1 245 21 is_stmt 0 view .LVU434
 1373 0036 6061     		str	r0, [r4, #20]
 246:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     atomic_inc (&root_inode->dentry_count); 
 1374              		.loc 1 246 5 is_stmt 1 view .LVU435
 246:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     atomic_inc (&root_inode->dentry_count); 
 1375              		.loc 1 246 23 is_stmt 0 view .LVU436
 1376 0038 0C4B     		ldr	r3, .L86+4
 1377 003a 0361     		str	r3, [r0, #16]
 247:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     INIT_LIST_HEAD(&root_inode->dentry_list_head);
 1378              		.loc 1 247 5 is_stmt 1 view .LVU437
 1379 003c 00F10C03 		add	r3, r0, #12
 1380              	.LVL124:
 1381              	.LBB262:
 1382              	.LBI262:
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_set_release() - atomic set with release ordering
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to assign
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically sets @v to @i with release ordering.
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_set_release() there.
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
ARM GAS  /tmp/ccQOnTG0.s 			page 62


  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_set_release(atomic_t *v, int i)
  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_write(v, sizeof(*v));
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_set_release(v, i);
  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_add() - atomic add with relaxed ordering
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with relaxed ordering.
  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_add() there.
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_add(int i, atomic_t *v)
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_add(i, v);
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_add_return() - atomic add with full ordering
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with full ordering.
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_add_return() there.
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_add_return(int i, atomic_t *v)
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_add_return(i, v);
 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_add_return_acquire() - atomic add with acquire ordering
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with acquire ordering.
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_add_return_acquire() there.
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_add_return_acquire(int i, atomic_t *v)
ARM GAS  /tmp/ccQOnTG0.s 			page 63


 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_add_return_acquire(i, v);
 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_add_return_release() - atomic add with release ordering
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with release ordering.
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_add_return_release() there.
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_add_return_release(int i, atomic_t *v)
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_add_return_release(i, v);
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_add_return_relaxed() - atomic add with relaxed ordering
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with relaxed ordering.
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_add_return_relaxed() there.
 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_add_return_relaxed(int i, atomic_t *v)
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_add_return_relaxed(i, v);
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_add() - atomic add with full ordering
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with full ordering.
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_add() there.
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_add(int i, atomic_t *v)
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
ARM GAS  /tmp/ccQOnTG0.s 			page 64


 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_add(i, v);
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_add_acquire() - atomic add with acquire ordering
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with acquire ordering.
 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_add_acquire() there.
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_add_acquire(int i, atomic_t *v)
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_add_acquire(i, v);
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_add_release() - atomic add with release ordering
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with release ordering.
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_add_release() there.
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_add_release(int i, atomic_t *v)
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_add_release(i, v);
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_add_relaxed() - atomic add with relaxed ordering
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to add
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + @i) with relaxed ordering.
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_add_relaxed() there.
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 249:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 250:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_add_relaxed(int i, atomic_t *v)
 251:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_add_relaxed(i, v);
ARM GAS  /tmp/ccQOnTG0.s 			page 65


 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 255:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 256:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 257:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_sub() - atomic subtract with relaxed ordering
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 261:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with relaxed ordering.
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_sub() there.
 264:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 266:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 267:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 268:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_sub(int i, atomic_t *v)
 269:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 270:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 271:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_sub(i, v);
 272:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 273:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 274:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 275:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_sub_return() - atomic subtract with full ordering
 276:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 277:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 278:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 279:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with full ordering.
 280:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 281:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_sub_return() there.
 282:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 283:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 284:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 285:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 286:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_sub_return(int i, atomic_t *v)
 287:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 288:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 289:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 290:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_sub_return(i, v);
 291:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 292:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 293:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 294:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_sub_return_acquire() - atomic subtract with acquire ordering
 295:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 296:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 297:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 298:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with acquire ordering.
 299:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 300:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_sub_return_acquire() there.
 301:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 302:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 303:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 304:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 305:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_sub_return_acquire(int i, atomic_t *v)
 306:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 307:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 308:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_sub_return_acquire(i, v);
 309:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 310:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
ARM GAS  /tmp/ccQOnTG0.s 			page 66


 311:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 312:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_sub_return_release() - atomic subtract with release ordering
 313:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 314:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 315:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 316:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with release ordering.
 317:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 318:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_sub_return_release() there.
 319:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 320:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 321:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 322:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 323:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_sub_return_release(int i, atomic_t *v)
 324:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 325:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 326:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 327:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_sub_return_release(i, v);
 328:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 329:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 330:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 331:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_sub_return_relaxed() - atomic subtract with relaxed ordering
 332:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 333:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 334:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 335:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with relaxed ordering.
 336:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 337:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_sub_return_relaxed() there.
 338:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 339:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 340:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 341:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 342:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_sub_return_relaxed(int i, atomic_t *v)
 343:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 344:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 345:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_sub_return_relaxed(i, v);
 346:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 347:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 348:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 349:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_sub() - atomic subtract with full ordering
 350:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 351:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 352:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 353:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with full ordering.
 354:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 355:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_sub() there.
 356:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 357:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 358:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 359:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 360:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_sub(int i, atomic_t *v)
 361:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 362:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 363:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 364:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_sub(i, v);
 365:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 366:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 367:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
ARM GAS  /tmp/ccQOnTG0.s 			page 67


 368:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_sub_acquire() - atomic subtract with acquire ordering
 369:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 370:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 371:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 372:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with acquire ordering.
 373:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 374:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_sub_acquire() there.
 375:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 376:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 377:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 378:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_sub_acquire(int i, atomic_t *v)
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 381:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 382:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_sub_acquire(i, v);
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 385:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 386:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_sub_release() - atomic subtract with release ordering
 387:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 388:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 389:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 390:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with release ordering.
 391:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 392:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_sub_release() there.
 393:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 394:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 395:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 396:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 397:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_sub_release(int i, atomic_t *v)
 398:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 399:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 400:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 401:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_sub_release(i, v);
 402:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 403:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 404:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 405:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_sub_relaxed() - atomic subtract with relaxed ordering
 406:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
 407:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 408:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 409:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with relaxed ordering.
 410:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 411:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_sub_relaxed() there.
 412:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 413:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 414:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 415:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 416:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_sub_relaxed(int i, atomic_t *v)
 417:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 418:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 419:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_sub_relaxed(i, v);
 420:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 421:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 422:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 423:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_inc() - atomic increment with relaxed ordering
 424:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
ARM GAS  /tmp/ccQOnTG0.s 			page 68


 425:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 426:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with relaxed ordering.
 427:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 428:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_inc() there.
 429:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 430:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 431:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 432:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 433:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_inc(atomic_t *v)
 1383              		.loc 5 433 1 view .LVU438
 434:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 435:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 1384              		.loc 5 435 2 view .LVU439
 436:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_inc(v);
 1385              		.loc 5 436 2 view .LVU440
 1386              	.LBB263:
 1387              	.LBI263:
 510:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 511:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 512:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 513:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_set_release() - atomic set with release ordering
 514:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 515:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to assign
 516:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 517:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically sets @v to @i with release ordering.
 518:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 519:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_set_release() elsewhere.
 520:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 521:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
 522:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 523:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
 524:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_set_release(atomic_t *v, int i)
 525:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 526:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_set_release)
 527:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_set_release(v, i);
 528:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 529:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (__native_word(atomic_t)) {
 530:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		smp_store_release(&(v)->counter, i);
 531:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	} else {
 532:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		__atomic_release_fence();
 533:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		raw_atomic_set(v, i);
 534:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	}
 535:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 536:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 537:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 538:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 539:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_add() - atomic add with relaxed ordering
 540:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 541:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 542:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 543:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with relaxed ordering.
 544:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 545:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_add() elsewhere.
 546:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 547:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
 548:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 549:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
ARM GAS  /tmp/ccQOnTG0.s 			page 69


 550:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_add(int i, atomic_t *v)
 551:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 552:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_add(i, v);
 553:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 554:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 555:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 556:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_add_return() - atomic add with full ordering
 557:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 558:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 559:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 560:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with full ordering.
 561:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 562:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_add_return() elsewhere.
 563:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 564:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 565:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 566:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 567:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_add_return(int i, atomic_t *v)
 568:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 569:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_add_return)
 570:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return(i, v);
 571:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_add_return_relaxed)
 572:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
 573:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
 574:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_add_return_relaxed(i, v);
 575:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
 576:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 577:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 578:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_add_return"
 579:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 580:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 581:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 582:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 583:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_add_return_acquire() - atomic add with acquire ordering
 584:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 585:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 586:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 587:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with acquire ordering.
 588:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 589:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_add_return_acquire() elsewhere.
 590:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 591:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 592:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 593:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 594:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_add_return_acquire(int i, atomic_t *v)
 595:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 596:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_add_return_acquire)
 597:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return_acquire(i, v);
 598:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_add_return_relaxed)
 599:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_add_return_relaxed(i, v);
 600:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
 601:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 602:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_add_return)
 603:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return(i, v);
 604:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 605:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_add_return_acquire"
 606:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
ARM GAS  /tmp/ccQOnTG0.s 			page 70


 607:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 608:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 609:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 610:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_add_return_release() - atomic add with release ordering
 611:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 612:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 613:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 614:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with release ordering.
 615:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 616:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_add_return_release() elsewhere.
 617:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 618:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 619:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 620:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 621:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_add_return_release(int i, atomic_t *v)
 622:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 623:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_add_return_release)
 624:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return_release(i, v);
 625:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_add_return_relaxed)
 626:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
 627:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return_relaxed(i, v);
 628:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_add_return)
 629:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return(i, v);
 630:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 631:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_add_return_release"
 632:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 633:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 634:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 635:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 636:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_add_return_relaxed() - atomic add with relaxed ordering
 637:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 638:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 639:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 640:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with relaxed ordering.
 641:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 642:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_add_return_relaxed() elsewhere.
 643:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 644:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 645:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 646:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 647:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_add_return_relaxed(int i, atomic_t *v)
 648:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 649:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_add_return_relaxed)
 650:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return_relaxed(i, v);
 651:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_add_return)
 652:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_add_return(i, v);
 653:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 654:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_add_return_relaxed"
 655:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 656:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 657:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 658:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 659:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_add() - atomic add with full ordering
 660:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 661:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 662:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 663:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with full ordering.
ARM GAS  /tmp/ccQOnTG0.s 			page 71


 664:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 665:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_add() elsewhere.
 666:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 667:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 668:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 669:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 670:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_add(int i, atomic_t *v)
 671:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 672:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_add)
 673:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add(i, v);
 674:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_add_relaxed)
 675:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
 676:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
 677:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_add_relaxed(i, v);
 678:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
 679:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 680:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 681:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_add"
 682:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 683:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 684:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 685:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 686:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_add_acquire() - atomic add with acquire ordering
 687:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 688:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 689:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 690:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with acquire ordering.
 691:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 692:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_add_acquire() elsewhere.
 693:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 694:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 695:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 696:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 697:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_add_acquire(int i, atomic_t *v)
 698:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 699:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_add_acquire)
 700:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add_acquire(i, v);
 701:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_add_relaxed)
 702:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_add_relaxed(i, v);
 703:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
 704:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 705:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_add)
 706:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add(i, v);
 707:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 708:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_add_acquire"
 709:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 710:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 711:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 712:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 713:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_add_release() - atomic add with release ordering
 714:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 715:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 716:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 717:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with release ordering.
 718:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 719:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_add_release() elsewhere.
 720:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
ARM GAS  /tmp/ccQOnTG0.s 			page 72


 721:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 722:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 723:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 724:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_add_release(int i, atomic_t *v)
 725:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 726:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_add_release)
 727:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add_release(i, v);
 728:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_add_relaxed)
 729:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
 730:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add_relaxed(i, v);
 731:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_add)
 732:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add(i, v);
 733:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 734:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_add_release"
 735:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 736:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 737:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 738:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 739:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_add_relaxed() - atomic add with relaxed ordering
 740:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to add
 741:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 742:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 743:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + @i) with relaxed ordering.
 744:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 745:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_add_relaxed() elsewhere.
 746:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 747:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 748:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 749:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 750:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_add_relaxed(int i, atomic_t *v)
 751:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 752:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_add_relaxed)
 753:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add_relaxed(i, v);
 754:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_add)
 755:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_add(i, v);
 756:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 757:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_add_relaxed"
 758:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 759:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 760:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 761:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 762:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_sub() - atomic subtract with relaxed ordering
 763:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 764:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 765:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 766:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with relaxed ordering.
 767:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 768:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_sub() elsewhere.
 769:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 770:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
 771:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 772:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
 773:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_sub(int i, atomic_t *v)
 774:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 775:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_sub(i, v);
 776:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 777:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
ARM GAS  /tmp/ccQOnTG0.s 			page 73


 778:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 779:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_sub_return() - atomic subtract with full ordering
 780:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 781:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 782:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 783:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with full ordering.
 784:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 785:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_sub_return() elsewhere.
 786:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 787:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 788:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 789:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 790:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_sub_return(int i, atomic_t *v)
 791:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 792:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_sub_return)
 793:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return(i, v);
 794:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_sub_return_relaxed)
 795:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
 796:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
 797:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_sub_return_relaxed(i, v);
 798:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
 799:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 800:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 801:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	volatile int *p = (volatile int *)&v->counter;
 802:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = *p;
 803:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	*p -= i;
 804:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 805:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 806:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 807:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 808:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 809:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 810:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_sub_return_acquire() - atomic subtract with acquire ordering
 811:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 812:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 813:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 814:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with acquire ordering.
 815:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 816:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_sub_return_acquire() elsewhere.
 817:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 818:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 819:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 820:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 821:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_sub_return_acquire(int i, atomic_t *v)
 822:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 823:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_sub_return_acquire)
 824:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return_acquire(i, v);
 825:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_sub_return_relaxed)
 826:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_sub_return_relaxed(i, v);
 827:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
 828:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 829:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_sub_return)
 830:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return(i, v);
 831:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 832:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_sub_return_acquire"
 833:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 834:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
ARM GAS  /tmp/ccQOnTG0.s 			page 74


 835:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 836:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 837:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_sub_return_release() - atomic subtract with release ordering
 838:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 839:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 840:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 841:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with release ordering.
 842:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 843:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_sub_return_release() elsewhere.
 844:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 845:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 846:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 847:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 848:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_sub_return_release(int i, atomic_t *v)
 849:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 850:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_sub_return_release)
 851:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return_release(i, v);
 852:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_sub_return_relaxed)
 853:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
 854:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return_relaxed(i, v);
 855:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_sub_return)
 856:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return(i, v);
 857:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 858:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_sub_return_release"
 859:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 860:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 861:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 862:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 863:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_sub_return_relaxed() - atomic subtract with relaxed ordering
 864:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 865:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 866:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 867:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with relaxed ordering.
 868:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 869:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_sub_return_relaxed() elsewhere.
 870:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 871:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
 872:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 873:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 874:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_sub_return_relaxed(int i, atomic_t *v)
 875:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 876:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_sub_return_relaxed)
 877:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return_relaxed(i, v);
 878:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_sub_return)
 879:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_return(i, v);
 880:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 881:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_sub_return_relaxed"
 882:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 883:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 884:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 885:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 886:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_sub() - atomic subtract with full ordering
 887:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 888:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 889:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 890:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with full ordering.
 891:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
ARM GAS  /tmp/ccQOnTG0.s 			page 75


 892:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_sub() elsewhere.
 893:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 894:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 895:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 896:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 897:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_sub(int i, atomic_t *v)
 898:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 899:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_sub)
 900:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub(i, v);
 901:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_sub_relaxed)
 902:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
 903:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
 904:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_sub_relaxed(i, v);
 905:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
 906:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 907:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 908:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_sub"
 909:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 910:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 911:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 912:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 913:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_sub_acquire() - atomic subtract with acquire ordering
 914:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 915:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 916:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 917:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with acquire ordering.
 918:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 919:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_sub_acquire() elsewhere.
 920:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 921:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 922:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 923:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 924:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_sub_acquire(int i, atomic_t *v)
 925:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 926:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_sub_acquire)
 927:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub_acquire(i, v);
 928:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_sub_relaxed)
 929:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_sub_relaxed(i, v);
 930:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
 931:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 932:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_sub)
 933:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub(i, v);
 934:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 935:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_sub_acquire"
 936:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 937:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 938:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 939:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 940:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_sub_release() - atomic subtract with release ordering
 941:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 942:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 943:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 944:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with release ordering.
 945:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 946:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_sub_release() elsewhere.
 947:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 948:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
ARM GAS  /tmp/ccQOnTG0.s 			page 76


 949:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 950:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 951:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_sub_release(int i, atomic_t *v)
 952:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 953:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_sub_release)
 954:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub_release(i, v);
 955:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_sub_relaxed)
 956:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
 957:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub_relaxed(i, v);
 958:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_sub)
 959:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub(i, v);
 960:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 961:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_sub_release"
 962:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 963:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 964:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 965:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 966:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_sub_relaxed() - atomic subtract with relaxed ordering
 967:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
 968:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 969:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 970:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with relaxed ordering.
 971:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 972:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_sub_relaxed() elsewhere.
 973:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 974:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
 975:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 976:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
 977:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_sub_relaxed(int i, atomic_t *v)
 978:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 979:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_sub_relaxed)
 980:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub_relaxed(i, v);
 981:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_sub)
 982:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_sub(i, v);
 983:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 984:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_sub_relaxed"
 985:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 986:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 987:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
 988:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
 989:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_inc() - atomic increment with relaxed ordering
 990:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
 991:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 992:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with relaxed ordering.
 993:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 994:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_inc() elsewhere.
 995:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
 996:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
 997:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
 998:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
 999:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_inc(atomic_t *v)
 1388              		.loc 6 999 1 view .LVU441
1000:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1001:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_inc)
1002:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_inc(v);
1003:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1004:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	raw_atomic_add(1, v);
ARM GAS  /tmp/ccQOnTG0.s 			page 77


 1389              		.loc 6 1004 2 view .LVU442
 1390              	.LBB264:
 1391              	.LBI264:
 550:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 1392              		.loc 6 550 1 view .LVU443
 552:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 1393              		.loc 6 552 2 view .LVU444
 1394              	.LBB265:
 1395              	.LBI265:
 1396              		.file 8 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h"
   1:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** /* SPDX-License-Identifier: GPL-2.0-only */
   2:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** /*
   3:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * arch/arm/include/asm/atomic.h
   4:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  *
   5:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * Copyright (C) 1996 Russell King.
   6:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * Copyright (C) 2002 Deep Blue Solutions Ltd.
   7:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * Modified for uClinux on STM32F407
   8:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  */
   9:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #ifndef __ASM_ARM_ATOMIC_H
  10:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define __ASM_ARM_ATOMIC_H
  11:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  12:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #include <linux/compiler.h> /* Available */
  13:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #include <linux/types.h>    /* Available */
  14:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #include <asm/barrier.h>    /* Available */
  15:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  16:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** /* Include architecture-specific configuration */
  17:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  18:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  19:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #ifdef __KERNEL__
  20:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  21:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  22:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  23:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  24:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  25:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** // typedef struct {
  26:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** //     volatile int counter;
  27:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** // } atomic_t;
  28:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  29:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define ATOMIC_INIT(i) { (i) }
  30:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  31:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** /*
  32:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * On ARMv7-M, ordinary assignment (str instruction) doesn't clear the local
  33:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * strex/ldrex monitor on some implementations. The reason we can use it for
  34:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * atomic_set() is the clrex or dummy strex done on every exception return.
  35:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  */
  36:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_read(v) READ_ONCE((v)->counter)
  37:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_set(v,i)    WRITE_ONCE(((v)->counter), (i))
  38:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  39:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** /*
  40:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * ARMv6 UP and SMP safe atomic ops.  We use load exclusive and
  41:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * store exclusive to ensure that these are atomic.  We may loop
  42:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * to ensure that the update happens.
  43:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  *
  44:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  * For STM32F407 (Cortex-M4, ARMv7-M), these instructions are available.
  45:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****  */
  46:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  47:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define ATOMIC_OP(op, c_op, asm_op)                     \
ARM GAS  /tmp/ccQOnTG0.s 			page 78


  48:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** static inline void arch_atomic_##op(int i, atomic_t *v)         \
  49:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** {                                       \
  50:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     unsigned long tmp;                          \
  51:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     int result;                                 \
  52:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****                                         \
  53:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     /* prefetchw(&v->counter); - prefetch not available */ \
  54:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     __asm__ __volatile__("@ atomic_" #op "\n"           \
  55:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "1: ldrex   %0, [%3]\n"                      \
  56:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   " #asm_op " %0, %0, %4\n"                \
  57:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   strex   %1, %0, [%3]\n"                      \
  58:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   teq %1, #0\n"                         \
  59:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   bne 1b"                                \
  60:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "=&r" (result), "=&r" (tmp), "+Qo" (v->counter)     \
  61:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "r" (&v->counter), "Ir" (i)                 \
  62:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "cc");                                   \
  63:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** }
  64:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  65:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define ATOMIC_OP_RETURN(op, c_op, asm_op)                  \
  66:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** static inline int arch_atomic_##op##_return_relaxed(int i, atomic_t *v) \
  67:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** {                                       \
  68:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     unsigned long tmp;                          \
  69:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     int result;                                 \
  70:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****                                         \
  71:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     /* prefetchw(&v->counter); - prefetch not available */ \
  72:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     __asm__ __volatile__("@ atomic_" #op "_return\n"        \
  73:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "1: ldrex   %0, [%3]\n"                      \
  74:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   " #asm_op " %0, %0, %4\n"                \
  75:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   strex   %1, %0, [%3]\n"                      \
  76:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   teq %1, #0\n"                         \
  77:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   bne 1b"                                \
  78:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "=&r" (result), "=&r" (tmp), "+Qo" (v->counter)     \
  79:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "r" (&v->counter), "Ir" (i)                 \
  80:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "cc");                                   \
  81:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****                                         \
  82:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     return result;                              \
  83:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** }
  84:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
  85:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define ATOMIC_FETCH_OP(op, c_op, asm_op)                   \
  86:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** static inline int arch_atomic_fetch_##op##_relaxed(int i, atomic_t *v)  \
  87:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** {                                       \
  88:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     unsigned long tmp;                          \
  89:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     int result, val;                             \
  90:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****                                         \
  91:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     /* prefetchw(&v->counter); - prefetch not available */ \
  92:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     __asm__ __volatile__("@ atomic_fetch_" #op "\n"       \
  93:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "1: ldrex   %0, [%4]\n"                      \
  94:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   " #asm_op " %1, %0, %5\n"                \
  95:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   strex   %2, %1, [%4]\n"                      \
  96:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   teq %2, #0\n"                         \
  97:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   bne 1b"                                \
  98:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "=&r" (result), "=&r" (val), "=&r" (tmp), "+Qo" (v->counter) \
  99:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "r" (&v->counter), "Ir" (i)                 \
 100:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "cc");                                   \
 101:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****                                         \
 102:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     return result;                              \
 103:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** }
 104:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
ARM GAS  /tmp/ccQOnTG0.s 			page 79


 105:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_add_return_relaxed       arch_atomic_add_return_relaxed
 106:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_sub_return_relaxed       arch_atomic_sub_return_relaxed
 107:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_add_relaxed        arch_atomic_fetch_add_relaxed
 108:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_sub_relaxed        arch_atomic_fetch_sub_relaxed
 109:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 110:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_and_relaxed        arch_atomic_fetch_and_relaxed
 111:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_andnot_relaxed     arch_atomic_fetch_andnot_relaxed
 112:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_or_relaxed         arch_atomic_fetch_or_relaxed
 113:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_xor_relaxed        arch_atomic_fetch_xor_relaxed
 114:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 115:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** static inline int arch_atomic_cmpxchg_relaxed(atomic_t *ptr, int old, int new)
 116:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** {
 117:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     int oldval;
 118:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     unsigned long res;
 119:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 120:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     /* prefetchw(&ptr->counter); - prefetch not available */
 121:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 122:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     do {
 123:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****         __asm__ __volatile__("@ atomic_cmpxchg\n"
 124:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   ldrex   %1, [%3]\n"
 125:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   mov     %0, #0\n"
 126:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   teq     %1, %4\n"
 127:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   strexeq %0, %5, [%3]\n"
 128:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****         : "=&r" (res), "=&r" (oldval), "+Qo" (ptr->counter)
 129:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****         : "r" (&ptr->counter), "Ir" (old), "r" (new)
 130:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****         : "cc");
 131:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     } while (res);
 132:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 133:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     return oldval;
 134:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** }
 135:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_cmpxchg_relaxed        arch_atomic_cmpxchg_relaxed
 136:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 137:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** static inline int arch_atomic_fetch_add_unless(atomic_t *v, int a, int u)
 138:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** {
 139:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     int oldval, newval;
 140:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     unsigned long tmp;
 141:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 142:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     /* smp_mb(); - Memory barriers might need specific implementation */
 143:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     /* prefetchw(&v->counter); - prefetch not available */
 144:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 145:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     __asm__ __volatile__ ("@ atomic_add_unless\n"
 146:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "1: ldrex   %0, [%4]\n"
 147:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   teq %0, %5\n"
 148:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   beq 2f\n"
 149:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   add %1, %0, %6\n"
 150:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   strex   %2, %1, [%4]\n"
 151:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   teq %2, #0\n"
 152:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "   bne 1b\n"
 153:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** "2:"
 154:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "=&r" (oldval), "=&r" (newval), "=&r" (tmp), "+Qo" (v->counter)
 155:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "r" (&v->counter), "r" (u), "r" (a)
 156:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     : "cc");
 157:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 158:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     if (oldval != u)
 159:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****         ; /* smp_mb(); - Memory barriers might need specific implementation */
 160:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 161:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     return oldval;
ARM GAS  /tmp/ccQOnTG0.s 			page 80


 162:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** }
 163:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define arch_atomic_fetch_add_unless         arch_atomic_fetch_add_unless
 164:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 165:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** #define ATOMIC_OPS(op, c_op, asm_op)                    \
 166:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     ATOMIC_OP(op, c_op, asm_op)                     \
 167:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     ATOMIC_OP_RETURN(op, c_op, asm_op)                  \
 168:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h ****     ATOMIC_FETCH_OP(op, c_op, asm_op)
 169:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** 
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(add, +=, add)
 1397              		.loc 8 170 1 view .LVU445
 1398              	.LBB266:
 1399              		.loc 8 170 1 view .LVU446
 1400              		.loc 8 170 1 view .LVU447
 1401              		.loc 8 170 1 view .LVU448
 1402              		.syntax unified
 1403              	@ 170 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h" 1
 1404              		@ atomic_add
 1405 0040 53E8002F 	1: ldrex   r2, [r3]
 1406 0044 02F10102 	   add r2, r2, #1
 1407 0048 43E80021 	   strex   r1, r2, [r3]
 1408 004c 91F0000F 	   teq r1, #0
 1409 0050 F6D1     	   bne 1b
 1410              	@ 0 "" 2
 1411              	.LVL125:
 1412              		.loc 8 170 1 is_stmt 0 view .LVU449
 1413              		.thumb
 1414              		.syntax unified
 1415              	.LBE266:
 1416              	.LBE265:
 1417              	.LBE264:
 1418              	.LBE263:
 1419              	.LBE262:
 248:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return d_sb;
 1420              		.loc 1 248 5 is_stmt 1 view .LVU450
 1421 0052 00F11C03 		add	r3, r0, #28
 1422              	.LVL126:
 1423              	.LBB267:
 1424              	.LBI267:
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 1425              		.loc 7 35 20 view .LVU451
 1426              	.LBB268:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1427              		.loc 7 37 2 view .LVU452
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1428              		.loc 7 37 2 view .LVU453
 1429              	.LBB269:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1430              		.loc 7 37 2 view .LVU454
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1431              		.loc 7 37 2 view .LVU455
 1432              	.LBE269:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1433              		.loc 7 37 2 discriminator 2 view .LVU456
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1434              		.loc 7 37 2 discriminator 2 view .LVU457
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1435              		.loc 7 37 2 discriminator 2 view .LVU458
ARM GAS  /tmp/ccQOnTG0.s 			page 81


 1436 0056 C361     		str	r3, [r0, #28]
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1437              		.loc 7 37 2 discriminator 2 view .LVU459
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 1438              		.loc 7 37 2 discriminator 2 view .LVU460
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1439              		.loc 7 38 2 view .LVU461
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1440              		.loc 7 38 2 view .LVU462
 1441              	.LBB270:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1442              		.loc 7 38 2 view .LVU463
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1443              		.loc 7 38 2 view .LVU464
 1444              	.LBE270:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1445              		.loc 7 38 2 discriminator 2 view .LVU465
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1446              		.loc 7 38 2 discriminator 2 view .LVU466
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1447              		.loc 7 38 2 discriminator 2 view .LVU467
 1448 0058 0362     		str	r3, [r0, #32]
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1449              		.loc 7 38 2 discriminator 2 view .LVU468
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1450              		.loc 7 38 2 discriminator 2 view .LVU469
 1451              	.LVL127:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1452              		.loc 7 38 2 is_stmt 0 discriminator 2 view .LVU470
 1453              	.LBE268:
 1454              	.LBE267:
 249:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** } 
 1455              		.loc 1 249 5 is_stmt 1 view .LVU471
 1456              	.L81:
 250:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static void pipefs_superblock_destory(struct pipefs_superblock* sb){
 1457              		.loc 1 250 1 is_stmt 0 view .LVU472
 1458 005a 2046     		mov	r0, r4
 1459 005c 38BD     		pop	{r3, r4, r5, pc}
 1460              	.LVL128:
 1461              	.L85:
 241:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 1462              		.loc 1 241 9 is_stmt 1 view .LVU473
 1463              	.LBB271:
 1464              	.LBI271:
 381:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 382:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline kfree(const void *ptr){
 1465              		.loc 4 383 20 view .LVU474
 1466              	.LBB272:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1467              		.loc 4 384 2 view .LVU475
 1468 005e 2046     		mov	r0, r4
 1469              	.LVL129:
 1470              		.loc 4 384 2 is_stmt 0 view .LVU476
 1471 0060 FFF7FEFF 		bl	__sfree__
 1472              	.LVL130:
 1473              		.loc 4 384 2 view .LVU477
ARM GAS  /tmp/ccQOnTG0.s 			page 82


 1474              	.LBE272:
 1475              	.LBE271:
 242:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 1476              		.loc 1 242 9 is_stmt 1 view .LVU478
 242:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 1477              		.loc 1 242 16 is_stmt 0 view .LVU479
 1478 0064 2C46     		mov	r4, r5
 1479              	.LVL131:
 242:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 1480              		.loc 1 242 16 view .LVU480
 1481 0066 F8E7     		b	.L81
 1482              	.L87:
 1483              		.align	2
 1484              	.L86:
 1485 0068 4E61BC00 		.word	12345678
 1486 006c 00000000 		.word	pipefs_file_fops
 1487              		.cfi_endproc
 1488              	.LFE1049:
 1490              		.section	.text.pipefs_inode_put,"ax",%progbits
 1491              		.align	1
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1496              	pipefs_inode_put:
 1497              	.LVL132:
 1498              	.LFB1042:
 137:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(node != NULL)
 1499              		.loc 1 137 56 is_stmt 1 view -0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 0
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 138:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 1503              		.loc 1 138 5 view .LVU482
 138:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 1504              		.loc 1 138 7 is_stmt 0 view .LVU483
 1505 0000 48B1     		cbz	r0, .L92
 137:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(node != NULL)
 1506              		.loc 1 137 56 view .LVU484
 1507 0002 10B5     		push	{r4, lr}
 1508              	.LCFI15:
 1509              		.cfi_def_cfa_offset 8
 1510              		.cfi_offset 4, -8
 1511              		.cfi_offset 14, -4
 1512 0004 0446     		mov	r4, r0
 140:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             kfree(node->buf);
 1513              		.loc 1 140 9 is_stmt 1 view .LVU485
 140:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             kfree(node->buf);
 1514              		.loc 1 140 16 is_stmt 0 view .LVU486
 1515 0006 806B     		ldr	r0, [r0, #56]
 1516              	.LVL133:
 140:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             kfree(node->buf);
 1517              		.loc 1 140 11 view .LVU487
 1518 0008 08B1     		cbz	r0, .L90
 141:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 1519              		.loc 1 141 13 is_stmt 1 view .LVU488
 1520              	.LVL134:
 1521              	.LBB273:
ARM GAS  /tmp/ccQOnTG0.s 			page 83


 1522              	.LBI273:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1523              		.loc 4 383 20 view .LVU489
 1524              	.LBB274:
 1525              		.loc 4 384 2 view .LVU490
 1526 000a FFF7FEFF 		bl	__sfree__
 1527              	.LVL135:
 1528              	.L90:
 1529              		.loc 4 384 2 is_stmt 0 view .LVU491
 1530              	.LBE274:
 1531              	.LBE273:
 143:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 1532              		.loc 1 143 9 is_stmt 1 view .LVU492
 1533              	.LBB275:
 1534              	.LBI275:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1535              		.loc 4 383 20 view .LVU493
 1536              	.LBB276:
 1537              		.loc 4 384 2 view .LVU494
 1538 000e 2046     		mov	r0, r4
 1539 0010 FFF7FEFF 		bl	__sfree__
 1540              	.LVL136:
 1541              		.loc 4 384 2 is_stmt 0 view .LVU495
 1542              	.LBE276:
 1543              	.LBE275:
 145:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct pipefs_dentry* pipefs_create_dentry(struct pipefs_inode* parent_dentry_inode,struct p
 1544              		.loc 1 145 1 view .LVU496
 1545 0014 10BD     		pop	{r4, pc}
 1546              	.LVL137:
 1547              	.L92:
 1548              	.LCFI16:
 1549              		.cfi_def_cfa_offset 0
 1550              		.cfi_restore 4
 1551              		.cfi_restore 14
 145:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct pipefs_dentry* pipefs_create_dentry(struct pipefs_inode* parent_dentry_inode,struct p
 1552              		.loc 1 145 1 view .LVU497
 1553 0016 7047     		bx	lr
 1554              		.cfi_endproc
 1555              	.LFE1042:
 1557              		.section	.text.dentry_put,"ax",%progbits
 1558              		.align	1
 1559              		.syntax unified
 1560              		.thumb
 1561              		.thumb_func
 1563              	dentry_put:
 1564              	.LVL138:
 1565              	.LFB1047:
 201:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry == NULL) return;
 1566              		.loc 1 201 1 is_stmt 1 view -0
 1567              		.cfi_startproc
 1568              		@ args = 0, pretend = 0, frame = 0
 1569              		@ frame_needed = 0, uses_anonymous_args = 0
 202:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry->target_inode != NULL)
 1570              		.loc 1 202 5 view .LVU499
 202:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry->target_inode != NULL)
 1571              		.loc 1 202 7 is_stmt 0 view .LVU500
 1572 0000 61B3     		cbz	r1, .L100
ARM GAS  /tmp/ccQOnTG0.s 			page 84


 201:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry == NULL) return;
 1573              		.loc 1 201 1 view .LVU501
 1574 0002 38B5     		push	{r3, r4, r5, lr}
 1575              	.LCFI17:
 1576              		.cfi_def_cfa_offset 16
 1577              		.cfi_offset 3, -16
 1578              		.cfi_offset 4, -12
 1579              		.cfi_offset 5, -8
 1580              		.cfi_offset 14, -4
 1581 0004 0D46     		mov	r5, r1
 203:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 1582              		.loc 1 203 5 is_stmt 1 view .LVU502
 203:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 1583              		.loc 1 203 14 is_stmt 0 view .LVU503
 1584 0006 8B68     		ldr	r3, [r1, #8]
 203:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 1585              		.loc 1 203 7 view .LVU504
 1586 0008 93B1     		cbz	r3, .L97
 205:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (atomic_dec_and_test(&dentry->target_inode->dentry_count)) //Ê£ÄÊµãinodeÂºïÁî®ËÆ°Êï∞ÊòØÂ
 1587              		.loc 1 205 9 is_stmt 1 view .LVU505
 1588 000a 041D     		adds	r4, r0, #4
 1589 000c 2046     		mov	r0, r4
 1590              	.LVL139:
 205:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if (atomic_dec_and_test(&dentry->target_inode->dentry_count)) //Ê£ÄÊµãinodeÂºïÁî®ËÆ°Êï∞ÊòØÂ
 1591              		.loc 1 205 9 is_stmt 0 view .LVU506
 1592 000e FFF7FEFF 		bl	spin_lock
 1593              	.LVL140:
 206:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         {
 1594              		.loc 1 206 9 is_stmt 1 view .LVU507
 206:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         {
 1595              		.loc 1 206 40 is_stmt 0 view .LVU508
 1596 0012 AB68     		ldr	r3, [r5, #8]
 206:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         {
 1597              		.loc 1 206 13 view .LVU509
 1598 0014 0C33     		adds	r3, r3, #12
 1599              	.LVL141:
 1600              	.LBB277:
 1601              	.LBI277:
 437:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 438:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 439:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 440:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_inc_return() - atomic increment with full ordering
 441:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 442:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 443:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with full ordering.
 444:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 445:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_inc_return() there.
 446:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 447:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 448:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 449:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 450:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_inc_return(atomic_t *v)
 451:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 452:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 453:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 454:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_inc_return(v);
 455:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
ARM GAS  /tmp/ccQOnTG0.s 			page 85


 456:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 457:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 458:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_inc_return_acquire() - atomic increment with acquire ordering
 459:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 460:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 461:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with acquire ordering.
 462:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_inc_return_acquire() there.
 464:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 465:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 466:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 467:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 468:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_inc_return_acquire(atomic_t *v)
 469:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 470:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 471:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_inc_return_acquire(v);
 472:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 473:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 474:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 475:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_inc_return_release() - atomic increment with release ordering
 476:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 477:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 478:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with release ordering.
 479:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 480:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_inc_return_release() there.
 481:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 482:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 483:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 484:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 485:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_inc_return_release(atomic_t *v)
 486:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 487:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 488:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 489:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_inc_return_release(v);
 490:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 491:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 492:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 493:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_inc_return_relaxed() - atomic increment with relaxed ordering
 494:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 495:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 496:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with relaxed ordering.
 497:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 498:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_inc_return_relaxed() there.
 499:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 500:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 501:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 502:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 503:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_inc_return_relaxed(atomic_t *v)
 504:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 505:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 506:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_inc_return_relaxed(v);
 507:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 508:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 509:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 510:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_inc() - atomic increment with full ordering
 511:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 512:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
ARM GAS  /tmp/ccQOnTG0.s 			page 86


 513:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with full ordering.
 514:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 515:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_inc() there.
 516:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 517:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 518:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 519:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 520:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_inc(atomic_t *v)
 521:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 522:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 523:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 524:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_inc(v);
 525:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 526:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 527:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 528:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_inc_acquire() - atomic increment with acquire ordering
 529:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 530:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 531:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with acquire ordering.
 532:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 533:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_inc_acquire() there.
 534:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 535:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 536:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 537:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 538:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_inc_acquire(atomic_t *v)
 539:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 540:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 541:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_inc_acquire(v);
 542:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 543:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 544:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 545:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_inc_release() - atomic increment with release ordering
 546:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 547:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 548:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with release ordering.
 549:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 550:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_inc_release() there.
 551:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 552:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 553:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 554:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 555:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_inc_release(atomic_t *v)
 556:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 557:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 558:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 559:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_inc_release(v);
 560:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 561:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 562:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 563:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_inc_relaxed() - atomic increment with relaxed ordering
 564:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 565:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 566:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v + 1) with relaxed ordering.
 567:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 568:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_inc_relaxed() there.
 569:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
ARM GAS  /tmp/ccQOnTG0.s 			page 87


 570:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 571:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 572:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 573:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_inc_relaxed(atomic_t *v)
 574:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 575:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 576:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_inc_relaxed(v);
 577:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 578:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 579:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 580:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_dec() - atomic decrement with relaxed ordering
 581:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 582:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 583:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with relaxed ordering.
 584:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 585:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_dec() there.
 586:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 587:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 588:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 589:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 590:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_dec(atomic_t *v)
 591:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 592:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 593:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_dec(v);
 594:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 595:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 596:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 597:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_dec_return() - atomic decrement with full ordering
 598:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 599:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 600:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with full ordering.
 601:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 602:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_dec_return() there.
 603:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 604:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 605:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 606:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 607:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_dec_return(atomic_t *v)
 608:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 609:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 610:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 611:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_dec_return(v);
 612:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 613:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 614:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 615:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_dec_return_acquire() - atomic decrement with acquire ordering
 616:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 617:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 618:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with acquire ordering.
 619:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 620:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_dec_return_acquire() there.
 621:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 622:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 623:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 624:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 625:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_dec_return_acquire(atomic_t *v)
 626:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
ARM GAS  /tmp/ccQOnTG0.s 			page 88


 627:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 628:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_dec_return_acquire(v);
 629:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 630:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 631:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 632:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_dec_return_release() - atomic decrement with release ordering
 633:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 634:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 635:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with release ordering.
 636:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 637:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_dec_return_release() there.
 638:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 639:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 640:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 641:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 642:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_dec_return_release(atomic_t *v)
 643:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 644:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 645:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 646:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_dec_return_release(v);
 647:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 648:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 649:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 650:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_dec_return_relaxed() - atomic decrement with relaxed ordering
 651:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 652:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 653:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with relaxed ordering.
 654:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 655:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_dec_return_relaxed() there.
 656:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 657:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The updated value of @v.
 658:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 659:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 660:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_dec_return_relaxed(atomic_t *v)
 661:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 662:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 663:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_dec_return_relaxed(v);
 664:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 665:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 666:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 667:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_dec() - atomic decrement with full ordering
 668:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 669:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 670:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with full ordering.
 671:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 672:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_dec() there.
 673:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 674:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 675:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 676:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 677:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_dec(atomic_t *v)
 678:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 679:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 680:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 681:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_dec(v);
 682:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 683:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
ARM GAS  /tmp/ccQOnTG0.s 			page 89


 684:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 685:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_dec_acquire() - atomic decrement with acquire ordering
 686:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 687:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 688:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with acquire ordering.
 689:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 690:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_dec_acquire() there.
 691:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 692:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 693:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 694:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 695:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_dec_acquire(atomic_t *v)
 696:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 697:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 698:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_dec_acquire(v);
 699:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 700:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 701:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 702:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_dec_release() - atomic decrement with release ordering
 703:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 704:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 705:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with release ordering.
 706:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 707:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_dec_release() there.
 708:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 709:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 710:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 711:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 712:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_dec_release(atomic_t *v)
 713:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 714:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 715:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 716:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_dec_release(v);
 717:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 718:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 719:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 720:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_dec_relaxed() - atomic decrement with relaxed ordering
 721:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 722:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 723:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with relaxed ordering.
 724:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 725:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_dec_relaxed() there.
 726:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 727:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 728:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 729:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 730:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_dec_relaxed(atomic_t *v)
 731:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 732:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 733:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_dec_relaxed(v);
 734:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 735:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 736:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 737:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_and() - atomic bitwise AND with relaxed ordering
 738:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 739:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 740:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
ARM GAS  /tmp/ccQOnTG0.s 			page 90


 741:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & @i) with relaxed ordering.
 742:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 743:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_and() there.
 744:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 745:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 746:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 747:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 748:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_and(int i, atomic_t *v)
 749:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 750:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 751:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_and(i, v);
 752:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 753:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 754:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 755:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_and() - atomic bitwise AND with full ordering
 756:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 757:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 758:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 759:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & @i) with full ordering.
 760:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 761:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_and() there.
 762:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 763:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 764:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 765:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 766:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_and(int i, atomic_t *v)
 767:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 768:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 769:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 770:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_and(i, v);
 771:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 772:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 773:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 774:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_and_acquire() - atomic bitwise AND with acquire ordering
 775:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 776:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 777:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 778:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & @i) with acquire ordering.
 779:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 780:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_and_acquire() there.
 781:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 782:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 783:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 784:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 785:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_and_acquire(int i, atomic_t *v)
 786:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 787:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 788:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_and_acquire(i, v);
 789:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 790:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 791:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 792:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_and_release() - atomic bitwise AND with release ordering
 793:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 794:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 795:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 796:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & @i) with release ordering.
 797:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
ARM GAS  /tmp/ccQOnTG0.s 			page 91


 798:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_and_release() there.
 799:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 800:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 801:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 802:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 803:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_and_release(int i, atomic_t *v)
 804:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 805:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 806:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 807:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_and_release(i, v);
 808:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 809:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 810:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 811:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_and_relaxed() - atomic bitwise AND with relaxed ordering
 812:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 813:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 814:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 815:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & @i) with relaxed ordering.
 816:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 817:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_and_relaxed() there.
 818:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 819:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 820:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 821:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 822:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_and_relaxed(int i, atomic_t *v)
 823:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 824:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 825:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_and_relaxed(i, v);
 826:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 827:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 828:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 829:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_andnot() - atomic bitwise AND NOT with relaxed ordering
 830:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 831:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 832:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 833:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & ~@i) with relaxed ordering.
 834:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 835:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_andnot() there.
 836:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 837:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 838:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 839:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 840:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_andnot(int i, atomic_t *v)
 841:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 842:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 843:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_andnot(i, v);
 844:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 845:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 846:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 847:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_andnot() - atomic bitwise AND NOT with full ordering
 848:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 849:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 850:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 851:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & ~@i) with full ordering.
 852:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 853:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_andnot() there.
 854:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
ARM GAS  /tmp/ccQOnTG0.s 			page 92


 855:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 856:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 857:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 858:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_andnot(int i, atomic_t *v)
 859:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 860:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 861:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 862:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_andnot(i, v);
 863:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 864:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 865:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 866:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_andnot_acquire() - atomic bitwise AND NOT with acquire ordering
 867:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 868:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 869:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 870:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & ~@i) with acquire ordering.
 871:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 872:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_andnot_acquire() there.
 873:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 874:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 875:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 876:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 877:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_andnot_acquire(int i, atomic_t *v)
 878:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 879:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 880:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_andnot_acquire(i, v);
 881:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 882:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 883:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 884:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_andnot_release() - atomic bitwise AND NOT with release ordering
 885:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 886:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 887:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 888:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & ~@i) with release ordering.
 889:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 890:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_andnot_release() there.
 891:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 892:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 893:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 894:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 895:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_andnot_release(int i, atomic_t *v)
 896:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 897:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 898:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 899:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_andnot_release(i, v);
 900:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 901:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 902:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 903:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_andnot_relaxed() - atomic bitwise AND NOT with relaxed ordering
 904:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 905:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 906:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 907:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v & ~@i) with relaxed ordering.
 908:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 909:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_andnot_relaxed() there.
 910:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 911:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
ARM GAS  /tmp/ccQOnTG0.s 			page 93


 912:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 913:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 914:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_andnot_relaxed(int i, atomic_t *v)
 915:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 916:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 917:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_andnot_relaxed(i, v);
 918:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 919:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 920:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 921:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_or() - atomic bitwise OR with relaxed ordering
 922:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 923:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 924:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 925:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v | @i) with relaxed ordering.
 926:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 927:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_or() there.
 928:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 929:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
 930:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 931:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
 932:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_or(int i, atomic_t *v)
 933:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 934:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 935:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_or(i, v);
 936:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 937:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 938:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 939:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_or() - atomic bitwise OR with full ordering
 940:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 941:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 942:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 943:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v | @i) with full ordering.
 944:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 945:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_or() there.
 946:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 947:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 948:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 949:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 950:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_or(int i, atomic_t *v)
 951:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 952:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 953:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 954:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_or(i, v);
 955:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 956:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 957:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 958:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_or_acquire() - atomic bitwise OR with acquire ordering
 959:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 960:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 961:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 962:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v | @i) with acquire ordering.
 963:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 964:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_or_acquire() there.
 965:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 966:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 967:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 968:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
ARM GAS  /tmp/ccQOnTG0.s 			page 94


 969:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_or_acquire(int i, atomic_t *v)
 970:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 971:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 972:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_or_acquire(i, v);
 973:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 974:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 975:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 976:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_or_release() - atomic bitwise OR with release ordering
 977:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 978:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 979:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 980:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v | @i) with release ordering.
 981:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 982:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_or_release() there.
 983:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 984:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
 985:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
 986:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
 987:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_or_release(int i, atomic_t *v)
 988:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 989:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
 990:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 991:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_or_release(i, v);
 992:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 993:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
 994:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
 995:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_or_relaxed() - atomic bitwise OR with relaxed ordering
 996:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
 997:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
 998:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
 999:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v | @i) with relaxed ordering.
1000:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1001:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_or_relaxed() there.
1002:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1003:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1004:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1005:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1006:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_or_relaxed(int i, atomic_t *v)
1007:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1008:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1009:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_or_relaxed(i, v);
1010:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1011:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1012:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1013:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_xor() - atomic bitwise XOR with relaxed ordering
1014:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
1015:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1016:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1017:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v ^ @i) with relaxed ordering.
1018:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1019:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_xor() there.
1020:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1021:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: Nothing.
1022:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1023:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline void
1024:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_xor(int i, atomic_t *v)
1025:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
ARM GAS  /tmp/ccQOnTG0.s 			page 95


1026:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1027:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_xor(i, v);
1028:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1029:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1030:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1031:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_xor() - atomic bitwise XOR with full ordering
1032:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
1033:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1034:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1035:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v ^ @i) with full ordering.
1036:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1037:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_xor() there.
1038:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1039:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1040:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1041:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1042:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_xor(int i, atomic_t *v)
1043:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1044:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
1045:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1046:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_xor(i, v);
1047:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1048:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1049:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1050:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_xor_acquire() - atomic bitwise XOR with acquire ordering
1051:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
1052:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1053:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1054:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v ^ @i) with acquire ordering.
1055:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1056:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_xor_acquire() there.
1057:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1058:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1059:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1060:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1061:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_xor_acquire(int i, atomic_t *v)
1062:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1063:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1064:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_xor_acquire(i, v);
1065:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1066:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1067:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1068:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_xor_release() - atomic bitwise XOR with release ordering
1069:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
1070:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1071:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1072:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v ^ @i) with release ordering.
1073:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1074:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_xor_release() there.
1075:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1076:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1077:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1078:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1079:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_xor_release(int i, atomic_t *v)
1080:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1081:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
1082:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
ARM GAS  /tmp/ccQOnTG0.s 			page 96


1083:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_xor_release(i, v);
1084:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1085:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1086:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1087:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_fetch_xor_relaxed() - atomic bitwise XOR with relaxed ordering
1088:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value
1089:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1090:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1091:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v ^ @i) with relaxed ordering.
1092:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1093:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_fetch_xor_relaxed() there.
1094:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1095:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1096:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1097:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1098:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_fetch_xor_relaxed(int i, atomic_t *v)
1099:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1100:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1101:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_fetch_xor_relaxed(i, v);
1102:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1103:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1104:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1105:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_xchg() - atomic exchange with full ordering
1106:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1107:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1108:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1109:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to @new with full ordering.
1110:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1111:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_xchg() there.
1112:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1113:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1114:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1115:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1116:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_xchg(atomic_t *v, int new)
1117:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1118:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
1119:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1120:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_xchg(v, new);
1121:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1122:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1123:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1124:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_xchg_acquire() - atomic exchange with acquire ordering
1125:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1126:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1127:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1128:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to @new with acquire ordering.
1129:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1130:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_xchg_acquire() there.
1131:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1132:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1133:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1134:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1135:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_xchg_acquire(atomic_t *v, int new)
1136:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1137:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1138:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_xchg_acquire(v, new);
1139:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
ARM GAS  /tmp/ccQOnTG0.s 			page 97


1140:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1141:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1142:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_xchg_release() - atomic exchange with release ordering
1143:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1144:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1145:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1146:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to @new with release ordering.
1147:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1148:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_xchg_release() there.
1149:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1150:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1151:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1152:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1153:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_xchg_release(atomic_t *v, int new)
1154:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1155:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
1156:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1157:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_xchg_release(v, new);
1158:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1159:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1160:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1161:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_xchg_relaxed() - atomic exchange with relaxed ordering
1162:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1163:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1164:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1165:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to @new with relaxed ordering.
1166:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1167:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_xchg_relaxed() there.
1168:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1169:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1170:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1171:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1172:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_xchg_relaxed(atomic_t *v, int new)
1173:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1174:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1175:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_xchg_relaxed(v, new);
1176:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1177:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1178:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1179:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_cmpxchg() - atomic compare and exchange with full ordering
1180:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1181:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: int value to compare with
1182:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1183:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1184:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with full ordering.
1185:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
1186:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1187:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_cmpxchg() there.
1188:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1189:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1190:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1191:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1192:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_cmpxchg(atomic_t *v, int old, int new)
1193:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1194:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
1195:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1196:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_cmpxchg(v, old, new);
ARM GAS  /tmp/ccQOnTG0.s 			page 98


1197:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1198:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1199:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1200:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_cmpxchg_acquire() - atomic compare and exchange with acquire ordering
1201:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1202:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: int value to compare with
1203:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1204:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1205:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with acquire ordering.
1206:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
1207:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1208:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_cmpxchg_acquire() there.
1209:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1210:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1211:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1212:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1213:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_cmpxchg_acquire(atomic_t *v, int old, int new)
1214:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1215:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1216:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_cmpxchg_acquire(v, old, new);
1217:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1218:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1219:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1220:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_cmpxchg_release() - atomic compare and exchange with release ordering
1221:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1222:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: int value to compare with
1223:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1224:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1225:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with release ordering.
1226:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
1227:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1228:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_cmpxchg_release() there.
1229:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1230:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1231:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1232:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
1233:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_cmpxchg_release(atomic_t *v, int old, int new)
1234:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1235:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
1236:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_cmpxchg_release(v, old, new);
1238:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1239:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1240:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1241:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_cmpxchg_relaxed() - atomic compare and exchange with relaxed ordering
1242:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1243:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: int value to compare with
1244:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1245:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1246:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with relaxed ordering.
1247:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
1248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1249:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_cmpxchg_relaxed() there.
1250:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1251:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: The original value of @v.
1252:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1253:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline int
ARM GAS  /tmp/ccQOnTG0.s 			page 99


1254:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_cmpxchg_relaxed(atomic_t *v, int old, int new)
1255:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1256:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1257:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_cmpxchg_relaxed(v, old, new);
1258:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1259:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1260:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1261:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_try_cmpxchg() - atomic compare and exchange with full ordering
1262:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1263:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: pointer to int value to compare with
1264:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1265:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1266:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with full ordering.
1267:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
1268:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * and relaxed ordering is provided.
1269:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1270:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_try_cmpxchg() there.
1271:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1272:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: @true if the exchange occured, @false otherwise.
1273:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1274:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline bool
1275:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_try_cmpxchg(atomic_t *v, int *old, int new)
1276:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1277:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
1278:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1279:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(old, sizeof(*old));
1280:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_try_cmpxchg(v, old, new);
1281:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1282:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1283:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1284:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_try_cmpxchg_acquire() - atomic compare and exchange with acquire ordering
1285:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1286:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: pointer to int value to compare with
1287:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1288:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1289:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with acquire ordering.
1290:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
1291:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * and relaxed ordering is provided.
1292:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1293:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_try_cmpxchg_acquire() there.
1294:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1295:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: @true if the exchange occured, @false otherwise.
1296:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1297:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline bool
1298:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_try_cmpxchg_acquire(atomic_t *v, int *old, int new)
1299:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1300:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1301:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(old, sizeof(*old));
1302:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_try_cmpxchg_acquire(v, old, new);
1303:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1304:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1305:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1306:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_try_cmpxchg_release() - atomic compare and exchange with release ordering
1307:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1308:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: pointer to int value to compare with
1309:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1310:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
ARM GAS  /tmp/ccQOnTG0.s 			page 100


1311:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with release ordering.
1312:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
1313:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * and relaxed ordering is provided.
1314:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1315:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_try_cmpxchg_release() there.
1316:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1317:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: @true if the exchange occured, @false otherwise.
1318:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1319:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline bool
1320:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_try_cmpxchg_release(atomic_t *v, int *old, int new)
1321:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1322:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_release();
1323:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1324:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(old, sizeof(*old));
1325:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_try_cmpxchg_release(v, old, new);
1326:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1327:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1328:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1329:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_try_cmpxchg_relaxed() - atomic compare and exchange with relaxed ordering
1330:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1331:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @old: pointer to int value to compare with
1332:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @new: int value to assign
1333:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1334:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * If (@v == @old), atomically updates @v to @new with relaxed ordering.
1335:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
1336:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * and relaxed ordering is provided.
1337:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1338:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_try_cmpxchg_relaxed() there.
1339:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1340:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: @true if the exchange occured, @false otherwise.
1341:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1342:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline bool
1343:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_try_cmpxchg_relaxed(atomic_t *v, int *old, int new)
1344:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1345:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1346:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(old, sizeof(*old));
1347:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_try_cmpxchg_relaxed(v, old, new);
1348:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
1349:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1350:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1351:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_sub_and_test() - atomic subtract and test if zero with full ordering
1352:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @i: int value to subtract
1353:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1354:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1355:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - @i) with full ordering.
1356:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1357:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_sub_and_test() there.
1358:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1359:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: @true if the resulting value of @v is zero, @false otherwise.
1360:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1361:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline bool
1362:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_sub_and_test(int i, atomic_t *v)
1363:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1364:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
1365:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
1366:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_sub_and_test(i, v);
1367:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
ARM GAS  /tmp/ccQOnTG0.s 			page 101


1368:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 
1369:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** /**
1370:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * atomic_dec_and_test() - atomic decrement and test if zero with full ordering
1371:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * @v: pointer to atomic_t
1372:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1373:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Atomically updates @v to (@v - 1) with full ordering.
1374:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1375:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Unsafe to use in noinstr code; use raw_atomic_dec_and_test() there.
1376:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  *
1377:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  * Return: @true if the resulting value of @v is zero, @false otherwise.
1378:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h ****  */
1379:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** static __always_inline bool
1380:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** atomic_dec_and_test(atomic_t *v)
 1602              		.loc 5 1380 1 is_stmt 1 view .LVU510
1381:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
1382:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	kcsan_mb();
 1603              		.loc 5 1382 2 view .LVU511
 1604              		.loc 5 1382 2 view .LVU512
 1605              		.loc 5 1382 2 view .LVU513
1383:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	instrument_atomic_read_write(v, sizeof(*v));
 1606              		.loc 5 1383 2 view .LVU514
1384:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	return raw_atomic_dec_and_test(v);
 1607              		.loc 5 1384 2 view .LVU515
 1608              	.LBB278:
 1609              	.LBI278:
1005:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1006:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1007:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1008:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1009:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_inc_return() - atomic increment with full ordering
1010:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1011:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1012:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with full ordering.
1013:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1014:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_inc_return() elsewhere.
1015:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1016:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1017:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1018:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1019:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_inc_return(atomic_t *v)
1020:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1021:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_inc_return)
1022:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return(v);
1023:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_inc_return_relaxed)
1024:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1025:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1026:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_inc_return_relaxed(v);
1027:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1028:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1029:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1030:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_add_return(1, v);
1031:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1032:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1033:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1034:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1035:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_inc_return_acquire() - atomic increment with acquire ordering
1036:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
ARM GAS  /tmp/ccQOnTG0.s 			page 102


1037:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1038:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with acquire ordering.
1039:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1040:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_inc_return_acquire() elsewhere.
1041:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1042:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1043:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1044:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1045:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_inc_return_acquire(atomic_t *v)
1046:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1047:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_inc_return_acquire)
1048:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return_acquire(v);
1049:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_inc_return_relaxed)
1050:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_inc_return_relaxed(v);
1051:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1052:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1053:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_inc_return)
1054:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return(v);
1055:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1056:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_add_return_acquire(1, v);
1057:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1058:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1059:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1060:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1061:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_inc_return_release() - atomic increment with release ordering
1062:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1063:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1064:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with release ordering.
1065:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1066:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_inc_return_release() elsewhere.
1067:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1068:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1069:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1070:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1071:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_inc_return_release(atomic_t *v)
1072:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1073:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_inc_return_release)
1074:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return_release(v);
1075:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_inc_return_relaxed)
1076:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1077:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return_relaxed(v);
1078:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_inc_return)
1079:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return(v);
1080:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1081:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_add_return_release(1, v);
1082:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1083:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1084:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1085:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1086:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_inc_return_relaxed() - atomic increment with relaxed ordering
1087:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1088:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1089:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with relaxed ordering.
1090:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1091:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_inc_return_relaxed() elsewhere.
1092:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1093:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
ARM GAS  /tmp/ccQOnTG0.s 			page 103


1094:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1095:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1096:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_inc_return_relaxed(atomic_t *v)
1097:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1098:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_inc_return_relaxed)
1099:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return_relaxed(v);
1100:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_inc_return)
1101:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_inc_return(v);
1102:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1103:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_add_return_relaxed(1, v);
1104:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1105:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1106:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1107:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1108:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_inc() - atomic increment with full ordering
1109:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1110:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1111:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with full ordering.
1112:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1113:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_inc() elsewhere.
1114:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1115:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1116:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1117:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1118:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_inc(atomic_t *v)
1119:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1120:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_inc)
1121:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc(v);
1122:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_inc_relaxed)
1123:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1124:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1125:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_inc_relaxed(v);
1126:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1127:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1128:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1129:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_add(1, v);
1130:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1131:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1132:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1133:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1134:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_inc_acquire() - atomic increment with acquire ordering
1135:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1136:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1137:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with acquire ordering.
1138:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1139:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_inc_acquire() elsewhere.
1140:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1141:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1142:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1143:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1144:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_inc_acquire(atomic_t *v)
1145:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1146:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_inc_acquire)
1147:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc_acquire(v);
1148:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_inc_relaxed)
1149:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_inc_relaxed(v);
1150:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
ARM GAS  /tmp/ccQOnTG0.s 			page 104


1151:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1152:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_inc)
1153:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc(v);
1154:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1155:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_add_acquire(1, v);
1156:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1157:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1158:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1159:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1160:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_inc_release() - atomic increment with release ordering
1161:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1162:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1163:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with release ordering.
1164:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1165:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_inc_release() elsewhere.
1166:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1167:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1168:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1169:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1170:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_inc_release(atomic_t *v)
1171:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1172:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_inc_release)
1173:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc_release(v);
1174:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_inc_relaxed)
1175:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1176:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc_relaxed(v);
1177:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_inc)
1178:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc(v);
1179:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1180:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_add_release(1, v);
1181:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1182:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1183:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1184:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1185:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_inc_relaxed() - atomic increment with relaxed ordering
1186:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1187:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1188:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v + 1) with relaxed ordering.
1189:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1190:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_inc_relaxed() elsewhere.
1191:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1192:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1193:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1194:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1195:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_inc_relaxed(atomic_t *v)
1196:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1197:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_inc_relaxed)
1198:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc_relaxed(v);
1199:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_inc)
1200:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_inc(v);
1201:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1202:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_add_relaxed(1, v);
1203:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1204:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1205:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1206:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1207:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_dec() - atomic decrement with relaxed ordering
ARM GAS  /tmp/ccQOnTG0.s 			page 105


1208:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1209:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1210:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with relaxed ordering.
1211:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1212:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_dec() elsewhere.
1213:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1214:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
1215:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1216:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
1217:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_dec(atomic_t *v)
1218:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1219:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_dec)
1220:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_dec(v);
1221:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1222:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	raw_atomic_sub(1, v);
1223:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1224:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1225:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1226:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1227:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_dec_return() - atomic decrement with full ordering
1228:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1229:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1230:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with full ordering.
1231:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1232:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_dec_return() elsewhere.
1233:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1234:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1235:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1236:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_dec_return(atomic_t *v)
1238:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1239:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_dec_return)
1240:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return(v);
1241:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_dec_return_relaxed)
1242:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1243:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1244:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_dec_return_relaxed(v);
1245:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1246:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1247:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_sub_return(1, v);
1249:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1250:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1251:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1252:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1253:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_dec_return_acquire() - atomic decrement with acquire ordering
1254:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1255:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1256:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with acquire ordering.
1257:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1258:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_dec_return_acquire() elsewhere.
1259:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1260:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1261:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1262:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1263:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_dec_return_acquire(atomic_t *v)
1264:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
ARM GAS  /tmp/ccQOnTG0.s 			page 106


1265:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_dec_return_acquire)
1266:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return_acquire(v);
1267:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_dec_return_relaxed)
1268:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_dec_return_relaxed(v);
1269:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1270:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1271:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_dec_return)
1272:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return(v);
1273:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1274:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_sub_return_acquire(1, v);
1275:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1276:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1277:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1278:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1279:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_dec_return_release() - atomic decrement with release ordering
1280:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1281:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1282:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with release ordering.
1283:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1284:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_dec_return_release() elsewhere.
1285:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1286:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1287:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1288:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1289:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_dec_return_release(atomic_t *v)
1290:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1291:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_dec_return_release)
1292:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return_release(v);
1293:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_dec_return_relaxed)
1294:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1295:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return_relaxed(v);
1296:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_dec_return)
1297:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return(v);
1298:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1299:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_sub_return_release(1, v);
1300:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1301:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1302:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1303:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1304:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_dec_return_relaxed() - atomic decrement with relaxed ordering
1305:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1306:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1307:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with relaxed ordering.
1308:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1309:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_dec_return_relaxed() elsewhere.
1310:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1311:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The updated value of @v.
1312:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1313:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1314:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_dec_return_relaxed(atomic_t *v)
1315:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1316:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_dec_return_relaxed)
1317:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return_relaxed(v);
1318:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_dec_return)
1319:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_return(v);
1320:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1321:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_sub_return_relaxed(1, v);
ARM GAS  /tmp/ccQOnTG0.s 			page 107


1322:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1323:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1324:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1325:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1326:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_dec() - atomic decrement with full ordering
1327:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1328:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1329:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with full ordering.
1330:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1331:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_dec() elsewhere.
1332:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1333:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1334:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1335:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1336:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_dec(atomic_t *v)
1337:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1338:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_dec)
1339:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec(v);
1340:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_dec_relaxed)
1341:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1342:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1343:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_dec_relaxed(v);
1344:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1345:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1346:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1347:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_sub(1, v);
1348:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1349:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1350:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1351:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1352:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_dec_acquire() - atomic decrement with acquire ordering
1353:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1354:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1355:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with acquire ordering.
1356:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1357:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_dec_acquire() elsewhere.
1358:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1359:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1360:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1361:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1362:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_dec_acquire(atomic_t *v)
1363:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1364:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_dec_acquire)
1365:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec_acquire(v);
1366:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_dec_relaxed)
1367:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_dec_relaxed(v);
1368:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1369:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1370:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_dec)
1371:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec(v);
1372:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1373:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_sub_acquire(1, v);
1374:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1375:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1376:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1377:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1378:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_dec_release() - atomic decrement with release ordering
ARM GAS  /tmp/ccQOnTG0.s 			page 108


1379:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1380:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1381:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with release ordering.
1382:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1383:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_dec_release() elsewhere.
1384:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1385:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1386:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1387:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1388:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_dec_release(atomic_t *v)
1389:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1390:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_dec_release)
1391:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec_release(v);
1392:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_dec_relaxed)
1393:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1394:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec_relaxed(v);
1395:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_dec)
1396:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec(v);
1397:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1398:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_sub_release(1, v);
1399:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1400:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1401:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1402:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1403:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_dec_relaxed() - atomic decrement with relaxed ordering
1404:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1405:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1406:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with relaxed ordering.
1407:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1408:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_dec_relaxed() elsewhere.
1409:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1410:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1411:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1412:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1413:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_dec_relaxed(atomic_t *v)
1414:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1415:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_dec_relaxed)
1416:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec_relaxed(v);
1417:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_dec)
1418:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_dec(v);
1419:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1420:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_sub_relaxed(1, v);
1421:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1422:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1423:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1424:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1425:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_and() - atomic bitwise AND with relaxed ordering
1426:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1427:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1428:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1429:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & @i) with relaxed ordering.
1430:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1431:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_and() elsewhere.
1432:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1433:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
1434:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1435:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
ARM GAS  /tmp/ccQOnTG0.s 			page 109


1436:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_and(int i, atomic_t *v)
1437:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1438:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_and(i, v);
1439:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1440:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1441:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1442:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_and() - atomic bitwise AND with full ordering
1443:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1444:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1445:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1446:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & @i) with full ordering.
1447:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1448:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_and() elsewhere.
1449:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1450:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1451:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1452:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1453:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_and(int i, atomic_t *v)
1454:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1455:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_and)
1456:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and(i, v);
1457:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_and_relaxed)
1458:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1459:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1460:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_and_relaxed(i, v);
1461:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1462:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1463:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1464:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_and"
1465:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1466:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1467:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1468:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1469:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_and_acquire() - atomic bitwise AND with acquire ordering
1470:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1471:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1472:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1473:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & @i) with acquire ordering.
1474:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1475:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_and_acquire() elsewhere.
1476:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1477:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1478:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1479:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1480:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_and_acquire(int i, atomic_t *v)
1481:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1482:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_and_acquire)
1483:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and_acquire(i, v);
1484:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_and_relaxed)
1485:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_and_relaxed(i, v);
1486:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1487:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1488:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_and)
1489:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and(i, v);
1490:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1491:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_and_acquire"
1492:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
ARM GAS  /tmp/ccQOnTG0.s 			page 110


1493:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1494:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1495:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1496:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_and_release() - atomic bitwise AND with release ordering
1497:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1498:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1499:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1500:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & @i) with release ordering.
1501:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1502:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_and_release() elsewhere.
1503:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1504:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1505:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1506:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1507:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_and_release(int i, atomic_t *v)
1508:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1509:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_and_release)
1510:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and_release(i, v);
1511:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_and_relaxed)
1512:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1513:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and_relaxed(i, v);
1514:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_and)
1515:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and(i, v);
1516:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1517:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_and_release"
1518:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1519:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1520:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1521:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1522:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_and_relaxed() - atomic bitwise AND with relaxed ordering
1523:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1524:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1525:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1526:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & @i) with relaxed ordering.
1527:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1528:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_and_relaxed() elsewhere.
1529:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1530:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1531:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1532:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1533:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_and_relaxed(int i, atomic_t *v)
1534:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1535:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_and_relaxed)
1536:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and_relaxed(i, v);
1537:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_and)
1538:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_and(i, v);
1539:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1540:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_and_relaxed"
1541:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1542:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1543:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1544:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1545:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_andnot() - atomic bitwise AND NOT with relaxed ordering
1546:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1547:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1548:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1549:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & ~@i) with relaxed ordering.
ARM GAS  /tmp/ccQOnTG0.s 			page 111


1550:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1551:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_andnot() elsewhere.
1552:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1553:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
1554:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1555:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
1556:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_andnot(int i, atomic_t *v)
1557:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1558:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_andnot)
1559:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_andnot(i, v);
1560:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1561:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	raw_atomic_and(~i, v);
1562:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1563:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1564:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1565:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1566:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_andnot() - atomic bitwise AND NOT with full ordering
1567:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1568:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1569:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1570:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & ~@i) with full ordering.
1571:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1572:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_andnot() elsewhere.
1573:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1574:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1575:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1576:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1577:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_andnot(int i, atomic_t *v)
1578:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1579:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_andnot)
1580:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot(i, v);
1581:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_andnot_relaxed)
1582:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1583:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1584:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_andnot_relaxed(i, v);
1585:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1586:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1587:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1588:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_and(~i, v);
1589:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1590:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1591:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1592:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1593:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_andnot_acquire() - atomic bitwise AND NOT with acquire ordering
1594:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1595:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1596:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1597:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & ~@i) with acquire ordering.
1598:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1599:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_andnot_acquire() elsewhere.
1600:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1601:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1602:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1603:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1604:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_andnot_acquire(int i, atomic_t *v)
1605:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1606:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_andnot_acquire)
ARM GAS  /tmp/ccQOnTG0.s 			page 112


1607:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot_acquire(i, v);
1608:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_andnot_relaxed)
1609:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_andnot_relaxed(i, v);
1610:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1611:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1612:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_andnot)
1613:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot(i, v);
1614:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1615:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_and_acquire(~i, v);
1616:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1617:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1618:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1619:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1620:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_andnot_release() - atomic bitwise AND NOT with release ordering
1621:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1622:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1623:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1624:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & ~@i) with release ordering.
1625:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1626:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_andnot_release() elsewhere.
1627:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1628:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1629:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1630:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1631:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_andnot_release(int i, atomic_t *v)
1632:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1633:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_andnot_release)
1634:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot_release(i, v);
1635:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_andnot_relaxed)
1636:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1637:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot_relaxed(i, v);
1638:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_andnot)
1639:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot(i, v);
1640:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1641:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_and_release(~i, v);
1642:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1643:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1644:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1645:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1646:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_andnot_relaxed() - atomic bitwise AND NOT with relaxed ordering
1647:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1648:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1649:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1650:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v & ~@i) with relaxed ordering.
1651:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1652:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_andnot_relaxed() elsewhere.
1653:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1654:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1655:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1656:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1657:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_andnot_relaxed(int i, atomic_t *v)
1658:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1659:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_andnot_relaxed)
1660:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot_relaxed(i, v);
1661:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_andnot)
1662:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_andnot(i, v);
1663:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
ARM GAS  /tmp/ccQOnTG0.s 			page 113


1664:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_fetch_and_relaxed(~i, v);
1665:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1666:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1667:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1668:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1669:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_or() - atomic bitwise OR with relaxed ordering
1670:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1671:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1672:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1673:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v | @i) with relaxed ordering.
1674:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1675:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_or() elsewhere.
1676:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1677:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
1678:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1679:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
1680:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_or(int i, atomic_t *v)
1681:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1682:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_or(i, v);
1683:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1684:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1685:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1686:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_or() - atomic bitwise OR with full ordering
1687:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1688:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1689:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1690:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v | @i) with full ordering.
1691:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1692:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_or() elsewhere.
1693:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1694:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1695:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1696:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1697:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_or(int i, atomic_t *v)
1698:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1699:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_or)
1700:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or(i, v);
1701:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_or_relaxed)
1702:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1703:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1704:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_or_relaxed(i, v);
1705:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1706:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1707:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1708:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_or"
1709:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1710:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1711:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1712:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1713:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_or_acquire() - atomic bitwise OR with acquire ordering
1714:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1715:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1716:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1717:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v | @i) with acquire ordering.
1718:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1719:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_or_acquire() elsewhere.
1720:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
ARM GAS  /tmp/ccQOnTG0.s 			page 114


1721:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1722:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1723:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1724:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_or_acquire(int i, atomic_t *v)
1725:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1726:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_or_acquire)
1727:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or_acquire(i, v);
1728:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_or_relaxed)
1729:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_or_relaxed(i, v);
1730:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1731:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1732:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_or)
1733:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or(i, v);
1734:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1735:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_or_acquire"
1736:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1737:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1738:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1739:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1740:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_or_release() - atomic bitwise OR with release ordering
1741:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1742:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1743:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1744:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v | @i) with release ordering.
1745:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1746:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_or_release() elsewhere.
1747:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1748:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1749:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1750:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1751:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_or_release(int i, atomic_t *v)
1752:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1753:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_or_release)
1754:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or_release(i, v);
1755:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_or_relaxed)
1756:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1757:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or_relaxed(i, v);
1758:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_or)
1759:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or(i, v);
1760:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1761:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_or_release"
1762:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1763:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1764:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1765:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1766:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_or_relaxed() - atomic bitwise OR with relaxed ordering
1767:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1768:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1769:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1770:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v | @i) with relaxed ordering.
1771:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1772:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_or_relaxed() elsewhere.
1773:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1774:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1775:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1776:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1777:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_or_relaxed(int i, atomic_t *v)
ARM GAS  /tmp/ccQOnTG0.s 			page 115


1778:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1779:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_or_relaxed)
1780:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or_relaxed(i, v);
1781:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_or)
1782:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_or(i, v);
1783:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1784:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_or_relaxed"
1785:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1786:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1787:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1788:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1789:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_xor() - atomic bitwise XOR with relaxed ordering
1790:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1791:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1792:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1793:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v ^ @i) with relaxed ordering.
1794:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1795:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_xor() elsewhere.
1796:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1797:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: Nothing.
1798:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1799:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline void
1800:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_xor(int i, atomic_t *v)
1801:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1802:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	arch_atomic_xor(i, v);
1803:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1804:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1805:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1806:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_xor() - atomic bitwise XOR with full ordering
1807:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1808:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1809:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1810:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v ^ @i) with full ordering.
1811:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1812:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_xor() elsewhere.
1813:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1814:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1815:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1816:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1817:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_xor(int i, atomic_t *v)
1818:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1819:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_xor)
1820:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor(i, v);
1821:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_xor_relaxed)
1822:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1823:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1824:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_fetch_xor_relaxed(i, v);
1825:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1826:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1827:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1828:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_xor"
1829:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1830:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1831:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1832:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1833:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_xor_acquire() - atomic bitwise XOR with acquire ordering
1834:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
ARM GAS  /tmp/ccQOnTG0.s 			page 116


1835:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1836:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1837:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v ^ @i) with acquire ordering.
1838:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1839:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_xor_acquire() elsewhere.
1840:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1841:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1842:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1843:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1844:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_xor_acquire(int i, atomic_t *v)
1845:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1846:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_xor_acquire)
1847:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor_acquire(i, v);
1848:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_xor_relaxed)
1849:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_fetch_xor_relaxed(i, v);
1850:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1851:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1852:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_xor)
1853:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor(i, v);
1854:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1855:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_xor_acquire"
1856:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1857:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1858:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1859:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1860:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_xor_release() - atomic bitwise XOR with release ordering
1861:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1862:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1863:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1864:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v ^ @i) with release ordering.
1865:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1866:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_xor_release() elsewhere.
1867:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1868:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1869:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1870:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1871:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_xor_release(int i, atomic_t *v)
1872:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1873:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_xor_release)
1874:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor_release(i, v);
1875:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_xor_relaxed)
1876:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1877:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor_relaxed(i, v);
1878:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_xor)
1879:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor(i, v);
1880:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1881:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_xor_release"
1882:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1883:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1884:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1885:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1886:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_fetch_xor_relaxed() - atomic bitwise XOR with relaxed ordering
1887:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value
1888:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1889:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1890:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v ^ @i) with relaxed ordering.
1891:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
ARM GAS  /tmp/ccQOnTG0.s 			page 117


1892:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_fetch_xor_relaxed() elsewhere.
1893:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1894:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1895:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1896:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1897:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_fetch_xor_relaxed(int i, atomic_t *v)
1898:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1899:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_fetch_xor_relaxed)
1900:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor_relaxed(i, v);
1901:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_fetch_xor)
1902:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_fetch_xor(i, v);
1903:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1904:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #error "Unable to define raw_atomic_fetch_xor_relaxed"
1905:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1906:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1907:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1908:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1909:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_xchg() - atomic exchange with full ordering
1910:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1911:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
1912:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1913:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to @new with full ordering.
1914:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1915:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_xchg() elsewhere.
1916:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1917:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1918:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1919:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1920:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_xchg(atomic_t *v, int new)
1921:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1922:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_xchg)
1923:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg(v, new);
1924:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_xchg_relaxed)
1925:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
1926:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
1927:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_xchg_relaxed(v, new);
1928:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
1929:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1930:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1931:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_xchg(&v->counter, new);
1932:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1933:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1934:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1935:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1936:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_xchg_acquire() - atomic exchange with acquire ordering
1937:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1938:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
1939:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1940:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to @new with acquire ordering.
1941:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1942:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_xchg_acquire() elsewhere.
1943:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1944:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1945:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1946:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1947:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_xchg_acquire(atomic_t *v, int new)
1948:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
ARM GAS  /tmp/ccQOnTG0.s 			page 118


1949:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_xchg_acquire)
1950:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg_acquire(v, new);
1951:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_xchg_relaxed)
1952:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_xchg_relaxed(v, new);
1953:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
1954:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
1955:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_xchg)
1956:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg(v, new);
1957:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1958:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_xchg_acquire(&v->counter, new);
1959:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1960:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1961:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1962:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1963:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_xchg_release() - atomic exchange with release ordering
1964:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1965:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
1966:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1967:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to @new with release ordering.
1968:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1969:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_xchg_release() elsewhere.
1970:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1971:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1972:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1973:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
1974:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_xchg_release(atomic_t *v, int new)
1975:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
1976:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_xchg_release)
1977:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg_release(v, new);
1978:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_xchg_relaxed)
1979:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
1980:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg_relaxed(v, new);
1981:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_xchg)
1982:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg(v, new);
1983:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
1984:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_xchg_release(&v->counter, new);
1985:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
1986:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
1987:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
1988:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
1989:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_xchg_relaxed() - atomic exchange with relaxed ordering
1990:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
1991:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
1992:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1993:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to @new with relaxed ordering.
1994:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1995:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_xchg_relaxed() elsewhere.
1996:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
1997:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
1998:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
1999:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
2000:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_xchg_relaxed(atomic_t *v, int new)
2001:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2002:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_xchg_relaxed)
2003:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg_relaxed(v, new);
2004:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_xchg)
2005:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_xchg(v, new);
ARM GAS  /tmp/ccQOnTG0.s 			page 119


2006:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2007:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_xchg_relaxed(&v->counter, new);
2008:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2009:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2010:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2011:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2012:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_cmpxchg() - atomic compare and exchange with full ordering
2013:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2014:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: int value to compare with
2015:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2016:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2017:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with full ordering.
2018:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
2019:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2020:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_cmpxchg() elsewhere.
2021:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2022:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
2023:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2024:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
2025:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_cmpxchg(atomic_t *v, int old, int new)
2026:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2027:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_cmpxchg)
2028:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg(v, old, new);
2029:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_cmpxchg_relaxed)
2030:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret;
2031:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
2032:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_cmpxchg_relaxed(v, old, new);
2033:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
2034:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
2035:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2036:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_cmpxchg(&v->counter, old, new);
2037:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2038:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2039:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2040:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2041:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_cmpxchg_acquire() - atomic compare and exchange with acquire ordering
2042:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2043:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: int value to compare with
2044:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2045:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2046:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with acquire ordering.
2047:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
2048:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2049:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_cmpxchg_acquire() elsewhere.
2050:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2051:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
2052:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2053:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
2054:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_cmpxchg_acquire(atomic_t *v, int old, int new)
2055:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2056:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_cmpxchg_acquire)
2057:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg_acquire(v, old, new);
2058:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_cmpxchg_relaxed)
2059:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int ret = arch_atomic_cmpxchg_relaxed(v, old, new);
2060:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
2061:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
2062:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_cmpxchg)
ARM GAS  /tmp/ccQOnTG0.s 			page 120


2063:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg(v, old, new);
2064:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2065:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_cmpxchg_acquire(&v->counter, old, new);
2066:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2067:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2068:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2069:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2070:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_cmpxchg_release() - atomic compare and exchange with release ordering
2071:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2072:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: int value to compare with
2073:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2074:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2075:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with release ordering.
2076:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
2077:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2078:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_cmpxchg_release() elsewhere.
2079:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2080:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
2081:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2082:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
2083:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_cmpxchg_release(atomic_t *v, int old, int new)
2084:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2085:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_cmpxchg_release)
2086:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg_release(v, old, new);
2087:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_cmpxchg_relaxed)
2088:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
2089:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg_relaxed(v, old, new);
2090:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_cmpxchg)
2091:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg(v, old, new);
2092:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2093:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_cmpxchg_release(&v->counter, old, new);
2094:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2095:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2096:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2097:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2098:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_cmpxchg_relaxed() - atomic compare and exchange with relaxed ordering
2099:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2100:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: int value to compare with
2101:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2102:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2103:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with relaxed ordering.
2104:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified and relaxed ordering is provided.
2105:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2106:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_cmpxchg_relaxed() elsewhere.
2107:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2108:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: The original value of @v.
2109:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2110:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline int
2111:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_cmpxchg_relaxed(atomic_t *v, int old, int new)
2112:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2113:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_cmpxchg_relaxed)
2114:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg_relaxed(v, old, new);
2115:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_cmpxchg)
2116:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_cmpxchg(v, old, new);
2117:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2118:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_cmpxchg_relaxed(&v->counter, old, new);
2119:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
ARM GAS  /tmp/ccQOnTG0.s 			page 121


2120:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2121:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2122:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2123:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_try_cmpxchg() - atomic compare and exchange with full ordering
2124:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2125:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: pointer to int value to compare with
2126:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2127:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2128:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with full ordering.
2129:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
2130:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * and relaxed ordering is provided.
2131:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2132:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_try_cmpxchg() elsewhere.
2133:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2134:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: @true if the exchange occured, @false otherwise.
2135:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2136:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline bool
2137:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_try_cmpxchg(atomic_t *v, int *old, int new)
2138:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2139:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_try_cmpxchg)
2140:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg(v, old, new);
2141:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_try_cmpxchg_relaxed)
2142:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	bool ret;
2143:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
2144:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_try_cmpxchg_relaxed(v, old, new);
2145:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
2146:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
2147:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2148:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int r, o = *old;
2149:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	r = raw_atomic_cmpxchg(v, o, new);
2150:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(r != o))
2151:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*old = r;
2152:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return likely(r == o);
2153:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2154:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2155:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2156:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2157:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_try_cmpxchg_acquire() - atomic compare and exchange with acquire ordering
2158:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2159:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: pointer to int value to compare with
2160:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2161:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2162:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with acquire ordering.
2163:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
2164:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * and relaxed ordering is provided.
2165:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2166:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_try_cmpxchg_acquire() elsewhere.
2167:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2168:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: @true if the exchange occured, @false otherwise.
2169:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2170:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline bool
2171:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_try_cmpxchg_acquire(atomic_t *v, int *old, int new)
2172:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2173:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_try_cmpxchg_acquire)
2174:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg_acquire(v, old, new);
2175:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_try_cmpxchg_relaxed)
2176:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	bool ret = arch_atomic_try_cmpxchg_relaxed(v, old, new);
ARM GAS  /tmp/ccQOnTG0.s 			page 122


2177:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_acquire_fence();
2178:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
2179:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_try_cmpxchg)
2180:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg(v, old, new);
2181:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2182:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int r, o = *old;
2183:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	r = raw_atomic_cmpxchg_acquire(v, o, new);
2184:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(r != o))
2185:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*old = r;
2186:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return likely(r == o);
2187:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2188:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2189:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2190:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2191:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_try_cmpxchg_release() - atomic compare and exchange with release ordering
2192:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2193:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: pointer to int value to compare with
2194:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2195:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2196:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with release ordering.
2197:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
2198:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * and relaxed ordering is provided.
2199:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2200:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_try_cmpxchg_release() elsewhere.
2201:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2202:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: @true if the exchange occured, @false otherwise.
2203:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2204:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline bool
2205:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_try_cmpxchg_release(atomic_t *v, int *old, int new)
2206:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2207:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_try_cmpxchg_release)
2208:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg_release(v, old, new);
2209:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_try_cmpxchg_relaxed)
2210:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_release_fence();
2211:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg_relaxed(v, old, new);
2212:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_try_cmpxchg)
2213:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg(v, old, new);
2214:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2215:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int r, o = *old;
2216:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	r = raw_atomic_cmpxchg_release(v, o, new);
2217:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(r != o))
2218:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*old = r;
2219:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return likely(r == o);
2220:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2221:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2222:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2223:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2224:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_try_cmpxchg_relaxed() - atomic compare and exchange with relaxed ordering
2225:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2226:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @old: pointer to int value to compare with
2227:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @new: int value to assign
2228:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2229:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * If (@v == @old), atomically updates @v to @new with relaxed ordering.
2230:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Otherwise, @v is not modified, @old is updated to the current value of @v,
2231:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * and relaxed ordering is provided.
2232:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2233:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_try_cmpxchg_relaxed() elsewhere.
ARM GAS  /tmp/ccQOnTG0.s 			page 123


2234:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2235:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: @true if the exchange occured, @false otherwise.
2236:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline bool
2238:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_try_cmpxchg_relaxed(atomic_t *v, int *old, int new)
2239:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2240:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_try_cmpxchg_relaxed)
2241:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg_relaxed(v, old, new);
2242:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #elif defined(arch_atomic_try_cmpxchg)
2243:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_try_cmpxchg(v, old, new);
2244:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2245:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	int r, o = *old;
2246:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	r = raw_atomic_cmpxchg_relaxed(v, o, new);
2247:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	if (unlikely(r != o))
2248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 		*old = r;
2249:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return likely(r == o);
2250:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2251:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2252:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2253:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2254:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_sub_and_test() - atomic subtract and test if zero with full ordering
2255:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @i: int value to subtract
2256:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2257:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2258:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - @i) with full ordering.
2259:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2260:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_sub_and_test() elsewhere.
2261:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2262:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: @true if the resulting value of @v is zero, @false otherwise.
2263:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2264:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline bool
2265:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_sub_and_test(int i, atomic_t *v)
2266:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2267:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_sub_and_test)
2268:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_sub_and_test(i, v);
2269:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
2270:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_sub_return(i, v) == 0;
2271:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
2272:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
2273:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 
2274:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** /**
2275:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * raw_atomic_dec_and_test() - atomic decrement and test if zero with full ordering
2276:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * @v: pointer to atomic_t
2277:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2278:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Atomically updates @v to (@v - 1) with full ordering.
2279:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2280:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Safe to use in noinstr code; prefer atomic_dec_and_test() elsewhere.
2281:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  *
2282:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  * Return: @true if the resulting value of @v is zero, @false otherwise.
2283:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h ****  */
2284:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** static __always_inline bool
2285:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** raw_atomic_dec_and_test(atomic_t *v)
 1610              		.loc 6 2285 1 view .LVU516
2286:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
2287:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #if defined(arch_atomic_dec_and_test)
2288:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return arch_atomic_dec_and_test(v);
2289:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
ARM GAS  /tmp/ccQOnTG0.s 			page 124


2290:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return raw_atomic_dec_return(v) == 0;
 1611              		.loc 6 2290 2 view .LVU517
 1612              	.LBB279:
 1613              	.LBI279:
1237:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 1614              		.loc 6 1237 1 view .LVU518
1248:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 1615              		.loc 6 1248 2 view .LVU519
 1616              	.LBB280:
 1617              	.LBI280:
 790:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 1618              		.loc 6 790 1 view .LVU520
 1619              	.LBB281:
 795:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_pre_full_fence();
 1620              		.loc 6 795 2 view .LVU521
 796:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	ret = arch_atomic_sub_return_relaxed(i, v);
 1621              		.loc 6 796 2 view .LVU522
 1622              	.LBB282:
 1623              	.LBI282:
 1624              		.file 9 "/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** /* SPDX-License-Identifier: GPL-2.0-or-later */
   2:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** /*
   3:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  * Generic barrier definitions.
   4:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  *
   5:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  * It should be possible to use these on really simple architectures,
   6:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  * but it serves more as a starting point for new ports.
   7:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  *
   8:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  * Copyright (C) 2007 Red Hat, Inc. All Rights Reserved.
   9:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  * Written by David Howells (dhowells@redhat.com)
  10:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h ****  */
  11:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 
  12:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** #include <linux/rwonce.h>
  13:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 
  14:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** static inline void sync(void)
  15:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** {
  16:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 	asm volatile("sync" : : : "memory");
  17:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** }
  18:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 
  19:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** static inline void eieio(void)
  20:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** {
  21:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 	asm volatile("eieio" : : : "memory");
  22:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** }
  23:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 
  24:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** static inline void barrier(void)
 1625              		.loc 9 24 20 view .LVU523
 1626              	.LBB283:
  25:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** {
  26:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** 	asm volatile("" : : : "memory");
 1627              		.loc 9 26 2 view .LVU524
 1628              	.LBE283:
 1629              	.LBE282:
 797:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	__atomic_post_full_fence();
 1630              		.loc 6 797 2 view .LVU525
 1631              	.LVL142:
 1632              	.LBB284:
 1633              	.LBI284:
 171:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
ARM GAS  /tmp/ccQOnTG0.s 			page 125


 1634              		.loc 8 171 1 view .LVU526
 1635              	.LBB285:
 1636              		.loc 8 171 1 view .LVU527
 1637              		.loc 8 171 1 view .LVU528
 1638              		.loc 8 171 1 view .LVU529
 1639              		.syntax unified
 1640              	@ 171 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h" 1
 1641              		@ atomic_sub_return
 1642 0016 53E8002F 	1: ldrex   r2, [r3]
 1643 001a A2F10102 	   sub r2, r2, #1
 1644 001e 43E80021 	   strex   r1, r2, [r3]
 1645 0022 91F0000F 	   teq r1, #0
 1646 0026 F6D1     	   bne 1b
 1647              	@ 0 "" 2
 1648              	.LVL143:
 1649              		.loc 8 171 1 view .LVU530
 1650              		.loc 8 171 1 is_stmt 0 view .LVU531
 1651              		.thumb
 1652              		.syntax unified
 1653              	.LBE285:
 1654              	.LBE284:
 798:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** 	return ret;
 1655              		.loc 6 798 2 is_stmt 1 view .LVU532
 1656              	.LBB286:
 1657              	.LBI286:
  24:/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/barrier.h **** {
 1658              		.loc 9 24 20 view .LVU533
 1659              	.LBB287:
 1660              		.loc 9 26 2 view .LVU534
 1661              	.LBE287:
 1662              	.LBE286:
 799:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 1663              		.loc 6 799 2 view .LVU535
 1664              	.LVL144:
 799:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #else
 1665              		.loc 6 799 2 is_stmt 0 view .LVU536
 1666              	.LBE281:
 1667              	.LBE280:
 1668              	.LBE279:
 1669              	.LBE278:
 1670              	.LBE277:
 206:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         {
 1671              		.loc 1 206 12 discriminator 1 view .LVU537
 1672 0028 4AB1     		cbz	r2, .L103
 1673              	.L98:
 211:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 1674              		.loc 1 211 9 is_stmt 1 view .LVU538
 1675 002a 2046     		mov	r0, r4
 1676 002c FFF7FEFF 		bl	spin_unlock
 1677              	.LVL145:
 1678              	.L97:
 213:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     kfree(dentry);
 1679              		.loc 1 213 5 view .LVU539
 1680              	.LBB288:
 1681              	.LBI288:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1682              		.loc 4 383 20 view .LVU540
ARM GAS  /tmp/ccQOnTG0.s 			page 126


 1683              	.LBB289:
 1684              		.loc 4 384 2 view .LVU541
 1685 0030 6868     		ldr	r0, [r5, #4]
 1686 0032 FFF7FEFF 		bl	__sfree__
 1687              	.LVL146:
 1688              		.loc 4 384 2 is_stmt 0 view .LVU542
 1689              	.LBE289:
 1690              	.LBE288:
 214:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 1691              		.loc 1 214 5 is_stmt 1 view .LVU543
 1692              	.LBB290:
 1693              	.LBI290:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 1694              		.loc 4 383 20 view .LVU544
 1695              	.LBB291:
 1696              		.loc 4 384 2 view .LVU545
 1697 0036 2846     		mov	r0, r5
 1698 0038 FFF7FEFF 		bl	__sfree__
 1699              	.LVL147:
 1700              		.loc 4 384 2 is_stmt 0 view .LVU546
 1701              	.LBE291:
 1702              	.LBE290:
 215:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static void pipefs_delete_dentry(struct pipefs_superblock *sb,struct pipefs_inode* parent_dentry_in
 1703              		.loc 1 215 1 view .LVU547
 1704 003c 38BD     		pop	{r3, r4, r5, pc}
 1705              	.LVL148:
 1706              	.L103:
 208:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             pipefs_inode_put(dentry->target_inode);
 1707              		.loc 1 208 13 is_stmt 1 view .LVU548
 208:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             pipefs_inode_put(dentry->target_inode);
 1708              		.loc 1 208 29 is_stmt 0 view .LVU549
 1709 003e AB68     		ldr	r3, [r5, #8]
 1710              	.LVL149:
 1711              	.LBB292:
 1712              	.LBI292:
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_add_tail - add a new entry
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @new: new entry to be added
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: list head to add it before
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Insert a new entry before the specified head.
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * This is useful for implementing queues.
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_add_tail(struct list_head *new, struct list_head *head)
 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_add(new, head->prev, head);
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Delete a list entry by making the prev/next entries
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * point to each other.
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * This is only for internal list manipulation where we know
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * the prev/next entries already!
ARM GAS  /tmp/ccQOnTG0.s 			page 127


 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void __list_del(struct list_head * prev, struct list_head * next)
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	next->prev = prev;
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /*
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Delete a list entry and clear the 'prev' pointer.
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * This is a special-purpose list clearing method used in the networking code
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * for lists allocated as per-cpu, where we don't want to incur the extra
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * WRITE_ONCE() overhead of a regular list_del_init(). The code that uses this
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * needs to check the node 'prev' pointer instead of calling list_empty().
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void __list_del_clearprev(struct list_head *entry)
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_del(entry->prev, entry->next);
 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = NULL;
 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void __list_del_entry(struct list_head *entry)
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	if (!__list_del_entry_valid(entry))
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_del(entry->prev, entry->next);
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_del - deletes entry from list.
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @entry: the element to delete from the list.
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Note: list_empty() on entry does not return true after this, the entry is
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * in an undefined state.
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_del(struct list_head *entry)
 1713              		.loc 7 227 20 is_stmt 1 view .LVU550
 1714              	.LBB293:
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_del_entry(entry);
 1715              		.loc 7 229 2 view .LVU551
 1716              	.LBB294:
 1717              	.LBI294:
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 1718              		.loc 7 213 20 view .LVU552
 1719              	.LBB295:
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 1720              		.loc 7 215 2 view .LVU553
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1721              		.loc 7 218 2 view .LVU554
 1722 0040 9A69     		ldr	r2, [r3, #24]
 1723 0042 5969     		ldr	r1, [r3, #20]
 1724              	.LVL150:
 1725              	.LBB296:
 1726              	.LBI296:
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 1727              		.loc 7 193 20 view .LVU555
ARM GAS  /tmp/ccQOnTG0.s 			page 128


 1728              	.LBB297:
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 1729              		.loc 7 195 2 view .LVU556
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 1730              		.loc 7 195 13 is_stmt 0 view .LVU557
 1731 0044 4A60     		str	r2, [r1, #4]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1732              		.loc 7 196 2 is_stmt 1 view .LVU558
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1733              		.loc 7 196 2 view .LVU559
 1734              	.LBB298:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1735              		.loc 7 196 2 view .LVU560
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1736              		.loc 7 196 2 view .LVU561
 1737              	.LBE298:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1738              		.loc 7 196 2 discriminator 2 view .LVU562
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1739              		.loc 7 196 2 discriminator 2 view .LVU563
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1740              		.loc 7 196 2 discriminator 2 view .LVU564
 1741 0046 1160     		str	r1, [r2]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1742              		.loc 7 196 2 discriminator 2 view .LVU565
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1743              		.loc 7 196 2 discriminator 2 view .LVU566
 1744              	.LVL151:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1745              		.loc 7 196 2 is_stmt 0 discriminator 2 view .LVU567
 1746              	.LBE297:
 1747              	.LBE296:
 1748              	.LBE295:
 1749              	.LBE294:
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->next = LIST_POISON1;
 1750              		.loc 7 230 2 is_stmt 1 view .LVU568
 1751              		.loc 7 230 14 is_stmt 0 view .LVU569
 1752 0048 4FF48072 		mov	r2, #256
 1753 004c 5A61     		str	r2, [r3, #20]
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 1754              		.loc 7 231 2 is_stmt 1 view .LVU570
 1755              		.loc 7 231 14 is_stmt 0 view .LVU571
 1756 004e 4FF49172 		mov	r2, #290
 1757 0052 9A61     		str	r2, [r3, #24]
 1758              	.LVL152:
 1759              		.loc 7 231 14 view .LVU572
 1760              	.LBE293:
 1761              	.LBE292:
 209:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 1762              		.loc 1 209 13 is_stmt 1 view .LVU573
 1763 0054 A868     		ldr	r0, [r5, #8]
 1764 0056 FFF7FEFF 		bl	pipefs_inode_put
 1765              	.LVL153:
 1766 005a E6E7     		b	.L98
 1767              	.LVL154:
 1768              	.L100:
 1769              	.LCFI18:
ARM GAS  /tmp/ccQOnTG0.s 			page 129


 1770              		.cfi_def_cfa_offset 0
 1771              		.cfi_restore 3
 1772              		.cfi_restore 4
 1773              		.cfi_restore 5
 1774              		.cfi_restore 14
 209:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 1775              		.loc 1 209 13 is_stmt 0 view .LVU574
 1776 005c 7047     		bx	lr
 1777              		.cfi_endproc
 1778              	.LFE1047:
 1780              		.section	.text.pipefs_release_dentry,"ax",%progbits
 1781              		.align	1
 1782              		.syntax unified
 1783              		.thumb
 1784              		.thumb_func
 1786              	pipefs_release_dentry:
 1787              	.LVL155:
 1788              	.LFB1065:
 562:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry *fs_dentry = dentry->d_fsdata;
 1789              		.loc 1 562 56 is_stmt 1 view -0
 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 0
 1792              		@ frame_needed = 0, uses_anonymous_args = 0
 562:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry *fs_dentry = dentry->d_fsdata;
 1793              		.loc 1 562 56 is_stmt 0 view .LVU576
 1794 0000 08B5     		push	{r3, lr}
 1795              	.LCFI19:
 1796              		.cfi_def_cfa_offset 8
 1797              		.cfi_offset 3, -8
 1798              		.cfi_offset 14, -4
 563:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry_put(fs_dentry->target_inode->sb, fs_dentry);
 1799              		.loc 1 563 5 is_stmt 1 view .LVU577
 563:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry_put(fs_dentry->target_inode->sb, fs_dentry);
 1800              		.loc 1 563 27 is_stmt 0 view .LVU578
 1801 0002 416D     		ldr	r1, [r0, #84]
 1802              	.LVL156:
 564:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 1803              		.loc 1 564 5 is_stmt 1 view .LVU579
 564:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 1804              		.loc 1 564 25 is_stmt 0 view .LVU580
 1805 0004 8B68     		ldr	r3, [r1, #8]
 564:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 1806              		.loc 1 564 5 view .LVU581
 1807 0006 586B     		ldr	r0, [r3, #52]
 1808              	.LVL157:
 564:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 1809              		.loc 1 564 5 view .LVU582
 1810 0008 FFF7FEFF 		bl	dentry_put
 1811              	.LVL158:
 565:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static int pipefs_rmdir(struct inode *	dir  ,struct dentry *dentry){
 1812              		.loc 1 565 1 view .LVU583
 1813 000c 08BD     		pop	{r3, pc}
 1814              		.cfi_endproc
 1815              	.LFE1065:
 1817              		.section	.text.pipefs_rmdir,"ax",%progbits
 1818              		.align	1
 1819              		.syntax unified
ARM GAS  /tmp/ccQOnTG0.s 			page 130


 1820              		.thumb
 1821              		.thumb_func
 1823              	pipefs_rmdir:
 1824              	.LVL159:
 1825              	.LFB1066:
 566:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipefs_release_dentry(dentry);
 1826              		.loc 1 566 68 is_stmt 1 view -0
 1827              		.cfi_startproc
 1828              		@ args = 0, pretend = 0, frame = 0
 1829              		@ frame_needed = 0, uses_anonymous_args = 0
 566:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipefs_release_dentry(dentry);
 1830              		.loc 1 566 68 is_stmt 0 view .LVU585
 1831 0000 38B5     		push	{r3, r4, r5, lr}
 1832              	.LCFI20:
 1833              		.cfi_def_cfa_offset 16
 1834              		.cfi_offset 3, -16
 1835              		.cfi_offset 4, -12
 1836              		.cfi_offset 5, -8
 1837              		.cfi_offset 14, -4
 1838 0002 0546     		mov	r5, r0
 1839 0004 0C46     		mov	r4, r1
 567:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return simple_unlink(dir,dentry);
 1840              		.loc 1 567 5 is_stmt 1 view .LVU586
 1841 0006 0846     		mov	r0, r1
 1842              	.LVL160:
 567:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return simple_unlink(dir,dentry);
 1843              		.loc 1 567 5 is_stmt 0 view .LVU587
 1844 0008 FFF7FEFF 		bl	pipefs_release_dentry
 1845              	.LVL161:
 568:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 1846              		.loc 1 568 5 is_stmt 1 view .LVU588
 568:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 1847              		.loc 1 568 12 is_stmt 0 view .LVU589
 1848 000c 2146     		mov	r1, r4
 1849 000e 2846     		mov	r0, r5
 1850 0010 FFF7FEFF 		bl	simple_unlink
 1851              	.LVL162:
 569:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 1852              		.loc 1 569 1 view .LVU590
 1853 0014 38BD     		pop	{r3, r4, r5, pc}
 569:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 1854              		.loc 1 569 1 view .LVU591
 1855              		.cfi_endproc
 1856              	.LFE1066:
 1858              		.section	.text.pipefs_delete_dentry,"ax",%progbits
 1859              		.align	1
 1860              		.syntax unified
 1861              		.thumb
 1862              		.thumb_func
 1864              	pipefs_delete_dentry:
 1865              	.LVL163:
 1866              	.LFB1048:
 216:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(parent_dentry_inode != NULL) spin_lock(&parent_dentry_inode->lock);
 1867              		.loc 1 216 140 is_stmt 1 view -0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 0
 1870              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccQOnTG0.s 			page 131


 216:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(parent_dentry_inode != NULL) spin_lock(&parent_dentry_inode->lock);
 1871              		.loc 1 216 140 is_stmt 0 view .LVU593
 1872 0000 70B5     		push	{r4, r5, r6, lr}
 1873              	.LCFI21:
 1874              		.cfi_def_cfa_offset 16
 1875              		.cfi_offset 4, -16
 1876              		.cfi_offset 5, -12
 1877              		.cfi_offset 6, -8
 1878              		.cfi_offset 14, -4
 1879 0002 0546     		mov	r5, r0
 1880 0004 1446     		mov	r4, r2
 217:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 1881              		.loc 1 217 5 is_stmt 1 view .LVU594
 217:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 1882              		.loc 1 217 7 is_stmt 0 view .LVU595
 1883 0006 0E46     		mov	r6, r1
 1884 0008 19B1     		cbz	r1, .L109
 217:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 1885              		.loc 1 217 37 is_stmt 1 discriminator 1 view .LVU596
 1886 000a 01F12400 		add	r0, r1, #36
 1887              	.LVL164:
 217:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 1888              		.loc 1 217 37 is_stmt 0 discriminator 1 view .LVU597
 1889 000e FFF7FEFF 		bl	spin_lock
 1890              	.LVL165:
 1891              	.L109:
 219:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(!list_empty(&delete_dentry->target_inode->dentry_list_head)){      //Â¶ÇÊûúÁõÆÂΩï‰∏ãÁöÑi
 1892              		.loc 1 219 5 is_stmt 1 view .LVU598
 219:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(!list_empty(&delete_dentry->target_inode->dentry_list_head)){      //Â¶ÇÊûúÁõÆÂΩï‰∏ãÁöÑi
 1893              		.loc 1 219 23 is_stmt 0 view .LVU599
 1894 0012 A268     		ldr	r2, [r4, #8]
 219:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(!list_empty(&delete_dentry->target_inode->dentry_list_head)){      //Â¶ÇÊûúÁõÆÂΩï‰∏ãÁöÑi
 1895              		.loc 1 219 37 view .LVU600
 1896 0014 5368     		ldr	r3, [r2, #4]
 219:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(!list_empty(&delete_dentry->target_inode->dentry_list_head)){      //Â¶ÇÊûúÁõÆÂΩï‰∏ãÁöÑi
 1897              		.loc 1 219 46 view .LVU601
 1898 0016 03F47043 		and	r3, r3, #61440
 219:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(!list_empty(&delete_dentry->target_inode->dentry_list_head)){      //Â¶ÇÊûúÁõÆÂΩï‰∏ãÁöÑi
 1899              		.loc 1 219 8 view .LVU602
 1900 001a B3F5804F 		cmp	r3, #16384
 1901 001e 13D0     		beq	.L115
 1902              	.L110:
 226:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(parent_dentry_inode != NULL) spin_unlock(&parent_dentry_inode->lock);
 1903              		.loc 1 226 5 is_stmt 1 view .LVU603
 1904              	.LVL166:
 1905              	.LBB299:
 1906              	.LBI299:
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 1907              		.loc 7 227 20 view .LVU604
 1908              	.LBB300:
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->next = LIST_POISON1;
 1909              		.loc 7 229 2 view .LVU605
 1910              	.LBB301:
 1911              	.LBI301:
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 1912              		.loc 7 213 20 view .LVU606
 1913              	.LBB302:
ARM GAS  /tmp/ccQOnTG0.s 			page 132


 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 1914              		.loc 7 215 2 view .LVU607
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1915              		.loc 7 218 2 view .LVU608
 1916 0020 2369     		ldr	r3, [r4, #16]
 1917 0022 E268     		ldr	r2, [r4, #12]
 1918              	.LVL167:
 1919              	.LBB303:
 1920              	.LBI303:
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 1921              		.loc 7 193 20 view .LVU609
 1922              	.LBB304:
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 1923              		.loc 7 195 2 view .LVU610
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 1924              		.loc 7 195 13 is_stmt 0 view .LVU611
 1925 0024 5360     		str	r3, [r2, #4]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1926              		.loc 7 196 2 is_stmt 1 view .LVU612
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1927              		.loc 7 196 2 view .LVU613
 1928              	.LBB305:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1929              		.loc 7 196 2 view .LVU614
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1930              		.loc 7 196 2 view .LVU615
 1931              	.LBE305:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1932              		.loc 7 196 2 discriminator 2 view .LVU616
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1933              		.loc 7 196 2 discriminator 2 view .LVU617
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1934              		.loc 7 196 2 discriminator 2 view .LVU618
 1935 0026 1A60     		str	r2, [r3]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1936              		.loc 7 196 2 discriminator 2 view .LVU619
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1937              		.loc 7 196 2 discriminator 2 view .LVU620
 1938              	.LVL168:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 1939              		.loc 7 196 2 is_stmt 0 discriminator 2 view .LVU621
 1940              	.LBE304:
 1941              	.LBE303:
 1942              	.LBE302:
 1943              	.LBE301:
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 1944              		.loc 7 230 2 is_stmt 1 view .LVU622
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 1945              		.loc 7 230 14 is_stmt 0 view .LVU623
 1946 0028 4FF48073 		mov	r3, #256
 1947 002c E360     		str	r3, [r4, #12]
 1948              		.loc 7 231 2 is_stmt 1 view .LVU624
 1949              		.loc 7 231 14 is_stmt 0 view .LVU625
 1950 002e 4FF49173 		mov	r3, #290
 1951 0032 2361     		str	r3, [r4, #16]
 1952              	.LVL169:
 1953              		.loc 7 231 14 view .LVU626
ARM GAS  /tmp/ccQOnTG0.s 			page 133


 1954              	.LBE300:
 1955              	.LBE299:
 227:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry_put(sb,delete_dentry);
 1956              		.loc 1 227 5 is_stmt 1 view .LVU627
 227:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry_put(sb,delete_dentry);
 1957              		.loc 1 227 7 is_stmt 0 view .LVU628
 1958 0034 1EB1     		cbz	r6, .L113
 227:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry_put(sb,delete_dentry);
 1959              		.loc 1 227 37 is_stmt 1 discriminator 1 view .LVU629
 1960 0036 06F12400 		add	r0, r6, #36
 1961 003a FFF7FEFF 		bl	spin_unlock
 1962              	.LVL170:
 1963              	.L113:
 228:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 1964              		.loc 1 228 5 view .LVU630
 1965 003e 2146     		mov	r1, r4
 1966 0040 2846     		mov	r0, r5
 1967 0042 FFF7FEFF 		bl	dentry_put
 1968              	.LVL171:
 1969              	.L108:
 229:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct pipefs_superblock* pipefs_superblock_create(void) //ÂàõÂª∫superblock
 1970              		.loc 1 229 1 is_stmt 0 view .LVU631
 1971 0046 70BD     		pop	{r4, r5, r6, pc}
 1972              	.LVL172:
 1973              	.L115:
 220:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             if(parent_dentry_inode != NULL) 
 1974              		.loc 1 220 9 is_stmt 1 view .LVU632
 220:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             if(parent_dentry_inode != NULL) 
 1975              		.loc 1 220 24 is_stmt 0 view .LVU633
 1976 0048 02F11C01 		add	r1, r2, #28
 1977              	.LVL173:
 1978              	.LBB306:
 1979              	.LBI306:
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_replace - replace old entry by new one
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @old : the element to be replaced
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @new : the new element to insert
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * If @old was empty, it will be overwritten.
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_replace(struct list_head *old,
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				struct list_head *new)
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next = old->next;
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next->prev = new;
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev = old->prev;
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev->next = new;
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 249:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 250:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 251:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_replace_init - replace old entry by new one and initialize the old one
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @old : the element to be replaced
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @new : the new element to insert
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 255:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * If @old was empty, it will be overwritten.
ARM GAS  /tmp/ccQOnTG0.s 			page 134


 256:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 257:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_replace_init(struct list_head *old,
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				     struct list_head *new)
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	list_replace(old, new);
 261:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	INIT_LIST_HEAD(old);
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 264:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_swap - replace entry1 with entry2 and re-add entry1 at entry2's position
 266:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @entry1: the location to place entry2
 267:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @entry2: the location to place entry1
 268:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 269:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_swap(struct list_head *entry1,
 270:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			     struct list_head *entry2)
 271:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 272:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	struct list_head *pos = entry2->prev;
 273:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 274:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	list_del(entry2);
 275:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	list_replace(entry1, entry2);
 276:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	if (pos == entry1)
 277:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		pos = entry2;
 278:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	list_add(entry1, pos);
 279:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 280:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 281:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 282:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_del_init - deletes entry from list and reinitialize it.
 283:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @entry: the element to delete from the list.
 284:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 285:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_del_init(struct list_head *entry)
 286:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 287:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_del_entry(entry);
 288:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	INIT_LIST_HEAD(entry);
 289:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 290:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 291:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 292:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_move - delete from one list and add as another's head
 293:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @list: the entry to move
 294:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the head that will precede our entry
 295:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 296:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_move(struct list_head *list, struct list_head *head)
 297:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 298:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_del_entry(list);
 299:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	list_add(list, head);
 300:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 301:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 302:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 303:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_move_tail - delete from one list and add as another's tail
 304:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @list: the entry to move
 305:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the head that will follow our entry
 306:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 307:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_move_tail(struct list_head *list,
 308:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				  struct list_head *head)
 309:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 310:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	__list_del_entry(list);
 311:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	list_add_tail(list, head);
 312:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
ARM GAS  /tmp/ccQOnTG0.s 			page 135


 313:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 314:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 315:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_bulk_move_tail - move a subsection of a list to its tail
 316:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the head that will follow our entry
 317:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @first: first entry to move
 318:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @last: last entry to move, can be the same as first
 319:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  *
 320:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * Move all entries between @first and including @last before @head.
 321:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * All three entries must belong to the same linked list.
 322:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 323:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline void list_bulk_move_tail(struct list_head *head,
 324:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				       struct list_head *first,
 325:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 				       struct list_head *last)
 326:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 327:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	first->prev->next = last->next;
 328:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	last->next->prev = first->prev;
 329:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 330:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	head->prev->next = first;
 331:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	first->prev = head->prev;
 332:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 333:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	last->next = head;
 334:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	head->prev = last;
 335:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 336:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 337:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 338:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_is_first -- tests whether @list is the first entry in list @head
 339:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @list: the entry to test
 340:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the head of the list
 341:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 342:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline int list_is_first(const struct list_head *list, const struct list_head *head)
 343:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 344:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return list->prev == head;
 345:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 346:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 347:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 348:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_is_last - tests whether @list is the last entry in list @head
 349:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @list: the entry to test
 350:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the head of the list
 351:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 352:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline int list_is_last(const struct list_head *list, const struct list_head *head)
 353:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 354:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return list->next == head;
 355:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 356:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 357:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 358:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_is_head - tests whether @list is the list @head
 359:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @list: the entry to test
 360:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the head of the list
 361:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 362:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline int list_is_head(const struct list_head *list, const struct list_head *head)
 363:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 364:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return list == head;
 365:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 366:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 
 367:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** /**
 368:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * list_empty - tests whether a list is empty
 369:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  * @head: the list to test.
ARM GAS  /tmp/ccQOnTG0.s 			page 136


 370:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h ****  */
 371:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** static inline int list_empty(const struct list_head *head)
 1980              		.loc 7 371 19 is_stmt 1 view .LVU634
 372:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 373:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	return READ_ONCE(head->next) == head;
 1981              		.loc 7 373 2 view .LVU635
 1982              	.LBB307:
 1983              		.loc 7 373 9 view .LVU636
 1984              	.LBB308:
 1985              		.loc 7 373 9 view .LVU637
 1986              		.loc 7 373 9 view .LVU638
 1987              	.LBE308:
 1988              		.loc 7 373 9 discriminator 2 view .LVU639
 1989              		.loc 7 373 9 discriminator 2 view .LVU640
 1990 004c D369     		ldr	r3, [r2, #28]
 1991              	.LVL174:
 1992              		.loc 7 373 9 is_stmt 0 discriminator 2 view .LVU641
 1993              	.LBE307:
 1994              	.LBE306:
 220:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             if(parent_dentry_inode != NULL) 
 1995              		.loc 1 220 11 discriminator 1 view .LVU642
 1996 004e 9942     		cmp	r1, r3
 1997 0050 E6D0     		beq	.L110
 221:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****                 spin_unlock(&parent_dentry_inode->lock);
 1998              		.loc 1 221 13 is_stmt 1 view .LVU643
 221:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****                 spin_unlock(&parent_dentry_inode->lock);
 1999              		.loc 1 221 15 is_stmt 0 view .LVU644
 2000 0052 002E     		cmp	r6, #0
 2001 0054 F7D0     		beq	.L108
 222:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             return;
 2002              		.loc 1 222 17 is_stmt 1 view .LVU645
 2003 0056 06F12400 		add	r0, r6, #36
 2004 005a FFF7FEFF 		bl	spin_unlock
 2005              	.LVL175:
 223:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 2006              		.loc 1 223 13 view .LVU646
 2007 005e F2E7     		b	.L108
 2008              		.cfi_endproc
 2009              	.LFE1048:
 2011              		.section	.text.pipefs_unlink,"ax",%progbits
 2012              		.align	1
 2013              		.syntax unified
 2014              		.thumb
 2015              		.thumb_func
 2017              	pipefs_unlink:
 2018              	.LVL176:
 2019              	.LFB1063:
 528:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *parent_inode = (struct pipefs_inode *)dir->i_private;
 2020              		.loc 1 528 1 view -0
 2021              		.cfi_startproc
 2022              		@ args = 0, pretend = 0, frame = 0
 2023              		@ frame_needed = 0, uses_anonymous_args = 0
 528:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *parent_inode = (struct pipefs_inode *)dir->i_private;
 2024              		.loc 1 528 1 is_stmt 0 view .LVU648
 2025 0000 08B5     		push	{r3, lr}
 2026              	.LCFI22:
 2027              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccQOnTG0.s 			page 137


 2028              		.cfi_offset 3, -8
 2029              		.cfi_offset 14, -4
 529:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry *delete_dentry = (struct pipefs_dentry *)dentry->d_fsdata;
 2030              		.loc 1 529 5 is_stmt 1 view .LVU649
 529:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry *delete_dentry = (struct pipefs_dentry *)dentry->d_fsdata;
 2031              		.loc 1 529 26 is_stmt 0 view .LVU650
 2032 0002 D0F88430 		ldr	r3, [r0, #132]
 2033              	.LVL177:
 530:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     pipefs_delete_dentry(parent_inode->sb, parent_inode, delete_dentry);
 2034              		.loc 1 530 5 is_stmt 1 view .LVU651
 531:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 2035              		.loc 1 531 5 view .LVU652
 2036 0006 4A6D     		ldr	r2, [r1, #84]
 2037 0008 1946     		mov	r1, r3
 2038              	.LVL178:
 531:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 2039              		.loc 1 531 5 is_stmt 0 view .LVU653
 2040 000a 586B     		ldr	r0, [r3, #52]
 2041              	.LVL179:
 531:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 2042              		.loc 1 531 5 view .LVU654
 2043 000c FFF7FEFF 		bl	pipefs_delete_dentry
 2044              	.LVL180:
 532:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 2045              		.loc 1 532 5 is_stmt 1 view .LVU655
 533:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2046              		.loc 1 533 1 is_stmt 0 view .LVU656
 2047 0010 0020     		movs	r0, #0
 2048 0012 08BD     		pop	{r3, pc}
 2049              		.cfi_endproc
 2050              	.LFE1063:
 2052              		.section	.text.pipefs_create_dentry,"ax",%progbits
 2053              		.align	1
 2054              		.syntax unified
 2055              		.thumb
 2056              		.thumb_func
 2058              	pipefs_create_dentry:
 2059              	.LVL181:
 2060              	.LFB1043:
 147:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(parent_dentry_inode == NULL || name == NULL || target_inode == NULL) return NULL;
 2061              		.loc 1 147 1 is_stmt 1 view -0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 0
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
 147:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(parent_dentry_inode == NULL || name == NULL || target_inode == NULL) return NULL;
 2065              		.loc 1 147 1 is_stmt 0 view .LVU658
 2066 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2067              	.LCFI23:
 2068              		.cfi_def_cfa_offset 24
 2069              		.cfi_offset 4, -24
 2070              		.cfi_offset 5, -20
 2071              		.cfi_offset 6, -16
 2072              		.cfi_offset 7, -12
 2073              		.cfi_offset 8, -8
 2074              		.cfi_offset 14, -4
 148:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2075              		.loc 1 148 5 is_stmt 1 view .LVU659
ARM GAS  /tmp/ccQOnTG0.s 			page 138


 148:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2076              		.loc 1 148 7 is_stmt 0 view .LVU660
 2077 0004 8046     		mov	r8, r0
 2078 0006 0028     		cmp	r0, #0
 2079 0008 47D0     		beq	.L121
 2080 000a 0E46     		mov	r6, r1
 2081 000c 1546     		mov	r5, r2
 148:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2082              		.loc 1 148 36 discriminator 2 view .LVU661
 2083 000e 002A     		cmp	r2, #0
 2084 0010 45D0     		beq	.L122
 148:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2085              		.loc 1 148 52 discriminator 4 view .LVU662
 2086 0012 0029     		cmp	r1, #0
 2087 0014 45D0     		beq	.L123
 150:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_dentry == NULL)return NULL;
 2088              		.loc 1 150 5 is_stmt 1 view .LVU663
 2089              	.LVL182:
 2090              	.LBB309:
 2091              	.LBI309:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 2092              		.loc 4 379 21 view .LVU664
 2093              	.LBB310:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 2094              		.loc 4 380 2 view .LVU665
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 2095              		.loc 4 380 9 is_stmt 0 view .LVU666
 2096 0016 4FF44C61 		mov	r1, #3264
 2097              	.LVL183:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 2098              		.loc 4 380 9 view .LVU667
 2099 001a 1420     		movs	r0, #20
 2100              	.LVL184:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 2101              		.loc 4 380 9 view .LVU668
 2102 001c FFF7FEFF 		bl	__smalloc__
 2103              	.LVL185:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 2104              		.loc 4 380 9 view .LVU669
 2105              	.LBE310:
 2106              	.LBE309:
 151:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     new_dentry->magic = MAGIC;
 2107              		.loc 1 151 5 is_stmt 1 view .LVU670
 151:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     new_dentry->magic = MAGIC;
 2108              		.loc 1 151 7 is_stmt 0 view .LVU671
 2109 0020 0446     		mov	r4, r0
 2110 0022 90B3     		cbz	r0, .L118
 152:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     new_dentry->name = NULL;
 2111              		.loc 1 152 5 is_stmt 1 view .LVU672
 152:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     new_dentry->name = NULL;
 2112              		.loc 1 152 23 is_stmt 0 view .LVU673
 2113 0024 204B     		ldr	r3, .L126
 2114 0026 0360     		str	r3, [r0]
 153:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     new_dentry->name = kmalloc(strlen(name) + 1,GFP_KERNEL);
 2115              		.loc 1 153 5 is_stmt 1 view .LVU674
 153:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     new_dentry->name = kmalloc(strlen(name) + 1,GFP_KERNEL);
 2116              		.loc 1 153 22 is_stmt 0 view .LVU675
ARM GAS  /tmp/ccQOnTG0.s 			page 139


 2117 0028 0023     		movs	r3, #0
 2118 002a 4360     		str	r3, [r0, #4]
 154:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_dentry->name  == NULL) {
 2119              		.loc 1 154 5 is_stmt 1 view .LVU676
 154:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_dentry->name  == NULL) {
 2120              		.loc 1 154 32 is_stmt 0 view .LVU677
 2121 002c 2846     		mov	r0, r5
 2122              	.LVL186:
 154:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_dentry->name  == NULL) {
 2123              		.loc 1 154 32 view .LVU678
 2124 002e FFF7FEFF 		bl	strlen
 2125              	.LVL187:
 2126              	.LBB311:
 2127              	.LBI311:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 2128              		.loc 4 379 21 is_stmt 1 view .LVU679
 2129              	.LBB312:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 2130              		.loc 4 380 2 view .LVU680
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 2131              		.loc 4 380 9 is_stmt 0 view .LVU681
 2132 0032 4FF44C61 		mov	r1, #3264
 2133 0036 0130     		adds	r0, r0, #1
 2134              	.LVL188:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 2135              		.loc 4 380 9 view .LVU682
 2136 0038 FFF7FEFF 		bl	__smalloc__
 2137              	.LVL189:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 2138              		.loc 4 380 9 view .LVU683
 2139 003c 0746     		mov	r7, r0
 2140              	.LVL190:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 2141              		.loc 4 380 9 view .LVU684
 2142              	.LBE312:
 2143              	.LBE311:
 154:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_dentry->name  == NULL) {
 2144              		.loc 1 154 22 discriminator 2 view .LVU685
 2145 003e 6060     		str	r0, [r4, #4]
 155:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(new_dentry);
 2146              		.loc 1 155 5 is_stmt 1 view .LVU686
 155:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(new_dentry);
 2147              		.loc 1 155 7 is_stmt 0 view .LVU687
 2148 0040 30B3     		cbz	r0, .L125
 159:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     new_dentry->target_inode = target_inode;
 2149              		.loc 1 159 5 is_stmt 1 view .LVU688
 2150 0042 2946     		mov	r1, r5
 2151 0044 FFF7FEFF 		bl	strcpy
 2152              	.LVL191:
 160:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     INIT_LIST_HEAD(&new_dentry->list_node);
 2153              		.loc 1 160 5 view .LVU689
 160:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     INIT_LIST_HEAD(&new_dentry->list_node);
 2154              		.loc 1 160 30 is_stmt 0 view .LVU690
 2155 0048 A660     		str	r6, [r4, #8]
 161:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 2156              		.loc 1 161 5 is_stmt 1 view .LVU691
 2157 004a 04F10C05 		add	r5, r4, #12
ARM GAS  /tmp/ccQOnTG0.s 			page 140


 2158              	.LVL192:
 2159              	.LBB313:
 2160              	.LBI313:
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2161              		.loc 7 35 20 view .LVU692
 2162              	.LBB314:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 2163              		.loc 7 37 2 view .LVU693
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 2164              		.loc 7 37 2 view .LVU694
 2165              	.LBB315:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 2166              		.loc 7 37 2 view .LVU695
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 2167              		.loc 7 37 2 view .LVU696
 2168              	.LBE315:
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 2169              		.loc 7 37 2 discriminator 2 view .LVU697
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 2170              		.loc 7 37 2 discriminator 2 view .LVU698
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 2171              		.loc 7 37 2 discriminator 2 view .LVU699
 2172 004e E560     		str	r5, [r4, #12]
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 2173              		.loc 7 37 2 discriminator 2 view .LVU700
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(list->prev, list);
 2174              		.loc 7 37 2 discriminator 2 view .LVU701
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2175              		.loc 7 38 2 view .LVU702
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2176              		.loc 7 38 2 view .LVU703
 2177              	.LBB316:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2178              		.loc 7 38 2 view .LVU704
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2179              		.loc 7 38 2 view .LVU705
 2180              	.LBE316:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2181              		.loc 7 38 2 discriminator 2 view .LVU706
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2182              		.loc 7 38 2 discriminator 2 view .LVU707
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2183              		.loc 7 38 2 discriminator 2 view .LVU708
 2184 0050 2561     		str	r5, [r4, #16]
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2185              		.loc 7 38 2 discriminator 2 view .LVU709
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2186              		.loc 7 38 2 discriminator 2 view .LVU710
 2187              	.LVL193:
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2188              		.loc 7 38 2 is_stmt 0 discriminator 2 view .LVU711
 2189              	.LBE314:
 2190              	.LBE313:
 164:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 2191              		.loc 1 164 5 is_stmt 1 view .LVU712
 2192 0052 06F10C01 		add	r1, r6, #12
 2193              	.LVL194:
ARM GAS  /tmp/ccQOnTG0.s 			page 141


 2194              	.LBB317:
 2195              	.LBI317:
 433:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** {
 2196              		.loc 5 433 1 view .LVU713
 435:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** 	raw_atomic_inc(v);
 2197              		.loc 5 435 2 view .LVU714
 436:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-instrumented.h **** }
 2198              		.loc 5 436 2 view .LVU715
 2199              	.LBB318:
 2200              	.LBI318:
 999:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 2201              		.loc 6 999 1 view .LVU716
1004:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** #endif
 2202              		.loc 6 1004 2 view .LVU717
 2203              	.LBB319:
 2204              	.LBI319:
 550:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** {
 2205              		.loc 6 550 1 view .LVU718
 552:/mnt/c/Users/31740/Desktop/newcore/include/linux/atomic/atomic-arch-fallback.h **** }
 2206              		.loc 6 552 2 view .LVU719
 2207              	.LBB320:
 2208              	.LBI320:
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 2209              		.loc 8 170 1 view .LVU720
 2210              	.LBB321:
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 2211              		.loc 8 170 1 view .LVU721
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 2212              		.loc 8 170 1 view .LVU722
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 2213              		.loc 8 170 1 view .LVU723
 2214              		.syntax unified
 2215              	@ 170 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h" 1
 2216              		@ atomic_add
 2217 0056 51E8003F 	1: ldrex   r3, [r1]
 2218 005a 03F10103 	   add r3, r3, #1
 2219 005e 41E80032 	   strex   r2, r3, [r1]
 2220 0062 92F0000F 	   teq r2, #0
 2221 0066 F6D1     	   bne 1b
 2222              	@ 0 "" 2
 2223              	.LVL195:
 170:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/atomic.h **** ATOMIC_OPS(sub, -=, sub)
 2224              		.loc 8 170 1 is_stmt 0 view .LVU724
 2225              		.thumb
 2226              		.syntax unified
 2227              	.LBE321:
 2228              	.LBE320:
 2229              	.LBE319:
 2230              	.LBE318:
 2231              	.LBE317:
 167:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     list_add    (&new_dentry->list_node,&parent_dentry_inode->dentry_list_head);
 2232              		.loc 1 167 5 is_stmt 1 view .LVU725
 2233 0068 08F12406 		add	r6, r8, #36
 2234              	.LVL196:
 167:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     list_add    (&new_dentry->list_node,&parent_dentry_inode->dentry_list_head);
 2235              		.loc 1 167 5 is_stmt 0 view .LVU726
 2236 006c 3046     		mov	r0, r6
ARM GAS  /tmp/ccQOnTG0.s 			page 142


 2237 006e FFF7FEFF 		bl	spin_lock
 2238              	.LVL197:
 168:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_unlock(&parent_dentry_inode->lock);
 2239              		.loc 1 168 5 is_stmt 1 view .LVU727
 2240 0072 08F11C02 		add	r2, r8, #28
 2241              	.LVL198:
 2242              	.LBB322:
 2243              	.LBI322:
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2244              		.loc 7 167 20 view .LVU728
 2245              	.LBB323:
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2246              		.loc 7 169 2 view .LVU729
 2247 0076 D8F81C30 		ldr	r3, [r8, #28]
 2248              	.LVL199:
 2249              	.LBB324:
 2250              	.LBI324:
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 			      struct list_head *prev,
 2251              		.loc 7 146 20 view .LVU730
 2252              	.LBB325:
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 2253              		.loc 7 150 2 view .LVU731
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next = next;
 2254              		.loc 7 153 2 view .LVU732
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->next = next;
 2255              		.loc 7 153 13 is_stmt 0 view .LVU733
 2256 007a 5D60     		str	r5, [r3, #4]
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev = prev;
 2257              		.loc 7 154 2 is_stmt 1 view .LVU734
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	new->prev = prev;
 2258              		.loc 7 154 12 is_stmt 0 view .LVU735
 2259 007c E360     		str	r3, [r4, #12]
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, new);
 2260              		.loc 7 155 2 is_stmt 1 view .LVU736
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, new);
 2261              		.loc 7 155 12 is_stmt 0 view .LVU737
 2262 007e 2261     		str	r2, [r4, #16]
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2263              		.loc 7 156 2 is_stmt 1 view .LVU738
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2264              		.loc 7 156 2 view .LVU739
 2265              	.LBB326:
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2266              		.loc 7 156 2 view .LVU740
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2267              		.loc 7 156 2 view .LVU741
 2268              	.LBE326:
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2269              		.loc 7 156 2 discriminator 2 view .LVU742
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2270              		.loc 7 156 2 discriminator 2 view .LVU743
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2271              		.loc 7 156 2 discriminator 2 view .LVU744
 2272 0080 C8F81C50 		str	r5, [r8, #28]
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2273              		.loc 7 156 2 discriminator 3 view .LVU745
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
ARM GAS  /tmp/ccQOnTG0.s 			page 143


 2274              		.loc 7 156 2 discriminator 3 view .LVU746
 2275              	.LVL200:
 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2276              		.loc 7 156 2 is_stmt 0 discriminator 3 view .LVU747
 2277              	.LBE325:
 2278              	.LBE324:
 2279              	.LBE323:
 2280              	.LBE322:
 169:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return new_dentry;
 2281              		.loc 1 169 5 is_stmt 1 view .LVU748
 2282 0084 3046     		mov	r0, r6
 2283 0086 FFF7FEFF 		bl	spin_unlock
 2284              	.LVL201:
 170:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 2285              		.loc 1 170 5 view .LVU749
 2286              	.L118:
 171:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct pipefs_dentry* pipefs_create_inode( struct pipefs_superblock *sb,struct pipefs_inode*
 2287              		.loc 1 171 1 is_stmt 0 view .LVU750
 2288 008a 2046     		mov	r0, r4
 2289 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2290              	.LVL202:
 2291              	.L125:
 156:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 2292              		.loc 1 156 9 is_stmt 1 view .LVU751
 2293              	.LBB327:
 2294              	.LBI327:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 2295              		.loc 4 383 20 view .LVU752
 2296              	.LBB328:
 2297              		.loc 4 384 2 view .LVU753
 2298 0090 2046     		mov	r0, r4
 2299 0092 FFF7FEFF 		bl	__sfree__
 2300              	.LVL203:
 2301              		.loc 4 384 2 is_stmt 0 view .LVU754
 2302              	.LBE328:
 2303              	.LBE327:
 157:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2304              		.loc 1 157 9 is_stmt 1 view .LVU755
 157:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2305              		.loc 1 157 16 is_stmt 0 view .LVU756
 2306 0096 3C46     		mov	r4, r7
 2307              	.LVL204:
 157:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2308              		.loc 1 157 16 view .LVU757
 2309 0098 F7E7     		b	.L118
 2310              	.LVL205:
 2311              	.L121:
 148:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2312              		.loc 1 148 84 discriminator 5 view .LVU758
 2313 009a 0446     		mov	r4, r0
 2314 009c F5E7     		b	.L118
 2315              	.L122:
 148:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2316              		.loc 1 148 84 discriminator 5 view .LVU759
 2317 009e 1446     		mov	r4, r2
 2318 00a0 F3E7     		b	.L118
 2319              	.L123:
ARM GAS  /tmp/ccQOnTG0.s 			page 144


 148:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2320              		.loc 1 148 84 discriminator 5 view .LVU760
 2321 00a2 0C46     		mov	r4, r1
 2322 00a4 F1E7     		b	.L118
 2323              	.L127:
 2324 00a6 00BF     		.align	2
 2325              	.L126:
 2326 00a8 4E61BC00 		.word	12345678
 2327              		.cfi_endproc
 2328              	.LFE1043:
 2330              		.section	.text.pipefs_create_inode,"ax",%progbits
 2331              		.align	1
 2332              		.syntax unified
 2333              		.thumb
 2334              		.thumb_func
 2336              	pipefs_create_inode:
 2337              	.LVL206:
 2338              	.LFB1044:
 173:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode * new_inode = pipefs_create_empty_inode(sb,fop,major);
 2339              		.loc 1 173 1 is_stmt 1 view -0
 2340              		.cfi_startproc
 2341              		@ args = 4, pretend = 0, frame = 0
 2342              		@ frame_needed = 0, uses_anonymous_args = 0
 173:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode * new_inode = pipefs_create_empty_inode(sb,fop,major);
 2343              		.loc 1 173 1 is_stmt 0 view .LVU762
 2344 0000 70B5     		push	{r4, r5, r6, lr}
 2345              	.LCFI24:
 2346              		.cfi_def_cfa_offset 16
 2347              		.cfi_offset 4, -16
 2348              		.cfi_offset 5, -12
 2349              		.cfi_offset 6, -8
 2350              		.cfi_offset 14, -4
 2351 0002 0646     		mov	r6, r0
 2352 0004 0C46     		mov	r4, r1
 2353 0006 1146     		mov	r1, r2
 2354              	.LVL207:
 174:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_inode == NULL){
 2355              		.loc 1 174 5 is_stmt 1 view .LVU763
 174:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_inode == NULL){
 2356              		.loc 1 174 39 is_stmt 0 view .LVU764
 2357 0008 1A46     		mov	r2, r3
 2358              	.LVL208:
 174:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_inode == NULL){
 2359              		.loc 1 174 39 view .LVU765
 2360 000a FFF7FEFF 		bl	pipefs_create_empty_inode
 2361              	.LVL209:
 175:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 2362              		.loc 1 175 5 is_stmt 1 view .LVU766
 175:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 2363              		.loc 1 175 7 is_stmt 0 view .LVU767
 2364 000e 0546     		mov	r5, r0
 2365 0010 E8B1     		cbz	r0, .L130
 178:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_dentry == NULL){
 2366              		.loc 1 178 5 is_stmt 1 view .LVU768
 178:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_dentry == NULL){
 2367              		.loc 1 178 40 is_stmt 0 view .LVU769
 2368 0012 049A     		ldr	r2, [sp, #16]
ARM GAS  /tmp/ccQOnTG0.s 			page 145


 2369 0014 0146     		mov	r1, r0
 2370 0016 2046     		mov	r0, r4
 2371              	.LVL210:
 178:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_dentry == NULL){
 2372              		.loc 1 178 40 view .LVU770
 2373 0018 FFF7FEFF 		bl	pipefs_create_dentry
 2374              	.LVL211:
 179:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_lock(&sb->lock);
 2375              		.loc 1 179 5 is_stmt 1 view .LVU771
 179:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_lock(&sb->lock);
 2376              		.loc 1 179 7 is_stmt 0 view .LVU772
 2377 001c 0446     		mov	r4, r0
 2378              	.LVL212:
 179:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_lock(&sb->lock);
 2379              		.loc 1 179 7 view .LVU773
 2380 001e 08B1     		cbz	r0, .L132
 2381              	.LVL213:
 2382              	.L128:
 187:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static struct pipefs_dentry* pipefs_create_file(struct pipefs_superblock *sb,struct pipefs_inode* p
 2383              		.loc 1 187 1 view .LVU774
 2384 0020 2046     		mov	r0, r4
 2385 0022 70BD     		pop	{r4, r5, r6, pc}
 2386              	.LVL214:
 2387              	.L132:
 180:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         list_del(&new_inode->list_node);
 2388              		.loc 1 180 9 is_stmt 1 view .LVU775
 2389 0024 0436     		adds	r6, r6, #4
 2390              	.LVL215:
 180:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         list_del(&new_inode->list_node);
 2391              		.loc 1 180 9 is_stmt 0 view .LVU776
 2392 0026 3046     		mov	r0, r6
 2393              	.LVL216:
 180:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         list_del(&new_inode->list_node);
 2394              		.loc 1 180 9 view .LVU777
 2395 0028 FFF7FEFF 		bl	spin_lock
 2396              	.LVL217:
 181:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&sb->lock);
 2397              		.loc 1 181 9 is_stmt 1 view .LVU778
 2398              	.LBB329:
 2399              	.LBI329:
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2400              		.loc 7 227 20 view .LVU779
 2401              	.LBB330:
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->next = LIST_POISON1;
 2402              		.loc 7 229 2 view .LVU780
 2403              	.LBB331:
 2404              	.LBI331:
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2405              		.loc 7 213 20 view .LVU781
 2406              	.LBB332:
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 2407              		.loc 7 215 2 view .LVU782
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2408              		.loc 7 218 2 view .LVU783
 2409 002c AB69     		ldr	r3, [r5, #24]
 2410 002e 6A69     		ldr	r2, [r5, #20]
 2411              	.LVL218:
ARM GAS  /tmp/ccQOnTG0.s 			page 146


 2412              	.LBB333:
 2413              	.LBI333:
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2414              		.loc 7 193 20 view .LVU784
 2415              	.LBB334:
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 2416              		.loc 7 195 2 view .LVU785
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 2417              		.loc 7 195 13 is_stmt 0 view .LVU786
 2418 0030 5360     		str	r3, [r2, #4]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2419              		.loc 7 196 2 is_stmt 1 view .LVU787
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2420              		.loc 7 196 2 view .LVU788
 2421              	.LBB335:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2422              		.loc 7 196 2 view .LVU789
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2423              		.loc 7 196 2 view .LVU790
 2424              	.LBE335:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2425              		.loc 7 196 2 discriminator 2 view .LVU791
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2426              		.loc 7 196 2 discriminator 2 view .LVU792
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2427              		.loc 7 196 2 discriminator 2 view .LVU793
 2428 0032 1A60     		str	r2, [r3]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2429              		.loc 7 196 2 discriminator 2 view .LVU794
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2430              		.loc 7 196 2 discriminator 2 view .LVU795
 2431              	.LVL219:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2432              		.loc 7 196 2 is_stmt 0 discriminator 2 view .LVU796
 2433              	.LBE334:
 2434              	.LBE333:
 2435              	.LBE332:
 2436              	.LBE331:
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 2437              		.loc 7 230 2 is_stmt 1 view .LVU797
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 2438              		.loc 7 230 14 is_stmt 0 view .LVU798
 2439 0034 4FF48073 		mov	r3, #256
 2440 0038 6B61     		str	r3, [r5, #20]
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2441              		.loc 7 231 2 is_stmt 1 view .LVU799
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2442              		.loc 7 231 14 is_stmt 0 view .LVU800
 2443 003a 4FF49173 		mov	r3, #290
 2444 003e AB61     		str	r3, [r5, #24]
 2445              	.LVL220:
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2446              		.loc 7 231 14 view .LVU801
 2447              	.LBE330:
 2448              	.LBE329:
 182:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         pipefs_inode_put(new_inode);
 2449              		.loc 1 182 9 is_stmt 1 view .LVU802
ARM GAS  /tmp/ccQOnTG0.s 			page 147


 2450 0040 3046     		mov	r0, r6
 2451 0042 FFF7FEFF 		bl	spin_unlock
 2452              	.LVL221:
 183:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 2453              		.loc 1 183 9 view .LVU803
 2454 0046 2846     		mov	r0, r5
 2455 0048 FFF7FEFF 		bl	pipefs_inode_put
 2456              	.LVL222:
 184:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2457              		.loc 1 184 9 view .LVU804
 184:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2458              		.loc 1 184 16 is_stmt 0 view .LVU805
 2459 004c E8E7     		b	.L128
 2460              	.LVL223:
 2461              	.L130:
 176:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }   
 2462              		.loc 1 176 16 view .LVU806
 2463 004e 0446     		mov	r4, r0
 2464              	.LVL224:
 176:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }   
 2465              		.loc 1 176 16 view .LVU807
 2466 0050 E6E7     		b	.L128
 2467              		.cfi_endproc
 2468              	.LFE1044:
 2470              		.section	.text.pipefs_create_dir,"ax",%progbits
 2471              		.align	1
 2472              		.syntax unified
 2473              		.thumb
 2474              		.thumb_func
 2476              	pipefs_create_dir:
 2477              	.LVL225:
 2478              	.LFB1046:
 194:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* dentry =  pipefs_create_inode(sb,parent_dentry_inode,&pipefs_file_fops,0,
 2479              		.loc 1 194 1 is_stmt 1 view -0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 0
 2482              		@ frame_needed = 0, uses_anonymous_args = 0
 194:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* dentry =  pipefs_create_inode(sb,parent_dentry_inode,&pipefs_file_fops,0,
 2483              		.loc 1 194 1 is_stmt 0 view .LVU809
 2484 0000 00B5     		push	{lr}
 2485              	.LCFI25:
 2486              		.cfi_def_cfa_offset 4
 2487              		.cfi_offset 14, -4
 2488 0002 83B0     		sub	sp, sp, #12
 2489              	.LCFI26:
 2490              		.cfi_def_cfa_offset 16
 195:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry == NULL) return NULL;
 2491              		.loc 1 195 5 is_stmt 1 view .LVU810
 195:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry == NULL) return NULL;
 2492              		.loc 1 195 37 is_stmt 0 view .LVU811
 2493 0004 0092     		str	r2, [sp]
 2494 0006 0023     		movs	r3, #0
 2495 0008 054A     		ldr	r2, .L136
 2496              	.LVL226:
 195:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry == NULL) return NULL;
 2497              		.loc 1 195 37 view .LVU812
 2498 000a FFF7FEFF 		bl	pipefs_create_inode
ARM GAS  /tmp/ccQOnTG0.s 			page 148


 2499              	.LVL227:
 196:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->target_inode->i_mode = S_IFDIR | 0755;
 2500              		.loc 1 196 5 is_stmt 1 view .LVU813
 196:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->target_inode->i_mode = S_IFDIR | 0755;
 2501              		.loc 1 196 7 is_stmt 0 view .LVU814
 2502 000e 18B1     		cbz	r0, .L133
 197:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return dentry;
 2503              		.loc 1 197 5 is_stmt 1 view .LVU815
 197:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return dentry;
 2504              		.loc 1 197 11 is_stmt 0 view .LVU816
 2505 0010 8368     		ldr	r3, [r0, #8]
 197:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return dentry;
 2506              		.loc 1 197 34 view .LVU817
 2507 0012 44F2ED12 		movw	r2, #16877
 2508 0016 5A60     		str	r2, [r3, #4]
 198:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 2509              		.loc 1 198 5 is_stmt 1 view .LVU818
 2510              	.L133:
 199:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** static void dentry_put(struct pipefs_superblock *sb,struct pipefs_dentry* dentry)
 2511              		.loc 1 199 1 is_stmt 0 view .LVU819
 2512 0018 03B0     		add	sp, sp, #12
 2513              	.LCFI27:
 2514              		.cfi_def_cfa_offset 4
 2515              		@ sp needed
 2516 001a 5DF804FB 		ldr	pc, [sp], #4
 2517              	.L137:
 2518 001e 00BF     		.align	2
 2519              	.L136:
 2520 0020 00000000 		.word	pipefs_file_fops
 2521              		.cfi_endproc
 2522              	.LFE1046:
 2524              		.section	.text.pipefs_mkdir,"ax",%progbits
 2525              		.align	1
 2526              		.syntax unified
 2527              		.thumb
 2528              		.thumb_func
 2530              	pipefs_mkdir:
 2531              	.LVL228:
 2532              	.LFB1064:
 537:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     char *file_name = d_getname(dentry);
 2533              		.loc 1 537 1 is_stmt 1 view -0
 2534              		.cfi_startproc
 2535              		@ args = 0, pretend = 0, frame = 0
 2536              		@ frame_needed = 0, uses_anonymous_args = 0
 537:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     char *file_name = d_getname(dentry);
 2537              		.loc 1 537 1 is_stmt 0 view .LVU821
 2538 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2539              	.LCFI28:
 2540              		.cfi_def_cfa_offset 24
 2541              		.cfi_offset 4, -24
 2542              		.cfi_offset 5, -20
 2543              		.cfi_offset 6, -16
 2544              		.cfi_offset 7, -12
 2545              		.cfi_offset 8, -8
 2546              		.cfi_offset 14, -4
 2547 0004 0D46     		mov	r5, r1
 2548 0006 1446     		mov	r4, r2
ARM GAS  /tmp/ccQOnTG0.s 			page 149


 2549 0008 9846     		mov	r8, r3
 538:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2550              		.loc 1 538 5 is_stmt 1 view .LVU822
 538:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2551              		.loc 1 538 23 is_stmt 0 view .LVU823
 2552 000a 1046     		mov	r0, r2
 2553              	.LVL229:
 538:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2554              		.loc 1 538 23 view .LVU824
 2555 000c FFF7FEFF 		bl	d_getname
 2556              	.LVL230:
 538:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2557              		.loc 1 538 23 view .LVU825
 2558 0010 0646     		mov	r6, r0
 2559              	.LVL231:
 540:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* file = pipefs_lookup(dinode,file_name);
 2560              		.loc 1 540 5 is_stmt 1 view .LVU826
 540:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* file = pipefs_lookup(dinode,file_name);
 2561              		.loc 1 540 26 is_stmt 0 view .LVU827
 2562 0012 D5F88470 		ldr	r7, [r5, #132]
 2563              	.LVL232:
 541:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(file == NULL){
 2564              		.loc 1 541 5 is_stmt 1 view .LVU828
 541:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(file == NULL){
 2565              		.loc 1 541 34 is_stmt 0 view .LVU829
 2566 0016 0146     		mov	r1, r0
 2567 0018 3846     		mov	r0, r7
 2568              	.LVL233:
 541:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(file == NULL){
 2569              		.loc 1 541 34 view .LVU830
 2570 001a FFF7FEFF 		bl	pipefs_lookup
 2571              	.LVL234:
 542:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         file =  pipefs_create_dir(dinode->sb,dinode,file_name);
 2572              		.loc 1 542 5 is_stmt 1 view .LVU831
 542:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         file =  pipefs_create_dir(dinode->sb,dinode,file_name);
 2573              		.loc 1 542 7 is_stmt 0 view .LVU832
 2574 001e 0146     		mov	r1, r0
 2575 0020 A8B1     		cbz	r0, .L145
 2576              	.L139:
 2577              	.LVL235:
 548:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 2578              		.loc 1 548 5 is_stmt 1 view .LVU833
 548:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 2579              		.loc 1 548 9 is_stmt 0 view .LVU834
 2580 0022 8A68     		ldr	r2, [r1, #8]
 548:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 2581              		.loc 1 548 42 view .LVU835
 2582 0024 C8F30803 		ubfx	r3, r8, #0, #9
 2583 0028 43F40043 		orr	r3, r3, #32768
 548:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     
 2584              		.loc 1 548 32 view .LVU836
 2585 002c 5360     		str	r3, [r2, #4]
 550:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      return -1;
 2586              		.loc 1 550 5 is_stmt 1 view .LVU837
 550:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      return -1;
 2587              		.loc 1 550 9 is_stmt 0 view .LVU838
 2588 002e 2046     		mov	r0, r4
ARM GAS  /tmp/ccQOnTG0.s 			page 150


 2589 0030 FFF7FEFF 		bl	pipefs_get_dentry
 2590              	.LVL236:
 550:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      return -1;
 2591              		.loc 1 550 7 discriminator 1 view .LVU839
 2592 0034 B0B1     		cbz	r0, .L142
 553:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_file_inode == NULL)
 2593              		.loc 1 553 5 is_stmt 1 view .LVU840
 553:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_file_inode == NULL)
 2594              		.loc 1 553 37 is_stmt 0 view .LVU841
 2595 0036 6969     		ldr	r1, [r5, #20]
 2596 0038 3846     		mov	r0, r7
 2597 003a FFF7FEFF 		bl	pipefs_get_inode
 2598              	.LVL237:
 554:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1;
 2599              		.loc 1 554 5 is_stmt 1 view .LVU842
 554:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1;
 2600              		.loc 1 554 7 is_stmt 0 view .LVU843
 2601 003e 0146     		mov	r1, r0
 2602 0040 98B1     		cbz	r0, .L143
 557:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****    return 0;
 2603              		.loc 1 557 5 is_stmt 1 view .LVU844
 2604 0042 2046     		mov	r0, r4
 2605              	.LVL238:
 557:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****    return 0;
 2606              		.loc 1 557 5 is_stmt 0 view .LVU845
 2607 0044 FFF7FEFF 		bl	d_add
 2608              	.LVL239:
 558:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 2609              		.loc 1 558 4 is_stmt 1 view .LVU846
 558:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 2610              		.loc 1 558 11 is_stmt 0 view .LVU847
 2611 0048 0020     		movs	r0, #0
 2612              	.LVL240:
 2613              	.L138:
 559:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2614              		.loc 1 559 1 view .LVU848
 2615 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2616              	.LVL241:
 2617              	.L145:
 543:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2618              		.loc 1 543 9 is_stmt 1 view .LVU849
 543:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2619              		.loc 1 543 17 is_stmt 0 view .LVU850
 2620 004e 3246     		mov	r2, r6
 2621 0050 3946     		mov	r1, r7
 2622 0052 786B     		ldr	r0, [r7, #52]
 2623              	.LVL242:
 543:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2624              		.loc 1 543 17 view .LVU851
 2625 0054 FFF7FEFF 		bl	pipefs_create_dir
 2626              	.LVL243:
 545:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1;
 2627              		.loc 1 545 5 is_stmt 1 view .LVU852
 545:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1;
 2628              		.loc 1 545 8 is_stmt 0 view .LVU853
 2629 0058 0146     		mov	r1, r0
 2630 005a 0028     		cmp	r0, #0
ARM GAS  /tmp/ccQOnTG0.s 			page 151


 2631 005c E1D1     		bne	.L139
 546:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2632              		.loc 1 546 16 view .LVU854
 2633 005e 4FF0FF30 		mov	r0, #-1
 2634              	.LVL244:
 546:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2635              		.loc 1 546 16 view .LVU855
 2636 0062 F2E7     		b	.L138
 2637              	.LVL245:
 2638              	.L142:
 551:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }  
 2639              		.loc 1 551 13 view .LVU856
 2640 0064 4FF0FF30 		mov	r0, #-1
 2641 0068 EFE7     		b	.L138
 2642              	.LVL246:
 2643              	.L143:
 555:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2644              		.loc 1 555 16 view .LVU857
 2645 006a 4FF0FF30 		mov	r0, #-1
 2646              	.LVL247:
 555:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2647              		.loc 1 555 16 view .LVU858
 2648 006e ECE7     		b	.L138
 2649              		.cfi_endproc
 2650              	.LFE1064:
 2652              		.section	.text.pipefs_create_file,"ax",%progbits
 2653              		.align	1
 2654              		.syntax unified
 2655              		.thumb
 2656              		.thumb_func
 2658              	pipefs_create_file:
 2659              	.LVL248:
 2660              	.LFB1045:
 189:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return pipefs_create_inode(sb,parent_dentry_inode,fop,major,name);
 2661              		.loc 1 189 1 is_stmt 1 view -0
 2662              		.cfi_startproc
 2663              		@ args = 4, pretend = 0, frame = 0
 2664              		@ frame_needed = 0, uses_anonymous_args = 0
 189:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return pipefs_create_inode(sb,parent_dentry_inode,fop,major,name);
 2665              		.loc 1 189 1 is_stmt 0 view .LVU860
 2666 0000 10B5     		push	{r4, lr}
 2667              	.LCFI29:
 2668              		.cfi_def_cfa_offset 8
 2669              		.cfi_offset 4, -8
 2670              		.cfi_offset 14, -4
 2671 0002 82B0     		sub	sp, sp, #8
 2672              	.LCFI30:
 2673              		.cfi_def_cfa_offset 16
 190:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 2674              		.loc 1 190 5 is_stmt 1 view .LVU861
 190:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 2675              		.loc 1 190 12 is_stmt 0 view .LVU862
 2676 0004 049C     		ldr	r4, [sp, #16]
 2677 0006 0094     		str	r4, [sp]
 2678 0008 FFF7FEFF 		bl	pipefs_create_inode
 2679              	.LVL249:
 191:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
ARM GAS  /tmp/ccQOnTG0.s 			page 152


 2680              		.loc 1 191 1 view .LVU863
 2681 000c 02B0     		add	sp, sp, #8
 2682              	.LCFI31:
 2683              		.cfi_def_cfa_offset 8
 2684              		@ sp needed
 2685 000e 10BD     		pop	{r4, pc}
 191:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2686              		.loc 1 191 1 view .LVU864
 2687              		.cfi_endproc
 2688              	.LFE1045:
 2690              		.section	.text.pipefs_create,"ax",%progbits
 2691              		.align	1
 2692              		.syntax unified
 2693              		.thumb
 2694              		.thumb_func
 2696              	pipefs_create:
 2697              	.LVL250:
 2698              	.LFB1060:
 469:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     char *file_name = d_getname(dentry);
 2699              		.loc 1 469 1 is_stmt 1 view -0
 2700              		.cfi_startproc
 2701              		@ args = 4, pretend = 0, frame = 0
 2702              		@ frame_needed = 0, uses_anonymous_args = 0
 469:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     char *file_name = d_getname(dentry);
 2703              		.loc 1 469 1 is_stmt 0 view .LVU866
 2704 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2705              	.LCFI32:
 2706              		.cfi_def_cfa_offset 28
 2707              		.cfi_offset 4, -28
 2708              		.cfi_offset 5, -24
 2709              		.cfi_offset 6, -20
 2710              		.cfi_offset 7, -16
 2711              		.cfi_offset 8, -12
 2712              		.cfi_offset 9, -8
 2713              		.cfi_offset 14, -4
 2714 0004 83B0     		sub	sp, sp, #12
 2715              	.LCFI33:
 2716              		.cfi_def_cfa_offset 40
 2717 0006 0D46     		mov	r5, r1
 2718 0008 1446     		mov	r4, r2
 2719 000a 9946     		mov	r9, r3
 470:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2720              		.loc 1 470 5 is_stmt 1 view .LVU867
 470:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2721              		.loc 1 470 23 is_stmt 0 view .LVU868
 2722 000c 1046     		mov	r0, r2
 2723              	.LVL251:
 470:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2724              		.loc 1 470 23 view .LVU869
 2725 000e FFF7FEFF 		bl	d_getname
 2726              	.LVL252:
 470:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2727              		.loc 1 470 23 view .LVU870
 2728 0012 0646     		mov	r6, r0
 2729              	.LVL253:
 472:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* file = pipefs_lookup(dinode,file_name);
 2730              		.loc 1 472 5 is_stmt 1 view .LVU871
ARM GAS  /tmp/ccQOnTG0.s 			page 153


 472:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry* file = pipefs_lookup(dinode,file_name);
 2731              		.loc 1 472 26 is_stmt 0 view .LVU872
 2732 0014 D5F88470 		ldr	r7, [r5, #132]
 2733              	.LVL254:
 473:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(file == NULL){
 2734              		.loc 1 473 5 is_stmt 1 view .LVU873
 473:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(file == NULL){
 2735              		.loc 1 473 34 is_stmt 0 view .LVU874
 2736 0018 0146     		mov	r1, r0
 2737 001a 3846     		mov	r0, r7
 2738              	.LVL255:
 473:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(file == NULL){
 2739              		.loc 1 473 34 view .LVU875
 2740 001c FFF7FEFF 		bl	pipefs_lookup
 2741              	.LVL256:
 474:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         file =  pipefs_create_file(dinode->sb,dinode,&pipefs_file_fops,10,file_name);
 2742              		.loc 1 474 5 is_stmt 1 view .LVU876
 474:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         file =  pipefs_create_file(dinode->sb,dinode,&pipefs_file_fops,10,file_name);
 2743              		.loc 1 474 7 is_stmt 0 view .LVU877
 2744 0020 8046     		mov	r8, r0
 2745 0022 C8B1     		cbz	r0, .L155
 2746              	.L149:
 2747              	.LVL257:
 480:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if( pipefs_get_dentry(dentry,file) == NULL){     //ÊûÑÂª∫dentry    
 2748              		.loc 1 480 5 is_stmt 1 view .LVU878
 480:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if( pipefs_get_dentry(dentry,file) == NULL){     //ÊûÑÂª∫dentry    
 2749              		.loc 1 480 9 is_stmt 0 view .LVU879
 2750 0024 D8F80820 		ldr	r2, [r8, #8]
 480:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if( pipefs_get_dentry(dentry,file) == NULL){     //ÊûÑÂª∫dentry    
 2751              		.loc 1 480 42 view .LVU880
 2752 0028 C9F30803 		ubfx	r3, r9, #0, #9
 2753 002c 43F40043 		orr	r3, r3, #32768
 480:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if( pipefs_get_dentry(dentry,file) == NULL){     //ÊûÑÂª∫dentry    
 2754              		.loc 1 480 32 view .LVU881
 2755 0030 5360     		str	r3, [r2, #4]
 481:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      return -1;
 2756              		.loc 1 481 5 is_stmt 1 view .LVU882
 481:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      return -1;
 2757              		.loc 1 481 9 is_stmt 0 view .LVU883
 2758 0032 4146     		mov	r1, r8
 2759 0034 2046     		mov	r0, r4
 2760 0036 FFF7FEFF 		bl	pipefs_get_dentry
 2761              	.LVL258:
 481:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      return -1;
 2762              		.loc 1 481 7 discriminator 1 view .LVU884
 2763 003a D0B1     		cbz	r0, .L152
 485:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_file_inode == NULL)
 2764              		.loc 1 485 5 is_stmt 1 view .LVU885
 485:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(new_file_inode == NULL)
 2765              		.loc 1 485 37 is_stmt 0 view .LVU886
 2766 003c 6969     		ldr	r1, [r5, #20]
 2767 003e D8F80800 		ldr	r0, [r8, #8]
 2768 0042 FFF7FEFF 		bl	pipefs_get_inode
 2769              	.LVL259:
 486:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1;
 2770              		.loc 1 486 5 is_stmt 1 view .LVU887
 486:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1;
ARM GAS  /tmp/ccQOnTG0.s 			page 154


 2771              		.loc 1 486 7 is_stmt 0 view .LVU888
 2772 0046 0146     		mov	r1, r0
 2773 0048 B0B1     		cbz	r0, .L153
 489:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****    return 0;
 2774              		.loc 1 489 5 is_stmt 1 view .LVU889
 2775 004a 2046     		mov	r0, r4
 2776              	.LVL260:
 489:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****    return 0;
 2777              		.loc 1 489 5 is_stmt 0 view .LVU890
 2778 004c FFF7FEFF 		bl	d_add
 2779              	.LVL261:
 490:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** } 
 2780              		.loc 1 490 4 is_stmt 1 view .LVU891
 490:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** } 
 2781              		.loc 1 490 11 is_stmt 0 view .LVU892
 2782 0050 0020     		movs	r0, #0
 2783              	.LVL262:
 2784              	.L148:
 491:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2785              		.loc 1 491 1 view .LVU893
 2786 0052 03B0     		add	sp, sp, #12
 2787              	.LCFI34:
 2788              		.cfi_remember_state
 2789              		.cfi_def_cfa_offset 28
 2790              		@ sp needed
 2791 0054 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2792              	.LVL263:
 2793              	.L155:
 2794              	.LCFI35:
 2795              		.cfi_restore_state
 475:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2796              		.loc 1 475 9 is_stmt 1 view .LVU894
 475:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2797              		.loc 1 475 17 is_stmt 0 view .LVU895
 2798 0058 786B     		ldr	r0, [r7, #52]
 2799              	.LVL264:
 475:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2800              		.loc 1 475 17 view .LVU896
 2801 005a 0096     		str	r6, [sp]
 2802 005c 0A23     		movs	r3, #10
 2803 005e 084A     		ldr	r2, .L156
 2804 0060 3946     		mov	r1, r7
 2805 0062 FFF7FEFF 		bl	pipefs_create_file
 2806              	.LVL265:
 477:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1;
 2807              		.loc 1 477 5 is_stmt 1 view .LVU897
 477:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1;
 2808              		.loc 1 477 8 is_stmt 0 view .LVU898
 2809 0066 8046     		mov	r8, r0
 2810 0068 0028     		cmp	r0, #0
 2811 006a DBD1     		bne	.L149
 478:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2812              		.loc 1 478 16 view .LVU899
 2813 006c 4FF0FF30 		mov	r0, #-1
 2814              	.LVL266:
 478:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2815              		.loc 1 478 16 view .LVU900
ARM GAS  /tmp/ccQOnTG0.s 			page 155


 2816 0070 EFE7     		b	.L148
 2817              	.LVL267:
 2818              	.L152:
 482:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }  
 2819              		.loc 1 482 13 view .LVU901
 2820 0072 4FF0FF30 		mov	r0, #-1
 2821 0076 ECE7     		b	.L148
 2822              	.LVL268:
 2823              	.L153:
 487:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2824              		.loc 1 487 16 view .LVU902
 2825 0078 4FF0FF30 		mov	r0, #-1
 2826              	.LVL269:
 487:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2827              		.loc 1 487 16 view .LVU903
 2828 007c E9E7     		b	.L148
 2829              	.L157:
 2830 007e 00BF     		.align	2
 2831              	.L156:
 2832 0080 00000000 		.word	pipefs_file_fops
 2833              		.cfi_endproc
 2834              	.LFE1060:
 2836              		.section	.text.pipefs_link,"ax",%progbits
 2837              		.align	1
 2838              		.syntax unified
 2839              		.thumb
 2840              		.thumb_func
 2842              	pipefs_link:
 2843              	.LVL270:
 2844              	.LFB1062:
 514:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *old_inode = (struct pipefs_inode *)old_dentry->d_inode->i_private;
 2845              		.loc 1 514 1 is_stmt 1 view -0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 0
 2848              		@ frame_needed = 0, uses_anonymous_args = 0
 514:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *old_inode = (struct pipefs_inode *)old_dentry->d_inode->i_private;
 2849              		.loc 1 514 1 is_stmt 0 view .LVU905
 2850 0000 38B5     		push	{r3, r4, r5, lr}
 2851              	.LCFI36:
 2852              		.cfi_def_cfa_offset 16
 2853              		.cfi_offset 3, -16
 2854              		.cfi_offset 4, -12
 2855              		.cfi_offset 5, -8
 2856              		.cfi_offset 14, -4
 2857 0002 0D46     		mov	r5, r1
 2858 0004 1446     		mov	r4, r2
 515:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *dir_inode = (struct pipefs_inode *)dir->i_private;
 2859              		.loc 1 515 5 is_stmt 1 view .LVU906
 515:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_inode *dir_inode = (struct pipefs_inode *)dir->i_private;
 2860              		.loc 1 515 71 is_stmt 0 view .LVU907
 2861 0006 836C     		ldr	r3, [r0, #72]
 2862              	.LVL271:
 516:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_dentry *new_dentry = pipefs_create_dentry(dir_inode, old_inode, dentry->d_name.na
 2863              		.loc 1 516 5 is_stmt 1 view .LVU908
 517:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (new_dentry == NULL) {
 2864              		.loc 1 517 5 view .LVU909
 517:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (new_dentry == NULL) {
ARM GAS  /tmp/ccQOnTG0.s 			page 156


 2865              		.loc 1 517 40 is_stmt 0 view .LVU910
 2866 0008 9269     		ldr	r2, [r2, #24]
 2867              	.LVL272:
 517:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (new_dentry == NULL) {
 2868              		.loc 1 517 40 view .LVU911
 2869 000a D3F88410 		ldr	r1, [r3, #132]
 2870              	.LVL273:
 517:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (new_dentry == NULL) {
 2871              		.loc 1 517 40 view .LVU912
 2872 000e D5F88400 		ldr	r0, [r5, #132]
 2873              	.LVL274:
 517:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (new_dentry == NULL) {
 2874              		.loc 1 517 40 view .LVU913
 2875 0012 FFF7FEFF 		bl	pipefs_create_dentry
 2876              	.LVL275:
 518:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -ENOMEM;
 2877              		.loc 1 518 5 is_stmt 1 view .LVU914
 518:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -ENOMEM;
 2878              		.loc 1 518 8 is_stmt 0 view .LVU915
 2879 0016 58B1     		cbz	r0, .L160
 2880 0018 0146     		mov	r1, r0
 521:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->d_sb = dir->i_sb;
 2881              		.loc 1 521 5 is_stmt 1 view .LVU916
 2882 001a 2046     		mov	r0, r4
 2883              	.LVL276:
 521:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->d_sb = dir->i_sb;
 2884              		.loc 1 521 5 is_stmt 0 view .LVU917
 2885 001c FFF7FEFF 		bl	pipefs_get_dentry
 2886              	.LVL277:
 522:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     d_add(dentry,dentry->d_inode);
 2887              		.loc 1 522 5 is_stmt 1 view .LVU918
 522:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     d_add(dentry,dentry->d_inode);
 2888              		.loc 1 522 23 is_stmt 0 view .LVU919
 2889 0020 6B69     		ldr	r3, [r5, #20]
 522:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     d_add(dentry,dentry->d_inode);
 2890              		.loc 1 522 18 view .LVU920
 2891 0022 2365     		str	r3, [r4, #80]
 523:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 2892              		.loc 1 523 5 is_stmt 1 view .LVU921
 2893 0024 A16C     		ldr	r1, [r4, #72]
 2894 0026 2046     		mov	r0, r4
 2895 0028 FFF7FEFF 		bl	d_add
 2896              	.LVL278:
 524:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 2897              		.loc 1 524 5 view .LVU922
 524:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 2898              		.loc 1 524 12 is_stmt 0 view .LVU923
 2899 002c 0020     		movs	r0, #0
 2900              	.L158:
 525:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 2901              		.loc 1 525 1 view .LVU924
 2902 002e 38BD     		pop	{r3, r4, r5, pc}
 2903              	.LVL279:
 2904              	.L160:
 519:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2905              		.loc 1 519 16 view .LVU925
 2906 0030 6FF00B00 		mvn	r0, #11
ARM GAS  /tmp/ccQOnTG0.s 			page 157


 2907              	.LVL280:
 519:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2908              		.loc 1 519 16 view .LVU926
 2909 0034 FBE7     		b	.L158
 2910              		.cfi_endproc
 2911              	.LFE1062:
 2913              		.section	.text.pipefs_destroy_inode,"ax",%progbits
 2914              		.align	1
 2915              		.syntax unified
 2916              		.thumb
 2917              		.thumb_func
 2919              	pipefs_destroy_inode:
 2920              	.LVL281:
 2921              	.LFB1057:
 417:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(node == NULL) return;
 2922              		.loc 1 417 1 is_stmt 1 view -0
 2923              		.cfi_startproc
 2924              		@ args = 0, pretend = 0, frame = 0
 2925              		@ frame_needed = 0, uses_anonymous_args = 0
 418:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(node->i_private != NULL) {
 2926              		.loc 1 418 5 view .LVU928
 418:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(node->i_private != NULL) {
 2927              		.loc 1 418 7 is_stmt 0 view .LVU929
 2928 0000 80B1     		cbz	r0, .L165
 417:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(node == NULL) return;
 2929              		.loc 1 417 1 view .LVU930
 2930 0002 08B5     		push	{r3, lr}
 2931              	.LCFI37:
 2932              		.cfi_def_cfa_offset 8
 2933              		.cfi_offset 3, -8
 2934              		.cfi_offset 14, -4
 419:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         struct pipefs_inode * pipe_node = node->i_private;
 2935              		.loc 1 419 5 is_stmt 1 view .LVU931
 419:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         struct pipefs_inode * pipe_node = node->i_private;
 2936              		.loc 1 419 12 is_stmt 0 view .LVU932
 2937 0004 D0F88400 		ldr	r0, [r0, #132]
 2938              	.LVL282:
 419:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         struct pipefs_inode * pipe_node = node->i_private;
 2939              		.loc 1 419 7 view .LVU933
 2940 0008 58B1     		cbz	r0, .L162
 2941              	.LBB336:
 420:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         list_del(&pipe_node->list_node);
 2942              		.loc 1 420 9 is_stmt 1 view .LVU934
 2943              	.LVL283:
 421:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(pipe_node);        
 2944              		.loc 1 421 9 view .LVU935
 2945              	.LBB337:
 2946              	.LBI337:
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2947              		.loc 7 227 20 view .LVU936
 2948              	.LBB338:
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->next = LIST_POISON1;
 2949              		.loc 7 229 2 view .LVU937
 2950              	.LBB339:
 2951              	.LBI339:
 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2952              		.loc 7 213 20 view .LVU938
ARM GAS  /tmp/ccQOnTG0.s 			page 158


 2953              	.LBB340:
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 		return;
 2954              		.loc 7 215 2 view .LVU939
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2955              		.loc 7 218 2 view .LVU940
 2956 000a 8369     		ldr	r3, [r0, #24]
 2957 000c 4269     		ldr	r2, [r0, #20]
 2958              	.LVL284:
 2959              	.LBB341:
 2960              	.LBI341:
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** {
 2961              		.loc 7 193 20 view .LVU941
 2962              	.LBB342:
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 2963              		.loc 7 195 2 view .LVU942
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	WRITE_ONCE(prev->next, next);
 2964              		.loc 7 195 13 is_stmt 0 view .LVU943
 2965 000e 5360     		str	r3, [r2, #4]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2966              		.loc 7 196 2 is_stmt 1 view .LVU944
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2967              		.loc 7 196 2 view .LVU945
 2968              	.LBB343:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2969              		.loc 7 196 2 view .LVU946
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2970              		.loc 7 196 2 view .LVU947
 2971              	.LBE343:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2972              		.loc 7 196 2 discriminator 2 view .LVU948
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2973              		.loc 7 196 2 discriminator 2 view .LVU949
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2974              		.loc 7 196 2 discriminator 2 view .LVU950
 2975 0010 1A60     		str	r2, [r3]
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2976              		.loc 7 196 2 discriminator 2 view .LVU951
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2977              		.loc 7 196 2 discriminator 2 view .LVU952
 2978              	.LVL285:
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2979              		.loc 7 196 2 is_stmt 0 discriminator 2 view .LVU953
 2980              	.LBE342:
 2981              	.LBE341:
 2982              	.LBE340:
 2983              	.LBE339:
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 2984              		.loc 7 230 2 is_stmt 1 view .LVU954
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** 	entry->prev = LIST_POISON2;
 2985              		.loc 7 230 14 is_stmt 0 view .LVU955
 2986 0012 4FF48073 		mov	r3, #256
 2987 0016 4361     		str	r3, [r0, #20]
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2988              		.loc 7 231 2 is_stmt 1 view .LVU956
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2989              		.loc 7 231 14 is_stmt 0 view .LVU957
 2990 0018 4FF49173 		mov	r3, #290
ARM GAS  /tmp/ccQOnTG0.s 			page 159


 2991 001c 8361     		str	r3, [r0, #24]
 2992              	.LVL286:
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/list.h **** }
 2993              		.loc 7 231 14 view .LVU958
 2994              	.LBE338:
 2995              	.LBE337:
 422:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 2996              		.loc 1 422 9 is_stmt 1 view .LVU959
 2997              	.LBB344:
 2998              	.LBI344:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 2999              		.loc 4 383 20 view .LVU960
 3000              	.LBB345:
 3001              		.loc 4 384 2 view .LVU961
 3002 001e FFF7FEFF 		bl	__sfree__
 3003              	.LVL287:
 3004              	.L162:
 3005              		.loc 4 384 2 is_stmt 0 view .LVU962
 3006              	.LBE345:
 3007              	.LBE344:
 3008              	.LBE336:
 424:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3009              		.loc 1 424 1 view .LVU963
 3010 0022 08BD     		pop	{r3, pc}
 3011              	.LVL288:
 3012              	.L165:
 3013              	.LCFI38:
 3014              		.cfi_def_cfa_offset 0
 3015              		.cfi_restore 3
 3016              		.cfi_restore 14
 424:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3017              		.loc 1 424 1 view .LVU964
 3018 0024 7047     		bx	lr
 3019              		.cfi_endproc
 3020              	.LFE1057:
 3022              		.section	.text.pipefs_alloc_inode,"ax",%progbits
 3023              		.align	1
 3024              		.syntax unified
 3025              		.thumb
 3026              		.thumb_func
 3028              	pipefs_alloc_inode:
 3029              	.LVL289:
 3030              	.LFB1056:
 401:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_superblock *supb = sb->s_fs_info;
 3031              		.loc 1 401 1 is_stmt 1 view -0
 3032              		.cfi_startproc
 3033              		@ args = 0, pretend = 0, frame = 0
 3034              		@ frame_needed = 0, uses_anonymous_args = 0
 401:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_superblock *supb = sb->s_fs_info;
 3035              		.loc 1 401 1 is_stmt 0 view .LVU966
 3036 0000 38B5     		push	{r3, r4, r5, lr}
 3037              	.LCFI39:
 3038              		.cfi_def_cfa_offset 16
 3039              		.cfi_offset 3, -16
 3040              		.cfi_offset 4, -12
 3041              		.cfi_offset 5, -8
 3042              		.cfi_offset 14, -4
ARM GAS  /tmp/ccQOnTG0.s 			page 160


 3043 0002 0446     		mov	r4, r0
 402:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(supb->magic != MAGIC) return NULL;
 3044              		.loc 1 402 5 is_stmt 1 view .LVU967
 402:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(supb->magic != MAGIC) return NULL;
 3045              		.loc 1 402 31 is_stmt 0 view .LVU968
 3046 0004 006B     		ldr	r0, [r0, #48]
 3047              	.LVL290:
 403:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      struct pipefs_inode * inode = pipefs_create_empty_inode(supb,&pipefs_file_fops,10); //Êñá‰ª∂Á≥
 3048              		.loc 1 403 5 is_stmt 1 view .LVU969
 403:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      struct pipefs_inode * inode = pipefs_create_empty_inode(supb,&pipefs_file_fops,10); //Êñá‰ª∂Á≥
 3049              		.loc 1 403 12 is_stmt 0 view .LVU970
 3050 0006 0268     		ldr	r2, [r0]
 403:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      struct pipefs_inode * inode = pipefs_create_empty_inode(supb,&pipefs_file_fops,10); //Êñá‰ª∂Á≥
 3051              		.loc 1 403 7 view .LVU971
 3052 0008 0B4B     		ldr	r3, .L173
 3053 000a 9A42     		cmp	r2, r3
 3054 000c 0ED1     		bne	.L170
 404:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      if(inode == NULL) return NULL;
 3055              		.loc 1 404 6 is_stmt 1 view .LVU972
 404:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      if(inode == NULL) return NULL;
 3056              		.loc 1 404 36 is_stmt 0 view .LVU973
 3057 000e 0A22     		movs	r2, #10
 3058 0010 0A49     		ldr	r1, .L173+4
 3059 0012 FFF7FEFF 		bl	pipefs_create_empty_inode
 3060              	.LVL291:
 405:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      struct inode *out_inode = pipefs_get_inode(inode,sb);
 3061              		.loc 1 405 6 is_stmt 1 view .LVU974
 405:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      struct inode *out_inode = pipefs_get_inode(inode,sb);
 3062              		.loc 1 405 8 is_stmt 0 view .LVU975
 3063 0016 0546     		mov	r5, r0
 3064 0018 58B1     		cbz	r0, .L171
 406:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      if(out_inode == NULL){
 3065              		.loc 1 406 6 is_stmt 1 view .LVU976
 406:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      if(out_inode == NULL){
 3066              		.loc 1 406 32 is_stmt 0 view .LVU977
 3067 001a 2146     		mov	r1, r4
 3068 001c FFF7FEFF 		bl	pipefs_get_inode
 3069              	.LVL292:
 407:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(inode);
 3070              		.loc 1 407 6 is_stmt 1 view .LVU978
 407:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(inode);
 3071              		.loc 1 407 8 is_stmt 0 view .LVU979
 3072 0020 0446     		mov	r4, r0
 3073              	.LVL293:
 407:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(inode);
 3074              		.loc 1 407 8 view .LVU980
 3075 0022 20B9     		cbnz	r0, .L168
 408:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return NULL;
 3076              		.loc 1 408 9 is_stmt 1 view .LVU981
 3077              	.LVL294:
 3078              	.LBB346:
 3079              	.LBI346:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 3080              		.loc 4 383 20 view .LVU982
 3081              	.LBB347:
 3082              		.loc 4 384 2 view .LVU983
 3083 0024 2846     		mov	r0, r5
ARM GAS  /tmp/ccQOnTG0.s 			page 161


 3084              	.LVL295:
 3085              		.loc 4 384 2 is_stmt 0 view .LVU984
 3086 0026 FFF7FEFF 		bl	__sfree__
 3087              	.LVL296:
 3088              		.loc 4 384 2 view .LVU985
 3089              	.LBE347:
 3090              	.LBE346:
 409:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      }
 3091              		.loc 1 409 9 is_stmt 1 view .LVU986
 409:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      }
 3092              		.loc 1 409 16 is_stmt 0 view .LVU987
 3093 002a 00E0     		b	.L168
 3094              	.LVL297:
 3095              	.L170:
 403:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      struct pipefs_inode * inode = pipefs_create_empty_inode(supb,&pipefs_file_fops,10); //Êñá‰ª∂Á≥
 3096              		.loc 1 403 37 discriminator 1 view .LVU988
 3097 002c 0024     		movs	r4, #0
 3098              	.LVL298:
 3099              	.L168:
 412:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3100              		.loc 1 412 1 view .LVU989
 3101 002e 2046     		mov	r0, r4
 3102 0030 38BD     		pop	{r3, r4, r5, pc}
 3103              	.LVL299:
 3104              	.L171:
 405:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      struct inode *out_inode = pipefs_get_inode(inode,sb);
 3105              		.loc 1 405 31 discriminator 1 view .LVU990
 3106 0032 0446     		mov	r4, r0
 3107              	.LVL300:
 405:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****      struct inode *out_inode = pipefs_get_inode(inode,sb);
 3108              		.loc 1 405 31 discriminator 1 view .LVU991
 3109 0034 FBE7     		b	.L168
 3110              	.L174:
 3111 0036 00BF     		.align	2
 3112              	.L173:
 3113 0038 4E61BC00 		.word	12345678
 3114 003c 00000000 		.word	pipefs_file_fops
 3115              		.cfi_endproc
 3116              	.LFE1056:
 3118              		.section	.text.pipefs_superblock_destory,"ax",%progbits
 3119              		.align	1
 3120              		.syntax unified
 3121              		.thumb
 3122              		.thumb_func
 3124              	pipefs_superblock_destory:
 3125              	.LVL301:
 3126              	.LFB1050:
 251:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(sb!= NULL) {
 3127              		.loc 1 251 68 is_stmt 1 view -0
 3128              		.cfi_startproc
 3129              		@ args = 0, pretend = 0, frame = 0
 3130              		@ frame_needed = 0, uses_anonymous_args = 0
 252:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         struct pipefs_inode * root_inode = sb->rootinode;
 3131              		.loc 1 252 5 view .LVU993
 252:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         struct pipefs_inode * root_inode = sb->rootinode;
 3132              		.loc 1 252 7 is_stmt 0 view .LVU994
 3133 0000 50B1     		cbz	r0, .L179
ARM GAS  /tmp/ccQOnTG0.s 			page 162


 251:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(sb!= NULL) {
 3134              		.loc 1 251 68 view .LVU995
 3135 0002 10B5     		push	{r4, lr}
 3136              	.LCFI40:
 3137              		.cfi_def_cfa_offset 8
 3138              		.cfi_offset 4, -8
 3139              		.cfi_offset 14, -4
 3140 0004 0446     		mov	r4, r0
 3141              	.LBB348:
 253:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(!root_inode){
 3142              		.loc 1 253 9 is_stmt 1 view .LVU996
 253:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         if(!root_inode){
 3143              		.loc 1 253 31 is_stmt 0 view .LVU997
 3144 0006 4069     		ldr	r0, [r0, #20]
 3145              	.LVL302:
 254:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             kfree(root_inode);
 3146              		.loc 1 254 9 is_stmt 1 view .LVU998
 254:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             kfree(root_inode);
 3147              		.loc 1 254 11 is_stmt 0 view .LVU999
 3148 0008 18B1     		cbz	r0, .L182
 3149              	.LVL303:
 3150              	.L177:
 257:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3151              		.loc 1 257 9 is_stmt 1 view .LVU1000
 3152              	.LBB349:
 3153              	.LBI349:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 3154              		.loc 4 383 20 view .LVU1001
 3155              	.LBB350:
 3156              		.loc 4 384 2 view .LVU1002
 3157 000a 2046     		mov	r0, r4
 3158 000c FFF7FEFF 		bl	__sfree__
 3159              	.LVL304:
 3160              		.loc 4 384 2 is_stmt 0 view .LVU1003
 3161              	.LBE350:
 3162              	.LBE349:
 3163              	.LBE348:
 259:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3164              		.loc 1 259 1 view .LVU1004
 3165 0010 10BD     		pop	{r4, pc}
 3166              	.LVL305:
 3167              	.L182:
 3168              	.LBB353:
 255:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 3169              		.loc 1 255 13 is_stmt 1 view .LVU1005
 3170              	.LBB351:
 3171              	.LBI351:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 3172              		.loc 4 383 20 view .LVU1006
 3173              	.LBB352:
 3174              		.loc 4 384 2 view .LVU1007
 3175 0012 FFF7FEFF 		bl	__sfree__
 3176              	.LVL306:
 385:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3177              		.loc 4 385 1 is_stmt 0 view .LVU1008
 3178 0016 F8E7     		b	.L177
 3179              	.LVL307:
ARM GAS  /tmp/ccQOnTG0.s 			page 163


 3180              	.L179:
 3181              	.LCFI41:
 3182              		.cfi_def_cfa_offset 0
 3183              		.cfi_restore 4
 3184              		.cfi_restore 14
 3185              		.loc 4 385 1 view .LVU1009
 3186 0018 7047     		bx	lr
 3187              	.LBE352:
 3188              	.LBE351:
 3189              	.LBE353:
 3190              		.cfi_endproc
 3191              	.LFE1050:
 3193              		.section	.rodata.pipefs_mount.str1.4,"aMS",%progbits,1
 3194              		.align	2
 3195              	.LC1:
 3196 0000 726F6F74 		.ascii	"root\000"
 3196      00
 3197              		.section	.text.pipefs_mount,"ax",%progbits
 3198              		.align	1
 3199              		.syntax unified
 3200              		.thumb
 3201              		.thumb_func
 3203              	pipefs_mount:
 3204              	.LVL308:
 3205              	.LFB1052:
 314:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_superblock *fs_superblock= pipefs_superblock_create();
 3206              		.loc 1 314 1 is_stmt 1 view -0
 3207              		.cfi_startproc
 3208              		@ args = 0, pretend = 0, frame = 0
 3209              		@ frame_needed = 0, uses_anonymous_args = 0
 314:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct pipefs_superblock *fs_superblock= pipefs_superblock_create();
 3210              		.loc 1 314 1 is_stmt 0 view .LVU1011
 3211 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3212              	.LCFI42:
 3213              		.cfi_def_cfa_offset 24
 3214              		.cfi_offset 3, -24
 3215              		.cfi_offset 4, -20
 3216              		.cfi_offset 5, -16
 3217              		.cfi_offset 6, -12
 3218              		.cfi_offset 7, -8
 3219              		.cfi_offset 14, -4
 315:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (fs_superblock == NULL){
 3220              		.loc 1 315 5 is_stmt 1 view .LVU1012
 315:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if (fs_superblock == NULL){
 3221              		.loc 1 315 46 is_stmt 0 view .LVU1013
 3222 0002 FFF7FEFF 		bl	pipefs_superblock_create
 3223              	.LVL309:
 316:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return ERR_PTR(-ENOMEM);        
 3224              		.loc 1 316 5 is_stmt 1 view .LVU1014
 316:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return ERR_PTR(-ENOMEM);        
 3225              		.loc 1 316 8 is_stmt 0 view .LVU1015
 3226 0006 0028     		cmp	r0, #0
 3227 0008 49D0     		beq	.L189
 3228 000a 0646     		mov	r6, r0
 319:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(root == NULL){
 3229              		.loc 1 319 5 is_stmt 1 view .LVU1016
 319:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(root == NULL){
ARM GAS  /tmp/ccQOnTG0.s 			page 164


 3230              		.loc 1 319 28 is_stmt 0 view .LVU1017
 3231 000c 2549     		ldr	r1, .L195
 3232 000e 0020     		movs	r0, #0
 3233              	.LVL310:
 319:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(root == NULL){
 3234              		.loc 1 319 28 view .LVU1018
 3235 0010 FFF7FEFF 		bl	__d_alloc
 3236              	.LVL311:
 320:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         pipefs_superblock_destory(fs_superblock);
 3237              		.loc 1 320 5 is_stmt 1 view .LVU1019
 320:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         pipefs_superblock_destory(fs_superblock);
 3238              		.loc 1 320 7 is_stmt 0 view .LVU1020
 3239 0014 0446     		mov	r4, r0
 3240 0016 D8B1     		cbz	r0, .L191
 326:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(dentry == NULL){
 3241              		.loc 1 326 5 is_stmt 1 view .LVU1021
 3242              	.LVL312:
 3243              	.LBB354:
 3244              	.LBI354:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 3245              		.loc 4 379 21 view .LVU1022
 3246              	.LBB355:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3247              		.loc 4 380 2 view .LVU1023
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3248              		.loc 4 380 9 is_stmt 0 view .LVU1024
 3249 0018 4FF44C61 		mov	r1, #3264
 3250 001c 1420     		movs	r0, #20
 3251              	.LVL313:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3252              		.loc 4 380 9 view .LVU1025
 3253 001e FFF7FEFF 		bl	__smalloc__
 3254              	.LVL314:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3255              		.loc 4 380 9 view .LVU1026
 3256              	.LBE355:
 3257              	.LBE354:
 327:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****        
 3258              		.loc 1 327 5 is_stmt 1 view .LVU1027
 327:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****        
 3259              		.loc 1 327 7 is_stmt 0 view .LVU1028
 3260 0022 0546     		mov	r5, r0
 3261 0024 D0B1     		cbz	r0, .L192
 332:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->target_inode = fs_superblock->rootinode;
 3262              		.loc 1 332 5 is_stmt 1 view .LVU1029
 332:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->target_inode = fs_superblock->rootinode;
 3263              		.loc 1 332 18 is_stmt 0 view .LVU1030
 3264 0026 0021     		movs	r1, #0
 3265 0028 4160     		str	r1, [r0, #4]
 333:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->magic =MAGIC;
 3266              		.loc 1 333 5 is_stmt 1 view .LVU1031
 333:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->magic =MAGIC;
 3267              		.loc 1 333 41 is_stmt 0 view .LVU1032
 3268 002a 7369     		ldr	r3, [r6, #20]
 333:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     dentry->magic =MAGIC;
 3269              		.loc 1 333 26 view .LVU1033
 3270 002c 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/ccQOnTG0.s 			page 165


 334:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     root->d_fsdata = dentry;
 3271              		.loc 1 334 5 is_stmt 1 view .LVU1034
 334:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     root->d_fsdata = dentry;
 3272              		.loc 1 334 19 is_stmt 0 view .LVU1035
 3273 002e 1E4B     		ldr	r3, .L195+4
 3274 0030 0360     		str	r3, [r0]
 335:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct inode * root_inode = pipefs_get_inode(dentry->target_inode,NULL);
 3275              		.loc 1 335 5 is_stmt 1 view .LVU1036
 335:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     struct inode * root_inode = pipefs_get_inode(dentry->target_inode,NULL);
 3276              		.loc 1 335 20 is_stmt 0 view .LVU1037
 3277 0032 6065     		str	r0, [r4, #84]
 336:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(root_inode == NULL){
 3278              		.loc 1 336 5 is_stmt 1 view .LVU1038
 336:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(root_inode == NULL){
 3279              		.loc 1 336 33 is_stmt 0 view .LVU1039
 3280 0034 8068     		ldr	r0, [r0, #8]
 3281              	.LVL315:
 336:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(root_inode == NULL){
 3282              		.loc 1 336 33 view .LVU1040
 3283 0036 FFF7FEFF 		bl	pipefs_get_inode
 3284              	.LVL316:
 337:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(dentry);
 3285              		.loc 1 337 5 is_stmt 1 view .LVU1041
 337:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(dentry);
 3286              		.loc 1 337 7 is_stmt 0 view .LVU1042
 3287 003a 0746     		mov	r7, r0
 3288 003c A0B1     		cbz	r0, .L193
 343:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3289              		.loc 1 343 5 is_stmt 1 view .LVU1043
 343:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3290              		.loc 1 343 19 is_stmt 0 view .LVU1044
 3291 003e A064     		str	r0, [r4, #72]
 345:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(sb == NULL){
 3292              		.loc 1 345 5 is_stmt 1 view .LVU1045
 345:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(sb == NULL){
 3293              		.loc 1 345 29 is_stmt 0 view .LVU1046
 3294 0040 3046     		mov	r0, r6
 3295              	.LVL317:
 345:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     if(sb == NULL){
 3296              		.loc 1 345 29 view .LVU1047
 3297 0042 FFF7FEFF 		bl	pipefs_get_vfs_superblock
 3298              	.LVL318:
 346:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(root);
 3299              		.loc 1 346 5 is_stmt 1 view .LVU1048
 346:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(root);
 3300              		.loc 1 346 7 is_stmt 0 view .LVU1049
 3301 0046 D8B1     		cbz	r0, .L194
 353:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     root->d_sb = sb;
 3302              		.loc 1 353 5 is_stmt 1 view .LVU1050
 353:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     root->d_sb = sb;
 3303              		.loc 1 353 16 is_stmt 0 view .LVU1051
 3304 0048 8461     		str	r4, [r0, #24]
 354:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return root;
 3305              		.loc 1 354 5 is_stmt 1 view .LVU1052
 354:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return root;
 3306              		.loc 1 354 16 is_stmt 0 view .LVU1053
 3307 004a 2065     		str	r0, [r4, #80]
ARM GAS  /tmp/ccQOnTG0.s 			page 166


 355:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 3308              		.loc 1 355 5 is_stmt 1 view .LVU1054
 3309              	.LVL319:
 3310              	.L183:
 356:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3311              		.loc 1 356 1 is_stmt 0 view .LVU1055
 3312 004c 2046     		mov	r0, r4
 3313 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3314              	.LVL320:
 3315              	.L191:
 321:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return ERR_PTR(-ENOMEM);   
 3316              		.loc 1 321 9 is_stmt 1 view .LVU1056
 3317 0050 3046     		mov	r0, r6
 3318              	.LVL321:
 321:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return ERR_PTR(-ENOMEM);   
 3319              		.loc 1 321 9 is_stmt 0 view .LVU1057
 3320 0052 FFF7FEFF 		bl	pipefs_superblock_destory
 3321              	.LVL322:
 322:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3322              		.loc 1 322 9 is_stmt 1 view .LVU1058
 322:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3323              		.loc 1 322 16 is_stmt 0 view .LVU1059
 3324 0056 6FF00B04 		mvn	r4, #11
 3325              	.LVL323:
 322:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3326              		.loc 1 322 16 view .LVU1060
 3327 005a F7E7     		b	.L183
 3328              	.LVL324:
 3329              	.L192:
 329:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return ERR_PTR(-ENOMEM);        
 3330              		.loc 1 329 9 is_stmt 1 view .LVU1061
 3331              	.LBB356:
 3332              	.LBI356:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 3333              		.loc 4 383 20 view .LVU1062
 3334              	.LBB357:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3335              		.loc 4 384 2 view .LVU1063
 3336 005c 2046     		mov	r0, r4
 3337              	.LVL325:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3338              		.loc 4 384 2 is_stmt 0 view .LVU1064
 3339 005e FFF7FEFF 		bl	__sfree__
 3340              	.LVL326:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3341              		.loc 4 384 2 view .LVU1065
 3342              	.LBE357:
 3343              	.LBE356:
 330:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3344              		.loc 1 330 9 is_stmt 1 view .LVU1066
 330:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3345              		.loc 1 330 16 is_stmt 0 view .LVU1067
 3346 0062 6FF00B04 		mvn	r4, #11
 3347              	.LVL327:
 330:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3348              		.loc 1 330 16 view .LVU1068
 3349 0066 F1E7     		b	.L183
ARM GAS  /tmp/ccQOnTG0.s 			page 167


 3350              	.LVL328:
 3351              	.L193:
 338:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         pipefs_superblock_destory(fs_superblock);
 3352              		.loc 1 338 9 is_stmt 1 view .LVU1069
 3353              	.LBB358:
 3354              	.LBI358:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 3355              		.loc 4 383 20 view .LVU1070
 3356              	.LBB359:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3357              		.loc 4 384 2 view .LVU1071
 3358 0068 2846     		mov	r0, r5
 3359              	.LVL329:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3360              		.loc 4 384 2 is_stmt 0 view .LVU1072
 3361 006a FFF7FEFF 		bl	__sfree__
 3362              	.LVL330:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3363              		.loc 4 384 2 view .LVU1073
 3364              	.LBE359:
 3365              	.LBE358:
 339:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(root);
 3366              		.loc 1 339 9 is_stmt 1 view .LVU1074
 3367 006e 3046     		mov	r0, r6
 3368 0070 FFF7FEFF 		bl	pipefs_superblock_destory
 3369              	.LVL331:
 340:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return ERR_PTR(-ENOMEM);        
 3370              		.loc 1 340 9 view .LVU1075
 3371              	.LBB360:
 3372              	.LBI360:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 3373              		.loc 4 383 20 view .LVU1076
 3374              	.LBB361:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3375              		.loc 4 384 2 view .LVU1077
 3376 0074 2046     		mov	r0, r4
 3377 0076 FFF7FEFF 		bl	__sfree__
 3378              	.LVL332:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3379              		.loc 4 384 2 is_stmt 0 view .LVU1078
 3380              	.LBE361:
 3381              	.LBE360:
 341:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     } 
 3382              		.loc 1 341 9 is_stmt 1 view .LVU1079
 341:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     } 
 3383              		.loc 1 341 16 is_stmt 0 view .LVU1080
 3384 007a 6FF00B04 		mvn	r4, #11
 3385              	.LVL333:
 341:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     } 
 3386              		.loc 1 341 16 view .LVU1081
 3387 007e E5E7     		b	.L183
 3388              	.LVL334:
 3389              	.L194:
 347:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         kfree(dentry);
 3390              		.loc 1 347 9 is_stmt 1 view .LVU1082
 3391              	.LBB362:
 3392              	.LBI362:
ARM GAS  /tmp/ccQOnTG0.s 			page 168


 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 3393              		.loc 4 383 20 view .LVU1083
 3394              	.LBB363:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3395              		.loc 4 384 2 view .LVU1084
 3396 0080 2046     		mov	r0, r4
 3397              	.LVL335:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3398              		.loc 4 384 2 is_stmt 0 view .LVU1085
 3399 0082 FFF7FEFF 		bl	__sfree__
 3400              	.LVL336:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3401              		.loc 4 384 2 view .LVU1086
 3402              	.LBE363:
 3403              	.LBE362:
 348:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         inode_put(root_inode);
 3404              		.loc 1 348 9 is_stmt 1 view .LVU1087
 3405              	.LBB364:
 3406              	.LBI364:
 383:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__((void*)ptr);
 3407              		.loc 4 383 20 view .LVU1088
 3408              	.LBB365:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3409              		.loc 4 384 2 view .LVU1089
 3410 0086 2846     		mov	r0, r5
 3411 0088 FFF7FEFF 		bl	__sfree__
 3412              	.LVL337:
 384:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 3413              		.loc 4 384 2 is_stmt 0 view .LVU1090
 3414              	.LBE365:
 3415              	.LBE364:
 349:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         pipefs_superblock_destory(fs_superblock);
 3416              		.loc 1 349 9 is_stmt 1 view .LVU1091
 3417 008c 3846     		mov	r0, r7
 3418 008e FFF7FEFF 		bl	inode_put
 3419              	.LVL338:
 350:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return ERR_PTR(-ENOMEM);       
 3420              		.loc 1 350 9 view .LVU1092
 3421 0092 3046     		mov	r0, r6
 3422 0094 FFF7FEFF 		bl	pipefs_superblock_destory
 3423              	.LVL339:
 351:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3424              		.loc 1 351 9 view .LVU1093
 351:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3425              		.loc 1 351 16 is_stmt 0 view .LVU1094
 3426 0098 6FF00B04 		mvn	r4, #11
 3427              	.LVL340:
 351:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3428              		.loc 1 351 16 view .LVU1095
 3429 009c D6E7     		b	.L183
 3430              	.LVL341:
 3431              	.L189:
 317:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3432              		.loc 1 317 16 view .LVU1096
 3433 009e 6FF00B04 		mvn	r4, #11
 3434 00a2 D3E7     		b	.L183
 3435              	.L196:
ARM GAS  /tmp/ccQOnTG0.s 			page 169


 3436              		.align	2
 3437              	.L195:
 3438 00a4 00000000 		.word	.LC1
 3439 00a8 4E61BC00 		.word	12345678
 3440              		.cfi_endproc
 3441              	.LFE1052:
 3443              		.section	.text.pipe_buffer_read,"ax",%progbits
 3444              		.align	1
 3445              		.global	pipe_buffer_read
 3446              		.syntax unified
 3447              		.thumb
 3448              		.thumb_func
 3450              	pipe_buffer_read:
 3451              	.LVL342:
 3452              	.LFB1035:
  31:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock(&buf->lock);
 3453              		.loc 1 31 1 is_stmt 1 view -0
 3454              		.cfi_startproc
 3455              		@ args = 0, pretend = 0, frame = 0
 3456              		@ frame_needed = 0, uses_anonymous_args = 0
  31:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock(&buf->lock);
 3457              		.loc 1 31 1 is_stmt 0 view .LVU1098
 3458 0000 70B5     		push	{r4, r5, r6, lr}
 3459              	.LCFI43:
 3460              		.cfi_def_cfa_offset 16
 3461              		.cfi_offset 4, -16
 3462              		.cfi_offset 5, -12
 3463              		.cfi_offset 6, -8
 3464              		.cfi_offset 14, -4
 3465 0002 0446     		mov	r4, r0
 3466 0004 0D46     		mov	r5, r1
  32:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3467              		.loc 1 32 5 is_stmt 1 view .LVU1099
 3468 0006 00F20C46 		addw	r6, r0, #1036
 3469 000a 3046     		mov	r0, r6
 3470              	.LVL343:
  32:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3471              		.loc 1 32 5 is_stmt 0 view .LVU1100
 3472 000c FFF7FEFF 		bl	spin_lock
 3473              	.LVL344:
  34:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
 3474              		.loc 1 34 5 is_stmt 1 view .LVU1101
  34:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
 3475              		.loc 1 34 12 is_stmt 0 view .LVU1102
 3476 0010 D4F80424 		ldr	r2, [r4, #1028]
  34:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
 3477              		.loc 1 34 25 view .LVU1103
 3478 0014 D4F80834 		ldr	r3, [r4, #1032]
  34:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
 3479              		.loc 1 34 8 view .LVU1104
 3480 0018 9A42     		cmp	r2, r3
 3481 001a 11D0     		beq	.L201
  39:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     buf->tail = (buf->tail + 1) % buf->size;
 3482              		.loc 1 39 5 is_stmt 1 view .LVU1105
  39:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     buf->tail = (buf->tail + 1) % buf->size;
 3483              		.loc 1 39 26 is_stmt 0 view .LVU1106
 3484 001c E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccQOnTG0.s 			page 170


  39:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     buf->tail = (buf->tail + 1) % buf->size;
 3485              		.loc 1 39 13 view .LVU1107
 3486 001e 2B70     		strb	r3, [r5]
  40:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3487              		.loc 1 40 5 is_stmt 1 view .LVU1108
  40:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3488              		.loc 1 40 21 is_stmt 0 view .LVU1109
 3489 0020 D4F80834 		ldr	r3, [r4, #1032]
  40:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3490              		.loc 1 40 28 view .LVU1110
 3491 0024 0133     		adds	r3, r3, #1
  40:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3492              		.loc 1 40 38 view .LVU1111
 3493 0026 D4F80024 		ldr	r2, [r4, #1024]
  40:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3494              		.loc 1 40 33 view .LVU1112
 3495 002a B3FBF2F1 		udiv	r1, r3, r2
 3496 002e 02FB1133 		mls	r3, r2, r1, r3
  40:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3497              		.loc 1 40 15 view .LVU1113
 3498 0032 C4F80834 		str	r3, [r4, #1032]
  42:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 3499              		.loc 1 42 5 is_stmt 1 view .LVU1114
 3500 0036 3046     		mov	r0, r6
 3501 0038 FFF7FEFF 		bl	spin_unlock
 3502              	.LVL345:
  43:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 3503              		.loc 1 43 5 view .LVU1115
  43:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 3504              		.loc 1 43 12 is_stmt 0 view .LVU1116
 3505 003c 0020     		movs	r0, #0
 3506              	.L197:
  44:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3507              		.loc 1 44 1 view .LVU1117
 3508 003e 70BD     		pop	{r4, r5, r6, pc}
 3509              	.LVL346:
 3510              	.L201:
  35:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1; // Buffer empty
 3511              		.loc 1 35 9 is_stmt 1 view .LVU1118
 3512 0040 3046     		mov	r0, r6
 3513 0042 FFF7FEFF 		bl	spin_unlock
 3514              	.LVL347:
  36:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3515              		.loc 1 36 9 view .LVU1119
  36:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3516              		.loc 1 36 16 is_stmt 0 view .LVU1120
 3517 0046 4FF0FF30 		mov	r0, #-1
 3518 004a F8E7     		b	.L197
 3519              		.cfi_endproc
 3520              	.LFE1035:
 3522              		.section	.text.pipefs_read,"ax",%progbits
 3523              		.align	1
 3524              		.syntax unified
 3525              		.thumb
 3526              		.thumb_func
 3528              	pipefs_read:
 3529              	.LVL348:
ARM GAS  /tmp/ccQOnTG0.s 			page 171


 3530              	.LFB1039:
  81:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     for(int i = 0;i < size;i++)
 3531              		.loc 1 81 1 is_stmt 1 view -0
 3532              		.cfi_startproc
 3533              		@ args = 0, pretend = 0, frame = 0
 3534              		@ frame_needed = 0, uses_anonymous_args = 0
  81:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     for(int i = 0;i < size;i++)
 3535              		.loc 1 81 1 is_stmt 0 view .LVU1122
 3536 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3537              	.LCFI44:
 3538              		.cfi_def_cfa_offset 24
 3539              		.cfi_offset 4, -24
 3540              		.cfi_offset 5, -20
 3541              		.cfi_offset 6, -16
 3542              		.cfi_offset 7, -12
 3543              		.cfi_offset 8, -8
 3544              		.cfi_offset 14, -4
 3545 0004 0646     		mov	r6, r0
 3546 0006 0D46     		mov	r5, r1
 3547 0008 9046     		mov	r8, r2
  82:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 3548              		.loc 1 82 5 is_stmt 1 view .LVU1123
 3549              	.LBB366:
  82:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 3550              		.loc 1 82 9 view .LVU1124
 3551              	.LVL349:
  82:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 3552              		.loc 1 82 13 is_stmt 0 view .LVU1125
 3553 000a 0027     		movs	r7, #0
  82:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 3554              		.loc 1 82 5 view .LVU1126
 3555 000c 0CE0     		b	.L203
 3556              	.LVL350:
 3557              	.L204:
  85:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 3558              		.loc 1 85 13 is_stmt 1 view .LVU1127
 3559 000e 0120     		movs	r0, #1
 3560 0010 FFF7FEFF 		bl	__delay
 3561              	.LVL351:
 3562              	.L205:
  84:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             __delay(1);
 3563              		.loc 1 84 99 view .LVU1128
  84:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             __delay(1);
 3564              		.loc 1 84 61 is_stmt 0 view .LVU1129
 3565 0014 F36A     		ldr	r3, [r6, #44]
  84:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             __delay(1);
 3566              		.loc 1 84 70 view .LVU1130
 3567 0016 D3F88430 		ldr	r3, [r3, #132]
  84:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             __delay(1);
 3568              		.loc 1 84 16 view .LVU1131
 3569 001a 2919     		adds	r1, r5, r4
 3570 001c 986B     		ldr	r0, [r3, #56]
 3571 001e FFF7FEFF 		bl	pipe_buffer_read
 3572              	.LVL352:
  84:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             __delay(1);
 3573              		.loc 1 84 99 discriminator 1 view .LVU1132
 3574 0022 0028     		cmp	r0, #0
ARM GAS  /tmp/ccQOnTG0.s 			page 172


 3575 0024 F3DB     		blt	.L204
  82:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 3576              		.loc 1 82 29 is_stmt 1 discriminator 2 view .LVU1133
 3577 0026 0137     		adds	r7, r7, #1
 3578              	.LVL353:
 3579              	.L203:
  82:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 3580              		.loc 1 82 21 discriminator 1 view .LVU1134
 3581 0028 3C46     		mov	r4, r7
 3582 002a 4745     		cmp	r7, r8
 3583 002c F2D3     		bcc	.L205
 3584              	.LBE366:
  88:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 3585              		.loc 1 88 5 view .LVU1135
  89:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3586              		.loc 1 89 1 is_stmt 0 view .LVU1136
 3587 002e 0020     		movs	r0, #0
 3588 0030 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  89:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3589              		.loc 1 89 1 view .LVU1137
 3590              		.cfi_endproc
 3591              	.LFE1039:
 3593              		.section	.text.pipe_buffer_write,"ax",%progbits
 3594              		.align	1
 3595              		.global	pipe_buffer_write
 3596              		.syntax unified
 3597              		.thumb
 3598              		.thumb_func
 3600              	pipe_buffer_write:
 3601              	.LVL354:
 3602              	.LFB1036:
  47:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock(&buf->lock);
 3603              		.loc 1 47 1 is_stmt 1 view -0
 3604              		.cfi_startproc
 3605              		@ args = 0, pretend = 0, frame = 0
 3606              		@ frame_needed = 0, uses_anonymous_args = 0
  47:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     spin_lock(&buf->lock);
 3607              		.loc 1 47 1 is_stmt 0 view .LVU1139
 3608 0000 70B5     		push	{r4, r5, r6, lr}
 3609              	.LCFI45:
 3610              		.cfi_def_cfa_offset 16
 3611              		.cfi_offset 4, -16
 3612              		.cfi_offset 5, -12
 3613              		.cfi_offset 6, -8
 3614              		.cfi_offset 14, -4
 3615 0002 0446     		mov	r4, r0
 3616 0004 0D46     		mov	r5, r1
  48:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3617              		.loc 1 48 5 is_stmt 1 view .LVU1140
 3618 0006 00F20C46 		addw	r6, r0, #1036
 3619 000a 3046     		mov	r0, r6
 3620              	.LVL355:
  48:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3621              		.loc 1 48 5 is_stmt 0 view .LVU1141
 3622 000c FFF7FEFF 		bl	spin_lock
 3623              	.LVL356:
  50:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
ARM GAS  /tmp/ccQOnTG0.s 			page 173


 3624              		.loc 1 50 5 is_stmt 1 view .LVU1142
  50:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
 3625              		.loc 1 50 13 is_stmt 0 view .LVU1143
 3626 0010 D4F80414 		ldr	r1, [r4, #1028]
  50:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
 3627              		.loc 1 50 20 view .LVU1144
 3628 0014 4B1C     		adds	r3, r1, #1
  50:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
 3629              		.loc 1 50 30 view .LVU1145
 3630 0016 D4F80024 		ldr	r2, [r4, #1024]
  50:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
 3631              		.loc 1 50 25 view .LVU1146
 3632 001a B3FBF2F0 		udiv	r0, r3, r2
 3633 001e 02FB1033 		mls	r3, r2, r0, r3
  50:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
 3634              		.loc 1 50 43 view .LVU1147
 3635 0022 D4F80824 		ldr	r2, [r4, #1032]
  50:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         spin_unlock(&buf->lock);
 3636              		.loc 1 50 8 view .LVU1148
 3637 0026 9342     		cmp	r3, r2
 3638 0028 07D0     		beq	.L211
  55:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     buf->head = (buf->head + 1) % buf->size;
 3639              		.loc 1 55 5 is_stmt 1 view .LVU1149
  55:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     buf->head = (buf->head + 1) % buf->size;
 3640              		.loc 1 55 28 is_stmt 0 view .LVU1150
 3641 002a 6554     		strb	r5, [r4, r1]
  56:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3642              		.loc 1 56 5 is_stmt 1 view .LVU1151
  56:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3643              		.loc 1 56 15 is_stmt 0 view .LVU1152
 3644 002c C4F80434 		str	r3, [r4, #1028]
  58:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     return 0;
 3645              		.loc 1 58 5 is_stmt 1 view .LVU1153
 3646 0030 3046     		mov	r0, r6
 3647 0032 FFF7FEFF 		bl	spin_unlock
 3648              	.LVL357:
  59:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 3649              		.loc 1 59 5 view .LVU1154
  59:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 3650              		.loc 1 59 12 is_stmt 0 view .LVU1155
 3651 0036 0020     		movs	r0, #0
 3652              	.L207:
  60:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3653              		.loc 1 60 1 view .LVU1156
 3654 0038 70BD     		pop	{r4, r5, r6, pc}
 3655              	.LVL358:
 3656              	.L211:
  51:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         return -1; // Buffer full
 3657              		.loc 1 51 9 is_stmt 1 view .LVU1157
 3658 003a 3046     		mov	r0, r6
 3659 003c FFF7FEFF 		bl	spin_unlock
 3660              	.LVL359:
  52:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3661              		.loc 1 52 9 view .LVU1158
  52:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     }
 3662              		.loc 1 52 16 is_stmt 0 view .LVU1159
 3663 0040 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccQOnTG0.s 			page 174


 3664 0044 F8E7     		b	.L207
 3665              		.cfi_endproc
 3666              	.LFE1036:
 3668              		.section	.text.pipefs_write,"ax",%progbits
 3669              		.align	1
 3670              		.syntax unified
 3671              		.thumb
 3672              		.thumb_func
 3674              	pipefs_write:
 3675              	.LVL360:
 3676              	.LFB1040:
  91:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     int i;
 3677              		.loc 1 91 92 is_stmt 1 view -0
 3678              		.cfi_startproc
 3679              		@ args = 0, pretend = 0, frame = 0
 3680              		@ frame_needed = 0, uses_anonymous_args = 0
  91:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     int i;
 3681              		.loc 1 91 92 is_stmt 0 view .LVU1161
 3682 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3683              	.LCFI46:
 3684              		.cfi_def_cfa_offset 24
 3685              		.cfi_offset 4, -24
 3686              		.cfi_offset 5, -20
 3687              		.cfi_offset 6, -16
 3688              		.cfi_offset 7, -12
 3689              		.cfi_offset 8, -8
 3690              		.cfi_offset 14, -4
 3691 0004 0646     		mov	r6, r0
 3692 0006 0D46     		mov	r5, r1
 3693 0008 9046     		mov	r8, r2
  92:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     for(i = 0;i < size;i++)
 3694              		.loc 1 92 5 is_stmt 1 view .LVU1162
  93:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 3695              		.loc 1 93 5 view .LVU1163
 3696              	.LVL361:
  93:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 3697              		.loc 1 93 11 is_stmt 0 view .LVU1164
 3698 000a 0027     		movs	r7, #0
  93:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 3699              		.loc 1 93 5 view .LVU1165
 3700 000c 0CE0     		b	.L213
 3701              	.LVL362:
 3702              	.L214:
  96:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****         }
 3703              		.loc 1 96 13 is_stmt 1 view .LVU1166
 3704 000e 0120     		movs	r0, #1
 3705 0010 FFF7FEFF 		bl	__delay
 3706              	.LVL363:
 3707              	.L215:
  95:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             __delay(1);
 3708              		.loc 1 95 99 view .LVU1167
  95:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             __delay(1);
 3709              		.loc 1 95 62 is_stmt 0 view .LVU1168
 3710 0014 F36A     		ldr	r3, [r6, #44]
  95:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             __delay(1);
 3711              		.loc 1 95 71 view .LVU1169
 3712 0016 D3F88430 		ldr	r3, [r3, #132]
ARM GAS  /tmp/ccQOnTG0.s 			page 175


  95:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             __delay(1);
 3713              		.loc 1 95 16 view .LVU1170
 3714 001a 295D     		ldrb	r1, [r5, r4]	@ zero_extendqisi2
 3715 001c 986B     		ldr	r0, [r3, #56]
 3716 001e FFF7FEFF 		bl	pipe_buffer_write
 3717              	.LVL364:
  95:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****             __delay(1);
 3718              		.loc 1 95 99 discriminator 1 view .LVU1171
 3719 0022 0028     		cmp	r0, #0
 3720 0024 F3DB     		blt	.L214
  93:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 3721              		.loc 1 93 25 is_stmt 1 discriminator 2 view .LVU1172
 3722 0026 0137     		adds	r7, r7, #1
 3723              	.LVL365:
 3724              	.L213:
  93:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c ****     {
 3725              		.loc 1 93 17 discriminator 1 view .LVU1173
 3726 0028 3C46     		mov	r4, r7
 3727 002a 4745     		cmp	r7, r8
 3728 002c F2D3     		bcc	.L215
  99:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** }
 3729              		.loc 1 99 5 view .LVU1174
 100:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3730              		.loc 1 100 1 is_stmt 0 view .LVU1175
 3731 002e 0020     		movs	r0, #0
 3732 0030 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 100:/mnt/c/Users/31740/Desktop/newcore/fs/pipefs/pipefs.c **** 
 3733              		.loc 1 100 1 view .LVU1176
 3734              		.cfi_endproc
 3735              	.LFE1040:
 3737              		.section	.fsinitcall,"aw"
 3738              		.align	2
 3741              	_initcall_pipefs_ops_init:
 3742 0000 00000000 		.word	pipefs_ops_init
 3743              		.section	.rodata.str1.4,"aMS",%progbits,1
 3744              		.align	2
 3745              	.LC2:
 3746 0000 70697065 		.ascii	"pipefs\000"
 3746      667300
 3747              		.section	.data.fs_type,"aw"
 3748              		.align	2
 3751              	fs_type:
 3752 0000 00000000 		.word	.LC2
 3753 0004 00000000 		.word	0
 3754 0008 00000000 		.word	0
 3755 000c 00000000 		.space	4
 3756 0010 00000000 		.word	pipefs_mount
 3757 0014 00000000 		.word	pipefs_kill_sb
 3758 0018 00000000 		.word	0
 3759 001c 00000000 		.space	8
 3759      00000000 
 3760              		.section	.data.pipefs_inode_operation,"aw"
 3761              		.align	2
 3764              	pipefs_inode_operation:
 3765 0000 00000000 		.word	pipefs_vfs_lookup
 3766 0004 00000000 		.space	16
 3766      00000000 
ARM GAS  /tmp/ccQOnTG0.s 			page 176


 3766      00000000 
 3766      00000000 
 3767 0014 00000000 		.word	pipefs_create
 3768 0018 00000000 		.word	pipefs_link
 3769 001c 00000000 		.word	pipefs_unlink
 3770 0020 00000000 		.space	4
 3771 0024 00000000 		.word	pipefs_mkdir
 3772 0028 00000000 		.word	pipefs_rmdir
 3773 002c 00000000 		.space	8
 3773      00000000 
 3774 0034 00000000 		.word	pipefs_setattr
 3775 0038 00000000 		.word	pipefs_getattr
 3776 003c 00000000 		.space	40
 3776      00000000 
 3776      00000000 
 3776      00000000 
 3776      00000000 
 3777              		.section	.data.pipefs_dentry_operation,"aw"
 3778              		.align	7
 3781              	pipefs_dentry_operation:
 3782 0000 00000000 		.space	24
 3782      00000000 
 3782      00000000 
 3782      00000000 
 3782      00000000 
 3783 0018 00000000 		.word	pipefs_release_dentry
 3784 001c 00000000 		.space	100
 3784      00000000 
 3784      00000000 
 3784      00000000 
 3784      00000000 
 3785              		.section	.data.pipefs_super_operation,"aw"
 3786              		.align	2
 3789              	pipefs_super_operation:
 3790 0000 00000000 		.word	pipefs_alloc_inode
 3791 0004 00000000 		.word	pipefs_destroy_inode
 3792 0008 00000000 		.word	0
 3793 000c 00000000 		.word	0
 3794 0010 00000000 		.word	0
 3795 0014 00000000 		.word	0
 3796 0018 00000000 		.space	4
 3797 001c 00000000 		.word	pipefs_kill_sb
 3798 0020 00000000 		.word	0
 3799 0024 00000000 		.space	16
 3799      00000000 
 3799      00000000 
 3799      00000000 
 3800 0034 00000000 		.word	pipefs_statfs
 3801 0038 00000000 		.space	36
 3801      00000000 
 3801      00000000 
 3801      00000000 
 3801      00000000 
 3802              		.section	.data.pipefs_file_fops,"aw"
 3803              		.align	2
 3806              	pipefs_file_fops:
 3807 0000 00000000 		.word	0
ARM GAS  /tmp/ccQOnTG0.s 			page 177


 3808 0004 00000000 		.space	8
 3808      00000000 
 3809 000c 00000000 		.word	pipefs_read
 3810 0010 00000000 		.word	pipefs_write
 3811 0014 00000000 		.space	32
 3811      00000000 
 3811      00000000 
 3811      00000000 
 3811      00000000 
 3812 0034 00000000 		.word	pipefs_open
 3813 0038 00000000 		.space	4
 3814 003c 00000000 		.word	pipefs_release
 3815 0040 00000000 		.space	72
 3815      00000000 
 3815      00000000 
 3815      00000000 
 3815      00000000 
 3816              		.text
 3817              	.Letext0:
 3818              		.file 10 "/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/int-l64.h"
 3819              		.file 11 "/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/posix_types.h"
 3820              		.file 12 "/mnt/c/Users/31740/Desktop/newcore/include/uapi/linux/types.h"
 3821              		.file 13 "/mnt/c/Users/31740/Desktop/newcore/include/linux/types.h"
 3822              		.file 14 "/mnt/c/Users/31740/Desktop/newcore/include/linux/init.h"
 3823              		.file 15 "/mnt/c/Users/31740/Desktop/newcore/include/linux/time64.h"
 3824              		.file 16 "/mnt/c/Users/31740/Desktop/newcore/include/linux/uidgid_types.h"
 3825              		.file 17 "/mnt/c/Users/31740/Desktop/newcore/include/linux/stat.h"
 3826              		.file 18 "/mnt/c/Users/31740/Desktop/newcore/include/linux/errseq.h"
 3827              		.file 19 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/sched.h"
 3828              		.file 20 "/mnt/c/Users/31740/Desktop/newcore/include/linux/sched.h"
 3829              		.file 21 "/mnt/c/Users/31740/Desktop/newcore/include/linux/lockdep_types.h"
 3830              		.file 22 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock_types_raw.h"
 3831              		.file 23 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock_types.h"
 3832              		.file 24 "/mnt/c/Users/31740/Desktop/newcore/include/linux/rbtree_types.h"
 3833              		.file 25 "/mnt/c/Users/31740/Desktop/newcore/include/linux/projid.h"
 3834              		.file 26 "/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h"
 3835              		.file 27 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mnt_idmapping.h"
 3836              		.file 28 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mutex.h"
 3837              		.file 29 "/mnt/c/Users/31740/Desktop/newcore/include/linux/uio.h"
 3838              		.file 30 "/mnt/c/Users/31740/Desktop/newcore/include/linux/migrate_mode.h"
 3839              		.file 31 "/mnt/c/Users/31740/Desktop/newcore/include/linux/wait.h"
 3840              		.file 32 "/mnt/c/Users/31740/Desktop/newcore/include/linux/pipe_fs_i.h"
 3841              		.file 33 "/mnt/c/Users/31740/Desktop/newcore/include/linux/xarray.h"
 3842              		.file 34 "/mnt/c/Users/31740/Desktop/newcore/include/linux/rw_hint.h"
 3843              		.file 35 "/mnt/c/Users/31740/Desktop/newcore/include/linux/stddef.h"
 3844              		.file 36 "/mnt/c/Users/31740/Desktop/newcore/include/linux/gfp_types.h"
 3845              		.file 37 "/mnt/c/Users/31740/Desktop/newcore/include/linux/reciprocal_div.h"
 3846              		.file 38 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h"
 3847              		.file 39 "/mnt/c/Users/31740/Desktop/newcore/include/linux/bvec.h"
 3848              		.file 40 "/mnt/c/Users/31740/Desktop/newcore/include/linux/blk_types.h"
 3849              		.file 41 "/mnt/c/Users/31740/Desktop/newcore/include/linux/blkdev.h"
 3850              		.file 42 "/mnt/c/Users/31740/Desktop/newcore/include/linux/bio.h"
 3851              		.file 43 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h"
 3852              		.file 44 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool.h"
 3853              		.file 45 "/mnt/c/Users/31740/Desktop/newcore/include/linux/workqueue_types.h"
 3854              		.file 46 "/mnt/c/Users/31740/Desktop/newcore/include/linux/blk-mq.h"
 3855              		.file 47 "/mnt/c/Users/31740/Desktop/newcore/include/linux/dcache.h"
ARM GAS  /tmp/ccQOnTG0.s 			page 178


 3856              		.file 48 "/mnt/c/Users/31740/Desktop/newcore/include/uapi/linux/pr.h"
 3857              		.file 49 "/mnt/c/Users/31740/Desktop/newcore/include/linux/pr.h"
 3858              		.file 50 "/mnt/c/Users/31740/Desktop/newcore/include/linux/hdreg.h"
 3859              		.file 51 "/mnt/c/Users/31740/Desktop/newcore/include/linux/lockref.h"
 3860              		.file 52 "/mnt/c/Users/31740/Desktop/newcore/include/linux/path.h"
 3861              		.file 53 "/mnt/c/Users/31740/Desktop/newcore/include/linux/statfs.h"
 3862              		.file 54 "/mnt/c/Users/31740/Desktop/newcore/include/linux/string.h"
 3863              		.file 55 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/string.h"
 3864              		.file 56 "/mnt/c/Users/31740/Desktop/newcore/include/linux/time.h"
 3865              		.file 57 "/mnt/c/Users/31740/Desktop/newcore/include/linux/printk.h"
 3866              		.file 58 "/mnt/c/Users/31740/Desktop/newcore/include/linux/instrumented.h"
 3867              		.file 59 "/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h"
 3868              		.file 60 "/mnt/c/Users/31740/Desktop/newcore/include/linux/kcsan-checks.h"
 3869              		.file 61 "/mnt/c/Users/31740/Desktop/newcore/include/linux/kasan-checks.h"
ARM GAS  /tmp/ccQOnTG0.s 			page 179


DEFINED SYMBOLS
                            *ABS*:00000000 pipefs.c
     /tmp/ccQOnTG0.s:21     .text.__spin_init:00000000 $t
     /tmp/ccQOnTG0.s:26     .text.__spin_init:00000000 __spin_init
     /tmp/ccQOnTG0.s:46     .text.__spin_unlock:00000000 $t
     /tmp/ccQOnTG0.s:51     .text.__spin_unlock:00000000 __spin_unlock
     /tmp/ccQOnTG0.s:69     .text.spin_lock_init:00000000 $t
     /tmp/ccQOnTG0.s:74     .text.spin_lock_init:00000000 spin_lock_init
     /tmp/ccQOnTG0.s:97     .text.spin_unlock:00000000 $t
     /tmp/ccQOnTG0.s:102    .text.spin_unlock:00000000 spin_unlock
     /tmp/ccQOnTG0.s:124    .text.pipefs_statfs:00000000 $t
     /tmp/ccQOnTG0.s:129    .text.pipefs_statfs:00000000 pipefs_statfs
     /tmp/ccQOnTG0.s:174    .text.pipefs_statfs:0000001c $d
     /tmp/ccQOnTG0.s:179    .text.pipefs_get_dentry:00000000 $t
     /tmp/ccQOnTG0.s:184    .text.pipefs_get_dentry:00000000 pipefs_get_dentry
     /tmp/ccQOnTG0.s:214    .text.pipefs_setattr:00000000 $t
     /tmp/ccQOnTG0.s:219    .text.pipefs_setattr:00000000 pipefs_setattr
     /tmp/ccQOnTG0.s:251    .text.__spin_lock:00000000 $t
     /tmp/ccQOnTG0.s:256    .text.__spin_lock:00000000 __spin_lock
     /tmp/ccQOnTG0.s:306    .text.spin_lock:00000000 $t
     /tmp/ccQOnTG0.s:311    .text.spin_lock:00000000 spin_lock
     /tmp/ccQOnTG0.s:371    .init.text:00000000 $t
     /tmp/ccQOnTG0.s:376    .init.text:00000000 pipefs_ops_init
     /tmp/ccQOnTG0.s:398    .init.text:0000000c $d
     /tmp/ccQOnTG0.s:3751   .data.fs_type:00000000 fs_type
     /tmp/ccQOnTG0.s:403    .text.pipefs_kill_sb:00000000 $t
     /tmp/ccQOnTG0.s:408    .text.pipefs_kill_sb:00000000 pipefs_kill_sb
     /tmp/ccQOnTG0.s:430    .rodata.pipefs_release.str1.4:00000000 $d
     /tmp/ccQOnTG0.s:434    .text.pipefs_release:00000000 $t
     /tmp/ccQOnTG0.s:439    .text.pipefs_release:00000000 pipefs_release
     /tmp/ccQOnTG0.s:468    .text.pipefs_release:00000010 $d
     /tmp/ccQOnTG0.s:473    .text.pipefs_open:00000000 $t
     /tmp/ccQOnTG0.s:478    .text.pipefs_open:00000000 pipefs_open
     /tmp/ccQOnTG0.s:543    .text.pipefs_create_empty_inode:00000000 $t
     /tmp/ccQOnTG0.s:548    .text.pipefs_create_empty_inode:00000000 pipefs_create_empty_inode
     /tmp/ccQOnTG0.s:788    .text.pipefs_create_empty_inode:00000068 $d
     /tmp/ccQOnTG0.s:793    .text.pipefs_get_inode:00000000 $t
     /tmp/ccQOnTG0.s:798    .text.pipefs_get_inode:00000000 pipefs_get_inode
     /tmp/ccQOnTG0.s:852    .text.pipefs_get_inode:00000020 $d
     /tmp/ccQOnTG0.s:3764   .data.pipefs_inode_operation:00000000 pipefs_inode_operation
     /tmp/ccQOnTG0.s:857    .text.pipefs_getattr:00000000 $t
     /tmp/ccQOnTG0.s:862    .text.pipefs_getattr:00000000 pipefs_getattr
     /tmp/ccQOnTG0.s:1005   .text.pipefs_getattr:0000007c $d
     /tmp/ccQOnTG0.s:1010   .text.pipefs_lookup:00000000 $t
     /tmp/ccQOnTG0.s:1015   .text.pipefs_lookup:00000000 pipefs_lookup
     /tmp/ccQOnTG0.s:1129   .text.pipefs_vfs_lookup:00000000 $t
     /tmp/ccQOnTG0.s:1134   .text.pipefs_vfs_lookup:00000000 pipefs_vfs_lookup
     /tmp/ccQOnTG0.s:1217   .text.pipefs_get_vfs_superblock:00000000 $t
     /tmp/ccQOnTG0.s:1222   .text.pipefs_get_vfs_superblock:00000000 pipefs_get_vfs_superblock
     /tmp/ccQOnTG0.s:1270   .text.pipefs_get_vfs_superblock:0000001c $d
     /tmp/ccQOnTG0.s:3781   .data.pipefs_dentry_operation:00000000 pipefs_dentry_operation
     /tmp/ccQOnTG0.s:3789   .data.pipefs_super_operation:00000000 pipefs_super_operation
     /tmp/ccQOnTG0.s:1276   .text.pipefs_superblock_create:00000000 $t
     /tmp/ccQOnTG0.s:1281   .text.pipefs_superblock_create:00000000 pipefs_superblock_create
     /tmp/ccQOnTG0.s:1485   .text.pipefs_superblock_create:00000068 $d
     /tmp/ccQOnTG0.s:3806   .data.pipefs_file_fops:00000000 pipefs_file_fops
     /tmp/ccQOnTG0.s:1491   .text.pipefs_inode_put:00000000 $t
ARM GAS  /tmp/ccQOnTG0.s 			page 180


     /tmp/ccQOnTG0.s:1496   .text.pipefs_inode_put:00000000 pipefs_inode_put
     /tmp/ccQOnTG0.s:1558   .text.dentry_put:00000000 $t
     /tmp/ccQOnTG0.s:1563   .text.dentry_put:00000000 dentry_put
     /tmp/ccQOnTG0.s:1781   .text.pipefs_release_dentry:00000000 $t
     /tmp/ccQOnTG0.s:1786   .text.pipefs_release_dentry:00000000 pipefs_release_dentry
     /tmp/ccQOnTG0.s:1818   .text.pipefs_rmdir:00000000 $t
     /tmp/ccQOnTG0.s:1823   .text.pipefs_rmdir:00000000 pipefs_rmdir
     /tmp/ccQOnTG0.s:1859   .text.pipefs_delete_dentry:00000000 $t
     /tmp/ccQOnTG0.s:1864   .text.pipefs_delete_dentry:00000000 pipefs_delete_dentry
     /tmp/ccQOnTG0.s:2012   .text.pipefs_unlink:00000000 $t
     /tmp/ccQOnTG0.s:2017   .text.pipefs_unlink:00000000 pipefs_unlink
     /tmp/ccQOnTG0.s:2053   .text.pipefs_create_dentry:00000000 $t
     /tmp/ccQOnTG0.s:2058   .text.pipefs_create_dentry:00000000 pipefs_create_dentry
     /tmp/ccQOnTG0.s:2326   .text.pipefs_create_dentry:000000a8 $d
     /tmp/ccQOnTG0.s:2331   .text.pipefs_create_inode:00000000 $t
     /tmp/ccQOnTG0.s:2336   .text.pipefs_create_inode:00000000 pipefs_create_inode
     /tmp/ccQOnTG0.s:2471   .text.pipefs_create_dir:00000000 $t
     /tmp/ccQOnTG0.s:2476   .text.pipefs_create_dir:00000000 pipefs_create_dir
     /tmp/ccQOnTG0.s:2520   .text.pipefs_create_dir:00000020 $d
     /tmp/ccQOnTG0.s:2525   .text.pipefs_mkdir:00000000 $t
     /tmp/ccQOnTG0.s:2530   .text.pipefs_mkdir:00000000 pipefs_mkdir
     /tmp/ccQOnTG0.s:2653   .text.pipefs_create_file:00000000 $t
     /tmp/ccQOnTG0.s:2658   .text.pipefs_create_file:00000000 pipefs_create_file
     /tmp/ccQOnTG0.s:2691   .text.pipefs_create:00000000 $t
     /tmp/ccQOnTG0.s:2696   .text.pipefs_create:00000000 pipefs_create
     /tmp/ccQOnTG0.s:2832   .text.pipefs_create:00000080 $d
     /tmp/ccQOnTG0.s:2837   .text.pipefs_link:00000000 $t
     /tmp/ccQOnTG0.s:2842   .text.pipefs_link:00000000 pipefs_link
     /tmp/ccQOnTG0.s:2914   .text.pipefs_destroy_inode:00000000 $t
     /tmp/ccQOnTG0.s:2919   .text.pipefs_destroy_inode:00000000 pipefs_destroy_inode
     /tmp/ccQOnTG0.s:3023   .text.pipefs_alloc_inode:00000000 $t
     /tmp/ccQOnTG0.s:3028   .text.pipefs_alloc_inode:00000000 pipefs_alloc_inode
     /tmp/ccQOnTG0.s:3113   .text.pipefs_alloc_inode:00000038 $d
     /tmp/ccQOnTG0.s:3119   .text.pipefs_superblock_destory:00000000 $t
     /tmp/ccQOnTG0.s:3124   .text.pipefs_superblock_destory:00000000 pipefs_superblock_destory
     /tmp/ccQOnTG0.s:3194   .rodata.pipefs_mount.str1.4:00000000 $d
     /tmp/ccQOnTG0.s:3198   .text.pipefs_mount:00000000 $t
     /tmp/ccQOnTG0.s:3203   .text.pipefs_mount:00000000 pipefs_mount
     /tmp/ccQOnTG0.s:3438   .text.pipefs_mount:000000a4 $d
     /tmp/ccQOnTG0.s:3444   .text.pipe_buffer_read:00000000 $t
     /tmp/ccQOnTG0.s:3450   .text.pipe_buffer_read:00000000 pipe_buffer_read
     /tmp/ccQOnTG0.s:3523   .text.pipefs_read:00000000 $t
     /tmp/ccQOnTG0.s:3528   .text.pipefs_read:00000000 pipefs_read
     /tmp/ccQOnTG0.s:3594   .text.pipe_buffer_write:00000000 $t
     /tmp/ccQOnTG0.s:3600   .text.pipe_buffer_write:00000000 pipe_buffer_write
     /tmp/ccQOnTG0.s:3669   .text.pipefs_write:00000000 $t
     /tmp/ccQOnTG0.s:3674   .text.pipefs_write:00000000 pipefs_write
     /tmp/ccQOnTG0.s:3738   .fsinitcall:00000000 $d
     /tmp/ccQOnTG0.s:3741   .fsinitcall:00000000 _initcall_pipefs_ops_init
     /tmp/ccQOnTG0.s:3744   .rodata.str1.4:00000000 $d
     /tmp/ccQOnTG0.s:3748   .data.fs_type:00000000 $d
     /tmp/ccQOnTG0.s:3761   .data.pipefs_inode_operation:00000000 $d
     /tmp/ccQOnTG0.s:3778   .data.pipefs_dentry_operation:00000000 $d
     /tmp/ccQOnTG0.s:3786   .data.pipefs_super_operation:00000000 $d
     /tmp/ccQOnTG0.s:3803   .data.pipefs_file_fops:00000000 $d

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccQOnTG0.s 			page 181


stop_all_scheduler
start_all_scheduler
get_current_task
__delay
register_filesystem
put_super
printk
__smalloc__
new_inode
ktime_get
HZ
strcmp
d_add
alloc_super
__sfree__
simple_unlink
strlen
strcpy
d_getname
__d_alloc
inode_put
