ARM GAS  /tmp/ccd1XecG.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"systemcall.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./kernel/systemcall/systemcall.c"
  20              		.section	.rodata.system_call.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 25730A00 		.ascii	"%s\012\000"
  24              		.align	2
  25              	.LC1:
  26 0004 756E6B6E 		.ascii	"unknown system call (%d)\000"
  26      6F776E20 
  26      73797374 
  26      656D2063 
  26      616C6C20 
  27              		.section	.text.system_call,"ax",%progbits
  28              		.align	1
  29              		.global	system_call
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  34              	system_call:
  35              	.LVL0:
  36              	.LFB150:
   1:./kernel/systemcall/systemcall.c **** #include <linux/kernel.h>
   2:./kernel/systemcall/systemcall.c **** #include <linux/sys_call.h>
   3:./kernel/systemcall/systemcall.c **** #include <asm/sched.h>
   4:./kernel/systemcall/systemcall.c **** 
   5:./kernel/systemcall/systemcall.c **** 
   6:./kernel/systemcall/systemcall.c **** int system_call(int sys_no,void* arg0,void* arg1,void* arg2,void* arg3,void* arg4,void* arg5)
   7:./kernel/systemcall/systemcall.c **** {
  37              		.loc 1 7 1 view -0
  38              		.cfi_startproc
  39              		@ args = 12, pretend = 0, frame = 0
  40              		@ frame_needed = 0, uses_anonymous_args = 0
  41              		.loc 1 7 1 is_stmt 0 view .LVU1
  42 0000 08B5     		push	{r3, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 3, -8
  46              		.cfi_offset 14, -4
   8:./kernel/systemcall/systemcall.c ****     switch (sys_no)
ARM GAS  /tmp/ccd1XecG.s 			page 2


  47              		.loc 1 8 5 is_stmt 1 view .LVU2
  48 0002 30B1     		cbz	r0, .L2
  49 0004 0128     		cmp	r0, #1
  50 0006 0AD0     		beq	.L3
   9:./kernel/systemcall/systemcall.c ****     {
  10:./kernel/systemcall/systemcall.c ****     case  SC_PRINTK:
  11:./kernel/systemcall/systemcall.c ****             printk("%s\n",arg0);
  12:./kernel/systemcall/systemcall.c ****             return 666;
  13:./kernel/systemcall/systemcall.c ****             break;
  14:./kernel/systemcall/systemcall.c ****     case  SC_SCHEDULER:
  15:./kernel/systemcall/systemcall.c ****             __sched();
  16:./kernel/systemcall/systemcall.c ****             break;
  17:./kernel/systemcall/systemcall.c **** 
  18:./kernel/systemcall/systemcall.c ****     default:
  19:./kernel/systemcall/systemcall.c ****         printk("unknown system call (%d)",sys_no);
  51              		.loc 1 19 9 view .LVU3
  52 0008 0146     		mov	r1, r0
  53              	.LVL1:
  54              		.loc 1 19 9 is_stmt 0 view .LVU4
  55 000a 0648     		ldr	r0, .L8
  56              	.LVL2:
  57              		.loc 1 19 9 view .LVU5
  58 000c FFF7FEFF 		bl	printk
  59              	.LVL3:
  20:./kernel/systemcall/systemcall.c ****         break;
  60              		.loc 1 20 9 is_stmt 1 view .LVU6
  21:./kernel/systemcall/systemcall.c ****     }
  22:./kernel/systemcall/systemcall.c **** }
  61              		.loc 1 22 1 is_stmt 0 view .LVU7
  62 0010 04E0     		b	.L1
  63              	.LVL4:
  64              	.L2:
  11:./kernel/systemcall/systemcall.c ****             return 666;
  65              		.loc 1 11 13 is_stmt 1 view .LVU8
  66 0012 0548     		ldr	r0, .L8+4
  67              	.LVL5:
  11:./kernel/systemcall/systemcall.c ****             return 666;
  68              		.loc 1 11 13 is_stmt 0 view .LVU9
  69 0014 FFF7FEFF 		bl	printk
  70              	.LVL6:
  12:./kernel/systemcall/systemcall.c ****             break;
  71              		.loc 1 12 13 is_stmt 1 view .LVU10
  12:./kernel/systemcall/systemcall.c ****             break;
  72              		.loc 1 12 20 is_stmt 0 discriminator 1 view .LVU11
  73 0018 40F29A20 		movw	r0, #666
  74              	.L1:
  75              		.loc 1 22 1 view .LVU12
  76 001c 08BD     		pop	{r3, pc}
  77              	.LVL7:
  78              	.L3:
  13:./kernel/systemcall/systemcall.c ****     case  SC_SCHEDULER:
  79              		.loc 1 13 13 is_stmt 1 view .LVU13
  15:./kernel/systemcall/systemcall.c ****             break;
  80              		.loc 1 15 13 view .LVU14
  81 001e FFF7FEFF 		bl	__sched
  82              	.LVL8:
  16:./kernel/systemcall/systemcall.c **** 
ARM GAS  /tmp/ccd1XecG.s 			page 3


  83              		.loc 1 16 13 view .LVU15
  84 0022 FBE7     		b	.L1
  85              	.L9:
  86              		.align	2
  87              	.L8:
  88 0024 04000000 		.word	.LC1
  89 0028 00000000 		.word	.LC0
  90              		.cfi_endproc
  91              	.LFE150:
  93              		.text
  94              	.Letext0:
  95              		.file 2 "./include/linux/sys_call.h"
  96              		.file 3 "./arch/arm_m/include/asm/sched.h"
  97              		.file 4 "./include/linux/printk.h"
ARM GAS  /tmp/ccd1XecG.s 			page 4


DEFINED SYMBOLS
                            *ABS*:00000000 systemcall.c
     /tmp/ccd1XecG.s:21     .rodata.system_call.str1.4:00000000 $d
     /tmp/ccd1XecG.s:28     .text.system_call:00000000 $t
     /tmp/ccd1XecG.s:34     .text.system_call:00000000 system_call
     /tmp/ccd1XecG.s:88     .text.system_call:00000024 $d

UNDEFINED SYMBOLS
printk
__sched
