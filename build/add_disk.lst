ARM GAS  /tmp/cc1BM6dS.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"add_disk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c"
  20              		.section	.text.__spin_init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__spin_init:
  27              	.LVL0:
  28              	.LFB236:
  29              		.file 2 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h"
   1:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** #ifndef __SPIN_LOCK_H_
   2:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** #define __SPIN_LOCK_H_
   3:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
   4:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** #include <linux/sched.h>
   5:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
   6:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** typedef struct { 
   7:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****      int flag; 
   8:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** } arch_spinlock_t;
   9:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** 
  10:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** static int __spin_init(arch_spinlock_t *lock) 
  11:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** {
  30              		.loc 2 11 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  12:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h ****     lock->flag = 0;
  35              		.loc 2 12 5 view .LVU1
  36              		.loc 2 12 16 is_stmt 0 view .LVU2
  37 0000 0023     		movs	r3, #0
  38 0002 0360     		str	r3, [r0]
  39              	.LVL1:
  13:/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/spinlock.h **** }
  40              		.loc 2 13 1 view .LVU3
  41 0004 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE236:
  45              		.section	.text.spin_lock_init,"ax",%progbits
  46              		.align	1
ARM GAS  /tmp/cc1BM6dS.s 			page 2


  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	spin_lock_init:
  52              	.LVL2:
  53              	.LFB239:
  54              		.file 3 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #ifndef __SPINLOCK_H__
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #define __SPINLOCK_H__
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #include <linux/types.h>
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #include <linux/spinlock_types.h>
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** #include <linux/sched.h>
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** 
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** static void spin_lock_init(spinlock_t* lock){
  55              		.loc 3 10 45 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		.loc 3 10 45 is_stmt 0 view .LVU5
  60 0000 08B5     		push	{r3, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 3, -8
  64              		.cfi_offset 14, -4
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h ****     __spin_init(&lock->rlock.raw_lock);
  65              		.loc 3 11 5 is_stmt 1 view .LVU6
  66 0002 FFF7FEFF 		bl	__spin_init
  67              	.LVL3:
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock.h **** }
  68              		.loc 3 12 1 is_stmt 0 view .LVU7
  69 0006 08BD     		pop	{r3, pc}
  70              		.cfi_endproc
  71              	.LFE239:
  73              		.section	.rodata.add_mbr_son_disk.str1.4,"aMS",%progbits,1
  74              		.align	2
  75              	.LC0:
  76 0000 63616E20 		.ascii	"can not alloc more memory\012\000"
  76      6E6F7420 
  76      616C6C6F 
  76      63206D6F 
  76      7265206D 
  77              		.section	.text.add_mbr_son_disk,"ax",%progbits
  78              		.align	1
  79              		.global	add_mbr_son_disk
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  84              	add_mbr_son_disk:
  85              	.LVL4:
  86              	.LFB1034:
   1:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** #include <linux/kernel.h>
   2:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** #include <linux/slab.h>
   3:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** #include <linux/fs.h>
   4:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** #include <linux/blkdev.h>
ARM GAS  /tmp/cc1BM6dS.s 			page 3


   5:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** #include <linux/spinlock.h>
   6:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** #include <linux/string.h>
   7:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** 
   8:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** static void register_son_disk(struct block_device *bdev);
   9:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** int __register_disk(struct block_device *dev,struct gendisk *disk,char *name);
  10:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** extern uint32_t get_partiton_data(struct partition* partition,int number,uint32_t flag);
  11:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** extern struct partition* get_partition_from_device(struct block_device *bdev);
  12:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** extern int check_empty_MBR_Table(struct partition *partition,int number);
  13:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** 
  14:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** 
  15:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** int __add_disk(struct gendisk *disk)
  16:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** {
  17:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     struct block_device *dev;
  18:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     if(disk->part0 == NULL){
  19:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         dev = kmalloc(sizeof(struct block_device) , GFP_KERNEL);
  20:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         if(dev == NULL){
  21:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****             printk(KERN_INFO "can not alloc more memory\n");
  22:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****             return -ENOMEM;
  23:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         }   
  24:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         disk->part0 = dev;     
  25:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     }
  26:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev = disk->part0;
  27:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_disk = disk;
  28:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_queue = disk->queue;
  29:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_stamp = jiffies;
  30:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_dev = disk->major;
  31:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     spin_lock_init(&dev->bd_size_lock);
  32:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_claiming = NULL;
  33:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_holder = NULL;
  34:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     mutex_init(&dev->bd_holder_lock);
  35:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     mutex_init(&dev->bd_fsfreeze_mutex);
  36:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_holders = 0;
  37:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     __register_disk(dev,disk,NULL);
  38:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     register_son_disk(dev);
  39:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     return 0;
  40:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** }
  41:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** EXPORT_SYMBOL(__add_disk);
  42:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** 
  43:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** 
  44:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** 
  45:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** #define mbr_partiton_startaddress 0x01
  46:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** #define mbr_partiton_size         0x02
  47:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** #define mbr_partiton_magic        0x03
  48:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** 
  49:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** int add_mbr_son_disk(struct block_device *dev,struct partition* partition,uint32_t number)
  50:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** {
  87              		.loc 1 50 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 32
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		.loc 1 50 1 is_stmt 0 view .LVU9
  92 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 28
  95              		.cfi_offset 4, -28
  96              		.cfi_offset 5, -24
  97              		.cfi_offset 6, -20
ARM GAS  /tmp/cc1BM6dS.s 			page 4


  98              		.cfi_offset 7, -16
  99              		.cfi_offset 8, -12
 100              		.cfi_offset 9, -8
 101              		.cfi_offset 14, -4
 102 0004 89B0     		sub	sp, sp, #36
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 64
 105 0006 0646     		mov	r6, r0
 106 0008 0F46     		mov	r7, r1
 107 000a 1546     		mov	r5, r2
  51:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     struct block_device* son_dev = kmalloc(sizeof(struct block_device) , GFP_KERNEL);
 108              		.loc 1 51 5 is_stmt 1 view .LVU10
 109              	.LVL5:
 110              	.LBB17:
 111              	.LBI17:
 112              		.file 4 "/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Written by Mark Hemment, 1996 (markhe@nextd.demon.co.uk).
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * (C) SGI 2006, Christoph Lameter
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * 	Cleaned up and restructured to ease the addition of alternative
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * 	implementations of SLAB allocators.
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * (C) Linux Foundation 2008-2013
   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *      Unified interface for all slab allocators
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifndef _LINUX_SLAB_H
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define	_LINUX_SLAB_H
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/cache.h>
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/overflow.h>
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/types.h>
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/raid/pq.h>
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/gfp_types.h>
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/numa.h>
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/reciprocal_div.h>
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #include <linux/spinlock.h>
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** enum _slab_flag_bits {
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CONSISTENCY_CHECKS,
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_RED_ZONE,
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_POISON,
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_KMALLOC,
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_HWCACHE_ALIGN,
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CACHE_DMA,
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CACHE_DMA32,
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_STORE_USER,
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_PANIC,
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_TYPESAFE_BY_RCU,
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_TRACE,
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_DEBUG_OBJECTS
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_DEBUG_OBJECTS,
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NOLEAKTRACE,
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NO_MERGE,
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_FAILSLAB
ARM GAS  /tmp/cc1BM6dS.s 			page 5


  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_FAILSLAB,
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_MEMCG
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_ACCOUNT,
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KASAN_GENERIC
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_KASAN,
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NO_USER_FLAGS,
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KFENCE
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_SKIP_KFENCE,
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifndef CONFIG_SLUB_TINY
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_RECLAIM_ACCOUNT,
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_OBJECT_POISON,
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_CMPXCHG_DOUBLE,
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLAB_OBJ_EXT
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_NO_OBJ_EXT,
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	_SLAB_FLAGS_LAST_BIT
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** };
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define __SLAB_FLAG_BIT(nr)	((slab_flags_t __force)(1U << (nr)))
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define __SLAB_FLAG_UNUSED	((slab_flags_t __force)(0U))
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Flags to pass to kmem_cache_create().
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * The ones marked DEBUG need CONFIG_SLUB_DEBUG enabled, otherwise are no-op
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Perform (expensive) checks on alloc/free */
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_CONSISTENCY_CHECKS	__SLAB_FLAG_BIT(_SLAB_CONSISTENCY_CHECKS)
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Red zone objs in a cache */
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_RED_ZONE		__SLAB_FLAG_BIT(_SLAB_RED_ZONE)
  78:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Poison objects */
  79:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_POISON		__SLAB_FLAG_BIT(_SLAB_POISON)
  80:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Indicate a kmalloc slab */
  81:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_KMALLOC		__SLAB_FLAG_BIT(_SLAB_KMALLOC)
  82:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
  83:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_HWCACHE_ALIGN - Align objects on cache line boundaries.
  84:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
  85:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Sufficiently large objects are aligned on cache line boundary. For object
  86:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * size smaller than a half of cache line size, the alignment is on the half of
  87:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * cache line size. In general, if object size is smaller than 1/2^n of cache
  88:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * line size, the alignment is adjusted to 1/2^n.
  89:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
  90:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * If explicit alignment is also requested by the respective
  91:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * &struct kmem_cache_args field, the greater of both is alignments is applied.
  92:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
  93:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_HWCACHE_ALIGN	__SLAB_FLAG_BIT(_SLAB_HWCACHE_ALIGN)
  94:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Use GFP_DMA memory */
  95:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_CACHE_DMA		__SLAB_FLAG_BIT(_SLAB_CACHE_DMA)
  96:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Use GFP_DMA32 memory */
  97:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_CACHE_DMA32	__SLAB_FLAG_BIT(_SLAB_CACHE_DMA32)
  98:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* DEBUG: Store the last owner for bug hunting */
ARM GAS  /tmp/cc1BM6dS.s 			page 6


  99:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_STORE_USER		__SLAB_FLAG_BIT(_SLAB_STORE_USER)
 100:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Panic if kmem_cache_create() fails */
 101:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_PANIC		__SLAB_FLAG_BIT(_SLAB_PANIC)
 102:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
 103:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_TYPESAFE_BY_RCU - **WARNING** READ THIS!
 104:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 105:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * This delays freeing the SLAB page by a grace period, it does _NOT_
 106:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * delay object freeing. This means that if you do kmem_cache_free()
 107:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * that memory location is free to be reused at any time. Thus it may
 108:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * be possible to see another object there in the same RCU grace period.
 109:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 110:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * This feature only ensures the memory location backing the object
 111:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * stays valid, the trick to using this is relying on an independent
 112:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * object validation pass. Something like:
 113:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 114:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * ::
 115:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 116:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *  begin:
 117:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   rcu_read_lock();
 118:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   obj = lockless_lookup(key);
 119:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   if (obj) {
 120:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *     if (!try_get_ref(obj)) // might fail for free objects
 121:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       rcu_read_unlock();
 122:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       goto begin;
 123:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 124:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *     if (obj->key != key) { // not the object we expected
 125:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       put_ref(obj);
 126:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       rcu_read_unlock();
 127:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *       goto begin;
 128:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *     }
 129:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   }
 130:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *  rcu_read_unlock();
 131:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 132:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * This is useful if we need to approach a kernel structure obliquely,
 133:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * from its address obtained without the usual locking. We can lock
 134:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * the structure to stabilize it and check it's still at the given address,
 135:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * only if we can be sure that the memory has not been meanwhile reused
 136:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * for some other kind of object (which our subsystem's lock might corrupt).
 137:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 138:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * rcu_read_lock before reading the address, then rcu_read_unlock after
 139:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * taking the spinlock within the structure expected at that address.
 140:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 141:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Note that it is not possible to acquire a lock within a structure
 142:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * allocated with SLAB_TYPESAFE_BY_RCU without first acquiring a reference
 143:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * as described above.  The reason is that SLAB_TYPESAFE_BY_RCU pages
 144:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * are not zeroed before being given to the slab, which means that any
 145:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * locks must be initialized after each and every kmem_struct_alloc().
 146:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Alternatively, make the ctor passed to kmem_cache_create() initialize
 147:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * the locks at page-allocation time, as is done in __i915_request_ctor(),
 148:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * sighand_ctor(), and anon_vma_ctor().  Such a ctor permits readers
 149:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * to safely acquire those ctor-initialized locks under rcu_read_lock()
 150:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * protection.
 151:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 152:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Note that SLAB_TYPESAFE_BY_RCU was originally named SLAB_DESTROY_BY_RCU.
 153:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 154:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_TYPESAFE_BY_RCU	__SLAB_FLAG_BIT(_SLAB_TYPESAFE_BY_RCU)
 155:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Trace allocations and frees */
ARM GAS  /tmp/cc1BM6dS.s 			page 7


 156:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_TRACE		__SLAB_FLAG_BIT(_SLAB_TRACE)
 157:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 158:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Flag to prevent checks on free */
 159:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_DEBUG_OBJECTS
 160:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_DEBUG_OBJECTS	__SLAB_FLAG_BIT(_SLAB_DEBUG_OBJECTS)
 161:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 162:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_DEBUG_OBJECTS	__SLAB_FLAG_UNUSED
 163:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 164:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 165:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Avoid kmemleak tracing */
 166:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NOLEAKTRACE	__SLAB_FLAG_BIT(_SLAB_NOLEAKTRACE)
 167:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 168:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 169:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Prevent merging with compatible kmem caches. This flag should be used
 170:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * cautiously. Valid use cases:
 171:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 172:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * - caches created for self-tests (e.g. kunit)
 173:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * - general caches created and used by a subsystem, only when a
 174:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   (subsystem-specific) debug option is enabled
 175:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * - performance critical caches, should be very rare and consulted with slab
 176:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *   maintainers, and not used together with CONFIG_SLUB_TINY
 177:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 178:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_MERGE		__SLAB_FLAG_BIT(_SLAB_NO_MERGE)
 179:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 180:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Fault injection mark */
 181:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_FAILSLAB
 182:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_FAILSLAB		__SLAB_FLAG_BIT(_SLAB_FAILSLAB)
 183:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 184:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_FAILSLAB		__SLAB_FLAG_UNUSED
 185:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 186:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
 187:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_ACCOUNT - Account allocations to memcg.
 188:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 189:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * All object allocations from this cache will be memcg accounted, regardless of
 190:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * __GFP_ACCOUNT being or not being passed to individual allocations.
 191:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 192:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_MEMCG
 193:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_ACCOUNT		__SLAB_FLAG_BIT(_SLAB_ACCOUNT)
 194:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 195:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** # define SLAB_ACCOUNT		__SLAB_FLAG_UNUSED
 196:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 197:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 198:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KASAN_GENERIC
 199:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_KASAN		__SLAB_FLAG_BIT(_SLAB_KASAN)
 200:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 201:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_KASAN		__SLAB_FLAG_UNUSED
 202:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 203:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 204:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 205:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Ignore user specified debugging flags.
 206:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Intended for caches created for self-tests so they have only flags
 207:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * specified in the code and other flags are ignored.
 208:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 209:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_USER_FLAGS	__SLAB_FLAG_BIT(_SLAB_NO_USER_FLAGS)
 210:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 211:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_KFENCE
 212:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_SKIP_KFENCE	__SLAB_FLAG_BIT(_SLAB_SKIP_KFENCE)
ARM GAS  /tmp/cc1BM6dS.s 			page 8


 213:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 214:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_SKIP_KFENCE	__SLAB_FLAG_UNUSED
 215:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 216:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 217:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* The following flags affect the page allocator grouping pages by mobility */
 218:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /**
 219:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * define SLAB_RECLAIM_ACCOUNT - Objects are reclaimable.
 220:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 221:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Use this flag for caches that have an associated shrinker. As a result, slab
 222:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * pages are allocated with __GFP_RECLAIMABLE, which affects grouping pages by
 223:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * mobility, and are accounted in SReclaimable counter in /proc/meminfo
 224:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 225:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifndef CONFIG_SLUB_TINY
 226:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_RECLAIM_ACCOUNT	__SLAB_FLAG_BIT(_SLAB_RECLAIM_ACCOUNT)
 227:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 228:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_RECLAIM_ACCOUNT	__SLAB_FLAG_UNUSED
 229:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 230:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_TEMPORARY		SLAB_RECLAIM_ACCOUNT	/* Objects are short-lived */
 231:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 232:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /* Slab created using create_boot_cache */
 233:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLAB_OBJ_EXT
 234:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_OBJ_EXT		__SLAB_FLAG_BIT(_SLAB_NO_OBJ_EXT)
 235:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 236:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define SLAB_NO_OBJ_EXT		__SLAB_FLAG_UNUSED
 237:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 238:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 239:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 240:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * freeptr_t represents a SLUB freelist pointer, which might be encoded
 241:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * and not dereferenceable if CONFIG_SLAB_FREELIST_HARDENED is enabled.
 242:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 243:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** typedef struct { unsigned long v; } freeptr_t;
 244:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 245:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 246:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * ZERO_SIZE_PTR will be returned for zero sized kmalloc requests.
 247:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 248:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Dereferencing ZERO_SIZE_PTR will lead to a distinct access fault.
 249:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  *
 250:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * ZERO_SIZE_PTR can be passed to kfree though in the same way that NULL can.
 251:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  * Both make kfree a no-op.
 252:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h ****  */
 253:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define ZERO_SIZE_PTR ((void *)16)
 254:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 255:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define ZERO_OR_NULL_PTR(x) ((unsigned long)(x) <= \
 256:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 				(unsigned long)ZERO_SIZE_PTR)
 257:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 258:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 259:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 260:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 261:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 262:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLUB_CPU_PARTIAL
 263:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial(c)			((c)->partial)
 264:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 265:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_set_percpu_partial(c, p)		\
 266:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** ({						\
 267:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	slub_percpu_partial(c) = (p)->next;	\
 268:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** })
 269:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
ARM GAS  /tmp/cc1BM6dS.s 			page 9


 270:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial_read_once(c)	READ_ONCE(slub_percpu_partial(c))
 271:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #else
 272:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial(c)			NULL
 273:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 274:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_set_percpu_partial(c, p)
 275:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 276:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define slub_percpu_partial_read_once(c)	NULL
 277:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 278:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 279:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif // CONFIG_SLUB_CPU_PARTIAL
 280:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 281:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** /*
 282:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	* Word size structure that can be atomically updated or read and that
 283:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	* contains both the order and the number of objects that a slab of the
 284:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	* given order would contain.
 285:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	*/				
 286:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** struct kmem_cache_order_objects {
 287:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	unsigned int x;
 288:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** };
 289:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 290:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** struct kmem_cache_node {
 291:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	spinlock_t list_lock;
 292:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	unsigned long nr_partial;
 293:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	struct list_head partial;
 294:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #ifdef CONFIG_SLUB_DEBUG
 295:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	atomic_long_t nr_slabs;
 296:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	atomic_long_t total_objects;
 297:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	struct list_head full;
 298:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #endif
 299:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** };
 300:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 301:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** struct kmem_cache {
 302:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifndef CONFIG_SLUB_TINY
 303:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	//	struct kmem_cache_cpu __percpu *cpu_slab;
 304:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 305:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Used for retrieving partial slabs, etc. */
 306:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		slab_flags_t flags;
 307:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned long min_partial;
 308:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int size;		/* Object size including metadata */
 309:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int object_size;	/* Object size without metadata */
 310:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct reciprocal_value reciprocal_size;
 311:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int offset;		/* Free pointer offset */
 312:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SLUB_CPU_PARTIAL
 313:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Number of per cpu partial objects to keep around */
 314:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int cpu_partial;
 315:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Number of per cpu partial slabs to keep around */
 316:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int cpu_partial_slabs;
 317:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 318:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kmem_cache_order_objects oo;
 319:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 320:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/* Allocation and freeing of slabs */
 321:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kmem_cache_order_objects min;
 322:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		gfp_t allocflags;		/* gfp flags to use on each alloc */
 323:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		int refcount;			/* Refcount for slab cache destroy */
 324:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		void (*ctor)(void *object);	/* Object constructor */
 325:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int inuse;		/* Offset to metadata */
 326:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int align;		/* Alignment */
ARM GAS  /tmp/cc1BM6dS.s 			page 10


 327:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int red_left_pad;	/* Left redzone padding size */
 328:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		const char *name;		/* Name (only for display!) */
 329:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct list_head list;		/* List of slab caches */
 330:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SYSFS
 331:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kobject kobj;		/* For sysfs */
 332:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 333:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SLAB_FREELIST_HARDENED
 334:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned long random;
 335:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 336:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 337:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_NUMA
 338:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		/*
 339:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 			* Defragmentation by allocating from a remote node.
 340:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 			*/
 341:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int remote_node_defrag_ratio;
 342:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 343:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 344:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_SLAB_FREELIST_RANDOM
 345:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int *random_seq;
 346:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 347:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 348:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_KASAN_GENERIC
 349:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kasan_cache kasan_info;
 350:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 351:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 352:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#ifdef CONFIG_HARDENED_USERCOPY
 353:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int useroffset;	/* Usercopy region offset */
 354:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		unsigned int usersize;		/* Usercopy region size */
 355:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	#endif
 356:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	
 357:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 		struct kmem_cache_node *node[MAX_NUMNODES];
 358:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	};
 359:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 					
 360:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 361:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 362:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 363:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 364:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** #define KMALLOC_WAIT 1
 365:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 366:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 367:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** extern void* __smalloc__(u32 size, gfp_t flags);
 368:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** extern void  __sfree__(void* addr);
 369:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 370:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 371:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline *vmalloc(unsigned long size){
 372:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__(size,GFP_TRANSHUGE_LIGHT);
 373:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 374:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 375:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline vfree(void *addr){
 376:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	__sfree__(addr);
 377:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** }
 378:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** static void inline *kmalloc(size_t size, gfp_t flags){
 113              		.loc 4 379 21 view .LVU11
 114              	.LBB18:
 380:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 115              		.loc 4 380 2 view .LVU12
ARM GAS  /tmp/cc1BM6dS.s 			page 11


 116              		.loc 4 380 9 is_stmt 0 view .LVU13
 117 000c 4FF44C61 		mov	r1, #3264
 118              	.LVL6:
 119              		.loc 4 380 9 view .LVU14
 120 0010 6C20     		movs	r0, #108
 121              	.LVL7:
 122              		.loc 4 380 9 view .LVU15
 123 0012 FFF7FEFF 		bl	__smalloc__
 124              	.LVL8:
 125              		.loc 4 380 9 view .LVU16
 126              	.LBE18:
 127              	.LBE17:
  52:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     if(son_dev == NULL){
 128              		.loc 1 52 5 is_stmt 1 view .LVU17
 129              		.loc 1 52 7 is_stmt 0 view .LVU18
 130 0016 0028     		cmp	r0, #0
 131 0018 59D0     		beq	.L9
 132 001a 0446     		mov	r4, r0
  53:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         printk(KERN_INFO "can not alloc more memory\n");
  54:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         return -ENOMEM;
  55:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     }
  56:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     if(check_empty_MBR_Table(partition,number) == 1){
 133              		.loc 1 56 5 is_stmt 1 view .LVU19
 134              		.loc 1 56 8 is_stmt 0 view .LVU20
 135 001c 2946     		mov	r1, r5
 136 001e 3846     		mov	r0, r7
 137              	.LVL9:
 138              		.loc 1 56 8 view .LVU21
 139 0020 FFF7FEFF 		bl	check_empty_MBR_Table
 140              	.LVL10:
 141              		.loc 1 56 7 discriminator 1 view .LVU22
 142 0024 0128     		cmp	r0, #1
 143 0026 59D0     		beq	.L7
  57:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****          return -1;
  58:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     }
  59:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     sector_t startaddress = get_partiton_data(partition,number,mbr_partiton_startaddress);
 144              		.loc 1 59 5 is_stmt 1 view .LVU23
 145              		.loc 1 59 29 is_stmt 0 view .LVU24
 146 0028 0122     		movs	r2, #1
 147 002a 2946     		mov	r1, r5
 148 002c 3846     		mov	r0, r7
 149 002e FFF7FEFF 		bl	get_partiton_data
 150              	.LVL11:
 151 0032 8146     		mov	r9, r0
 152              	.LVL12:
  60:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     sector_t size         = get_partiton_data(partition,number,mbr_partiton_size);
 153              		.loc 1 60 5 is_stmt 1 view .LVU25
 154              		.loc 1 60 29 is_stmt 0 view .LVU26
 155 0034 0222     		movs	r2, #2
 156 0036 2946     		mov	r1, r5
 157 0038 3846     		mov	r0, r7
 158              	.LVL13:
 159              		.loc 1 60 29 view .LVU27
 160 003a FFF7FEFF 		bl	get_partiton_data
 161              	.LVL14:
 162 003e 8046     		mov	r8, r0
 163              	.LVL15:
ARM GAS  /tmp/cc1BM6dS.s 			page 12


  61:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     uint8_t flag          = get_partiton_data(partition,number,mbr_partiton_magic);
 164              		.loc 1 61 5 is_stmt 1 view .LVU28
 165              		.loc 1 61 29 is_stmt 0 view .LVU29
 166 0040 0322     		movs	r2, #3
 167 0042 2946     		mov	r1, r5
 168 0044 3846     		mov	r0, r7
 169              	.LVL16:
 170              		.loc 1 61 29 view .LVU30
 171 0046 FFF7FEFF 		bl	get_partiton_data
 172              	.LVL17:
  62:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     son_dev->bd_start_sect = startaddress;
 173              		.loc 1 62 5 is_stmt 1 view .LVU31
 174              		.loc 1 62 28 is_stmt 0 view .LVU32
 175 004a C4F80090 		str	r9, [r4]
  63:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     son_dev->bd_nr_sectors = size;
 176              		.loc 1 63 5 is_stmt 1 view .LVU33
 177              		.loc 1 63 28 is_stmt 0 view .LVU34
 178 004e C4F80480 		str	r8, [r4, #4]
  64:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     son_dev->bd_disk  = dev->bd_disk;
 179              		.loc 1 64 5 is_stmt 1 view .LVU35
 180              		.loc 1 64 28 is_stmt 0 view .LVU36
 181 0052 B368     		ldr	r3, [r6, #8]
 182              		.loc 1 64 23 view .LVU37
 183 0054 A360     		str	r3, [r4, #8]
  65:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     son_dev->bd_stamp = jiffies;
 184              		.loc 1 65 5 is_stmt 1 view .LVU38
 185              		.loc 1 65 25 is_stmt 0 view .LVU39
 186 0056 FFF7FEFF 		bl	ktime_get
 187              	.LVL18:
 188              		.loc 1 65 23 discriminator 1 view .LVU40
 189 005a 2061     		str	r0, [r4, #16]
  66:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     son_dev->bd_queue = dev->bd_queue;
 190              		.loc 1 66 5 is_stmt 1 view .LVU41
 191              		.loc 1 66 28 is_stmt 0 view .LVU42
 192 005c F368     		ldr	r3, [r6, #12]
 193              		.loc 1 66 23 view .LVU43
 194 005e E360     		str	r3, [r4, #12]
  67:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     son_dev->bd_dev   = dev->bd_dev++;
 195              		.loc 1 67 5 is_stmt 1 view .LVU44
 196              		.loc 1 67 28 is_stmt 0 view .LVU45
 197 0060 B369     		ldr	r3, [r6, #24]
 198              		.loc 1 67 36 view .LVU46
 199 0062 5A1C     		adds	r2, r3, #1
 200 0064 B261     		str	r2, [r6, #24]
 201              		.loc 1 67 23 view .LVU47
 202 0066 A361     		str	r3, [r4, #24]
  68:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     spin_lock_init(&son_dev->bd_size_lock);
 203              		.loc 1 68 5 is_stmt 1 view .LVU48
 204 0068 04F12400 		add	r0, r4, #36
 205 006c FFF7FEFF 		bl	spin_lock_init
 206              	.LVL19:
  69:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     son_dev->bd_claiming = NULL;
 207              		.loc 1 69 5 view .LVU49
 208              		.loc 1 69 26 is_stmt 0 view .LVU50
 209 0070 0027     		movs	r7, #0
 210              	.LVL20:
 211              		.loc 1 69 26 view .LVU51
ARM GAS  /tmp/cc1BM6dS.s 			page 13


 212 0072 6763     		str	r7, [r4, #52]
  70:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     son_dev->bd_holder   = NULL;
 213              		.loc 1 70 5 is_stmt 1 view .LVU52
 214              		.loc 1 70 26 is_stmt 0 view .LVU53
 215 0074 A763     		str	r7, [r4, #56]
  71:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     mutex_init(&son_dev->bd_holder_lock);
 216              		.loc 1 71 5 is_stmt 1 view .LVU54
  72:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     mutex_init(&son_dev->bd_fsfreeze_mutex);
 217              		.loc 1 72 5 view .LVU55
  73:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     son_dev->bd_holders  = 0;
 218              		.loc 1 73 5 view .LVU56
 219              		.loc 1 73 26 is_stmt 0 view .LVU57
 220 0076 E764     		str	r7, [r4, #76]
  74:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     char name[32];
 221              		.loc 1 74 5 is_stmt 1 view .LVU58
  75:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     memset(name,"\0",32);
 222              		.loc 1 75 5 view .LVU59
 223 0078 2022     		movs	r2, #32
 224 007a 1A49     		ldr	r1, .L10
 225 007c 6846     		mov	r0, sp
 226 007e FFF7FEFF 		bl	memset
 227              	.LVL21:
  76:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     strcpy(name,dev->bd_disk->disk_name);
 228              		.loc 1 76 5 view .LVU60
 229              		.loc 1 76 20 is_stmt 0 view .LVU61
 230 0082 B168     		ldr	r1, [r6, #8]
 231              		.loc 1 76 5 view .LVU62
 232 0084 0C31     		adds	r1, r1, #12
 233 0086 6846     		mov	r0, sp
 234 0088 FFF7FEFF 		bl	strcpy
 235              	.LVL22:
  77:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     name[strlen(name)+1] =  name[strlen(name)];
 236              		.loc 1 77 5 is_stmt 1 view .LVU63
 237              		.loc 1 77 34 is_stmt 0 view .LVU64
 238 008c 6846     		mov	r0, sp
 239 008e FFF7FEFF 		bl	strlen
 240              	.LVL23:
 241              		.loc 1 77 22 discriminator 2 view .LVU65
 242 0092 431C     		adds	r3, r0, #1
 243              		.loc 1 77 33 discriminator 2 view .LVU66
 244 0094 00F12002 		add	r2, r0, #32
 245 0098 0DEB0200 		add	r0, sp, r2
 246 009c 10F8202C 		ldrb	r2, [r0, #-32]	@ zero_extendqisi2
 247              		.loc 1 77 26 discriminator 2 view .LVU67
 248 00a0 2033     		adds	r3, r3, #32
 249 00a2 6B44     		add	r3, sp, r3
 250 00a4 03F8202C 		strb	r2, [r3, #-32]
  78:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     name[strlen(name)]   = '0' + number;
 251              		.loc 1 78 5 is_stmt 1 view .LVU68
 252              		.loc 1 78 10 is_stmt 0 view .LVU69
 253 00a8 6846     		mov	r0, sp
 254 00aa FFF7FEFF 		bl	strlen
 255              	.LVL24:
 256              		.loc 1 78 32 discriminator 1 view .LVU70
 257 00ae 3035     		adds	r5, r5, #48
 258              	.LVL25:
 259              		.loc 1 78 26 discriminator 1 view .LVU71
ARM GAS  /tmp/cc1BM6dS.s 			page 14


 260 00b0 00F12003 		add	r3, r0, #32
 261 00b4 0DEB0300 		add	r0, sp, r3
 262 00b8 00F8205C 		strb	r5, [r0, #-32]
  79:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     __register_disk(son_dev,dev->bd_disk,name);
 263              		.loc 1 79 5 is_stmt 1 view .LVU72
 264 00bc 6A46     		mov	r2, sp
 265 00be B168     		ldr	r1, [r6, #8]
 266 00c0 2046     		mov	r0, r4
 267 00c2 FFF7FEFF 		bl	__register_disk
 268              	.LVL26:
  80:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     return 0;
 269              		.loc 1 80 5 view .LVU73
 270              		.loc 1 80 12 is_stmt 0 view .LVU74
 271 00c6 3846     		mov	r0, r7
 272              	.LVL27:
 273              	.L4:
  81:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** }
 274              		.loc 1 81 1 view .LVU75
 275 00c8 09B0     		add	sp, sp, #36
 276              	.LCFI3:
 277              		.cfi_remember_state
 278              		.cfi_def_cfa_offset 28
 279              		@ sp needed
 280 00ca BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 281              	.LVL28:
 282              	.L9:
 283              	.LCFI4:
 284              		.cfi_restore_state
  53:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         return -ENOMEM;
 285              		.loc 1 53 9 is_stmt 1 view .LVU76
 286 00ce 0649     		ldr	r1, .L10+4
 287 00d0 0620     		movs	r0, #6
 288              	.LVL29:
  53:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         return -ENOMEM;
 289              		.loc 1 53 9 is_stmt 0 view .LVU77
 290 00d2 FFF7FEFF 		bl	printk
 291              	.LVL30:
  54:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     }
 292              		.loc 1 54 9 is_stmt 1 view .LVU78
  54:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     }
 293              		.loc 1 54 16 is_stmt 0 view .LVU79
 294 00d6 6FF00B00 		mvn	r0, #11
 295 00da F5E7     		b	.L4
 296              	.LVL31:
 297              	.L7:
  57:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     }
 298              		.loc 1 57 17 view .LVU80
 299 00dc 4FF0FF30 		mov	r0, #-1
 300 00e0 F2E7     		b	.L4
 301              	.L11:
 302 00e2 00BF     		.align	2
 303              	.L10:
 304 00e4 00000000 		.word	.LANCHOR0
 305 00e8 00000000 		.word	.LC0
 306              		.cfi_endproc
 307              	.LFE1034:
 309              		.section	.rodata.register_son_disk.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/cc1BM6dS.s 			page 15


 310              		.align	2
 311              	.LC2:
 312 0000 6E6F206D 		.ascii	"no mbr partition table\012\000"
 312      62722070 
 312      61727469 
 312      74696F6E 
 312      20746162 
 313              		.align	2
 314              	.LC3:
 315 0018 64656374 		.ascii	"dected mbr partition table\012\000"
 315      6564206D 
 315      62722070 
 315      61727469 
 315      74696F6E 
 316              		.section	.text.register_son_disk,"ax",%progbits
 317              		.align	1
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	register_son_disk:
 323              	.LVL32:
 324              	.LFB1035:
  82:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** 
  83:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** 
  84:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** static void register_son_disk(struct block_device *bdev)
  85:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** {
 325              		.loc 1 85 1 is_stmt 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		.loc 1 85 1 is_stmt 0 view .LVU82
 330 0000 70B5     		push	{r4, r5, r6, lr}
 331              	.LCFI5:
 332              		.cfi_def_cfa_offset 16
 333              		.cfi_offset 4, -16
 334              		.cfi_offset 5, -12
 335              		.cfi_offset 6, -8
 336              		.cfi_offset 14, -4
 337 0002 0646     		mov	r6, r0
  86:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     struct partition* p = get_partition_from_device(bdev);
 338              		.loc 1 86 5 is_stmt 1 view .LVU83
 339              		.loc 1 86 27 is_stmt 0 view .LVU84
 340 0004 FFF7FEFF 		bl	get_partition_from_device
 341              	.LVL33:
  87:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     if(IS_ERR(p))
 342              		.loc 1 87 5 is_stmt 1 view .LVU85
 343              	.LBB19:
 344              	.LBI19:
 345              		.file 5 "/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h"
   1:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /* SPDX-License-Identifier: GPL-2.0 */
   2:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #ifndef _LINUX_ERR_H
   3:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define _LINUX_ERR_H
   4:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
   5:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #include <linux/compiler_attributes.h>
   6:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #include <linux/compiler.h>
   7:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #include <linux/types.h>
   8:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
ARM GAS  /tmp/cc1BM6dS.s 			page 16


   9:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #include <asm/errno.h>
  10:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  11:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /*
  12:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Kernel pointers have redundant information, so we can use a
  13:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * scheme where we can return either an error code or a normal
  14:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * pointer with the same return value.
  15:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  *
  16:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * This should be a per-architecture thing, to allow different
  17:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * error and pointer decisions.
  18:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  19:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define MAX_ERRNO	4095
  20:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  21:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #ifndef __ASSEMBLY__
  22:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  23:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /**
  24:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * IS_ERR_VALUE - Detect an error pointer.
  25:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * @x: The pointer to check.
  26:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  *
  27:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Like IS_ERR(), but does not generate a compiler warning if result is unused.
  28:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  29:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  30:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #ifndef unlikely
  31:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #  define unlikely(x) __builtin_expect(!!(x), 0)
  32:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #endif
  33:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  34:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #ifndef likely
  35:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #  define likely(x) __builtin_expect(!!(x), 1)
  36:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #endif
  37:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  38:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define IS_ERR_VALUE(x) unlikely((unsigned long)(void *)(x) >= (unsigned long)-MAX_ERRNO)
  39:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  40:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /**
  41:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * ERR_PTR - Create an error pointer.
  42:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * @error: A negative error code.
  43:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  *
  44:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Encodes @error into a pointer value. Users should consider the result
  45:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * opaque and not assume anything about how the error is encoded.
  46:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  *
  47:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Return: A pointer with @error encoded within its value.
  48:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  49:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** static inline void * __must_check ERR_PTR(long error)
  50:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** {
  51:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 	return (void *) error;
  52:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** }
  53:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  54:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /* Return the pointer in the percpu address space. */
  55:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define ERR_PTR_PCPU(error) ((void __percpu *)(unsigned long)ERR_PTR(error))
  56:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  57:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /**
  58:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * PTR_ERR - Extract the error code from an error pointer.
  59:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * @ptr: An error pointer.
  60:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Return: The error code within @ptr.
  61:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  62:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** static inline long __must_check PTR_ERR(__force const void *ptr)
  63:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** {
  64:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 	return (long) ptr;
  65:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** }
ARM GAS  /tmp/cc1BM6dS.s 			page 17


  66:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  67:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /* Read an error pointer from the percpu address space. */
  68:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** #define PTR_ERR_PCPU(ptr) (PTR_ERR((const void *)(__force const unsigned long)(ptr)))
  69:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 
  70:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** /**
  71:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * IS_ERR - Detect an error pointer.
  72:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * @ptr: The pointer to check.
  73:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  * Return: true if @ptr is an error pointer, false otherwise.
  74:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h ****  */
  75:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** static inline bool __must_check IS_ERR(__force const void *ptr)
 346              		.loc 5 75 33 view .LVU86
 347              	.LBB20:
  76:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** {
  77:/mnt/c/Users/31740/Desktop/newcore/include/linux/err.h **** 	return IS_ERR_VALUE((unsigned long)ptr);
 348              		.loc 5 77 2 view .LVU87
 349              		.loc 5 77 9 is_stmt 0 view .LVU88
 350 0008 10F5805F 		cmn	r0, #4096
 351 000c 94BF     		ite	ls
 352 000e 0024     		movls	r4, #0
 353 0010 0124     		movhi	r4, #1
 354              	.LVL34:
 355              		.loc 5 77 9 view .LVU89
 356              	.LBE20:
 357              	.LBE19:
 358              		.loc 1 87 7 discriminator 1 view .LVU90
 359 0012 2CB9     		cbnz	r4, .L18
 360 0014 0546     		mov	r5, r0
  88:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     { 
  89:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****          printk(KERN_INFO "no mbr partition table\n");
  90:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****          return;
  91:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     }
  92:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     printk(KERN_INFO "dected mbr partition table\n");
 361              		.loc 1 92 5 is_stmt 1 view .LVU91
 362 0016 0A49     		ldr	r1, .L20
 363 0018 0620     		movs	r0, #6
 364              	.LVL35:
 365              		.loc 1 92 5 is_stmt 0 view .LVU92
 366 001a FFF7FEFF 		bl	printk
 367              	.LVL36:
  93:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     for(int i =0;i<4;i++)
 368              		.loc 1 93 5 is_stmt 1 view .LVU93
 369              	.LBB21:
 370              		.loc 1 93 9 view .LVU94
 371              		.loc 1 93 5 is_stmt 0 view .LVU95
 372 001e 05E0     		b	.L15
 373              	.LVL37:
 374              	.L18:
 375              		.loc 1 93 5 view .LVU96
 376              	.LBE21:
  89:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****          return;
 377              		.loc 1 89 10 is_stmt 1 view .LVU97
 378 0020 0849     		ldr	r1, .L20+4
 379 0022 0620     		movs	r0, #6
 380              	.LVL38:
  89:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****          return;
 381              		.loc 1 89 10 is_stmt 0 view .LVU98
 382 0024 FFF7FEFF 		bl	printk
ARM GAS  /tmp/cc1BM6dS.s 			page 18


 383              	.LVL39:
  90:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     }
 384              		.loc 1 90 10 is_stmt 1 view .LVU99
 385 0028 09E0     		b	.L12
 386              	.LVL40:
 387              	.L19:
 388              	.LBB22:
 389              		.loc 1 93 23 discriminator 2 view .LVU100
 390 002a 0134     		adds	r4, r4, #1
 391              	.LVL41:
 392              	.L15:
 393              		.loc 1 93 19 discriminator 1 view .LVU101
 394 002c 032C     		cmp	r4, #3
 395 002e 06DC     		bgt	.L12
  94:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     {
  95:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         if(add_mbr_son_disk(bdev,p,i) < 0)
 396              		.loc 1 95 9 view .LVU102
 397              		.loc 1 95 12 is_stmt 0 view .LVU103
 398 0030 2246     		mov	r2, r4
 399 0032 2946     		mov	r1, r5
 400 0034 3046     		mov	r0, r6
 401 0036 FFF7FEFF 		bl	add_mbr_son_disk
 402              	.LVL42:
 403              		.loc 1 95 11 discriminator 1 view .LVU104
 404 003a 0028     		cmp	r0, #0
 405 003c F5DA     		bge	.L19
 406              	.LVL43:
 407              	.L12:
 408              		.loc 1 95 11 discriminator 1 view .LVU105
 409              	.LBE22:
  96:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         break;
  97:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     }
  98:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** }
 410              		.loc 1 98 1 view .LVU106
 411 003e 70BD     		pop	{r4, r5, r6, pc}
 412              	.LVL44:
 413              	.L21:
 414              		.loc 1 98 1 view .LVU107
 415              		.align	2
 416              	.L20:
 417 0040 18000000 		.word	.LC3
 418 0044 00000000 		.word	.LC2
 419              		.cfi_endproc
 420              	.LFE1035:
 422              		.section	.text.__add_disk,"ax",%progbits
 423              		.align	1
 424              		.global	__add_disk
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 429              	__add_disk:
 430              	.LVL45:
 431              	.LFB1033:
  16:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     struct block_device *dev;
 432              		.loc 1 16 1 is_stmt 1 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc1BM6dS.s 			page 19


 435              		@ frame_needed = 0, uses_anonymous_args = 0
  16:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     struct block_device *dev;
 436              		.loc 1 16 1 is_stmt 0 view .LVU109
 437 0000 70B5     		push	{r4, r5, r6, lr}
 438              	.LCFI6:
 439              		.cfi_def_cfa_offset 16
 440              		.cfi_offset 4, -16
 441              		.cfi_offset 5, -12
 442              		.cfi_offset 6, -8
 443              		.cfi_offset 14, -4
 444 0002 0546     		mov	r5, r0
  17:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     if(disk->part0 == NULL){
 445              		.loc 1 17 5 is_stmt 1 view .LVU110
  18:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         dev = kmalloc(sizeof(struct block_device) , GFP_KERNEL);
 446              		.loc 1 18 5 view .LVU111
  18:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         dev = kmalloc(sizeof(struct block_device) , GFP_KERNEL);
 447              		.loc 1 18 12 is_stmt 0 view .LVU112
 448 0004 836B     		ldr	r3, [r0, #56]
  18:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         dev = kmalloc(sizeof(struct block_device) , GFP_KERNEL);
 449              		.loc 1 18 7 view .LVU113
 450 0006 D3B1     		cbz	r3, .L27
 451              	.LVL46:
 452              	.L23:
  26:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_disk = disk;
 453              		.loc 1 26 5 is_stmt 1 view .LVU114
  26:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_disk = disk;
 454              		.loc 1 26 9 is_stmt 0 view .LVU115
 455 0008 AC6B     		ldr	r4, [r5, #56]
 456              	.LVL47:
  27:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_queue = disk->queue;
 457              		.loc 1 27 5 is_stmt 1 view .LVU116
  27:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_queue = disk->queue;
 458              		.loc 1 27 18 is_stmt 0 view .LVU117
 459 000a A560     		str	r5, [r4, #8]
  28:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_stamp = jiffies;
 460              		.loc 1 28 5 is_stmt 1 view .LVU118
  28:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_stamp = jiffies;
 461              		.loc 1 28 25 is_stmt 0 view .LVU119
 462 000c 2B6C     		ldr	r3, [r5, #64]
  28:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_stamp = jiffies;
 463              		.loc 1 28 19 view .LVU120
 464 000e E360     		str	r3, [r4, #12]
  29:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_dev = disk->major;
 465              		.loc 1 29 5 is_stmt 1 view .LVU121
  29:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_dev = disk->major;
 466              		.loc 1 29 21 is_stmt 0 view .LVU122
 467 0010 FFF7FEFF 		bl	ktime_get
 468              	.LVL48:
  29:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_dev = disk->major;
 469              		.loc 1 29 19 discriminator 1 view .LVU123
 470 0014 2061     		str	r0, [r4, #16]
  30:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     spin_lock_init(&dev->bd_size_lock);
 471              		.loc 1 30 5 is_stmt 1 view .LVU124
  30:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     spin_lock_init(&dev->bd_size_lock);
 472              		.loc 1 30 23 is_stmt 0 view .LVU125
 473 0016 2B68     		ldr	r3, [r5]
  30:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     spin_lock_init(&dev->bd_size_lock);
ARM GAS  /tmp/cc1BM6dS.s 			page 20


 474              		.loc 1 30 17 view .LVU126
 475 0018 A361     		str	r3, [r4, #24]
  31:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_claiming = NULL;
 476              		.loc 1 31 5 is_stmt 1 view .LVU127
 477 001a 04F12400 		add	r0, r4, #36
 478 001e FFF7FEFF 		bl	spin_lock_init
 479              	.LVL49:
  32:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_holder = NULL;
 480              		.loc 1 32 5 view .LVU128
  32:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_holder = NULL;
 481              		.loc 1 32 22 is_stmt 0 view .LVU129
 482 0022 0026     		movs	r6, #0
 483 0024 6663     		str	r6, [r4, #52]
  33:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     mutex_init(&dev->bd_holder_lock);
 484              		.loc 1 33 5 is_stmt 1 view .LVU130
  33:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     mutex_init(&dev->bd_holder_lock);
 485              		.loc 1 33 20 is_stmt 0 view .LVU131
 486 0026 A663     		str	r6, [r4, #56]
  34:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     mutex_init(&dev->bd_fsfreeze_mutex);
 487              		.loc 1 34 5 is_stmt 1 view .LVU132
  35:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     dev->bd_holders = 0;
 488              		.loc 1 35 5 view .LVU133
  36:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     __register_disk(dev,disk,NULL);
 489              		.loc 1 36 5 view .LVU134
  36:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     __register_disk(dev,disk,NULL);
 490              		.loc 1 36 21 is_stmt 0 view .LVU135
 491 0028 E664     		str	r6, [r4, #76]
  37:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     register_son_disk(dev);
 492              		.loc 1 37 5 is_stmt 1 view .LVU136
 493 002a 3246     		mov	r2, r6
 494 002c 2946     		mov	r1, r5
 495 002e 2046     		mov	r0, r4
 496 0030 FFF7FEFF 		bl	__register_disk
 497              	.LVL50:
  38:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     return 0;
 498              		.loc 1 38 5 view .LVU137
 499 0034 2046     		mov	r0, r4
 500 0036 FFF7FEFF 		bl	register_son_disk
 501              	.LVL51:
  39:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** }
 502              		.loc 1 39 5 view .LVU138
  39:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** }
 503              		.loc 1 39 12 is_stmt 0 view .LVU139
 504 003a 3046     		mov	r0, r6
 505              	.LVL52:
 506              	.L22:
  40:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c **** EXPORT_SYMBOL(__add_disk);
 507              		.loc 1 40 1 view .LVU140
 508 003c 70BD     		pop	{r4, r5, r6, pc}
 509              	.LVL53:
 510              	.L27:
  19:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         if(dev == NULL){
 511              		.loc 1 19 9 is_stmt 1 view .LVU141
 512              	.LBB23:
 513              	.LBI23:
 379:/mnt/c/Users/31740/Desktop/newcore/include/linux/slab.h **** 	return __smalloc__((u32)size,flags);
 514              		.loc 4 379 21 view .LVU142
ARM GAS  /tmp/cc1BM6dS.s 			page 21


 515              	.LBB24:
 516              		.loc 4 380 2 view .LVU143
 517              		.loc 4 380 9 is_stmt 0 view .LVU144
 518 003e 4FF44C61 		mov	r1, #3264
 519 0042 6C20     		movs	r0, #108
 520              	.LVL54:
 521              		.loc 4 380 9 view .LVU145
 522 0044 FFF7FEFF 		bl	__smalloc__
 523              	.LVL55:
 524              		.loc 4 380 9 view .LVU146
 525              	.LBE24:
 526              	.LBE23:
  20:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****             printk(KERN_INFO "can not alloc more memory\n");
 527              		.loc 1 20 9 is_stmt 1 view .LVU147
  20:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****             printk(KERN_INFO "can not alloc more memory\n");
 528              		.loc 1 20 11 is_stmt 0 view .LVU148
 529 0048 08B1     		cbz	r0, .L28
  24:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     }
 530              		.loc 1 24 9 is_stmt 1 view .LVU149
  24:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****     }
 531              		.loc 1 24 21 is_stmt 0 view .LVU150
 532 004a A863     		str	r0, [r5, #56]
 533 004c DCE7     		b	.L23
 534              	.L28:
  21:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****             return -ENOMEM;
 535              		.loc 1 21 13 is_stmt 1 view .LVU151
 536 004e 0349     		ldr	r1, .L29
 537 0050 0620     		movs	r0, #6
 538              	.LVL56:
  21:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****             return -ENOMEM;
 539              		.loc 1 21 13 is_stmt 0 view .LVU152
 540 0052 FFF7FEFF 		bl	printk
 541              	.LVL57:
  22:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         }   
 542              		.loc 1 22 13 is_stmt 1 view .LVU153
  22:/mnt/c/Users/31740/Desktop/newcore/block/add_disk.c ****         }   
 543              		.loc 1 22 20 is_stmt 0 view .LVU154
 544 0056 6FF00B00 		mvn	r0, #11
 545 005a EFE7     		b	.L22
 546              	.L30:
 547              		.align	2
 548              	.L29:
 549 005c 00000000 		.word	.LC0
 550              		.cfi_endproc
 551              	.LFE1033:
 553              		.section	.rodata.str1.4,"aMS",%progbits,1
 554              		.align	2
 555              	.LC4:
 556 0000 5F5F6164 		.ascii	"__add_disk\000"
 556      645F6469 
 556      736B00
 557 000b 00       		.align	2
 558              	.LC5:
 559 000c 00       		.ascii	"\000"
 560              		.section	.export_table,"aw"
 561              		.align	2
 564              	__add_disk_export_struct:
ARM GAS  /tmp/cc1BM6dS.s 			page 22


 565 0000 00000000 		.word	.LC4
 566 0004 0C000000 		.word	.LC5
 567 0008 00000000 		.word	__add_disk
 568              		.section	.rodata
 569              		.align	2
 570              		.set	.LANCHOR0,. + 0
 571              	.LC1:
 572 0000 0000     		.ascii	"\000\000"
 573              		.text
 574              	.Letext0:
 575              		.file 6 "/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/int-l64.h"
 576              		.file 7 "/mnt/c/Users/31740/Desktop/newcore/include/asm-generic/posix_types.h"
 577              		.file 8 "/mnt/c/Users/31740/Desktop/newcore/include/uapi/linux/types.h"
 578              		.file 9 "/mnt/c/Users/31740/Desktop/newcore/include/linux/types.h"
 579              		.file 10 "/mnt/c/Users/31740/Desktop/newcore/include/linux/export.h"
 580              		.file 11 "/mnt/c/Users/31740/Desktop/newcore/include/linux/reciprocal_div.h"
 581              		.file 12 "/mnt/c/Users/31740/Desktop/newcore/include/linux/time64.h"
 582              		.file 13 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock_types_raw.h"
 583              		.file 14 "/mnt/c/Users/31740/Desktop/newcore/include/linux/spinlock_types.h"
 584              		.file 15 "/mnt/c/Users/31740/Desktop/newcore/include/linux/errseq.h"
 585              		.file 16 "/mnt/c/Users/31740/Desktop/newcore/include/linux/rbtree_types.h"
 586              		.file 17 "/mnt/c/Users/31740/Desktop/newcore/include/linux/uidgid_types.h"
 587              		.file 18 "/mnt/c/Users/31740/Desktop/newcore/include/linux/projid.h"
 588              		.file 19 "/mnt/c/Users/31740/Desktop/newcore/include/linux/fs.h"
 589              		.file 20 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mnt_idmapping.h"
 590              		.file 21 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mutex.h"
 591              		.file 22 "/mnt/c/Users/31740/Desktop/newcore/include/linux/uio.h"
 592              		.file 23 "/mnt/c/Users/31740/Desktop/newcore/include/linux/wait.h"
 593              		.file 24 "/mnt/c/Users/31740/Desktop/newcore/include/linux/xarray.h"
 594              		.file 25 "/mnt/c/Users/31740/Desktop/newcore/include/linux/migrate_mode.h"
 595              		.file 26 "/mnt/c/Users/31740/Desktop/newcore/include/linux/rw_hint.h"
 596              		.file 27 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mm_type.h"
 597              		.file 28 "/mnt/c/Users/31740/Desktop/newcore/include/linux/bvec.h"
 598              		.file 29 "/mnt/c/Users/31740/Desktop/newcore/include/linux/blk_types.h"
 599              		.file 30 "/mnt/c/Users/31740/Desktop/newcore/include/linux/blkdev.h"
 600              		.file 31 "/mnt/c/Users/31740/Desktop/newcore/include/linux/bio.h"
 601              		.file 32 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool_super_haper.h"
 602              		.file 33 "/mnt/c/Users/31740/Desktop/newcore/include/linux/mempool.h"
 603              		.file 34 "/mnt/c/Users/31740/Desktop/newcore/include/linux/lockdep_types.h"
 604              		.file 35 "/mnt/c/Users/31740/Desktop/newcore/include/linux/workqueue_types.h"
 605              		.file 36 "/mnt/c/Users/31740/Desktop/newcore/include/linux/blk-mq.h"
 606              		.file 37 "/mnt/c/Users/31740/Desktop/newcore/include/linux/dcache.h"
 607              		.file 38 "/mnt/c/Users/31740/Desktop/newcore/include/uapi/linux/pr.h"
 608              		.file 39 "/mnt/c/Users/31740/Desktop/newcore/include/linux/pr.h"
 609              		.file 40 "/mnt/c/Users/31740/Desktop/newcore/include/linux/hdreg.h"
 610              		.file 41 "/mnt/c/Users/31740/Desktop/newcore/include/linux/lockref.h"
 611              		.file 42 "/mnt/c/Users/31740/Desktop/newcore/include/linux/path.h"
 612              		.file 43 "/mnt/c/Users/31740/Desktop/newcore/include/linux/statfs.h"
 613              		.file 44 "/mnt/c/Users/31740/Desktop/newcore/include/linux/stat.h"
 614              		.file 45 "/mnt/c/Users/31740/Desktop/newcore/include/linux/gfp_types.h"
 615              		.file 46 "/mnt/c/Users/31740/Desktop/newcore/arch/arm_m/include/asm/string.h"
 616              		.file 47 "/mnt/c/Users/31740/Desktop/newcore/include/linux/string.h"
 617              		.file 48 "/mnt/c/Users/31740/Desktop/newcore/include/linux/time.h"
 618              		.file 49 "/mnt/c/Users/31740/Desktop/newcore/include/linux/printk.h"
ARM GAS  /tmp/cc1BM6dS.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 add_disk.c
     /tmp/cc1BM6dS.s:21     .text.__spin_init:00000000 $t
     /tmp/cc1BM6dS.s:26     .text.__spin_init:00000000 __spin_init
     /tmp/cc1BM6dS.s:46     .text.spin_lock_init:00000000 $t
     /tmp/cc1BM6dS.s:51     .text.spin_lock_init:00000000 spin_lock_init
     /tmp/cc1BM6dS.s:74     .rodata.add_mbr_son_disk.str1.4:00000000 $d
     /tmp/cc1BM6dS.s:78     .text.add_mbr_son_disk:00000000 $t
     /tmp/cc1BM6dS.s:84     .text.add_mbr_son_disk:00000000 add_mbr_son_disk
     /tmp/cc1BM6dS.s:304    .text.add_mbr_son_disk:000000e4 $d
     /tmp/cc1BM6dS.s:310    .rodata.register_son_disk.str1.4:00000000 $d
     /tmp/cc1BM6dS.s:317    .text.register_son_disk:00000000 $t
     /tmp/cc1BM6dS.s:322    .text.register_son_disk:00000000 register_son_disk
     /tmp/cc1BM6dS.s:417    .text.register_son_disk:00000040 $d
     /tmp/cc1BM6dS.s:423    .text.__add_disk:00000000 $t
     /tmp/cc1BM6dS.s:429    .text.__add_disk:00000000 __add_disk
     /tmp/cc1BM6dS.s:549    .text.__add_disk:0000005c $d
     /tmp/cc1BM6dS.s:554    .rodata.str1.4:00000000 $d
     /tmp/cc1BM6dS.s:561    .export_table:00000000 $d
     /tmp/cc1BM6dS.s:564    .export_table:00000000 __add_disk_export_struct
     /tmp/cc1BM6dS.s:569    .rodata:00000000 $d

UNDEFINED SYMBOLS
__smalloc__
check_empty_MBR_Table
get_partiton_data
ktime_get
memset
strcpy
strlen
__register_disk
printk
get_partition_from_device
