ARM GAS  /tmp/ccjxRTQh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"ctrl.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./kernel/sched/ctrl.c"
  20              		.section	.text.get_task_using_cpu_core,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	get_task_using_cpu_core:
  27              	.LFB105:
  28              		.file 2 "./arch/arm_m/include/asm/context.h"
   1:./arch/arm_m/include/asm/context.h **** #ifndef __CONTEXT_H__
   2:./arch/arm_m/include/asm/context.h **** #define __CONTEXT_H__                
   3:./arch/arm_m/include/asm/context.h **** 
   4:./arch/arm_m/include/asm/context.h **** 
   5:./arch/arm_m/include/asm/context.h **** extern void __init_Taskcontext(struct task_struct* task_data);
   6:./arch/arm_m/include/asm/context.h **** static void init_task_context(struct task_struct* task_data){
   7:./arch/arm_m/include/asm/context.h ****     __init_Taskcontext(task_data);
   8:./arch/arm_m/include/asm/context.h **** }
   9:./arch/arm_m/include/asm/context.h **** 
  10:./arch/arm_m/include/asm/context.h **** extern int __get_task_using_cpu_core(void);
  11:./arch/arm_m/include/asm/context.h **** 
  12:./arch/arm_m/include/asm/context.h **** static int get_task_using_cpu_core(void){
  29              		.loc 2 12 41 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  13:./arch/arm_m/include/asm/context.h ****      return  __get_task_using_cpu_core();
  38              		.loc 2 13 6 view .LVU1
  39              		.loc 2 13 14 is_stmt 0 view .LVU2
  40 0002 FFF7FEFF 		bl	__get_task_using_cpu_core
  41              	.LVL0:
  14:./arch/arm_m/include/asm/context.h **** }
  42              		.loc 2 14 1 view .LVU3
  43 0006 08BD     		pop	{r3, pc}
  44              		.cfi_endproc
ARM GAS  /tmp/ccjxRTQh.s 			page 2


  45              	.LFE105:
  47              		.section	.text.user_system_call,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	user_system_call:
  54              	.LVL1:
  55              	.LFB108:
  15:./arch/arm_m/include/asm/context.h **** 
  16:./arch/arm_m/include/asm/context.h **** static void save_context(struct task_struct *this_task,uint32_t data){
  17:./arch/arm_m/include/asm/context.h ****         this_task->context.psp = data;
  18:./arch/arm_m/include/asm/context.h **** }
  19:./arch/arm_m/include/asm/context.h **** static uint32_t load_task(struct task_struct *this_task) {
  20:./arch/arm_m/include/asm/context.h ****     return this_task->context.psp;
  21:./arch/arm_m/include/asm/context.h **** };
  22:./arch/arm_m/include/asm/context.h **** 
  23:./arch/arm_m/include/asm/context.h **** 
  24:./arch/arm_m/include/asm/context.h **** int __system_call(int sys_no, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5);
  25:./arch/arm_m/include/asm/context.h **** static void* user_system_call(int sys_no, int arg0, int arg1, int arg2, int arg3, int arg4, int arg
  56              		.loc 2 25 102 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 12, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		.loc 2 25 102 is_stmt 0 view .LVU5
  61 0000 10B5     		push	{r4, lr}
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 14, -4
  66 0002 84B0     		sub	sp, sp, #16
  67              	.LCFI2:
  68              		.cfi_def_cfa_offset 24
  26:./arch/arm_m/include/asm/context.h ****     __system_call(sys_no,arg0, arg1, arg2, arg3,arg4,arg5);
  69              		.loc 2 26 5 is_stmt 1 view .LVU6
  70 0004 089C     		ldr	r4, [sp, #32]
  71 0006 0294     		str	r4, [sp, #8]
  72 0008 079C     		ldr	r4, [sp, #28]
  73 000a 0194     		str	r4, [sp, #4]
  74 000c 069C     		ldr	r4, [sp, #24]
  75 000e 0094     		str	r4, [sp]
  76 0010 FFF7FEFF 		bl	__system_call
  77              	.LVL2:
  27:./arch/arm_m/include/asm/context.h **** }
  78              		.loc 2 27 1 is_stmt 0 view .LVU7
  79 0014 04B0     		add	sp, sp, #16
  80              	.LCFI3:
  81              		.cfi_def_cfa_offset 8
  82              		@ sp needed
  83 0016 10BD     		pop	{r4, pc}
  84              		.loc 2 27 1 view .LVU8
  85              		.cfi_endproc
  86              	.LFE108:
  88              		.section	.text.get_current_scheduler,"ax",%progbits
  89              		.align	1
  90              		.global	get_current_scheduler
  91              		.syntax unified
ARM GAS  /tmp/ccjxRTQh.s 			page 3


  92              		.thumb
  93              		.thumb_func
  95              	get_current_scheduler:
  96              	.LFB111:
   1:./kernel/sched/ctrl.c **** #include <linux/sched.h>
   2:./kernel/sched/ctrl.c **** #include <linux/sys_call.h>
   3:./kernel/sched/ctrl.c **** 
   4:./kernel/sched/ctrl.c **** 
   5:./kernel/sched/ctrl.c **** void block_scheduler(struct scheduler *s){
   6:./kernel/sched/ctrl.c ****     if(s == NULL){
   7:./kernel/sched/ctrl.c ****         s = get_current_scheduler();
   8:./kernel/sched/ctrl.c ****     }
   9:./kernel/sched/ctrl.c ****     s->s_flag = SCHEDULER_BLOCKED;
  10:./kernel/sched/ctrl.c **** }
  11:./kernel/sched/ctrl.c **** void run_scheduler(struct scheduler *s){
  12:./kernel/sched/ctrl.c ****     if(s == NULL){
  13:./kernel/sched/ctrl.c ****         s = get_current_scheduler(); 
  14:./kernel/sched/ctrl.c ****     }
  15:./kernel/sched/ctrl.c ****     s->s_flag = SCHEDULER_RUN;
  16:./kernel/sched/ctrl.c **** }
  17:./kernel/sched/ctrl.c **** 
  18:./kernel/sched/ctrl.c **** struct scheduler *get_current_scheduler(void){
  97              		.loc 1 18 46 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101 0000 08B5     		push	{r3, lr}
 102              	.LCFI4:
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 3, -8
 105              		.cfi_offset 14, -4
  19:./kernel/sched/ctrl.c ****     return   get_scheduler_by_cpu_core_id(get_task_using_cpu_core());
 106              		.loc 1 19 5 view .LVU10
 107              		.loc 1 19 43 is_stmt 0 view .LVU11
 108 0002 FFF7FEFF 		bl	get_task_using_cpu_core
 109              	.LVL3:
 110              		.loc 1 19 14 discriminator 1 view .LVU12
 111 0006 FFF7FEFF 		bl	get_scheduler_by_cpu_core_id
 112              	.LVL4:
  20:./kernel/sched/ctrl.c **** }
 113              		.loc 1 20 1 view .LVU13
 114 000a 08BD     		pop	{r3, pc}
 115              		.cfi_endproc
 116              	.LFE111:
 118              		.section	.text.block_scheduler,"ax",%progbits
 119              		.align	1
 120              		.global	block_scheduler
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 125              	block_scheduler:
 126              	.LVL5:
 127              	.LFB109:
   5:./kernel/sched/ctrl.c ****     if(s == NULL){
 128              		.loc 1 5 42 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccjxRTQh.s 			page 4


 131              		@ frame_needed = 0, uses_anonymous_args = 0
   5:./kernel/sched/ctrl.c ****     if(s == NULL){
 132              		.loc 1 5 42 is_stmt 0 view .LVU15
 133 0000 08B5     		push	{r3, lr}
 134              	.LCFI5:
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 3, -8
 137              		.cfi_offset 14, -4
   6:./kernel/sched/ctrl.c ****         s = get_current_scheduler();
 138              		.loc 1 6 5 is_stmt 1 view .LVU16
   6:./kernel/sched/ctrl.c ****         s = get_current_scheduler();
 139              		.loc 1 6 7 is_stmt 0 view .LVU17
 140 0002 0346     		mov	r3, r0
 141 0004 10B1     		cbz	r0, .L10
 142              	.L8:
   9:./kernel/sched/ctrl.c **** }
 143              		.loc 1 9 5 is_stmt 1 view .LVU18
   9:./kernel/sched/ctrl.c **** }
 144              		.loc 1 9 15 is_stmt 0 view .LVU19
 145 0006 0022     		movs	r2, #0
 146 0008 1A73     		strb	r2, [r3, #12]
  10:./kernel/sched/ctrl.c **** void run_scheduler(struct scheduler *s){
 147              		.loc 1 10 1 view .LVU20
 148 000a 08BD     		pop	{r3, pc}
 149              	.L10:
   7:./kernel/sched/ctrl.c ****     }
 150              		.loc 1 7 9 is_stmt 1 view .LVU21
   7:./kernel/sched/ctrl.c ****     }
 151              		.loc 1 7 13 is_stmt 0 view .LVU22
 152 000c FFF7FEFF 		bl	get_current_scheduler
 153              	.LVL6:
   7:./kernel/sched/ctrl.c ****     }
 154              		.loc 1 7 13 view .LVU23
 155 0010 0346     		mov	r3, r0
 156              	.LVL7:
   7:./kernel/sched/ctrl.c ****     }
 157              		.loc 1 7 13 view .LVU24
 158 0012 F8E7     		b	.L8
 159              		.cfi_endproc
 160              	.LFE109:
 162              		.section	.text.run_scheduler,"ax",%progbits
 163              		.align	1
 164              		.global	run_scheduler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	run_scheduler:
 170              	.LVL8:
 171              	.LFB110:
  11:./kernel/sched/ctrl.c ****     if(s == NULL){
 172              		.loc 1 11 40 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
  11:./kernel/sched/ctrl.c ****     if(s == NULL){
 176              		.loc 1 11 40 is_stmt 0 view .LVU26
 177 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccjxRTQh.s 			page 5


 178              	.LCFI6:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
  12:./kernel/sched/ctrl.c ****         s = get_current_scheduler(); 
 182              		.loc 1 12 5 is_stmt 1 view .LVU27
  12:./kernel/sched/ctrl.c ****         s = get_current_scheduler(); 
 183              		.loc 1 12 7 is_stmt 0 view .LVU28
 184 0002 0346     		mov	r3, r0
 185 0004 10B1     		cbz	r0, .L14
 186              	.L12:
  15:./kernel/sched/ctrl.c **** }
 187              		.loc 1 15 5 is_stmt 1 view .LVU29
  15:./kernel/sched/ctrl.c **** }
 188              		.loc 1 15 15 is_stmt 0 view .LVU30
 189 0006 0122     		movs	r2, #1
 190 0008 1A73     		strb	r2, [r3, #12]
  16:./kernel/sched/ctrl.c **** 
 191              		.loc 1 16 1 view .LVU31
 192 000a 08BD     		pop	{r3, pc}
 193              	.L14:
  13:./kernel/sched/ctrl.c ****     }
 194              		.loc 1 13 9 is_stmt 1 view .LVU32
  13:./kernel/sched/ctrl.c ****     }
 195              		.loc 1 13 13 is_stmt 0 view .LVU33
 196 000c FFF7FEFF 		bl	get_current_scheduler
 197              	.LVL9:
  13:./kernel/sched/ctrl.c ****     }
 198              		.loc 1 13 13 view .LVU34
 199 0010 0346     		mov	r3, r0
 200              	.LVL10:
  13:./kernel/sched/ctrl.c ****     }
 201              		.loc 1 13 13 view .LVU35
 202 0012 F8E7     		b	.L12
 203              		.cfi_endproc
 204              	.LFE110:
 206              		.section	.text.get_current_task,"ax",%progbits
 207              		.align	1
 208              		.global	get_current_task
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 213              	get_current_task:
 214              	.LFB112:
  21:./kernel/sched/ctrl.c **** 
  22:./kernel/sched/ctrl.c **** struct task_struct* get_current_task(void){
 215              		.loc 1 22 43 is_stmt 1 view -0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 08B5     		push	{r3, lr}
 220              	.LCFI7:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 3, -8
 223              		.cfi_offset 14, -4
  23:./kernel/sched/ctrl.c ****     return   get_scheduler_by_cpu_core_id(get_task_using_cpu_core())->current_task;
 224              		.loc 1 23 5 view .LVU37
ARM GAS  /tmp/ccjxRTQh.s 			page 6


 225              		.loc 1 23 43 is_stmt 0 view .LVU38
 226 0002 FFF7FEFF 		bl	get_task_using_cpu_core
 227              	.LVL11:
 228              		.loc 1 23 14 discriminator 1 view .LVU39
 229 0006 FFF7FEFF 		bl	get_scheduler_by_cpu_core_id
 230              	.LVL12:
  24:./kernel/sched/ctrl.c **** }
 231              		.loc 1 24 1 view .LVU40
 232 000a 0069     		ldr	r0, [r0, #16]
 233 000c 08BD     		pop	{r3, pc}
 234              		.cfi_endproc
 235              	.LFE112:
 237              		.section	.text.scheduler_start,"ax",%progbits
 238              		.align	1
 239              		.global	scheduler_start
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 244              	scheduler_start:
 245              	.LFB113:
  25:./kernel/sched/ctrl.c **** 
  26:./kernel/sched/ctrl.c **** static enum scheduler_block_flag Scheduler_Lock1 = SCHEDULER_BLOCKED;
  27:./kernel/sched/ctrl.c **** void scheduler_start(){
 246              		.loc 1 27 23 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
  28:./kernel/sched/ctrl.c ****     Scheduler_Lock1 = SCHEDULER_RUN;
 251              		.loc 1 28 5 view .LVU42
 252              		.loc 1 28 21 is_stmt 0 view .LVU43
 253 0000 014B     		ldr	r3, .L18
 254 0002 0122     		movs	r2, #1
 255 0004 1A70     		strb	r2, [r3]
  29:./kernel/sched/ctrl.c **** }
 256              		.loc 1 29 1 view .LVU44
 257 0006 7047     		bx	lr
 258              	.L19:
 259              		.align	2
 260              	.L18:
 261 0008 00000000 		.word	Scheduler_Lock1
 262              		.cfi_endproc
 263              	.LFE113:
 265              		.section	.text.start_all_scheduler,"ax",%progbits
 266              		.align	1
 267              		.global	start_all_scheduler
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 272              	start_all_scheduler:
 273              	.LFB114:
  30:./kernel/sched/ctrl.c **** 
  31:./kernel/sched/ctrl.c **** static enum scheduler_block_flag Scheduler_Lock = SCHEDULER_RUN; //全局调度锁
  32:./kernel/sched/ctrl.c **** void start_all_scheduler(){
 274              		.loc 1 32 27 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccjxRTQh.s 			page 7


 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
  33:./kernel/sched/ctrl.c ****     Scheduler_Lock = SCHEDULER_RUN;
 279              		.loc 1 33 5 view .LVU46
 280              		.loc 1 33 20 is_stmt 0 view .LVU47
 281 0000 014B     		ldr	r3, .L21
 282 0002 0122     		movs	r2, #1
 283 0004 1A70     		strb	r2, [r3]
  34:./kernel/sched/ctrl.c **** }
 284              		.loc 1 34 1 view .LVU48
 285 0006 7047     		bx	lr
 286              	.L22:
 287              		.align	2
 288              	.L21:
 289 0008 00000000 		.word	Scheduler_Lock
 290              		.cfi_endproc
 291              	.LFE114:
 293              		.section	.text.stop_all_scheduler,"ax",%progbits
 294              		.align	1
 295              		.global	stop_all_scheduler
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 300              	stop_all_scheduler:
 301              	.LFB115:
  35:./kernel/sched/ctrl.c **** void stop_all_scheduler(){
 302              		.loc 1 35 26 is_stmt 1 view -0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              		@ link register save eliminated.
  36:./kernel/sched/ctrl.c ****     Scheduler_Lock = SCHEDULER_BLOCKED;
 307              		.loc 1 36 5 view .LVU50
 308              		.loc 1 36 20 is_stmt 0 view .LVU51
 309 0000 014B     		ldr	r3, .L24
 310 0002 0022     		movs	r2, #0
 311 0004 1A70     		strb	r2, [r3]
  37:./kernel/sched/ctrl.c **** }
 312              		.loc 1 37 1 view .LVU52
 313 0006 7047     		bx	lr
 314              	.L25:
 315              		.align	2
 316              	.L24:
 317 0008 00000000 		.word	Scheduler_Lock
 318              		.cfi_endproc
 319              	.LFE115:
 321              		.section	.text.sched,"ax",%progbits
 322              		.align	1
 323              		.global	sched
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	sched:
 329              	.LFB116:
  38:./kernel/sched/ctrl.c **** 
  39:./kernel/sched/ctrl.c **** void sched(){
 330              		.loc 1 39 13 is_stmt 1 view -0
ARM GAS  /tmp/ccjxRTQh.s 			page 8


 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334 0000 08B5     		push	{r3, lr}
 335              	.LCFI8:
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 3, -8
 338              		.cfi_offset 14, -4
  40:./kernel/sched/ctrl.c **** if(Scheduler_Lock == SCHEDULER_RUN && Scheduler_Lock1 == SCHEDULER_RUN)
 339              		.loc 1 40 1 view .LVU54
 340              		.loc 1 40 19 is_stmt 0 view .LVU55
 341 0002 064B     		ldr	r3, .L30
 342 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 343              		.loc 1 40 3 view .LVU56
 344 0006 012B     		cmp	r3, #1
 345 0008 00D0     		beq	.L29
 346              	.L26:
  41:./kernel/sched/ctrl.c ****     __sched();
  42:./kernel/sched/ctrl.c **** }
 347              		.loc 1 42 1 view .LVU57
 348 000a 08BD     		pop	{r3, pc}
 349              	.L29:
  40:./kernel/sched/ctrl.c **** if(Scheduler_Lock == SCHEDULER_RUN && Scheduler_Lock1 == SCHEDULER_RUN)
 350              		.loc 1 40 55 discriminator 1 view .LVU58
 351 000c 044B     		ldr	r3, .L30+4
 352 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  40:./kernel/sched/ctrl.c **** if(Scheduler_Lock == SCHEDULER_RUN && Scheduler_Lock1 == SCHEDULER_RUN)
 353              		.loc 1 40 36 discriminator 1 view .LVU59
 354 0010 012B     		cmp	r3, #1
 355 0012 FAD1     		bne	.L26
  41:./kernel/sched/ctrl.c ****     __sched();
 356              		.loc 1 41 5 is_stmt 1 view .LVU60
 357 0014 FFF7FEFF 		bl	__sched
 358              	.LVL13:
 359              		.loc 1 42 1 is_stmt 0 view .LVU61
 360 0018 F7E7     		b	.L26
 361              	.L31:
 362 001a 00BF     		.align	2
 363              	.L30:
 364 001c 00000000 		.word	Scheduler_Lock
 365 0020 00000000 		.word	Scheduler_Lock1
 366              		.cfi_endproc
 367              	.LFE116:
 369              		.section	.text.__delay,"ax",%progbits
 370              		.align	1
 371              		.global	__delay
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 376              	__delay:
 377              	.LVL14:
 378              	.LFB117:
  43:./kernel/sched/ctrl.c **** 
  44:./kernel/sched/ctrl.c **** 
  45:./kernel/sched/ctrl.c **** void __delay(uint32_t time)
  46:./kernel/sched/ctrl.c **** {
 379              		.loc 1 46 1 is_stmt 1 view -0
ARM GAS  /tmp/ccjxRTQh.s 			page 9


 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              		.loc 1 46 1 is_stmt 0 view .LVU63
 384 0000 10B5     		push	{r4, lr}
 385              	.LCFI9:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 4, -8
 388              		.cfi_offset 14, -4
 389 0002 84B0     		sub	sp, sp, #16
 390              	.LCFI10:
 391              		.cfi_def_cfa_offset 24
 392 0004 0446     		mov	r4, r0
  47:./kernel/sched/ctrl.c ****     struct task_struct* task = get_current_task();
 393              		.loc 1 47 5 is_stmt 1 view .LVU64
 394              		.loc 1 47 32 is_stmt 0 view .LVU65
 395 0006 FFF7FEFF 		bl	get_current_task
 396              	.LVL15:
  48:./kernel/sched/ctrl.c ****     task->block_time = time;
 397              		.loc 1 48 5 is_stmt 1 view .LVU66
 398              		.loc 1 48 22 is_stmt 0 view .LVU67
 399 000a 0467     		str	r4, [r0, #112]
  49:./kernel/sched/ctrl.c ****     task->state = TASK_WAITING;
 400              		.loc 1 49 5 is_stmt 1 view .LVU68
 401              		.loc 1 49 17 is_stmt 0 view .LVU69
 402 000c 0323     		movs	r3, #3
 403 000e 80F85C30 		strb	r3, [r0, #92]
  50:./kernel/sched/ctrl.c ****     user_system_call(SC_SCHEDULER,NULL,NULL,NULL,NULL,NULL,NULL);
 404              		.loc 1 50 5 is_stmt 1 view .LVU70
 405 0012 0021     		movs	r1, #0
 406 0014 0291     		str	r1, [sp, #8]
 407 0016 0191     		str	r1, [sp, #4]
 408 0018 0091     		str	r1, [sp]
 409 001a 0B46     		mov	r3, r1
 410 001c 0A46     		mov	r2, r1
 411 001e 0120     		movs	r0, #1
 412              	.LVL16:
 413              		.loc 1 50 5 is_stmt 0 view .LVU71
 414 0020 FFF7FEFF 		bl	user_system_call
 415              	.LVL17:
  51:./kernel/sched/ctrl.c **** }...
 416              		.loc 1 51 1 view .LVU72
 417 0024 04B0     		add	sp, sp, #16
 418              	.LCFI11:
 419              		.cfi_def_cfa_offset 8
 420              		@ sp needed
 421 0026 10BD     		pop	{r4, pc}
 422              		.loc 1 51 1 view .LVU73
 423              		.cfi_endproc
 424              	.LFE117:
 426              		.section	.data.Scheduler_Lock,"aw"
 429              	Scheduler_Lock:
 430 0000 01       		.byte	1
 431              		.section	.bss.Scheduler_Lock1,"aw",%nobits
 434              	Scheduler_Lock1:
 435 0000 00       		.space	1
 436              		.text
ARM GAS  /tmp/ccjxRTQh.s 			page 10


 437              	.Letext0:
 438              		.file 3 "./include/asm-generic/int-l64.h"
 439              		.file 4 "./include/asm-generic/posix_types.h"
 440              		.file 5 "./include/linux/types.h"
 441              		.file 6 "./include/linux/time64.h"
 442              		.file 7 "./arch/arm_m/include/asm/sched.h"
 443              		.file 8 "./include/linux/sched.h"
 444              		.file 9 "./include/linux/sys_call.h"
ARM GAS  /tmp/ccjxRTQh.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 ctrl.c
     /tmp/ccjxRTQh.s:21     .text.get_task_using_cpu_core:00000000 $t
     /tmp/ccjxRTQh.s:26     .text.get_task_using_cpu_core:00000000 get_task_using_cpu_core
     /tmp/ccjxRTQh.s:48     .text.user_system_call:00000000 $t
     /tmp/ccjxRTQh.s:53     .text.user_system_call:00000000 user_system_call
     /tmp/ccjxRTQh.s:89     .text.get_current_scheduler:00000000 $t
     /tmp/ccjxRTQh.s:95     .text.get_current_scheduler:00000000 get_current_scheduler
     /tmp/ccjxRTQh.s:119    .text.block_scheduler:00000000 $t
     /tmp/ccjxRTQh.s:125    .text.block_scheduler:00000000 block_scheduler
     /tmp/ccjxRTQh.s:163    .text.run_scheduler:00000000 $t
     /tmp/ccjxRTQh.s:169    .text.run_scheduler:00000000 run_scheduler
     /tmp/ccjxRTQh.s:207    .text.get_current_task:00000000 $t
     /tmp/ccjxRTQh.s:213    .text.get_current_task:00000000 get_current_task
     /tmp/ccjxRTQh.s:238    .text.scheduler_start:00000000 $t
     /tmp/ccjxRTQh.s:244    .text.scheduler_start:00000000 scheduler_start
     /tmp/ccjxRTQh.s:261    .text.scheduler_start:00000008 $d
     /tmp/ccjxRTQh.s:434    .bss.Scheduler_Lock1:00000000 Scheduler_Lock1
     /tmp/ccjxRTQh.s:266    .text.start_all_scheduler:00000000 $t
     /tmp/ccjxRTQh.s:272    .text.start_all_scheduler:00000000 start_all_scheduler
     /tmp/ccjxRTQh.s:289    .text.start_all_scheduler:00000008 $d
     /tmp/ccjxRTQh.s:429    .data.Scheduler_Lock:00000000 Scheduler_Lock
     /tmp/ccjxRTQh.s:294    .text.stop_all_scheduler:00000000 $t
     /tmp/ccjxRTQh.s:300    .text.stop_all_scheduler:00000000 stop_all_scheduler
     /tmp/ccjxRTQh.s:317    .text.stop_all_scheduler:00000008 $d
     /tmp/ccjxRTQh.s:322    .text.sched:00000000 $t
     /tmp/ccjxRTQh.s:328    .text.sched:00000000 sched
     /tmp/ccjxRTQh.s:364    .text.sched:0000001c $d
     /tmp/ccjxRTQh.s:370    .text.__delay:00000000 $t
     /tmp/ccjxRTQh.s:376    .text.__delay:00000000 __delay
     /tmp/ccjxRTQh.s:435    .bss.Scheduler_Lock1:00000000 $d

UNDEFINED SYMBOLS
__get_task_using_cpu_core
__system_call
get_scheduler_by_cpu_core_id
__sched
